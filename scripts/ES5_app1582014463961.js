/* This WebApp/WebSite was created using BANano v4.50, a B4X library written by Alain Bailleul (2018 - 2020). -->*/
loadjs=function(){var h=function(){},c={},u={},f={};function o(e,n){if(e){var r=f[e];if(u[e]=n,r)for(;r.length;)r[0](e,n),r.splice(0,1)}}function l(e,n){e.call&&(e={success:e}),n.length?(e.error||h)(n):(e.success||h)(e)}function d(r,t,s,i){var c,o,e=document,n=s.async,u=(s.numRetries||0)+1,f=s.before||h,l=r.replace(/[\?|#].*$/,""),a=r.replace(/^(css|img)!/,"");i=i||0,/(^css!|\.css$)/.test(l)?((o=e.createElement("link")).rel="stylesheet",o.href=a,(c="hideFocus"in o)&&o.relList&&(c=0,o.rel="preload",o.as="style")):/(^img!|\.(png|gif|jpg|svg)$)/.test(l)?(o=e.createElement("img")).src=a:((o=e.createElement("script")).src=r,o.async=void 0===n||n),!(o.onload=o.onerror=o.onbeforeload=function(e){var n=e.type[0];if(c)try{o.sheet.cssText.length||(n="e")}catch(e){18!=e.code&&(n="e")}if("e"==n){if((i+=1)<u)return d(r,t,s,i)}else if("preload"==o.rel&&"style"==o.as)return o.rel="stylesheet";t(r,n,e.defaultPrevented)})!==f(r,o)&&e.head.appendChild(o)}function r(e,n,r){var t,s;if(n&&n.trim&&(t=n),s=(t?r:n)||{},t){if(t in c)throw"LoadJS";c[t]=!0}function i(n,r){!function(e,t,n){var r,s,i=(e=e.push?e:[e]).length,c=i,o=[];for(r=function(e,n,r){if("e"==n&&o.push(e),"b"==n){if(!r)return;o.push(e)}--i||t(o)},s=0;s<c;s++)d(e[s],r,n)}(e,function(e){l(s,e),n&&l({success:n,error:r},e),o(t,e)},s)}if(s.returnPromise)return new Promise(i);i()}return r.ready=function(e,n){return function(e,r){e=e.push?e:[e];var n,t,s,i=[],c=e.length,o=c;for(n=function(e,n){n.length&&i.push(e),--o||r(i)};c--;)t=e[c],(s=u[t])?n(t,s):(f[t]=f[t]||[]).push(n)}(e,function(e){l(n,e)}),r},r.done=function(e){o(e,[])},r.reset=function(){c={},u={},f={}},r.isDefined=function(e){return e in c},r}();/* String Polyfill */
function isWhiteSpace(t){return" "===t||"\n"===t}String.prototype.trimLeft||(String.prototype.trimLeft=function(){for(var t=0;t<this.length&&isWhiteSpace(this[t]);)t++;return this.substring(t)}),String.prototype.trimRight||(String.prototype.trimRight=function(){for(var t=this.length-1;0<=t&&isWhiteSpace(this[t]);)t--;return this.substring(0,t+1)}),String.prototype.startsWith||(String.prototype.startsWith=function(t,r){return this.substr(!r||r<0?0:Number(r),t.length)===t}),String.prototype.endsWith||(String.prototype.endsWith=function(t,r){var i=this.toString();("number"!=typeof r||!isFinite(r)||Math.floor(r)!==r||r>i.length)&&(r=i.length),r-=t.length;var n=i.lastIndexOf(t,r);return-1!==n&&n===r}),"b"!=="ab".substr(-1)&&(String.prototype.substr=function(i){return function(t,r){return t<0&&(t=this.length+t),i.call(this,t,r)}}(String.prototype.substr)),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")});
/* Promise Polyfill */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.ES6Promise=e()}(this,function(){"use strict";function t(t){var e=typeof t;return null!==t&&("object"===e||"function"===e)}function e(t){return"function"==typeof t}function n(t){W=t}function r(t){z=t}function o(){return function(){return process.nextTick(a)}}function i(){return"undefined"!=typeof U?function(){U(a)}:c()}function s(){var t=0,e=new H(a),n=document.createTextNode("");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){return t.port2.postMessage(0)}}function c(){var t=setTimeout;return function(){return t(a,1)}}function a(){for(var t=0;t<N;t+=2){var e=Q[t],n=Q[t+1];e(n),Q[t]=void 0,Q[t+1]=void 0}N=0}function f(){try{var t=Function("return this")().require("vertx");return U=t.runOnLoop||t.runOnContext,i()}catch(e){return c()}}function l(t,e){var n=this,r=new this.constructor(p);void 0===r[V]&&x(r);var o=n._state;if(o){var i=arguments[o-1];z(function(){return T(o,r,i,n._result)})}else j(n,r,t,e);return r}function h(t){var e=this;if(t&&"object"==typeof t&&t.constructor===e)return t;var n=new e(p);return w(n,t),n}function p(){}function v(){return new TypeError("You cannot resolve a promise with itself")}function d(){return new TypeError("A promises callback cannot return that same promise.")}function _(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function y(t,e,n){z(function(t){var r=!1,o=_(n,e,function(n){r||(r=!0,e!==n?w(t,n):A(t,n))},function(e){r||(r=!0,S(t,e))},"Settle: "+(t._label||" unknown promise"));!r&&o&&(r=!0,S(t,o))},t)}function m(t,e){e._state===Z?A(t,e._result):e._state===$?S(t,e._result):j(e,void 0,function(e){return w(t,e)},function(e){return S(t,e)})}function b(t,n,r){n.constructor===t.constructor&&r===l&&n.constructor.resolve===h?m(t,n):void 0===r?A(t,n):e(r)?y(t,n,r):A(t,n)}function w(e,n){if(e===n)S(e,v());else if(t(n)){var r=void 0;try{r=n.then}catch(o){return void S(e,o)}b(e,n,r)}else A(e,n)}function g(t){t._onerror&&t._onerror(t._result),E(t)}function A(t,e){t._state===X&&(t._result=e,t._state=Z,0!==t._subscribers.length&&z(E,t))}function S(t,e){t._state===X&&(t._state=$,t._result=e,z(g,t))}function j(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+Z]=n,o[i+$]=r,0===i&&t._state&&z(E,t)}function E(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r=void 0,o=void 0,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?T(n,r,o,i):o(i);t._subscribers.length=0}}function T(t,n,r,o){var i=e(r),s=void 0,u=void 0,c=!0;if(i){try{s=r(o)}catch(a){c=!1,u=a}if(n===s)return void S(n,d())}else s=o;n._state!==X||(i&&c?w(n,s):c===!1?S(n,u):t===Z?A(n,s):t===$&&S(n,s))}function M(t,e){try{e(function(e){w(t,e)},function(e){S(t,e)})}catch(n){S(t,n)}}function P(){return tt++}function x(t){t[V]=tt++,t._state=void 0,t._result=void 0,t._subscribers=[]}function C(){return new Error("Array Methods must be provided an Array")}function O(t){return new et(this,t).promise}function k(t){var e=this;return new e(L(t)?function(n,r){for(var o=t.length,i=0;i<o;i++)e.resolve(t[i]).then(n,r)}:function(t,e){return e(new TypeError("You must pass an array to race."))})}function F(t){var e=this,n=new e(p);return S(n,t),n}function Y(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}function q(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}function D(){var t=void 0;if("undefined"!=typeof global)t=global;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var n=t.Promise;if(n){var r=null;try{r=Object.prototype.toString.call(n.resolve())}catch(e){}if("[object Promise]"===r&&!n.cast)return}t.Promise=nt}var K=void 0;K=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)};var L=K,N=0,U=void 0,W=void 0,z=function(t,e){Q[N]=t,Q[N+1]=e,N+=2,2===N&&(W?W(a):R())},B="undefined"!=typeof window?window:void 0,G=B||{},H=G.MutationObserver||G.WebKitMutationObserver,I="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),J="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel,Q=new Array(1e3),R=void 0;R=I?o():H?s():J?u():void 0===B&&"function"==typeof require?f():c();var V=Math.random().toString(36).substring(2),X=void 0,Z=1,$=2,tt=0,et=function(){function t(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[V]||x(this.promise),L(e)?(this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?A(this.promise,this._result):(this.length=this.length||0,this._enumerate(e),0===this._remaining&&A(this.promise,this._result))):S(this.promise,C())}return t.prototype._enumerate=function(t){for(var e=0;this._state===X&&e<t.length;e++)this._eachEntry(t[e],e)},t.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===h){var o=void 0,i=void 0,s=!1;try{o=t.then}catch(u){s=!0,i=u}if(o===l&&t._state!==X)this._settledAt(t._state,e,t._result);else if("function"!=typeof o)this._remaining--,this._result[e]=t;else if(n===nt){var c=new n(p);s?S(c,i):b(c,t,o),this._willSettleAt(c,e)}else this._willSettleAt(new n(function(e){return e(t)}),e)}else this._willSettleAt(r(t),e)},t.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===X&&(this._remaining--,t===$?S(r,n):this._result[e]=n),0===this._remaining&&A(r,this._result)},t.prototype._willSettleAt=function(t,e){var n=this;j(t,void 0,function(t){return n._settledAt(Z,e,t)},function(t){return n._settledAt($,e,t)})},t}(),nt=function(){function t(e){this[V]=P(),this._result=this._state=void 0,this._subscribers=[],p!==e&&("function"!=typeof e&&Y(),this instanceof t?M(this,e):q())}return t.prototype["catch"]=function(t){return this.then(null,t)},t.prototype["finally"]=function(t){var n=this,r=n.constructor;return e(t)?n.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})}):n.then(t,t)},t}();return nt.prototype.then=l,nt.all=O,nt.race=k,nt.resolve=h,nt.reject=F,nt._setScheduler=n,nt._setAsap=r,nt._asap=z,nt.polyfill=D,nt.Promise=nt,nt.polyfill(),nt});
(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):b(a.WHATWGFetch={})})(this,function(a){'use strict';function b(a){return a&&DataView.prototype.isPrototypeOf(a)}function c(a){if("string"!=typeof a&&(a+=""),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(a))throw new TypeError("Invalid character in header field name");return a.toLowerCase()}function d(a){return"string"!=typeof a&&(a+=""),a}function e(a){var b={next:function(){var b=a.shift();return{done:void 0===b,value:b}}};return t.iterable&&(b[Symbol.iterator]=function(){return b}),b}function f(a){this.map={},a instanceof f?a.forEach(function(a,b){this.append(b,a)},this):Array.isArray(a)?a.forEach(function(a){this.append(a[0],a[1])},this):a&&Object.getOwnPropertyNames(a).forEach(function(b){this.append(b,a[b])},this)}function g(a){return a.bodyUsed?Promise.reject(new TypeError("Already read")):void(a.bodyUsed=!0)}function h(a){return new Promise(function(b,c){a.onload=function(){b(a.result)},a.onerror=function(){c(a.error)}})}function i(a){var b=new FileReader,c=h(b);return b.readAsArrayBuffer(a),c}function j(a){var b=new FileReader,c=h(b);return b.readAsText(a),c}function k(a){for(var b=new Uint8Array(a),c=Array(b.length),d=0;d<b.length;d++)c[d]=String.fromCharCode(b[d]);return c.join("")}function l(a){if(a.slice)return a.slice(0);var b=new Uint8Array(a.byteLength);return b.set(new Uint8Array(a)),b.buffer}function m(){return this.bodyUsed=!1,this._initBody=function(a){this._bodyInit=a,a?"string"==typeof a?this._bodyText=a:t.blob&&Blob.prototype.isPrototypeOf(a)?this._bodyBlob=a:t.formData&&FormData.prototype.isPrototypeOf(a)?this._bodyFormData=a:t.searchParams&&URLSearchParams.prototype.isPrototypeOf(a)?this._bodyText=a.toString():t.arrayBuffer&&t.blob&&b(a)?(this._bodyArrayBuffer=l(a.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):t.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(a)||v(a))?this._bodyArrayBuffer=l(a):this._bodyText=a=Object.prototype.toString.call(a):this._bodyText="",this.headers.get("content-type")||("string"==typeof a?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):t.searchParams&&URLSearchParams.prototype.isPrototypeOf(a)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},t.blob&&(this.blob=function(){var a=g(this);if(a)return a;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");else return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?g(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(i)}),this.text=function(){var a=g(this);if(a)return a;if(this._bodyBlob)return j(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(k(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");else return Promise.resolve(this._bodyText)},t.formData&&(this.formData=function(){return this.text().then(p)}),this.json=function(){return this.text().then(JSON.parse)},this}function n(a){var b=a.toUpperCase();return-1<w.indexOf(b)?b:a}function o(a,b){b=b||{};var c=b.body;if(a instanceof o){if(a.bodyUsed)throw new TypeError("Already read");this.url=a.url,this.credentials=a.credentials,b.headers||(this.headers=new f(a.headers)),this.method=a.method,this.mode=a.mode,this.signal=a.signal,c||null==a._bodyInit||(c=a._bodyInit,a.bodyUsed=!0)}else this.url=a+"";if(this.credentials=b.credentials||this.credentials||"same-origin",(b.headers||!this.headers)&&(this.headers=new f(b.headers)),this.method=n(b.method||this.method||"GET"),this.mode=b.mode||this.mode||null,this.signal=b.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&c)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(c)}function p(a){var b=new FormData;return a.trim().split("&").forEach(function(a){if(a){var c=a.split("="),d=c.shift().replace(/\+/g," "),e=c.join("=").replace(/\+/g," ");b.append(decodeURIComponent(d),decodeURIComponent(e))}}),b}function q(a){var b=new f,c=a.replace(/\r?\n[\t ]+/g," ");return c.split(/\r?\n/).forEach(function(a){var c=a.split(":"),d=c.shift().trim();if(d){var e=c.join(":").trim();b.append(d,e)}}),b}function r(a,b){b||(b={}),this.type="default",this.status=b.status===void 0?200:b.status,this.ok=200<=this.status&&300>this.status,this.statusText="statusText"in b?b.statusText:"OK",this.headers=new f(b.headers),this.url=b.url||"",this._initBody(a)}function s(b,c){return new Promise(function(d,e){function f(){h.abort()}var g=new o(b,c);if(g.signal&&g.signal.aborted)return e(new a.DOMException("Aborted","AbortError"));var h=new XMLHttpRequest;h.onload=function(){var a={status:h.status,statusText:h.statusText,headers:q(h.getAllResponseHeaders()||"")};a.url="responseURL"in h?h.responseURL:a.headers.get("X-Request-URL");var b="response"in h?h.response:h.responseText;d(new r(b,a))},h.onerror=function(){e(new TypeError("Network request failed"))},h.ontimeout=function(){e(new TypeError("Network request failed"))},h.onabort=function(){e(new a.DOMException("Aborted","AbortError"))},h.open(g.method,g.url,!0),"include"===g.credentials?h.withCredentials=!0:"omit"===g.credentials&&(h.withCredentials=!1),"responseType"in h&&t.blob&&(h.responseType="blob"),g.headers.forEach(function(a,b){h.setRequestHeader(b,a)}),g.signal&&(g.signal.addEventListener("abort",f),h.onreadystatechange=function(){4===h.readyState&&g.signal.removeEventListener("abort",f)}),h.send("undefined"==typeof g._bodyInit?null:g._bodyInit)})}var t={searchParams:"URLSearchParams"in self,iterable:"Symbol"in self&&"iterator"in Symbol,blob:"FileReader"in self&&"Blob"in self&&function(){try{return new Blob,!0}catch(a){return!1}}(),formData:"FormData"in self,arrayBuffer:"ArrayBuffer"in self};if(t.arrayBuffer)var u=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],v=ArrayBuffer.isView||function(a){return a&&-1<u.indexOf(Object.prototype.toString.call(a))};f.prototype.append=function(a,b){a=c(a),b=d(b);var e=this.map[a];this.map[a]=e?e+", "+b:b},f.prototype["delete"]=function(a){delete this.map[c(a)]},f.prototype.get=function(a){return a=c(a),this.has(a)?this.map[a]:null},f.prototype.has=function(a){return this.map.hasOwnProperty(c(a))},f.prototype.set=function(a,b){this.map[c(a)]=d(b)},f.prototype.forEach=function(a,b){for(var c in this.map)this.map.hasOwnProperty(c)&&a.call(b,this.map[c],c,this)},f.prototype.keys=function(){var a=[];return this.forEach(function(b,c){a.push(c)}),e(a)},f.prototype.values=function(){var a=[];return this.forEach(function(b){a.push(b)}),e(a)},f.prototype.entries=function(){var a=[];return this.forEach(function(b,c){a.push([c,b])}),e(a)},t.iterable&&(f.prototype[Symbol.iterator]=f.prototype.entries);var w=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];o.prototype.clone=function(){return new o(this,{body:this._bodyInit})},m.call(o.prototype),m.call(r.prototype),r.prototype.clone=function(){return new r(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new f(this.headers),url:this.url})},r.error=function(){var a=new r(null,{status:0,statusText:""});return a.type="error",a};var x=[301,302,303,307,308];r.redirect=function(a,b){if(-1===x.indexOf(b))throw new RangeError("Invalid status code");return new r(null,{status:b,headers:{location:a}})},a.DOMException=self.DOMException;try{new a.DOMException}catch(b){a.DOMException=function(a,b){this.message=a,this.name=b;var c=Error(a);this.stack=c.stack},a.DOMException.prototype=Object.create(Error.prototype),a.DOMException.prototype.constructor=a.DOMException}s.polyfill=!0,self.fetch||(self.fetch=s,self.Headers=f,self.Request=o,self.Response=r),a.Headers=f,a.Request=o,a.Response=r,a.fetch=s,Object.defineProperty(a,"__esModule",{value:!0})});
(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):(a=a||self,b(a.AbortControllerShim={}))})(this,function(a){'use strict';function b(a){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},b(a)}function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function d(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function e(a,b,c){return b&&d(a.prototype,b),c&&d(a,c),a}function f(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&h(a,b)}function g(a){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},g(a)}function h(a,b){return h=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},h(a,b)}function i(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function j(a,b){return b&&("object"==typeof b||"function"==typeof b)?b:i(a)}function k(a){var b=F.get(a);return console.assert(null!=b,"'this' is expected an Event object, but got",a),b}function l(a){return null==a.passiveListener?void(!a.event.cancelable||(a.canceled=!0,"function"==typeof a.event.preventDefault&&a.event.preventDefault())):void("undefined"!=typeof console&&"function"==typeof console.error&&console.error("Unable to preventDefault inside passive event listener invocation.",a.passiveListener))}function m(a,b){F.set(this,{eventTarget:a,event:b,eventPhase:2,currentTarget:a,canceled:!1,stopped:!1,immediateStopped:!1,passiveListener:null,timeStamp:b.timeStamp||Date.now()}),Object.defineProperty(this,"isTrusted",{value:!1,enumerable:!0});for(var c,d=Object.keys(b),e=0;e<d.length;++e)c=d[e],c in this||Object.defineProperty(this,c,n(c))}function n(a){return{get:function(){return k(this).event[a]},set:function(b){k(this).event[a]=b},configurable:!0,enumerable:!0}}function o(a){return{value:function(){var b=k(this).event;return b[a].apply(b,arguments)},configurable:!0,enumerable:!0}}function p(a,b){function c(b,c){a.call(this,b,c)}var d=Object.keys(b);if(0===d.length)return a;c.prototype=Object.create(a.prototype,{constructor:{value:c,configurable:!0,writable:!0}});for(var e,f=0;f<d.length;++f)if(e=d[f],!(e in a.prototype)){var g=Object.getOwnPropertyDescriptor(b,e),h="function"==typeof g.value;Object.defineProperty(c.prototype,e,h?o(e):n(e))}return c}function q(a){if(null==a||a===Object.prototype)return m;var b=G.get(a);return null==b&&(b=p(q(Object.getPrototypeOf(a)),a),G.set(a,b)),b}function r(a,b){var c=q(Object.getPrototypeOf(b));return new c(a,b)}function s(a){return k(a).immediateStopped}function t(a,b){k(a).eventPhase=b}function u(a,b){k(a).currentTarget=b}function v(a,b){k(a).passiveListener=b}function w(a){return null!==a&&"object"===b(a)}function x(a){var b=H.get(a);if(null==b)throw new TypeError("'this' is expected an EventTarget object, but got another value.");return b}function y(a){return{get:function(){for(var b=x(this),c=b.get(a);null!=c;){if(3===c.listenerType)return c.listener;c=c.next}return null},set:function(b){"function"==typeof b||w(b)||(b=null);for(var c=x(this),d=null,e=c.get(a);null!=e;)3===e.listenerType?null===d?null===e.next?c.delete(a):c.set(a,e.next):d.next=e.next:d=e,e=e.next;if(null!==b){var f={listener:b,listenerType:3,passive:!1,once:!1,next:null};null===d?c.set(a,f):d.next=f}},configurable:!0,enumerable:!0}}function z(a,b){Object.defineProperty(a,"on".concat(b),y(b))}function A(a){function b(){B.call(this)}b.prototype=Object.create(B.prototype,{constructor:{value:b,configurable:!0,writable:!0}});for(var c=0;c<a.length;++c)z(b.prototype,a[c]);return b}function B(){if(this instanceof B)return void H.set(this,new Map);if(1===arguments.length&&Array.isArray(arguments[0]))return A(arguments[0]);if(0<arguments.length){for(var a=Array(arguments.length),b=0;b<arguments.length;++b)a[b]=arguments[b];return A(a)}throw new TypeError("Cannot call a class as a function")}function C(){var a=Object.create(K.prototype);return B.call(a),L.set(a,!1),a}function D(a){!1!==L.get(a)||(L.set(a,!0),a.dispatchEvent({type:"abort"}))}function E(a){var c=N.get(a);if(null==c)throw new TypeError("Expected 'this' to be an 'AbortController' object, but got ".concat(null===a?"null":b(a)));return c}var F=new WeakMap,G=new WeakMap;m.prototype={get type(){return k(this).event.type},get target(){return k(this).eventTarget},get currentTarget(){return k(this).currentTarget},composedPath:function(){var a=k(this).currentTarget;return null==a?[]:[a]},get NONE(){return 0},get CAPTURING_PHASE(){return 1},get AT_TARGET(){return 2},get BUBBLING_PHASE(){return 3},get eventPhase(){return k(this).eventPhase},stopPropagation:function(){var a=k(this);a.stopped=!0,"function"==typeof a.event.stopPropagation&&a.event.stopPropagation()},stopImmediatePropagation:function(){var a=k(this);a.stopped=!0,a.immediateStopped=!0,"function"==typeof a.event.stopImmediatePropagation&&a.event.stopImmediatePropagation()},get bubbles(){return!!k(this).event.bubbles},get cancelable(){return!!k(this).event.cancelable},preventDefault:function(){l(k(this))},get defaultPrevented(){return k(this).canceled},get composed(){return!!k(this).event.composed},get timeStamp(){return k(this).timeStamp},get srcElement(){return k(this).eventTarget},get cancelBubble(){return k(this).stopped},set cancelBubble(a){if(a){var b=k(this);b.stopped=!0,"boolean"==typeof b.event.cancelBubble&&(b.event.cancelBubble=!0)}},get returnValue(){return!k(this).canceled},set returnValue(a){a||l(k(this))},initEvent:function(){}},Object.defineProperty(m.prototype,"constructor",{value:m,configurable:!0,writable:!0}),"undefined"!=typeof window&&"undefined"!=typeof window.Event&&(Object.setPrototypeOf(m.prototype,window.Event.prototype),G.set(window.Event.prototype,m));var H=new WeakMap,I=1,J=2;B.prototype={addEventListener:function(a,b,c){if(null!=b){if("function"!=typeof b&&!w(b))throw new TypeError("'listener' should be a function or an object.");var d=x(this),e=w(c),f=e?!!c.capture:!!c,g=f?I:J,h={listener:b,listenerType:g,passive:e&&!!c.passive,once:e&&!!c.once,next:null},i=d.get(a);if(void 0===i)return void d.set(a,h);for(var j=null;null!=i;){if(i.listener===b&&i.listenerType===g)return;j=i,i=i.next}j.next=h}},removeEventListener:function(a,b,c){if(null!=b)for(var d=x(this),e=w(c)?!!c.capture:!!c,f=e?I:J,g=null,h=d.get(a);null!=h;){if(h.listener===b&&h.listenerType===f)return void(null===g?null===h.next?d.delete(a):d.set(a,h.next):g.next=h.next);g=h,h=h.next}},dispatchEvent:function(a){if(null==a||"string"!=typeof a.type)throw new TypeError("\"event.type\" should be a string.");var b=x(this),c=a.type,d=b.get(c);if(null==d)return!0;for(var e=r(this,a),f=null;null!=d;){if(d.once?null===f?null===d.next?b.delete(c):b.set(c,d.next):f.next=d.next:f=d,v(e,d.passive?d.listener:null),"function"==typeof d.listener)try{d.listener.call(this,e)}catch(a){"undefined"!=typeof console&&"function"==typeof console.error&&console.error(a)}else d.listenerType!==3&&"function"==typeof d.listener.handleEvent&&d.listener.handleEvent(e);if(s(e))break;d=d.next}return v(e,null),t(e,0),u(e,null),!e.defaultPrevented}},Object.defineProperty(B.prototype,"constructor",{value:B,configurable:!0,writable:!0}),"undefined"!=typeof window&&"undefined"!=typeof window.EventTarget&&Object.setPrototypeOf(B.prototype,window.EventTarget.prototype);var K=function(a){function d(){var a;throw c(this,d),a=j(this,g(d).call(this)),new TypeError("AbortSignal cannot be constructed directly")}return f(d,a),e(d,[{key:"aborted",get:function(){var a=L.get(this);if("boolean"!=typeof a)throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got ".concat(null===this?"null":b(this)));return a}}]),d}(B);z(K.prototype,"abort");var L=new WeakMap;Object.defineProperties(K.prototype,{aborted:{enumerable:!0}}),"function"==typeof Symbol&&"symbol"===b(Symbol.toStringTag)&&Object.defineProperty(K.prototype,Symbol.toStringTag,{configurable:!0,value:"AbortSignal"});var M=function(){function a(){c(this,a),N.set(this,C())}return e(a,[{key:"abort",value:function(){D(E(this))}},{key:"signal",get:function(){return E(this)}}]),a}(),N=new WeakMap;if(Object.defineProperties(M.prototype,{signal:{enumerable:!0},abort:{enumerable:!0}}),"function"==typeof Symbol&&"symbol"===b(Symbol.toStringTag)&&Object.defineProperty(M.prototype,Symbol.toStringTag,{configurable:!0,value:"AbortController"}),a.AbortController=M,a.AbortSignal=K,a.default=M,Object.defineProperty(a,"__esModule",{value:!0}),"undefined"==typeof module&&"undefined"==typeof define){var O=Function("return this")();"undefined"==typeof O.AbortController&&(O.AbortController=M,O.AbortSignal=K)}});
/* Umbrella (modified by Alain Bailleul) */
Array.from||(Array.from=function(){var a=Object.prototype.toString,b=function(b){return"function"==typeof b||"[object Function]"===a.call(b)},c=function(a){var b=+a;return isNaN(b)?0:0!=b&&isFinite(b)?(0<b?1:-1)*Math.floor(Math.abs(b)):b},d=Math.pow(2,53)-1,e=function(a){var b=c(a);return Math.min(Math.max(b,0),d)};return function(a){var c=this,d=Object(a);if(null==a)throw new TypeError("Array.from requires an array-like object - not null or undefined");var f,g=1<arguments.length?arguments[1]:void 0;if("undefined"!=typeof g){if(!b(g))throw new TypeError("Array.from: when provided, the second argument must be a function");2<arguments.length&&(f=arguments[2])}for(var h,i=e(d.length),j=b(c)?Object(new c(i)):Array(i),l=0;l<i;)h=d[l],j[l]=g?"undefined"==typeof f?g(h,l):g.call(f,h,l):h,l+=1;return j.length=i,j}}());var u=function(t,e){return this instanceof u?t instanceof u?t:("string"==typeof t&&(t=this.select(t,e)),t&&t.nodeName&&(t=[t]),void(this.nodes=this.slice(t))):new u(t,e)};u.prototype={get length(){return this.nodes.length}},u.prototype.nodes=[],u.prototype.addClass=function(){return this.eacharg(arguments,function(t,e){t.classList.add(e)})},u.prototype.adjacent=function(i,t,n){return"number"==typeof t&&(t=0===t?[]:new Array(t).join().split(",").map(Number.call,Number)),this.each(function(r,o){var e=document.createDocumentFragment();u(t||{}).map(function(t,e){var n="function"==typeof i?i.call(this,t,e,r,o):i;return"string"==typeof n?this.generate(n):u(n)}).each(function(t){this.isInPage(t)?e.appendChild(u(t).clone().first()):e.appendChild(t)}),n.call(this,r,e)})},u.prototype.after=function(t,e){return this.adjacent(t,e,function(t,e){t.parentNode.insertBefore(e,t.nextSibling)})},u.prototype.append=function(t,e){return this.adjacent(t,e,function(t,e){t.appendChild(e)})},u.prototype.args=function(t,e,n){return"function"==typeof t&&(t=t(e,n)),"string"!=typeof t&&(t=this.slice(t).map(this.str(e,n))),t.toString().split(/[\s,]+/).filter(function(t){return t.length})},u.prototype.array=function(o){o=o;var i=this;return this.nodes.reduce(function(t,e,n){var r;return o?((r=o.call(i,e,n))||(r=!1),"string"==typeof r&&(r=u(r)),r instanceof u&&(r=r.nodes)):r=e.innerHTML,t.concat(!1!==r?r:[])},[])},u.prototype.attr=function(t,e,r){return r=r?"data-":"",this.pairs(t,e,function(t,e){return t.getAttribute(r+e)},function(t,e,n){t.setAttribute(r+e,n)})},u.prototype.before=function(t,e){return this.adjacent(t,e,function(t,e){t.parentNode.insertBefore(e,t)})},u.prototype.children=function(t){return this.map(function(t){return this.slice(t.children)}).filter(t)},u.prototype.clone=function(){return this.map(function(t,e){var n=t.cloneNode(!0),r=this.getAll(n);return this.getAll(t).each(function(t,e){for(var n in this.mirror)this.mirror[n]&&this.mirror[n](t,r.nodes[e])}),n})},u.prototype.toU=function(){for(var t=[],e=0;e<this.nodes.length;e++)t.push(u(this.nodes[e]));return t},u.prototype.css=function(t,e){return this.pairs(t,e,function(t,e){return getStyle(t,e)},function(t,e,n){setStyle(t,e,n)})},u.prototype.getAll=function(t){return u([t].concat(u("*",t).nodes))},u.prototype.mirror={},u.prototype.mirror.events=function(t,e){if(t._e)for(var n in t._e)t._e[n].forEach(function(t){u(e).on(n,t)})},u.prototype.mirror.select=function(t,e){u(t).is("select")&&(e.value=t.value)},u.prototype.mirror.textarea=function(t,e){u(t).is("textarea")&&(e.value=t.value)},u.prototype.closest=function(e){return this.map(function(t){do{if(u(t).is(e))return t}while((t=t.parentNode)&&t!==document)})},u.prototype.data=function(t,e){return this.attr(t,e,!0)},u.prototype.each=function(t){return this.nodes.forEach(t.bind(this)),this},u.prototype.eacharg=function(n,r){return this.each(function(e,t){this.args(n,e,t).forEach(function(t){r.call(this,e,t)},this)})},u.prototype.empty = function() {return this.each(function(e) {for (var t = e.children, r = 0; r < t.length; r++) {var i = t[r];var n = document.getElementById(i.id);if (n) {var o = n.cloneNode(!0);n.parentNode.replaceChild(o, n)}}for (; e.firstChild;) e.removeChild(e.firstChild)})},u.prototype.filter=function(e){var t=function(t){return t.matches=t.matches||t.msMatchesSelector||t.webkitMatchesSelector,t.matches(e||"*")};return"function"==typeof e&&(t=e),e instanceof u&&(t=function(t){return-1!==e.nodes.indexOf(t)}),u(this.nodes.filter(t))},u.prototype.find=function(e){return this.map(function(t){return u(e||"*",t)})},u.prototype.first=function(){return this.nodes[0]||!1},u.prototype.bananofirst=function(){return u(this.nodes[0])||!1},u.prototype.generate=function(a){return /^\s*<tr[> ]/.test(a)?this.contents(u(document.createElement("table")).html(a).children()):/^\s*<t(h|d)[> ]/.test(a)?this.contents(u(document.createElement("table")).html(a).children().children().children().nodes):this.contents(u(document.createElement("div")).html(a))},u.prototype.contents=function(a){return Array.from(a.nodes[0].childNodes)},u.prototype.handle=function(){var t=this.slice(arguments).map(function(e){return"function"==typeof e?function(t){t.preventDefault(),e.apply(this,arguments)}:e},this);return this.on.apply(this,t)},u.prototype.hasClass=function(){return this.is("."+this.args(arguments).join("."))},u.prototype.html=function(e){return void 0===e?this.first().innerHTML||"":this.each(function(t){t.innerHTML=e})},u.prototype.is=function(t){return 0<this.filter(t).length},u.prototype.isInPage=function(t){return t!==document.body&&document.body.contains(t)},u.prototype.bananolast=function(){return u(this.nodes[this.length-1])||!1},u.prototype.last=function(){return this.nodes[this.length-1]||!1},u.prototype.map=function(t){return t?u(this.array(t)).unique():this},u.prototype.not=function(e){return this.filter(function(t){return!u(t).is(e||!0)})},u.prototype.off=function(t){return this.eacharg(t,function(e,n){u(e._e?e._e[n]:[]).each(function(t){e.removeEventListener(n,t)})})},u.prototype.on=function(t,e,r){if("string"==typeof e){var o=e;e=function(e){var n=arguments;u(e.currentTarget).find(o).each(function(t){if(t===e.target||t.contains(e.target)){try{Object.defineProperty(e,"currentTarget",{get:function(){return t}})}catch(t){}r.apply(t,n)}})}}var n=function(t){return e.apply(this,[t].concat(t.detail||[]))};return this.eacharg(t,function(t,e){t.addEventListener(e,n),t._e=t._e||{},t._e[e]=t._e[e]||[],t._e[e].push(n)})},u.prototype.pairs=function(n,t,e,r){if(void 0!==t){var o=n;(n={})[o]=t}return"object"==typeof n?this.each(function(t){for(var e in n)r(t,e,n[e])}):this.length?e(this.first(),n):""},u.prototype.param=function(e){return Object.keys(e).map(function(t){return this.uri(t)+"="+this.uri(e[t])}.bind(this)).join("&")},u.prototype.parent=function(t){return this.map(function(t){return t.parentNode}).filter(t)},u.prototype.prepend=function(t,e){return this.adjacent(t,e,function(t,e){t.insertBefore(e,t.firstChild)})},u.prototype.remove=function(){return this.each(function(t){u(t).empty();t.parentNode&&t.parentNode.removeChild(t)})},u.prototype.removeClass=function(){return this.eacharg(arguments,function(t,e){t.classList.remove(e)})},u.prototype.replace=function(t,e){var n=[];return this.adjacent(t,e,function(t,e){n=n.concat(this.slice(e.children)),t.parentNode.replaceChild(e,t)}),u(n)},u.prototype.scroll=function(){return this.first().scrollIntoView({behavior:"smooth"}),this},u.prototype.select=function(t,e){return t=t.replace(/^\s*/,"").replace(/\s*$/,""),/^</.test(t)?u().generate(t):(e||document).querySelectorAll(t)},u.prototype.serialize=function(){var r=this;return this.slice(this.first().elements).reduce(function(e,n){return!n.name||n.disabled||"file"===n.type?e:/(checkbox|radio)/.test(n.type)&&!n.checked?e:"select-multiple"===n.type?(u(n.options).each(function(t){t.selected&&(e+="&"+r.uri(n.name)+"="+r.uri(t.value))}),e):e+"&"+r.uri(n.name)+"="+r.uri(n.value)},"").slice(1)},u.prototype.siblings=function(t){return this.parent().children(t).not(this)},u.prototype.size=function(){return this.first().getBoundingClientRect()},u.prototype.hasAttr=function(t){return null!=this.attr(t)},u.prototype.slice=function(t){return t&&0!==t.length&&"string"!=typeof t&&"[object Function]"!==t.toString()?t.length?[].slice.call(t.nodes||t):[t]:[]},u.prototype.str=function(e,n){return function(t){return"function"==typeof t?t.call(this,e,n):t.toString()}},u.prototype.text=function(e){return void 0===e?this.first().textContent||"":this.each(function(t){t.textContent=e})},u.prototype.toggleClass=function(t,e){return!!e===e?this[e?"addClass":"removeClass"](t):this.eacharg(t,function(t,e){t.classList.toggle(e)})},u.prototype.trigger=function(t){var o=this.slice(arguments).slice(1);return this.eacharg(t,function(t,e){var n,r={bubbles:!0,cancelable:!0,detail:o};try{n=new window.CustomEvent(e,r)}catch(t){(n=document.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,o)}t.dispatchEvent(n)})},u.prototype.checked=function (bool) {if (bool === undefined) {return this.checked().value || false;} return this.each(function (node) {node.checked = bool;});},u.prototype.value=function (text) {if (text === undefined) {return this.first().value || '';} return this.each(function (node) {node.value = text;});},u.prototype.unique=function(){return u(this.nodes.reduce(function(t,e){return null!=e&&!1!==e&&-1===t.indexOf(e)?t.concat(e):t},[]))},u.prototype.uri=function(t){return encodeURIComponent(t).replace(/!/g,"%21").replace(/'/g,"%27").replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/\*/g,"%2A").replace(/%20/g,"+")},u.prototype.wrap=function(t){return this.map(function(e){return u(t).each(function(t){(function(t){for(;t.firstElementChild;)t=t.firstElementChild;return u(t)})(t).append(e.cloneNode(!0)),e.parentNode.replaceChild(t,e)})})},"object"==typeof module&&module.exports&&(module.exports=u,module.exports.u=u);
/* jsonQuery */
!function(t){"use strict";var r=function(t,r){return new i(t,r||{})};(t.JsonQuery=r).VERSION="0.0.2",Object.defineProperty||(Object.defineProperty=function(t,r,i){t[r]=i.get});var d=function(t,r,i){if(t.length===+t.length)for(var e=0,n=t.length;e<n;e++)r.call(i,t[e],e);else for(var s in t)hasOwnProperty.call(t,s)&&r.call(i,t[s],s)},i=function(t,r){this.records=t||[],this.getterFns=r.getterFns||{},this.lat=r.latitude||"latitude",this.lng=r.longitude||"longitude",this.id=r.id,this.records.length&&n(this,t[0],r.schema)},e=i.prototype,n=function(t,r,i){t.schema={},t.id||(t.id=r._id?"_id":"id"),i||(c.call(t,r),s.call(t,r))},o=function(t){if(null==t)return"String";var r=Object.prototype.toString.call(t).slice(8,-1);return"String"==r&&t.match(/\d{4}-\d{2}-\d{2}/)?"Date":r},c=function(t,r){var i,e,n,s;for(i in t)s=t[i],e=o(s),n=r?r+"."+i:i,"Object"==(this.schema[n]=e)?c.call(this,s,n):"Array"==e&&(-1<["Object","Array"].indexOf(o(s[0]))?c.call(this,t[i][0],n):this.schema[n]=o(s[0]))},s=function(t){var r,i,e;for(r in this.schema){i=this.schema[r];try{this.getterFns[r]||(this.getterFns[r]=h.call(this,r,i)),e=this.getterFns[r](t),"Array"==o(e)&&(this.schema[r]="Array")}catch(t){console.log("Error generating getter function for selector : "+r+" NOTE: Define manually")}}},h=function(t){for(var r,i,e,n="",s=t.split("."),c=function(t,r){for(var i=0,e=0,n=r.length-1,s=r.length-1;0<=s;s--)"Array"==t[r.slice(0,s+1).join(".")]&&s<n&&(i=s,e+=1);return 1<e?i+1:-1}(this.schema,s),o=s.length-1;0<=o;o--)r=s.slice(0,o+1).join("."),i="['"+s[o]+"']",n="Array"==this.schema[r]?c==o?i+(n.length?".every(function(r"+o+"){  objs.push(r"+o+n+")})":""):i+(n.length?".map(function(r"+o+"){  return r"+o+n+"})":""):i+n;return e=-1<c?"var objs = []; obj"+n+";"+("Date"==this.schema.path?"return parseDate(objs)":"return objs;"):"return "+("Date"==this.schema.path?"parseDate(obj"+n+");":"obj"+n+";"),new Function("obj",e)};e.operators={eq:function(t,r){return t==r},ne:function(t,r){return t!=r},lt:function(t,r){return t<r},lte:function(t,r){return t<=r},gt:function(t,r){return r<t},gte:function(t,r){return r<=t},in:function(t,r){return-1<r.indexOf(t)},ni:function(t,r){return-1==r.indexOf(t)},li:function(t,r){return r.test(t)},bt:function(t,r){return t>=r[0]&&t<=r[1]}},e.addOperator=function(t,r){this.operators[t]=r};var a=function(t,r,i){for(var e=0,n=t.length;e<n;e++)if(i(t[e],r))return!0};e.addCondition=function(t,r){this.operators[t]=r},e.getCriteria=function(t){var r=t.split(".$");return{field:r[0],operator:r[1]||"eq"}},e.setGetterFn=function(t,r){this.getterFns[t]=r},e.addRecords=function(t){return!(!t||!t.length)&&("Array"==o(t)?this.records=this.records.concat(t):this.records.push(t),this.schema||n(this,t[0]),!0)},e._findAll=function(t,r,i,e){var n,s,c,o=[],h=this.getterFns[r];return"li"==e&&"string"==typeof i&&(i=new RegExp(i)),n=this.operators[e],"Array"==this.schema[r]&&(c=n,n=a),d(t,function(t){s=h(t),n(s,i,c)&&o.push(t)}),o},e.find=function(t,r){var i,e;return r||(r=t,t=this.id),e=this.getterFns[t],function(t,r,i){for(var e=0,n=t.length;e<n;e++)if(!1===r.call(i,t[e],e))return}(this.records,function(t){return e(t)==r?(i=t,!1):void 0}),i},d(["where","or","groupBy","select","pluck","limit","offset","order","uniq","near"],function(r){e[r]=function(){var t=new g(this,this.records);return t[r].apply(t,arguments),t}}),d(["update_all","destroy_all"],function(r){e[r]=function(){var t=new g(this,this.records);return t[r].apply(t,arguments)}}),d(["count","first","last","all"],function(t){Object.defineProperty(e,t,{get:function(){return new g(this,this.records)[t]}})});var u=function(t,r,i){for(var e=0,n=i.length;e<n;e++)if(this.getterFns[i[e]](t)!==this.getterFns[i[e]](r))return!1;return!0},l=function(t,r){var i,e,n;for(i in t)e=this.jQ.getCriteria(i),n=this.jQ._findAll(n||r,e.field,t[i],e.operator);return n},f=function(n,t){var s=[],c=this;return"Object"!=o(t[0])?d(t,function(t){-1==s.indexOf(t)&&s.push(t)}):(s.push(t[0]),d(t,function(t){for(var r=!1,i=0,e=s.length;i<e;i++)u.call(c.jQ,s[i],t,n)&&(r=!0);r||s.push(t)})),s},g=function(t,r){return this.jQ=t,this.records=r,this.criteria={},this},p=g.prototype;p.each=function(t,r){d(this.exec()||[],t,r)},p.exec=p.toArray=function(t){var r;return this.criteria.all&&(r=this.records),this.criteria.where&&(r=l.call(this,this.criteria.where,r||this.records)),this.criteria.or&&(r=r.concat(l.call(this,this.criteria.or,this.records)),r=f.call(this,[this.jQ.id],r)),this.criteria.order&&(r=function(t,r){for(var n,s,i=r.slice(0),e=0,c=t.length;e<c;e++)n=this.jQ.getterFns[t[e].field],s="asc"==t[e].direction?1:-1,i.sort(function(t,r){var i=n(t),e=n(r);return(i<e?-1:e<i?1:0)*s});return i}.call(this,this.criteria.order,r||this.records)),this.criteria.near&&(r=m.call(this,this.criteria.near,r||this.records)),this.criteria.uniq&&(r=f.call(this,this.criteria.uniq,r||this.records)),this.criteria.select&&(r=function(t,r){var e,n=this,s=[];return d(t,function(i){e=n.jQ.getterFns[i],d(r,function(t,r){(s[r]||(s[r]={}))[i]=e(t)})}),s}.call(this,this.criteria.select,r||this.records)),this.criteria.pluck&&(r=function(t,r){var i=this.jQ.getterFns[t],e=[];return d(r,function(t){e.push(i(t))}),e}.call(this,this.criteria.pluck,r||this.records)),this.criteria.limit&&(r=(r||this.records).slice(this.criteria.offset||0,(this.criteria.offset||0)+this.criteria.limit)),this.criteria.group_by&&(r=function(t,r){var i,e=this.jQ.getterFns[t],n={};return r.length,d(r,function(t){i=e(t),(n[i]||(n[i]=[])).push(t)}),n}.call(this,this.criteria.group_by,r||this.records)),r||(r=this.records),t&&d(r,t),this.jQ.onResult&&this.jQ.onResult(r,this.criteria),r};var v=function(t,r){var i;for(i in this.criteria[t]||(this.criteria[t]={}),r)this.criteria[t][i]=r[i];return this};p.where=function(t){return v.call(this,"where",t)},p.or=function(t){return v.call(this,"or",t)},p.groupBy=function(t){return this.criteria.group_by=t,this},p.select=function(){return this.criteria.select=arguments,this},p.pluck=function(t){return this.criteria.pluck=t,this},p.limit=function(t){return this.criteria.limit=t,this},p.offset=function(t){return this.criteria.offset=t,this},p.order=function(t){var r;for(r in this.criteria.order=this.criteria.order||[],t)this.criteria.order.push({field:r,direction:t[r].toLowerCase()});return this},p.uniq=function(){return this.criteria.uniq=!(0<arguments.length)||arguments,this},Object.defineProperty(p,"count",{get:function(){this.criteria.count=!0;var t=this.exec();return"Array"==o(t)?this.exec().length:Object.keys(t).length}}),Object.defineProperty(p,"all",{get:function(){return this.criteria.all=!0,this.exec()}}),Object.defineProperty(p,"first",{get:function(){return this.criteria.first=!0,this.exec()[0]}}),Object.defineProperty(p,"last",{get:function(){this.criteria.last=!0;var t=this.exec();return t[t.length-1]}});var y=6371,j=function(t){return t*Math.PI/180},m=function(h,t){var a=[],u="mile"==h.unit?.6214:1,l=this.jQ.getterFns[this.jQ.lat],f=this.jQ.getterFns[this.jQ.lng];return d(t,function(t){var r,i,e,n,s,c,o;t._distance=(r=l(t),i=h.lat,e=f(t),n=h.lng,s=j(i-r),c=j(n-e),r=j(r),i=j(i),o=Math.sin(s/2)*Math.sin(s/2)+Math.sin(c/2)*Math.sin(c/2)*Math.cos(r)*Math.cos(i),2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o))*y*u),t._distance<=h.distance&&a.push(t)}),a.sort(function(t,r){return t._distance<r._distance?-1:t._distance>r._distance?1:0}),a};p.near=function(t,r,i,e){return this.criteria.near={lat:t,lng:r,distance:i,unit:e||"km"},this},p.map=p.collect=function(r){var i,e=[];return this.exec(function(t){(i=r(t))&&e.push(i)}),e},p.sum=function(t){var i,e=0,n=this.jQ.getterFns[t];return this.criteria.group_by&&(i=!0,e={}),this.exec(function(t,r){i?(e[r]=0,d(t,function(t){e[r]=e[r]+(n(t)||0)})):e+=n(t)||0}),e},p.toJQ=function(){var t=r(this.all,{schema:!0});return t.schema=this.jQ.schema,t.getterFns=this.jQ.getterFns,t},p.destroy_all=p.destroy=function(){var t=this.all;return d(t,function(t){t._destroy_=!0}),this.records=this.jQ.records=this.records.filter(function(t){return!t._destroy_}),t},p.update_all=p.update=function(t){if(!t)return!1;var r=0;return d(this.all,function(i){d(t,function(t,r){i[r]=t}),r+=1}),r},Array.prototype.indexOf||(Array.prototype.indexOf=function(t,r){for(var i=r||0,e=this.length;i<e;i++)if(this[i]===t)return i;return-1})}(this);
/* BANano jCore */
var bananoglobal=this;var DateTime;var bananoWS;var _BANUnique=0;function BANC(ccName, selv, layName, layEventName, layPar, custProp) {var v=new ccName();v['initialize'](selv, layName, layEventName);v['designercreateview'](layPar,custProp);return v;}function BANToBase(s) {var i = s.lastIndexOf("_");if (i>-1) {return s.substring(i+1);}return s;};function BANurlBase64ToUint8Array(base64String) {var padding = '='.repeat((4 - base64String.length % 4) % 4);var base64 = (base64String + padding).replace(/\-/g, '+').replace(/_/g, '/');var rawData = window.atob(base64);var outputArray=new Uint8Array(rawData.length);for (var i = 0; i < rawData.length; ++i) {outputArray[i] = rawData.charCodeAt(i);}return outputArray;}function BANano_getParams(url) {var params = {};var parser = document.createElement('a');parser.href = url;var query = parser.search.substring(1);var vars = query.split('&');for (var i = 0; i < vars.length; i++) {var pair = vars[i].split('=');if (pair[0]!='') {if (pair.length==2) {params[pair[0]] = decodeURIComponent(pair[1]);} else {params[pair[0]] = true;}}}return params;};function BANano_getParamDefault(url, key, def) {var params = BANano_getParams(url);var ret = params[key];if (ret === undefined) {return def;}return ret;};function gBANp(args) {var i=args.length - 1;while (i >=-1) {if (args[i] instanceof Promise) {return args[i];}i--;}return null;};function BANFetch(typ, file, opts, enc) {return new Promise(function(resolve, reject) {switch (typ) {case 'D':if (opts) {fetch(file,opts).then(function(data) {return data.blob();}).then(function (blob) {resolve(readAsDataURL(blob));});} else {fetch(file).then(function(data) {return data.blob();}).then(function (blob) {resolve(readAsDataURL(blob));});}break;case 'T':if (opts) {fetch(file,opts).then(function(data) {return data.blob();}).then(function (blob) {resolve(readAsText(blob,enc));});} else {fetch(file).then(function(data) {return data.blob();}).then(function (blob) {resolve(readAsText(blob,enc));});}break;case 'A':if (opts) {fetch(file,opts).then(function(data) {return data.blob();}).then(function (blob) {resolve(readAsArrayBuffer(blob));});} else {fetch(file).then(function(data) {return data.blob();}).then(function (blob) {resolve(readAsArrayBuffer(blob));});}break;case 'J':if (opts) {fetch(file, opts).then(function(data) {if (data.ok) {resolve(data.json());} else {reject(new Error('Something went wrong'));}});} else {fetch(file).then(function(data) {if (data.ok) {resolve(data.json());} else {reject(new Error('Something went wrong'));}});}break;}});}function readAsDataURL(file) {if (!(file instanceof Blob)) {throw new TypeError('Must be a File or Blob')}return new Promise(function(resolve, reject) {var reader = new FileReader();reader.onload = function(e) { resolve(e.target.result) };reader.onerror = function(e) { reject(new Error('Error reading' + file.name + ': ' + e.target.result))};reader.readAsDataURL(file);});};function readAsText(file, enc) {if (!(file instanceof Blob)) {throw new TypeError('Must be a File or Blob')}return new Promise(function(resolve, reject) {var reader = new FileReader();reader.onload = function(e) { resolve(e.target.result) };reader.onerror = function(e) { reject(new Error('Error reading' + file.name + ': ' + e.target.result))};if (enc!='') {reader.readAsText(file, enc);} else {reader.readAsText(file);}});};function readAsArrayBuffer(file) {if (!(file instanceof Blob)) {throw new TypeError('Must be a File or Blob')}return new Promise(function(resolve, reject) {var reader = new FileReader();reader.onload = function(e) { resolve(e.target.result) };reader.onerror = function(e) { reject(new Error('Error reading' + file.name + ': ' + e.target.result))};reader.readAsArrayBuffer(file);});};function BANUpload(path, file) {return fetch(path, {method: 'POST',headers: {"pageId": window.name,"fileName": file.name},body: file});};function BANanoPromise() {var res, rej;var promise=new Promise(function (resolve, reject) {res = resolve;rej = reject;});promise.resolve = res;promise.reject = rej;return promise;}function BANano_nf(num, minpl) {let arr = num.toString().split(".");arr[0] = arr[0].padStart(minpl, "0");let tst = 0.1;let cch = tst.toLocaleString().substring(1,2);let str = arr.join(cch);str = BANano_nwc(str,cch);return str;};function BANano_nf2(num, minpl, form) {let arr = num.toString().split(".");arr[0] = arr[0].padStart(minpl, "0");let tst = 0.1;let cch = tst.toLocaleString().substring(1,2);let str = arr.join(cch);if (form) {str = BANano_nwc(str,cch);}return str;};function BANano_nwc(x, cch) {var parts = x.toString().split(cch);cch2=",";if (cch===",") {cch2=".";}parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, cch2);return parts.join(cch);};function BANano_r(number, decimals) {return +(Math.round(number + "e+" + decimals) + "e-" + decimals);};function BANano_r2f(number, decimals, minf) {let v = +(Math.round(number + "e+" + decimals) + "e-" + decimals);return v.toFixed(minf);};var sleep = function sleep(milliseconds) {return new Promise(function (resolve) {return setTimeout(resolve, milliseconds);});};function BANanoMethodVarsToMap(m,b,n) {if (b) {m['subname']=n;}return m;};function BANanoExec(functionName, context, args) {var args = Array.prototype.slice.call(arguments, 2);var namespaces = functionName.split('.');var func = namespaces.pop();for(var i = 0; i < namespaces.length; i++) {context = context[namespaces[i]];}return context[func].apply(context, args);};function BANanoSuffixFromID(id) {var i=id.lastIndexOf('_');if (i>0) {return id.substring(i+1);}return -1;};function banano_isconnected(tag, returnMethod, obj) {var img = document.createElement('img');img.onerror = function() {obj[returnMethod](tag, false);};img.onload = function() {obj[returnMethod](tag, true);};img.src = './assets/donotdelete.gif?rand=' +((new Date()).getTime());}function setStyle(el, property, value) {el.style[property] = value;}function getStyle(el, property) {var style = window.getComputedStyle ? getComputedStyle(el, null) : el.currentStyle;return style[property];}var __extends=this&&this.__extends||function(a,c){function b(){this.constructor=a}for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d]);a.prototype=null===c?Object.create(c):(b.prototype=c.prototype,new b)},BANpC={},BANmonth=["january","february","march","april","may","june","july","august","september","october","november","december"],BANshortMonth=["jan","feb","mar","apr","may","jun","jul","aug","sept","oct","nov","dec"],BANday=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"],BANshortDay=["su","mo","tu","we","th","fr","sa"],BANamPm={am:"am",pm:"pm"},BANshortAmPm={am:"a",pm:"p"},BANaYR=function(a){var b=parseInt(a,10);return 60<b?b+1900:b+2e3};function BANGP(a){for(var b="",c=0,d=[];c<a.length;){var e=BANNS(a,c);c+=e.str.length,e.parser?(d.push(e.parser),b+="("+e.pattern+")"):b+=e.pattern}return{regexp:new RegExp("^"+b+"$"),parsers:d}}function BANparse(a,b){var c,d=[];BANpC.hasOwnProperty(a)||(BANpC[a]=BANGP(a)),c=BANpC[a].regexp,d=BANpC[a].parsers,b=b.toLowerCase();var e=c.exec(b);return e?BANdFM(e,d):null}function BANeatSC(a,b){var c=a.charAt(b);return a.charAt(b+1)===c?a.charAt(b+2)===c?a.charAt(b+3)===c?c+c+c+c:c+c+c:c+c:c}function BANeatUM(a,b){for(var c,d=a.charAt(b),e=d,f=b+1;f<a.length&&(c=a.charAt(f),e+=c,c!==d);f++);if(f===a.length)throw"Unterminated literal";return e}var BANSPF=function(){function a(){}return a.FFAP=function(a,b){switch(a.charAt(b)){case"y":return new BANY_SP(a,b);case"M":return new BANM_SP(a,b);case"d":return new BAND_SP(a,b);case"h":return new BANH_SP(a,b);case"m":return new BANMi_SP(a,b);case"s":return new BANS_SP(a,b);case"f":return new BANMil_SP(a,b);case"t":return new BANAmPmSP(a,b);case"'":case"\"":return new BANL_SP(a,b);default:return null;}},a}(),BANSP=function(){return function(a,b,c){this.str=a,this.pattern=b,this.parser=c}}(),BANI_SP=function(a){function b(b,c,d,e){a.call(this,BANeatSC(b,c),"\\d{1,"+e+"}",{type:d,parse:function(a){return parseInt(a,10)}})}return __extends(b,a),b}(BANSP),BANY_SP=function(a){function b(b,c){var d,e=BANeatSC(b,c);d=2===e.length?function(a){return BANaYR(a)}:function(a){return parseInt(a,10)},a.call(this,e,"\\d{1,4}",{type:"year",parse:d})}return __extends(b,a),b}(BANSP),BANM_SP=function(a){function b(b,c){var d=BANeatSC(b,c);a.call(this,d,1===d.length||2===d.length?"\\d{1,4}":3===d.length?BANshortMonth.join("|"):BANmonth.join("|"),{type:"month",parse:1===d.length||2===d.length?function(a){return parseInt(a,10)-1}:3===d.length?function(a){return BANshortMonth.indexOf(a)}:function(a){return BANmonth.indexOf(a)}})}return __extends(b,a),b}(BANSP),BAND_SP=function(a){function b(b,c){var d=BANeatSC(b,c);a.call(this,d,2>=d.length?"\\d{1,2}":3===d.length?BANshortDay.join("|"):BANday.join("|"),{type:2<d.length?"dayname":"day",parse:2<d.length?function(){return null}:function(a){return parseInt(a,10)}})}return __extends(b,a),b}(BANSP),BANH_SP=function(a){function b(b,c){a.call(this,b,c,"hour",2)}return __extends(b,a),b}(BANI_SP),BANMi_SP=function(a){function b(b,c){a.call(this,b,c,"minute",2)}return __extends(b,a),b}(BANI_SP),BANS_SP=function(a){function b(b,c){a.call(this,b,c,"second",2)}return __extends(b,a),b}(BANI_SP),BANMil_SP=function(a){function b(b,c){a.call(this,b,c,"millisecond",3)}return __extends(b,a),b}(BANI_SP),BANAmPmSP=function(a){function b(b,c){var d=BANeatSC(b,c),e=1===d.length?BANshortAmPm:BANamPm;a.call(this,d,e.am+"|"+e.pm,{type:"ampm",parse:function(a){return a===e.am?0:1}})}return __extends(b,a),b}(BANSP),BANL_SP=function(a){function b(b,c){var d=BANeatUM(b,c);a.call(this,d,BANrEsc(d.substring(1,d.length-1)),{type:"literal",parse:function(){return null}})}return __extends(b,a),b}(BANSP);function BANNS(a,b){var c=BANSPF.FFAP(a,b);if(c)return c;var d=a.charAt(b);return{parser:null,str:d,pattern:d}}function BANdFM(a,b){if(a.length-1!==b.length)throw"Not the correct number of parsers for match groups returned";for(var c=new Date(0,0,0,0,0,0,0),d=null,e=1;e<a.length;e++){var f=b[e-1],g=f.parse(a[e]);switch(f.type){case"year":c.setFullYear(g);break;case"month":c.setMonth(g);break;case"dayname":break;case"day":c.setDate(g);break;case"hour":c.setHours(g);break;case"minute":c.setMinutes(g);break;case"second":c.setSeconds(g);break;case"millisecond":c.setMilliseconds(g);break;case"ampm":d=0===g?"am":"pm";break;case"literal":break;default:throw"Unhandled parser format";}}if(null!=d){var h=c.getHours();"pm"===d&&12>h&&c.setHours(h+12)}return c}function BANrEsc(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}(function () {var DateFormat = "MM/dd/yyyy";var TimeFormat = "HH:mm:ss";var _TZOffset=new Date().getTimezoneOffset()*-1/60;var _B=this;var DateTime = {DateParse: function(s) {var ddres = BANparse(DateFormat,s);return DateTime.WithTZ(ddres).getTime();},TimeParse: function(s) {var dd=new Date();s = dd.format('yyyy-MM-dd') + ' ' + s;var ddres = Date.parse(s);return DateTime.WithTZ(ddres).getTime();},Date: function(n) {var ddres = DateTime.WithTZ(n);return ddres.format(DateFormat);},Time: function(n) {var ddres = DateTime.WithTZ(n);return ddres.format(TimeFormat);},GetDateFormat: function() {return DateFormat;},SetDateFormat: function(s) {DateFormat=s;},GetTimeFormat: function() {return TimeFormat;},SetTimeFormat: function(s) {TimeFormat=s;},Add: function(dd, y, m, d) {var ddres = DateTime.WithTZ(dd);var res = DateTime.InnerAdd(ddres, y, 'y');res = DateTime.InnerAdd(res, m, 'm');res = DateTime.InnerAdd(res, d, 'd');return res.getTime();},InnerAdd: function(d, c, t){c = (c === undefined) ? 0 : c;var result = null;switch(t){case 'mill':result=new Date(d.setMilliseconds(d.getMilliseconds()+c));break;case 's':result=new Date(d.setSeconds(d.getSeconds()+c));break;case 'min':result=new Date(d.setMinutes(d.getMinutes()+c));break;case 'h':result=new Date(d.setHours(d.getHours()+c));break;case 'd':result=new Date(d.setDate(d.getDate()+c));break;case 'm':result=new Date(d.setMonth(d.getMonth()+c));break;case 'y':result=new Date(d.setFullYear(d.getFullYear()+c));break;default:console.error("[timeSolver.js] Input Type Error");break;}return result;},WithTZ: function(n) {if (_TZOffset!=new Date().getTimezoneOffset()*-1/60) {var d = DateTime.InnerAdd(new Date(n),new Date(n).getTimezoneOffset()/60, 'h');d = DateTime.InnerAdd(d, _TZOffset, 'h');return d;} else {return new Date(n);}},Now: function() {return new Date().getTime();},		GetYear: function(n) {return DateTime.WithTZ(new Date(n)).getFullYear();},GetMonth: function(n) {return DateTime.WithTZ(new Date(n)).getMonth()+1;},GetDayOfMonth: function(n) {return DateTime.WithTZ(new Date(n)).getDate();},GetDayOfYear: function(n) {var t=new Date(n);var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];var mn = t.getMonth();var dn = t.getDate();var dayOfYear = dayCount[mn] + dn;var year = t.getFullYear();var isLeap=false;if((year & 3) != 0) {isLeap=false;} else {isLeap = ((year % 100) != 0 || (year % 400) == 0);}if(mn > 1 && isLeap) dayOfYear++;return dayOfYear;},GetDayOfWeek: function(n) {return DateTime.WithTZ(new Date(n)).getDay()+1;},GetHour: function(n) {return DateTime.WithTZ(new Date(n)).getHours();},GetMinute: function(n) {return DateTime.WithTZ(new Date(n)).getMinutes();},GetSecond: function(n) {return DateTime.WithTZ(new Date(n)).getSeconds();},GetTimeZoneOffsetAt: function(n) {if (_TZOffset!=new Date().getTimezoneOffset()*-1/60) {return _TZOffset;} else {return new Date(n).getTimezoneOffset()*-1/60;}},GetWeekInYear: function(n) {var onejan=new Date(n.getFullYear(), 0, 1);return Math.ceil( (((n - onejan) / 86400000) + onejan.getDay() + 1) / 7 );},GetWeekInMonth: function(n, exact) {var month = n.getMonth(), year = n.getFullYear(), firstWeekday=new Date(year, month, 1).getDay(), lastDateOfMonth=new Date(year, month + 1, 0).getDate(), offsetDate = n.getDate() + firstWeekday - 1, index = 1, weeksInMonth = index + Math.ceil((lastDateOfMonth + firstWeekday - 7) / 7), week = index + Math.floor(offsetDate / 7);if (exact || week < 2 + index) return week;return week === weeksInMonth ? index + 5 : week;},TicksPerDay: function() {return 86400000;},TicksPerHour: function() {return 3600000;},TicksPerMinute: function() {return 60000;},TicksPerSecond: function() {return 1000;},TimeZoneOffset: function() {return _TZOffset;},SetTimeZone: function(n) {_TZOffset = n;}};	if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {module.exports = DateTime;} else {if (typeof window !== 'undefined') {window.DateTime = DateTime;} else {bananoglobal.DateTime = DateTime;}}})();var dateFormat = function () {var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,timezoneClip = /[^-+\dA-Z]/g,pad = function (val, len) {val = String(val);len = len || 2;while (val.length < len) val = "0" + val;return val;};return function (date, mask, utc) {var dF = dateFormat;if (arguments.length == 1 && Object.prototype.toString.call(date) == "[object String]" && !/\d/.test(date)) {mask = date;date = undefined;}date = date ? new Date(date) : new Date;if (isNaN(date)) throw SyntaxError("invalid date");if (mask.slice(0, 4) == "UTC:") {mask = mask.slice(4);utc = true;}var	_ = utc ? "getUTC" : "get",d = date[_ + "Date"](),D = date[_ + "Day"](),m = date[_ + "Month"](),y = date[_ + "FullYear"](),H = date[_ + "Hours"](),M = date[_ + "Minutes"](),s = date[_ + "Seconds"](),L = date[_ + "Milliseconds"](),o = utc ? 0 : date.getTimezoneOffset(),DD = DateTime.GetDayOfYear(date),w = DateTime.GetWeekInYear(date),W = DateTime.GetWeekInMonth(date, true),flags = {d: d,dd: pad(d),E: dF.i18n.dayNames[D],EE: dF.i18n.dayNames[D + 7],M: m + 1,MM: pad(m + 1),MMM: dF.i18n.monthNames[m],MMMM: dF.i18n.monthNames[m + 12],yy: String(y).slice(2),yyyy: y,h: H % 12 || 12,K: pad(H % 12 || 12),H: H,HH: pad(H),m: M,mm: pad(M),s: s,ss: pad(s),S: pad(L > 99 ? Math.round(L / 10) : L),a: H < 12 ? "AM" : "PM",Z: utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),z: utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),X: utc ? "UTC" : (String(date).match(timezone) || [""]).pop().replace(timezoneClip, ""),o: (o > 0 ? "-" : "+") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),u: D,D: DD,w: w,W: W};return mask.replace(token, function ($0) {return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);});};}();dateFormat.i18n = {dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat","Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec","January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]};Date.prototype.format = function (mask, utc) {return dateFormat(this, mask, utc);};String.prototype.equalsIgnoreCase = function(otherString) {return (this.toUpperCase().localeCompare(otherString.toUpperCase())===0);};String.prototype.contains = function(otherString) {return (this.indexOf(otherString)>-1);};String.prototype.getBytes = function() {var utf8 = [];var str = this;for (var i=0; i < str.length; i++) {var charcode = str.charCodeAt(i);if (charcode < 0x80) utf8.push(charcode);else if (charcode < 0x800) {utf8.push(0xffffffc0 | (charcode >> 6), 0xffffff80 | (charcode & 0x3f));} else if (charcode < 0xd800 || charcode >= 0xe000) {utf8.push(0xffffffe0 | (charcode >> 12), 0xffffff80 | ((charcode>>6) & 0x3f), 0xffffff80 | (charcode & 0x3f));} else {utf8.push(0xef, 0xbf, 0xbd);}}return utf8;};function banano_bytesToString(array) {var str = '',i;var data = new Uint8Array(array);for (i = 0; i < data.length; i++) {var value = data[i];if (value < 0x80) {str += String.fromCharCode(value);} else if (value > 0xBF && value < 0xE0) {str += String.fromCharCode((value & 0x1F) << 6 | data[i + 1] & 0x3F);i += 1;} else if (value > 0xDF && value < 0xF0) {str += String.fromCharCode((value & 0x0F) << 12 | (data[i + 1] & 0x3F) << 6 | data[i + 2] & 0x3F);i += 2;}}return str;};function banano_getB4JKeyAt(outof, index) {var getkeyatkeycounter=0;for (var getkeyatkey in outof) {if (outof.hasOwnProperty(getkeyatkey)) {if (getkeyatkeycounter==index) {return getkeyatkey;}getkeyatkeycounter++;}}return '';};function banano_getB4JValueAt(outof, index) {var getkeyatkeycounter=0;for (var getkeyatkey in outof) {if (outof.hasOwnProperty(getkeyatkey)) {if (getkeyatkeycounter==index) {return outof[getkeyatkey];}getkeyatkeycounter++;}}return '';};function StringBuilder() {this.strings = new Array("");};StringBuilder.prototype.init = function () {var _B=this;_B.strings = new Array("");};StringBuilder.prototype.append = function (value) {var _B=this;if (value) {this.strings.push(value);}return _B;};StringBuilder.prototype.insert = function (offset, value) {var _B=this;var str = this.strings.join("");this.strings = new Array("");this.strings.push([str.slice(0, offset), value, str.slice(offset)].join(''));return _B;};StringBuilder.prototype.remove = function (startoffset, endoffset) {var _B=this;var str = this.strings.join("");this.strings = new Array("");this.strings.push([str.slice(0, startoffset), str.slice(endoffset)].join(''));return _B;};StringBuilder.prototype.length = function() {return this.strings.join("").length;};StringBuilder.prototype.toString = function () {return this.strings.join("");};function Param(obj, headers) {if (typeof (obj) === 'string' || Object.prototype.toString.call(obj) === '[object FormData]') return obj;if (/application\/json/i.test(headers['Content-type']) || Object.prototype.toString.call(obj) === '[object Array]') return JSON.stringify(obj);var encoded = [];for (var prop in obj) {if (obj.hasOwnProperty(prop)) {encoded.push(encodeURIComponent(prop) + '=' + encodeURIComponent(obj[prop]));}}return encoded.join('&');};function banano_sf(_text,_onlynbsp){var _B=this;try {var _s=new StringBuilder();var _v='' + _text;if (_onlynbsp) {_v = _v.split("{NBSP}").join(" ");} else {_v = _v.split("(\r\n|\n\r|\r|\n)").join("<br>");_v = _v.split("{B}").join("<b>");_v = _v.split("{/B}").join("</b>");_v = _v.split("{I}").join("<i>");_v = _v.split("{/I}").join("</i>");_v = _v.split("{U}").join("<ins>");_v = _v.split("{/U}").join("</ins>");_v = _v.split("{SUB}").join("<sub>");_v = _v.split("{/SUB}").join("</sub>");_v = _v.split("{SUP}").join("<sup>");_v = _v.split("{/SUP}").join("</sup>");_v = _v.split("{BR}").join("<br>");_v = _v.split("{WBR}").join("<wbr>");_v = _v.split("{NBSP}").join("&nbsp;");_v = _v.split("{AL}").join("<a rel=\"nofollow\" target=\"_blank\" href=\"");_v = _v.split("{AT}").join("\">");_v = _v.split("{/AL}").join("</a>");_v = _v.split("{AS}").join(" title=\"");_v = _v.split("{/AS}").join("\"");while (_v.indexOf("{C:")>-1) {_v = _B.replacefirst(_v,"{C:","<span style=\"color:");_v = _B.replacefirst(_v,"}","\">");_v = _B.replacefirst(_v,"{/C}","</span>");}_v = _v.split("{CODE}").join("<pre><code>");_v = _v.split("{/CODE}").join("</code></pre>");while (_v.indexOf("{ST:")>-1) {_v = _B.replacefirst(_v,"{ST:","<span style=\"");_v = _B.replacefirst(_v,"}","\">");_v = _B.replacefirst(_v,"{/ST}","</span>");}var _start=_v.indexOf("{IC:");while (_start>-1) {var _stop=_v.indexOf("{/IC}");var _vv="";if (_stop>0) {_vv = _v.substring(_start,_stop+5);} else {break;}var _iconcolor=_vv.substring(4,11);var _iconname=_vv.substring(12,_vv.length-5);var _repl="";switch (_iconname.substring(0,3).toLowerCase()) {case "mdi":_repl = "<i style=\"color: "+_iconcolor+"\" class=\""+_iconname+"\"></i>";break;case "fa ":_repl = "<i style=\"color: "+_iconcolor+"\" class=\""+_iconname+"\"></i>";break;case "fa-":_repl = "<i style=\"color: "+_iconcolor+"\" class=\""+_iconname+"\"></i>";break;default:_repl = "<i style=\"color: "+_iconcolor+"\" class=\"material-icons\">"+_iconname+"</i>";break;}_v = _v.split(_vv).join(_repl);_start = _v.indexOf("{IC:");}}_s.append(_v);return _s.toString();}catch(err) {}};function replacefirst(_s,_searchfor,_replacewith){try {var _i=_s.indexOf(_searchfor);if (_i>-1) {return _s.substring(0,_i)+_replacewith+_s.substring(_i+_searchfor.length);} else {return _s;}}catch(err) {}};var _banano_bvmdemo=new banano_bvmdemo();var _banano_bvmdemo_modautocomplete=new banano_bvmdemo_modautocomplete();var _banano_bvmdemo_moddialog=new banano_bvmdemo_moddialog();var _banano_bvmdemo_modemptystate=new banano_bvmdemo_modemptystate();var _banano_bvmdemo_modfile=new banano_bvmdemo_modfile();var _banano_bvmdemo_modgijgotable=new banano_bvmdemo_modgijgotable();var _banano_bvmdemo_modgmap=new banano_bvmdemo_modgmap();var _banano_bvmdemo_modicon=new banano_bvmdemo_modicon();var _banano_bvmdemo_modinfobox=new banano_bvmdemo_modinfobox();var _banano_bvmdemo_modlist=new banano_bvmdemo_modlist();var _banano_bvmdemo_modlistview=new banano_bvmdemo_modlistview();var _banano_bvmdemo_modmenu=new banano_bvmdemo_modmenu();var _banano_bvmdemo_modavatar=new banano_bvmdemo_modavatar();var _banano_bvmdemo_modprogress=new banano_bvmdemo_modprogress();var _banano_bvmdemo_modradio=new banano_bvmdemo_modradio();var _banano_bvmdemo_modselect=new banano_bvmdemo_modselect();var _banano_bvmdemo_modskeleton=new banano_bvmdemo_modskeleton();var _banano_bvmdemo_modsnackbar=new banano_bvmdemo_modsnackbar();var _banano_bvmdemo_modspeeddial=new banano_bvmdemo_modspeeddial();var _banano_bvmdemo_modspinner=new banano_bvmdemo_modspinner();var _banano_bvmdemo_modsteppers=new banano_bvmdemo_modsteppers();var _banano_bvmdemo_modswitch=new banano_bvmdemo_modswitch();var _banano_bvmdemo_modtable=new banano_bvmdemo_modtable();var _banano_bvmdemo_modbadge=new banano_bvmdemo_modbadge();var _banano_bvmdemo_modtabs=new banano_bvmdemo_modtabs();var _banano_bvmdemo_modtextarea=new banano_bvmdemo_modtextarea();var _banano_bvmdemo_modtextbox=new banano_bvmdemo_modtextbox();var _banano_bvmdemo_modtimepicker=new banano_bvmdemo_modtimepicker();var _banano_bvmdemo_modtoolbar=new banano_bvmdemo_modtoolbar();var _banano_bvmdemo_modtypography=new banano_bvmdemo_modtypography();var _banano_bvmdemo_pgindex=new banano_bvmdemo_pgindex();var _banano_bvmdemo_modbottombar=new banano_bvmdemo_modbottombar();var _banano_bvmdemo_modbuttons=new banano_bvmdemo_modbuttons();var _banano_bvmdemo_modchartkick=new banano_bvmdemo_modchartkick();var _banano_bvmdemo_modcheckbox=new banano_bvmdemo_modcheckbox();var _banano_bvmdemo_modchips=new banano_bvmdemo_modchips();var _banano_bvmdemo_moddatepicker=new banano_bvmdemo_moddatepicker();

/* bananovuematerial */
/* =========================== BANanoAlaSQL  =========================== */
function banano_bananovuematerial_bananoalasql() {
var _B=this;
_B._db_bool="BOOL";

_B._db_int="INT";

_B._db_string="STRING";

_B._db_real="REAL";

_B._db_date="DATE";

_B._db_blob="BLOB";

_B._db_float="FLOAT";

_B._db_integer="INTEGER";

_B._db_text="TEXT";

_B._rectype={};

_B._schema={};

// [20] Public Sub Initialize() As BANanoAlaSQL 
_B.initialize=function() {
// [21]  recType.Initialize 
_B._rectype={};
// [22]  Schema.Initialize 
_B._schema={};
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub Update(tblName As String, priKey As String, priValue As String, tblfields As Map) As AlaSQLResultSet 
_B.update=function(_tblname,_prikey,_privalue,_tblfields) {
var _tblwhere;
// [27]  Dim tblWhere As Map = CreateMap() 
_tblwhere={};
// [28]  tblWhere.Put(priKey, priValue) 
_tblwhere[_prikey]=_privalue;
// [29]  Return UpdateWhere(tblName, tblfields, tblWhere, Null) 
return _B.updatewhere(_tblname,_tblfields,_tblwhere,null,_B);
// End Sub
};

// [33] Sub SchemaClear As BANanoAlaSQL 
_B.schemaclear=function() {
// [34]  Schema.clear 
_B._schema={};
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub SchemaAddBoolean(bools As List) As BANanoAlaSQL 
_B.schemaaddboolean=function(_bools) {
var _b;
// [40]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [41]  Schema.Put(b, DB_BOOL) 
_B._schema[_b]=_B._db_bool;
// [42]  Next 
}
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SchemaAddInt(bools As List) As BANanoAlaSQL 
_B.schemaaddint=function(_bools) {
var _b;
// [47]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [48]  Schema.Put(b, DB_INT) 
_B._schema[_b]=_B._db_int;
// [49]  Next 
}
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SchemaAddFloat(bools As List) As BANanoAlaSQL 
_B.schemaaddfloat=function(_bools) {
var _b;
// [54]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [55]  Schema.Put(b, DB_FLOAT) 
_B._schema[_b]=_B._db_float;
// [56]  Next 
}
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SchemaAddBlob(bools As List) As BANanoAlaSQL 
_B.schemaaddblob=function(_bools) {
var _b;
// [61]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [62]  Schema.Put(b, DB_BLOB) 
_B._schema[_b]=_B._db_blob;
// [63]  Next 
}
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SchemaAddText(bools As List) As BANanoAlaSQL 
_B.schemaaddtext=function(_bools) {
var _b;
// [68]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [69]  Schema.Put(b, DB_TEXT) 
_B._schema[_b]=_B._db_text;
// [70]  Next 
}
// [71]  Return Me 
return _B;
// End Sub
};

// [74] Sub SchemaAddDate(bools As List) As BANanoAlaSQL 
_B.schemaadddate=function(_bools) {
var _b;
// [75]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [76]  Schema.Put(b, DB_DATE) 
_B._schema[_b]=_B._db_date;
// [77]  Next 
}
// [78]  Return Me 
return _B;
// End Sub
};

// [81] Sub ResetTypes As BANanoAlaSQL 
_B.resettypes=function() {
// [82]  recType.Initialize 
_B._rectype={};
// [83]  Return Me 
return _B;
// End Sub
};

// [86] Sub GetNextID(fld As String, rsl As List) As String 
_B.getnextid=function(_fld,_rsl) {
var _nextid,_strid,_nr,_ni;
// [87]  Dim nextid As Int 
_nextid=0;
// [88]  Dim strid As String 
_strid="";
// [90]  If rsl.Size = 0 Then 
if (_rsl.length==0) {
// [91]  nextid = 0 
_nextid=0;
// [92]  Else 
} else {
// [93]  Dim nr As Map = rsl.Get(0) 
_nr=_rsl[0];
// [94]  Dim ni As String = nr.Getdefault(fld, {25} ) 
_ni=(_nr[_fld] || "0");
// [95]  nextid = BANano.parseInt(ni) 
_nextid=parseInt(_ni);
// [96]  End If 
}
// [97]  nextid = nextid + 1 
_nextid=_nextid+1;
// [98]  strid = CStr(nextid) 
_strid=_B.cstr(_nextid,_B);
// [99]  Return strid 
return _strid;
// End Sub
};

// [104] Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [105]  Return {26} & o 
return ""+_o;
// End Sub
};

// [110] Sub AddStrings(fieldNames As List) As BANanoAlaSQL 
_B.addstrings=function(_fieldnames) {
var _strfld;
// [111]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [112]  recType.Put(strfld, {27} ) 
_B._rectype[_strfld]="STRING";
// [113]  Next 
}
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub AddIntegers(fieldNames As List) As BANanoAlaSQL 
_B.addintegers=function(_fieldnames) {
var _strfld;
// [119]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [120]  recType.Put(strfld, {28} ) 
_B._rectype[_strfld]="INT";
// [121]  Next 
}
// [122]  Return Me 
return _B;
// End Sub
};

// [126] Sub AddDoubles(fieldNames As List) As BANanoAlaSQL 
_B.adddoubles=function(_fieldnames) {
var _strfld;
// [127]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [128]  recType.Put(strfld, {29} ) 
_B._rectype[_strfld]="DOUBLE";
// [129]  Next 
}
// [130]  Return Me 
return _B;
// End Sub
};

// [134] Sub AddBooleans(fieldNames As List) As BANanoAlaSQL 
_B.addbooleans=function(_fieldnames) {
var _strfld;
// [135]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [136]  recType.Put(strfld, {30} ) 
_B._rectype[_strfld]="BOOL";
// [137]  Next 
}
// [138]  Return Me 
return _B;
// End Sub
};

// [142] Sub AddBlobs(fieldNames As List) As BANanoAlaSQL 
_B.addblobs=function(_fieldnames) {
var _strfld;
// [143]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [144]  recType.Put(strfld, {31} ) 
_B._rectype[_strfld]="BLOB";
// [145]  Next 
}
// [146]  Return Me 
return _B;
// End Sub
};

// [150] private Sub GetMapValues(sourceMap As Map) As List 
_B.getmapvalues=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [151]  Dim listOfValues As List 
_listofvalues=[];
// [152]  listOfValues.Initialize 
_listofvalues.length=0;
// [153]  Dim iCnt As Int 
_icnt=0;
// [154]  Dim iTot As Int 
_itot=0;
// [155]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [156]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [157]  Dim value As String = sourceMap.GetValueAt(iCnt) 
_value=banano_getB4JValueAt(_sourcemap,_icnt);
// [158]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [159]  Next 
}
// [160]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [164] private Sub JoinFields(delimiter As String, lst As List) As String 
_B.joinfields=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [165]  Dim i As Int 
_i=0;
// [166]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [167]  Dim fld As String 
_fld="";
// [168]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [169]  fld = lst.Get(0) 
_fld=_lst[0];
// [170]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [171]  sb.Append(fld) 
_sb.append(_fld);
// [172]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [173]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [174]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [175]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [176]  Next 
}
// [177]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [181] private Sub GetMapKeys(sourceMap As Map) As List 
_B.getmapkeys=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [182]  Dim listOfValues As List 
_listofvalues=[];
// [183]  listOfValues.Initialize 
_listofvalues.length=0;
// [184]  Dim iCnt As Int 
_icnt=0;
// [185]  Dim iTot As Int 
_itot=0;
// [186]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [187]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [188]  Dim value As String = sourceMap.GetKeyAt(iCnt) 
_value=banano_getB4JKeyAt(_sourcemap,_icnt);
// [189]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [190]  Next 
}
// [191]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [195] Sub Json2Map(strJSON As String) As Map 
_B.json2map=function(_strjson) {
var _json,_map1;
// [196]  Dim json As BANanoJSONParser 
_json={};
// [197]  Dim Map1 As Map 
_map1={};
// [198]  Map1.Initialize 
_map1={};
// [199]  Map1.clear 
_map1={};
// [200]  Try 
try {
// [201]  If strJSON.length > 0 Then 
if (_strjson.length>0) {
// [202]  json.Initialize(strJSON) 
_json=JSON.parse(_strjson);
// [203]  Map1 = json.NextObject 
_map1=_json;
// [204]  End If 
}
// [205]  Return Map1 
return _map1;
// [206]  Catch 
} catch(err) {
// [207]  Return Map1 
return _map1;
// [208]  End Try 
}
// End Sub
};

// [212] Sub Delete(tblName As String, primaryKey As String, primaryValue As String) As AlaSQLResultSet 
_B.delete=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_qry;
// [213]  Dim qw As Map = CreateMap() 
_qw={};
// [214]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [215]  Dim qry As AlaSQLResultSet = DeleteWhere(tblName, qw, Array( {32} )) 
_qry=_B.deletewhere(_tblname,_qw,["="],_B);
// [216]  Return qry 
return _qry;
// End Sub
};

// [220] Private Sub EscapeField(f As String) As String 
_B.escapefield=function(_f) {
// [221]  Return {0} 
return "[" + _f + "]";
// End Sub
};

// [224] Sub SchemaCreateTable(tblName As String, PK As String) As AlaSQLResultSet 
_B.schemacreatetable=function(_tblname,_pk) {
// [225]  Return CreateTable(tblName, Schema, PK) 
return _B.createtable(_tblname,_B._schema,_pk,_B);
// End Sub
};

// [229] public Sub CreateTable(tblName As String, tblFields As Map, PK As String) As AlaSQLResultSet 
_B.createtable=function(_tblname,_tblfields,_pk) {
var _fldname,_fldtype,_fldtot,_fldcnt,_sb,_query,_m;
// [230]  Dim fldName As String 
_fldname="";
// [231]  Dim fldType As String 
_fldtype="";
// [232]  Dim fldTot As Int 
_fldtot=0;
// [233]  Dim fldCnt As Int 
_fldcnt=0;
// [234]  fldTot = tblFields.Size - 1 
_fldtot=Object.keys(_tblfields).length-1;
// [235]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [236]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [237]  sb.Append( {33} ) 
_sb.append("(");
// [238]  For fldCnt = 0 To fldTot 
for (_fldcnt=0;_fldcnt<=_fldtot;_fldcnt++) {
// [239]  fldName = tblFields.GetKeyAt(fldCnt) 
_fldname=banano_getB4JKeyAt(_tblfields,_fldcnt);
// [240]  fldType = tblFields.Get(fldName) 
_fldtype=_tblfields[_fldname];
// [241]  If fldCnt > 0 Then 
if (_fldcnt>0) {
// [242]  sb.Append( {34} ) 
_sb.append(", ");
// [243]  End If 
}
// [244]  sb.Append(EscapeField(fldName)) 
_sb.append(_B.escapefield(_fldname,_B));
// [245]  sb.Append( {35} ) 
_sb.append(" ");
// [246]  sb.Append(fldType) 
_sb.append(_fldtype);
// [247]  If fldName.EqualsIgnoreCase(PK) Then 
if (_fldname.equalsIgnoreCase(_pk)) {
// [248]  sb.Append( {36} ) 
_sb.append(" PRIMARY KEY");
// [249]  End If 
}
// [250]  Next 
}
// [251]  sb.Append( {37} ) 
_sb.append(")");
// [253]  Dim query As String = {38} & EscapeField(tblName) & {39} & sb.ToString 
_query="CREATE TABLE IF NOT EXISTS "+_B.escapefield(_tblname,_B)+" "+_sb.toString();
// [254]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [255]  m.Initialize 
_m.initialize();
// [256]  m.query = query 
_m._query=_query;
// [257]  m.args = Null 
_m._args=null;
// [258]  m.types = Null 
_m._types=null;
// [259]  m.command = {40} 
_m._command="createtable";
// [260]  m.response = {41} 
_m._response="";
// [261]  m.error = {42} 
_m._error="";
// [262]  m.result = Array() 
_m._result=[];
// [263]  m.json = {43} 
_m._json="";
// [264]  m.affectedRows = 0 
_m._affectedrows=0;
// [265]  Return m 
return _m;
// End Sub
};

// [269] Sub InsertList(tblname As String) As AlaSQLResultSet 
_B.insertlist=function(_tblname) {
var _ssql,_m;
// [270]  Dim sSQL As String = {1} 
_ssql="SELECT * INTO [" + _tblname + "] FROM ?";
// [271]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [272]  m.Initialize 
_m.initialize();
// [273]  m.query = sSQL 
_m._query=_ssql;
// [274]  m.args = Null 
_m._args=null;
// [275]  m.types = Null 
_m._types=null;
// [276]  m.command = {44} 
_m._command="insert";
// [277]  m.response = {45} 
_m._response="";
// [278]  m.error = {46} 
_m._error="";
// [279]  m.result = Array() 
_m._result=[];
// [280]  m.json = {47} 
_m._json="";
// [281]  m.affectedRows = 0 
_m._affectedrows=0;
// [282]  Return m 
return _m;
// End Sub
};

// [286] Sub GetMax(tblName As String, fldName As String) As AlaSQLResultSet 
_B.getmax=function(_tblname,_fldname) {
var _sb,_m;
// [287]  Dim sb As String = {2} 
_sb="SELECT MAX(" + _fldname + ") As " + _fldname + " FROM " + _B.escapefield(_tblname,_B) + "";
// [288]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [289]  m.Initialize 
_m.initialize();
// [290]  m.query = sb 
_m._query=_sb;
// [291]  m.args = Null 
_m._args=null;
// [292]  m.types = Null 
_m._types=null;
// [293]  m.command = {48} 
_m._command="getmax";
// [294]  m.response = {49} 
_m._response="";
// [295]  m.error = {50} 
_m._error="";
// [296]  m.result = Array() 
_m._result=[];
// [297]  m.json = {51} 
_m._json="";
// [298]  m.affectedRows = 0 
_m._affectedrows=0;
// [299]  Return m 
return _m;
// End Sub
};

// [303] public Sub DropTable(tblName As String) As AlaSQLResultSet 
_B.droptable=function(_tblname) {
var _query,_m;
// [305]  Dim query As String = {52} & EscapeField(tblName) 
_query="DROP TABLE "+_B.escapefield(_tblname,_B);
// [306]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [307]  m.Initialize 
_m.initialize();
// [308]  m.query = query 
_m._query=_query;
// [309]  m.args = Null 
_m._args=null;
// [310]  m.types = Null 
_m._types=null;
// [311]  m.response = {53} 
_m._response="";
// [312]  m.error = {54} 
_m._error="";
// [313]  m.command = {55} 
_m._command="droptable";
// [314]  m.result = Array() 
_m._result=[];
// [315]  m.json = {56} 
_m._json="";
// [316]  m.affectedRows = 0 
_m._affectedrows=0;
// [317]  Return m 
return _m;
// End Sub
};

// [320] Sub Execute(strSQL As String) As AlaSQLResultSet 
_B.execute=function(_strsql) {
var _m;
// [321]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [322]  m.Initialize 
_m.initialize();
// [323]  m.query = strSQL 
_m._query=_strsql;
// [324]  m.args = Null 
_m._args=null;
// [325]  m.types = Null 
_m._types=null;
// [326]  m.command = {57} 
_m._command="execute";
// [327]  m.response = {58} 
_m._response="";
// [328]  m.error = {59} 
_m._error="";
// [329]  m.result = Array() 
_m._result=[];
// [330]  m.json = {60} 
_m._json="";
// [331]  m.affectedRows = 0 
_m._affectedrows=0;
// [332]  Return m 
return _m;
// End Sub
};

// [336] Sub Insert(tblName As String, tblFields As Map) As AlaSQLResultSet 
_B.insert=function(_tblname,_tblfields) {
var _sb,_columns,_values,_listofvalues,_listoftypes,_icnt,_itot,_col,_m;
// [337]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [338]  Dim columns As StringBuilder 
_columns=new StringBuilder();
// [339]  Dim values As StringBuilder 
_values=new StringBuilder();
// [340]  Dim listOfValues As List = GetMapValues(tblFields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [341]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [342]  Dim iCnt As Int 
_icnt=0;
// [343]  Dim iTot As Int 
_itot=0;
// [344]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [345]  columns.Initialize 
_columns.init();
_columns.isinitialized=true;
// [346]  values.Initialize 
_values.init();
_values.isinitialized=true;
// [347]  sb.Append( {3} ) 
_sb.append("INSERT INTO " + _B.escapefield(_tblname,_B) + " (");
// [348]  iTot = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [349]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [350]  Dim col As String = tblFields.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_tblfields,_icnt);
// [351]  If iCnt > 0 Then 
if (_icnt>0) {
// [352]  columns.Append( {61} ) 
_columns.append(", ");
// [353]  values.Append( {62} ) 
_values.append(", ");
// [354]  End If 
}
// [355]  columns.Append(EscapeField(col)) 
_columns.append(_B.escapefield(_col,_B));
// [356]  values.Append( {63} ) 
_values.append("?");
// [357]  Next 
}
// [358]  sb.Append(columns.ToString) 
_sb.append(_columns.toString());
// [359]  sb.Append( {64} ) 
_sb.append(") VALUES (");
// [360]  sb.Append(values.ToString) 
_sb.append(_values.toString());
// [361]  sb.Append( {65} ) 
_sb.append(")");
// [362]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [363]  m.Initialize 
_m.initialize();
// [364]  m.query = sb.ToString 
_m._query=_sb.toString();
// [365]  m.args = listOfValues 
_m._args=_listofvalues;
// [366]  m.types = listOfTypes 
_m._types=_listoftypes;
// [367]  m.command = {66} 
_m._command="insert";
// [368]  m.response = {67} 
_m._response="";
// [369]  m.error = {68} 
_m._error="";
// [370]  m.result = Array() 
_m._result=[];
// [371]  m.json = {69} 
_m._json="";
// [372]  m.affectedRows = 0 
_m._affectedrows=0;
// [373]  Return m 
return _m;
// End Sub
};

// [378] private Sub GetMapTypes(sourceMap As Map) As List 
_B.getmaptypes=function(_sourcemap) {
var _listoftypes,_icnt,_itot,_col,_coltype;
// [379]  Dim listOfTypes As List 
_listoftypes=[];
// [380]  listOfTypes.Initialize 
_listoftypes.length=0;
// [381]  Dim iCnt As Int 
_icnt=0;
// [382]  Dim iTot As Int 
_itot=0;
// [383]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [384]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [385]  Dim col As String = sourceMap.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_sourcemap,_icnt);
// [386]  Dim colType As String = recType.GetDefault(col, {70} ) 
_coltype=(_B._rectype[_col] || "STRING");
// [387]  Select Case colType 
switch ("" + _coltype) {
// [388]  Case {71} , {72} , {73} , {74} 
case "" + "VARCHAR(20)":
case "" + "VARCHAR(10)":
case "" + "VARCHAR(30)":
case "" + "VARCHAR(40)":
// [389]  listOfTypes.add( {75} ) 
_listoftypes.push("s");
// [390]  Case {76} , {77} , {78} 
break;
case "" + "VARCHAR(50)":
case "" + "VARCHAR(100)":
case "" + "VARCHAR(255)":
// [391]  listOfTypes.add( {79} ) 
_listoftypes.push("s");
// [392]  Case {80} , {81} , {82} , {83} , {84} , {85} 
break;
case "" + "STRING":
case "" + "VARCHAR":
case "" + "TEXT":
case "" + "DATE":
case "" + "DATETIME":
case "" + "NVARCHAR":
// [393]  listOfTypes.add( {86} ) 
_listoftypes.push("s");
// [394]  Case {87} , {88} , {89} , {90} 
break;
case "" + "INTEGER":
case "" + "INT":
case "" + "BOOL":
case "" + "BOOLEAN":
// [395]  listOfTypes.add( {91} ) 
_listoftypes.push("i");
// [396]  Case {92} 
break;
case "" + "BLOB":
// [397]  listOfTypes.add( {93} ) 
_listoftypes.push("b");
// [398]  Case {94} , {95} , {96} 
break;
case "" + "REAL":
case "" + "FLOAT":
case "" + "DOUBLE":
// [399]  listOfTypes.add( {97} ) 
_listoftypes.push("d");
// [400]  Case Else 
break;
default:
// [401]  listOfTypes.add( {98} ) 
_listoftypes.push("s");
// [402]  End Select 
break;
}
// [403]  Next 
}
// [404]  Return listOfTypes 
return _listoftypes;
// End Sub
};

// [408] Sub EQOperators(sm As Map) As List 
_B.eqoperators=function(_sm) {
var _nl,_k;
// [409]  Dim nl As List 
_nl=[];
// [410]  nl.initialize 
_nl.length=0;
// [411]  For Each k As String In sm.Keys 
var _kKeys = Object.keys(_sm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [412]  nl.Add( {99} ) 
_nl.push("=");
// [413]  Next 
}
// [414]  Return nl 
return _nl;
// End Sub
};

// [419] Sub UpdateWhere(tblName As String, tblfields As Map, tblWhere As Map, operators As List) As AlaSQLResultSet 
_B.updatewhere=function(_tblname,_tblfields,_tblwhere,_operators) {
var _listoftypes,_listoftypes1,_listofvalues,_listofvalues1,_sb,_i,_itot,_col,_iwhere,_opr,_m;
// [420]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [421]  Dim listOfTypes As List = GetMapTypes(tblfields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [422]  Dim listOfTypes1 As List = GetMapTypes(tblWhere) 
_listoftypes1=_B.getmaptypes(_tblwhere,_B);
// [423]  listOfTypes.AddAll(listOfTypes1) 
_listoftypes.splice(_listoftypes.length,0,..._listoftypes1);
// [424]  Dim listOfValues As List = GetMapValues(tblfields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [425]  Dim listOfValues1 As List = GetMapValues(tblWhere) 
_listofvalues1=_B.getmapvalues(_tblwhere,_B);
// [426]  listOfValues.AddAll(listOfValues1) 
_listofvalues.splice(_listofvalues.length,0,..._listofvalues1);
// [427]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [428]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [429]  sb.Append( {4} ) 
_sb.append("UPDATE " + _B.escapefield(_tblname,_B) + " SET ");
// [430]  Dim i As Int 
_i=0;
// [431]  Dim iTot As Int = tblfields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [432]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [433]  Dim col As String = tblfields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [434]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [435]  If i <> iTot Then 
if (_i!=_itot) {
// [436]  sb.Append( {100} ) 
_sb.append("= ?,");
// [437]  Else 
} else {
// [438]  sb.Append( {101} ) 
_sb.append("= ?");
// [439]  End If 
}
// [440]  Next 
}
// [441]  sb.Append( {5} ) 
_sb.append(" WHERE ");
// [442]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [443]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [444]  If i > 0 Then 
if (_i>0) {
// [445]  sb.Append( {102} ) 
_sb.append(" AND ");
// [446]  End If 
}
// [447]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [448]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [449]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [450]  sb.Append( {6} ) 
_sb.append(" " + _opr + " ?");
// [451]  Next 
}
// [452]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [453]  m.Initialize 
_m.initialize();
// [454]  m.query = sb.tostring 
_m._query=_sb.toString();
// [455]  m.args = listOfValues 
_m._args=_listofvalues;
// [456]  m.types = listOfTypes 
_m._types=_listoftypes;
// [457]  m.command = {103} 
_m._command="update";
// [458]  m.response = {104} 
_m._response="";
// [459]  m.error = {105} 
_m._error="";
// [460]  m.result = Array() 
_m._result=[];
// [461]  m.json = {106} 
_m._json="";
// [462]  m.affectedRows = 0 
_m._affectedrows=0;
// [463]  Return m 
return _m;
// End Sub
};

// [467] Sub DeleteWhere(tblName As String, tblWhere As Map, operators As List) As AlaSQLResultSet 
_B.deletewhere=function(_tblname,_tblwhere,_operators) {
var _listoftypes,_listofvalues,_sb,_i,_iwhere,_col,_opr,_m;
// [468]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [469]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [470]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [471]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [472]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [473]  sb.Append( {7} ) 
_sb.append("DELETE FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [474]  Dim i As Int 
_i=0;
// [475]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [476]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [477]  If i > 0 Then 
if (_i>0) {
// [478]  sb.Append( {107} ) 
_sb.append(" AND ");
// [479]  End If 
}
// [480]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [481]  sb.Append(col) 
_sb.append(_col);
// [482]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [483]  sb.Append( {8} ) 
_sb.append(" " + _opr + " ?");
// [484]  Next 
}
// [485]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [486]  m.Initialize 
_m.initialize();
// [487]  m.query = sb.tostring 
_m._query=_sb.toString();
// [488]  m.args = listOfValues 
_m._args=_listofvalues;
// [489]  m.types = listOfTypes 
_m._types=_listoftypes;
// [490]  m.command = {108} 
_m._command="delete";
// [491]  m.response = {109} 
_m._response="";
// [492]  m.error = {110} 
_m._error="";
// [493]  m.result = Array() 
_m._result=[];
// [494]  m.json = {111} 
_m._json="";
// [495]  m.affectedRows = 0 
_m._affectedrows=0;
// [496]  Return m 
return _m;
// End Sub
};

// [501] Sub DeleteAll(tblName As String) As AlaSQLResultSet 
_B.deleteall=function(_tblname) {
var _sb,_m;
// [502]  Dim sb As String = {9} 
_sb="DELETE FROM " + _B.escapefield(_tblname,_B) + " WHERE 1=1";
// [503]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [504]  m.Initialize 
_m.initialize();
// [505]  m.query = sb 
_m._query=_sb;
// [506]  m.args = Null 
_m._args=null;
// [507]  m.types = Null 
_m._types=null;
// [508]  m.command = {112} 
_m._command="delete";
// [509]  m.response = {113} 
_m._response="";
// [510]  m.error = {114} 
_m._error="";
// [511]  m.result = Array() 
_m._result=[];
// [512]  m.json = {115} 
_m._json="";
// [513]  m.affectedRows = 0 
_m._affectedrows=0;
// [514]  Return m 
return _m;
// End Sub
};

// [519] Sub Map2Json(mp As Map) As String 
_B.map2json=function(_mp) {
var _json;
// [520]  Dim JSON As BANanoJSONGenerator 
_json={};
// [521]  JSON.Initialize(mp) 
_json=_mp;
// [522]  Return JSON.ToString 
return JSON.stringify(_json);
// End Sub
};

// [526] Sub List2Json(mp As List) As String 
_B.list2json=function(_mp) {
var _json;
// [527]  Dim JSON As BANanoJSONGenerator 
_json={};
// [528]  JSON.Initialize2(mp) 
_json=_mp;
// [529]  Return JSON.ToString 
return JSON.stringify(_json);
// End Sub
};

// [533] Sub Json2List(strValue As String) As List 
_B.json2list=function(_strvalue) {
var _lst,_parser;
// [534]  Dim lst As List 
_lst=[];
// [535]  lst.Initialize 
_lst.length=0;
// [536]  lst.clear 
_lst.length=0;
// [537]  If strValue.Length = 0 Then 
if (_strvalue.length==0) {
// [538]  Return lst 
return _lst;
// [539]  End If 
}
// [540]  Try 
try {
// [541]  Dim parser As BANanoJSONParser 
_parser={};
// [542]  parser.Initialize(strValue) 
_parser=JSON.parse(_strvalue);
// [543]  Return parser.NextArray 
return _parser;
// [544]  Catch 
} catch(err) {
// [545]  Return lst 
return _lst;
// [546]  End Try 
}
// End Sub
};

// [551] Sub UpdateAll(tblName As String, tblFields As Map, operators As List) As AlaSQLResultSet 
_B.updateall=function(_tblname,_tblfields,_operators) {
var _listoftypes,_args,_sb,_i,_itot,_oper,_col,_m;
// [552]  If operators = Null Then operators = EQOperators(tblFields) 
if (_operators==null) {_operators=_B.eqoperators(_tblfields,_B);}
// [553]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [554]  Dim args As List = GetMapValues(tblFields) 
_args=_B.getmapvalues(_tblfields,_B);
// [555]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [556]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [557]  sb.Append( {10} ) 
_sb.append("UPDATE " + _B.escapefield(_tblname,_B) + " SET ");
// [558]  Dim i As Int 
_i=0;
// [559]  Dim iTot As Int = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [560]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [561]  Dim oper As String = operators.Get(i) 
_oper=_operators[_i];
// [562]  Dim col As String = tblFields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [563]  sb.Append(col) 
_sb.append(_col);
// [564]  If i <> iTot Then 
if (_i!=_itot) {
// [565]  sb.Append( {116} ) 
_sb.append(" = ?,");
// [566]  Else 
} else {
// [567]  sb.Append( {11} ) 
_sb.append(" " + _oper + " ?");
// [568]  End If 
}
// [569]  Next 
}
// [570]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [571]  m.Initialize 
_m.initialize();
// [572]  m.query = sb.tostring 
_m._query=_sb.toString();
// [573]  m.args = args 
_m._args=_args;
// [574]  m.types = listOfTypes 
_m._types=_listoftypes;
// [575]  m.command = {117} 
_m._command="update";
// [576]  m.response = {118} 
_m._response="";
// [577]  m.error = {119} 
_m._error="";
// [578]  m.result = Array() 
_m._result=[];
// [579]  m.json = {120} 
_m._json="";
// [580]  m.affectedRows = 0 
_m._affectedrows=0;
// [581]  Return m 
return _m;
// End Sub
};

// [585] Sub Read(tblName As String, primaryKey As String, primaryValue As String) As AlaSQLResultSet 
_B.read=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_qry;
// [586]  Dim qw As Map = CreateMap() 
_qw={};
// [587]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [588]  Dim qry As AlaSQLResultSet = SelectWhere(tblName, Array( {121} ), qw, Array( {122} ), Array(primaryKey)) 
_qry=_B.selectwhere(_tblname,["*"],_qw,["="],[_primarykey],_B);
// [589]  Return qry 
return _qry;
// End Sub
};

// [594] Sub Exists(tblName As String, primaryKey As String, primaryValue As String) As AlaSQLResultSet 
_B.exists=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_qry;
// [595]  Dim qw As Map = CreateMap() 
_qw={};
// [596]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [597]  Dim qry As AlaSQLResultSet = SelectWhere(tblName, Array(primaryKey), qw, Array( {123} ), Array(primaryKey)) 
_qry=_B.selectwhere(_tblname,[_primarykey],_qw,["="],[_primarykey],_B);
// [598]  Return qry 
return _qry;
// End Sub
};

// [602] Sub SelectWhere(tblName As String, tblfields As List, tblWhere As Map, operators As List, orderBy As List) As AlaSQLResultSet 
_B.selectwhere=function(_tblname,_tblfields,_tblwhere,_operators,_orderby) {
var _listoftypes,_listofvalues,_fld1,_selfields,_sb,_i,_iwhere,_col,_opr,_stro,_m;
// [603]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [604]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [605]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [607]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [608]  Dim selFIelds As String = {124} 
_selfields="";
// [609]  Select Case fld1 
switch ("" + _fld1) {
// [610]  Case {125} 
case "" + "*":
// [611]  selFIelds = {126} 
_selfields="*";
// [612]  Case Else 
break;
default:
// [613]  selFIelds = JoinFields( {127} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [614]  End Select 
break;
}
// [615]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [616]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [617]  sb.Append( {12} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [618]  Dim i As Int 
_i=0;
// [619]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [620]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [621]  If i > 0 Then 
if (_i>0) {
// [622]  sb.Append( {128} ) 
_sb.append(" AND ");
// [623]  End If 
}
// [624]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [625]  sb.Append(col) 
_sb.append(_col);
// [626]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [627]  sb.Append( {13} ) 
_sb.append(" " + _opr + " ?");
// [628]  Next 
}
// [629]  If orderBy <> Null Then 
if (_orderby!=null) {
// [631]  Dim stro As String = JoinFields( {129} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [632]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [633]  sb.Append( {130} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [634]  End If 
}
// [635]  End If 
}
// [636]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [637]  m.Initialize 
_m.initialize();
// [638]  m.query = sb.tostring 
_m._query=_sb.toString();
// [639]  m.args = listOfValues 
_m._args=_listofvalues;
// [640]  m.types = listOfTypes 
_m._types=_listoftypes;
// [641]  m.command = {131} 
_m._command="select";
// [642]  m.response = {132} 
_m._response="";
// [643]  m.error = {133} 
_m._error="";
// [644]  m.result = Array() 
_m._result=[];
// [645]  m.json = {134} 
_m._json="";
// [646]  m.affectedRows = 0 
_m._affectedrows=0;
// [647]  Return m 
return _m;
// End Sub
};

// [651] private Sub Join(delimiter As String, lst As List) As String 
_B.join=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [652]  Dim i As Int 
_i=0;
// [653]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [654]  Dim fld As String 
_fld="";
// [655]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [656]  fld = lst.Get(0) 
_fld=_lst[0];
// [657]  sb.Append(fld) 
_sb.append(_fld);
// [658]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [659]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [660]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [661]  Next 
}
// [662]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [667] Sub SelectAll(tblName As String, tblfields As List, orderBy As List) As AlaSQLResultSet 
_B.selectall=function(_tblname,_tblfields,_orderby) {
var _fld1,_selfields,_sb,_stro,_m;
// [669]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [670]  Dim selFIelds As String = {135} 
_selfields="";
// [671]  Select Case fld1 
switch ("" + _fld1) {
// [672]  Case {136} 
case "" + "*":
// [673]  selFIelds = {137} 
_selfields="*";
// [674]  Case Else 
break;
default:
// [675]  selFIelds = JoinFields( {138} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [676]  End Select 
break;
}
// [677]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [678]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [679]  sb.Append( {14} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + "");
// [680]  If orderBy <> Null Then 
if (_orderby!=null) {
// [682]  Dim stro As String = JoinFields( {139} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [683]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [684]  sb.Append( {140} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [685]  End If 
}
// [686]  End If 
}
// [687]  Dim m As AlaSQLResultSet 
_m= new banano_bananovuematerial_alasqlresultset();
// [688]  m.Initialize 
_m.initialize();
// [689]  m.query = sb.tostring 
_m._query=_sb.toString();
// [690]  m.args = Null 
_m._args=null;
// [691]  m.types = Null 
_m._types=null;
// [692]  m.command = {141} 
_m._command="select";
// [693]  m.response = {142} 
_m._response="";
// [694]  m.error = {143} 
_m._error="";
// [695]  m.result = Array() 
_m._result=[];
// [696]  m.json = {144} 
_m._json="";
// [697]  m.affectedRows = 0 
_m._affectedrows=0;
// [698]  Return m 
return _m;
// End Sub
};

}
/* =========================== BANanoHashes  =========================== */
function banano_bananovuematerial_bananohashes() {
var _B=this;
_B._hash_md5="MD5";

_B._hash_sha1="SHA1";

_B._hash_sha256="SHA256";

_B._hash_sha512="SHA512";

_B._hash_rmd160="RMD160";

_B._alg_hex="hex";

_B._alg_b64="b64";

_B._alg_hex_hmac="hex_hmac";

_B._alg_b64_hmac="b64_hmac";

_B._sinput="";

_B._skey="";

// [18] Public Sub Initialize(input As String, key As String) As BANanoHashes 
_B.initialize=function(_input,_key) {
// [19]  BANano.DependsOnAsset( {9} ) 
;
// [20]  sinput = input 
_B._sinput=_input;
// [21]  skey = key 
_B._skey=_key;
// [22]  Return Me 
return _B;
// End Sub
};

// [26] Sub GenerateSalt(rounds As Int) As String 
_B.generatesalt=function(_rounds) {
var _salt;
// [27]  Dim salt As String = BANano.RunJavascriptMethod( {10} , Array(rounds)) 
_salt=BANanoExec("gensalt", window, _rounds);
// [28]  Return salt 
return _salt;
// End Sub
};

// [31] Sub Hash(hashType As String, algorithm As String) As String 
_B.hash=function(_hashtype,_algorithm) {
var _bo,_res;
// [32]  Dim bo As BANanoObject 
_bo=null;
// [33]  Dim res As String 
_res="";
// [34]  Select Case hashType 
switch ("" + _hashtype) {
// [35]  Case HASH_MD5 
case "" + _B._hash_md5:
// [36]  bo.Initialize2( {11} ,Null) 
_bo=new Hashes.MD5();
// [37]  Case HASH_SHA1 
break;
case "" + _B._hash_sha1:
// [38]  bo.Initialize2( {12} ,Null) 
_bo=new Hashes.SHA1();
// [39]  Case HASH_SHA256 
break;
case "" + _B._hash_sha256:
// [40]  bo.Initialize2( {13} ,Null) 
_bo=new Hashes.SHA256();
// [41]  Case HASH_SHA512 
break;
case "" + _B._hash_sha512:
// [42]  bo.Initialize2( {14} ,Null) 
_bo=new Hashes.SHA512();
// [43]  Case HASH_RMD160 
break;
case "" + _B._hash_rmd160:
// [44]  bo.Initialize2( {15} ,Null) 
_bo=new Hashes.RMD160();
// [45]  End Select 
break;
}
// [47]  Select Case algorithm 
switch ("" + _algorithm) {
// [48]  Case ALG_HEX 
case "" + _B._alg_hex:
// [49]  res = bo.RunMethod( {16} , Array(sinput)).result 
_res=_bo["hex"](_B._sinput);
// [50]  Case ALG_B64 
break;
case "" + _B._alg_b64:
// [51]  res = bo.RunMethod( {17} , Array(sinput)).result 
_res=_bo["b64"](_B._sinput);
// [52]  Case ALG_HEX_HMAC 
break;
case "" + _B._alg_hex_hmac:
// [53]  res = bo.RunMethod( {18} , Array(skey, sinput)).result 
_res=_bo["hex_hmac"](_B._skey,_B._sinput);
// [54]  Case ALG_b64_HMAC 
break;
case "" + _B._alg_b64_hmac:
// [55]  res = bo.RunMethod( {19} , Array(skey, sinput)).result 
_res=_bo["b64_hmac"](_B._skey,_B._sinput);
// [56]  End Select 
break;
}
// [57]  Return res 
return _res;
// End Sub
};

// [61] Sub Hash1(salt As String, module As Object, methodName As String) 
_B.hash1=function(_salt,_module,_methodname) {
var _newhash,_cb;
// [62]  Dim newHash As Object 
_newhash={};
// [63]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(newHash)) 
_cb=function(_newhash) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_newhash,_B)};};
// [64]  BANano.RunJavascriptMethod( {20} , Array(sinput, salt, cb)) 
BANanoExec("hashpw", window, _B._sinput,_salt,_cb);
// End Sub
};

// [68] Sub Verify(oldHash As String, module As Object, methodName As String) 
_B.verify=function(_oldhash,_module,_methodname) {
var _res,_cb;
// [69]  Dim res As Object 
_res={};
// [70]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(res)) 
_cb=function(_res) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_res,_B)};};
// [71]  BANano.RunJavascriptMethod( {21} , Array(sinput, oldHash, cb)) 
BANanoExec("checkpw", window, _B._sinput,_oldhash,_cb);
// End Sub
};

}
/* =========================== BANanoMSSQL  =========================== */
function banano_bananovuematerial_bananomssql() {
var _B=this;
_B._rectype={};

_B._db_varchar_20="VARCHAR(20)";

_B._db_varchar_10="VARCHAR(10)";

_B._db_varchar_30="VARCHAR(30)";

_B._db_varchar_40="VARCHAR(40)";

_B._db_varchar_50="VARCHAR(50)";

_B._db_varchar_100="VARCHAR(100)";

_B._db_varchar_255="VARCHAR(255)";

_B._db_string="TEXT";

_B._db_int="INT";

_B._db_float="FLOAT";

_B._db_blob="BLOB";

_B._db_bool="BOOL";

_B._db_real="REAL";

_B._db_date="DATE";

_B._db_integer="INTEGER";

_B._db_text="TEXT";

_B._methodname="";

_B._schema={};

// [27] Sub Update(tblName As String, priKey As String, priValue As String, tblfields As Map) As MSSQLResultSet 
_B.update=function(_tblname,_prikey,_privalue,_tblfields) {
var _tblwhere;
// [28]  Dim tblWhere As Map = CreateMap() 
_tblwhere={};
// [29]  tblWhere.Put(priKey, priValue) 
_tblwhere[_prikey]=_privalue;
// [30]  Return UpdateWhere(tblName, tblfields, tblWhere, Null) 
return _B.updatewhere(_tblname,_tblfields,_tblwhere,null,_B);
// End Sub
};

// [33] Sub EQOperators(sm As Map) As List 
_B.eqoperators=function(_sm) {
var _nl,_k;
// [34]  Dim nl As List 
_nl=[];
// [35]  nl.initialize 
_nl.length=0;
// [36]  For Each k As String In sm.Keys 
var _kKeys = Object.keys(_sm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [37]  nl.Add( {30} ) 
_nl.push("=");
// [38]  Next 
}
// [39]  Return nl 
return _nl;
// End Sub
};

// [43] Sub SchemaClear As BANanoMSSQL 
_B.schemaclear=function() {
// [44]  Schema.clear 
_B._schema={};
// [45]  Return Me 
return _B;
// End Sub
};

// [49] Sub SchemaAddBoolean(bools As List) As BANanoMSSQL 
_B.schemaaddboolean=function(_bools) {
var _b;
// [50]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [51]  Schema.Put(b, DB_BOOL) 
_B._schema[_b]=_B._db_bool;
// [52]  Next 
}
// [53]  Return Me 
return _B;
// End Sub
};

// [56] Sub SchemaAddInt(bools As List) As BANanoMSSQL 
_B.schemaaddint=function(_bools) {
var _b;
// [57]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [58]  Schema.Put(b, DB_INT) 
_B._schema[_b]=_B._db_int;
// [59]  Next 
}
// [60]  Return Me 
return _B;
// End Sub
};

// [63] Sub SchemaAddFloat(bools As List) As BANanoMSSQL 
_B.schemaaddfloat=function(_bools) {
var _b;
// [64]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [65]  Schema.Put(b, DB_FLOAT) 
_B._schema[_b]=_B._db_float;
// [66]  Next 
}
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SchemaAddBlob(bools As List) As BANanoMSSQL 
_B.schemaaddblob=function(_bools) {
var _b;
// [71]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [72]  Schema.Put(b, DB_BLOB) 
_B._schema[_b]=_B._db_blob;
// [73]  Next 
}
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SchemaAddText(bools As List) As BANanoMSSQL 
_B.schemaaddtext=function(_bools) {
var _b;
// [78]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [79]  Schema.Put(b, DB_STRING) 
_B._schema[_b]=_B._db_string;
// [80]  Next 
}
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub SchemaAddDate(bools As List) As BANanoMSSQL 
_B.schemaadddate=function(_bools) {
var _b;
// [85]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [86]  Schema.Put(b, DB_DATE) 
_B._schema[_b]=_B._db_date;
// [87]  Next 
}
// [88]  Return Me 
return _B;
// End Sub
};

// [92] Sub SchemaCreateTable(tblName As String, PK As String, Auto As String) As MSSQLResultSet 
_B.schemacreatetable=function(_tblname,_pk,_auto) {
// [93]  Return CreateTable(tblName, Schema, PK, Auto) 
return _B.createtable(_tblname,_B._schema,_pk,_auto,_B);
// End Sub
};

// [98] public Sub CreateTable(tblName As String, tblFields As Map, PK As String, Auto As String) As MSSQLResultSet 
_B.createtable=function(_tblname,_tblfields,_pk,_auto) {
var _fldname,_fldtype,_fldtot,_fldcnt,_sb,_query,_m;
// [99]  Dim fldName As String 
_fldname="";
// [100]  Dim fldType As String 
_fldtype="";
// [101]  Dim fldTot As Int 
_fldtot=0;
// [102]  Dim fldCnt As Int 
_fldcnt=0;
// [103]  fldTot = tblFields.Size - 1 
_fldtot=Object.keys(_tblfields).length-1;
// [104]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [105]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [106]  sb.Append( {31} ) 
_sb.append("(");
// [107]  For fldCnt = 0 To fldTot 
for (_fldcnt=0;_fldcnt<=_fldtot;_fldcnt++) {
// [108]  fldName = tblFields.GetKeyAt(fldCnt) 
_fldname=banano_getB4JKeyAt(_tblfields,_fldcnt);
// [109]  fldType = tblFields.Get(fldName) 
_fldtype=_tblfields[_fldname];
// [110]  fldType = fldType.Replace( {32} , {33} ) 
_fldtype=_fldtype.split("STRING").join("TEXT");
// [111]  If fldCnt > 0 Then 
if (_fldcnt>0) {
// [112]  sb.Append( {34} ) 
_sb.append(", ");
// [113]  End If 
}
// [114]  sb.Append(EscapeField(fldName)) 
_sb.append(_B.escapefield(_fldname,_B));
// [115]  sb.Append( {35} ) 
_sb.append(" ");
// [116]  sb.Append(fldType) 
_sb.append(_fldtype);
// [117]  If fldName.EqualsIgnoreCase(PK) Then 
if (_fldname.equalsIgnoreCase(_pk)) {
// [118]  sb.Append( {36} ) 
_sb.append(" NOT NULL PRIMARY KEY");
// [119]  End If 
}
// [120]  If fldName.EqualsIgnoreCase(Auto) Then 
if (_fldname.equalsIgnoreCase(_auto)) {
// [121]  sb.Append( {37} ) 
_sb.append(" AUTO_INCREMENT");
// [122]  End If 
}
// [123]  Next 
}
// [124]  sb.Append( {38} ) 
_sb.append(")");
// [126]  Dim query As String = {39} & EscapeField(tblName) & {40} & sb.ToString 
_query="CREATE TABLE IF NOT EXISTS "+_B.escapefield(_tblname,_B)+" "+_sb.toString();
// [127]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [128]  m.Initialize 
_m.initialize();
// [129]  m.query = query 
_m._query=_query;
// [130]  m.args = Null 
_m._args=null;
// [131]  m.types = Null 
_m._types=null;
// [132]  m.command = {41} 
_m._command="createtable";
// [133]  m.response = {42} 
_m._response="";
// [134]  m.error = {43} 
_m._error="";
// [135]  m.result = Array() 
_m._result=[];
// [136]  m.json = {44} 
_m._json="";
// [137]  m.affectedRows = 0 
_m._affectedrows=0;
// [138]  Return m 
return _m;
// End Sub
};

// [142] Sub ResetTypes As BANanoMSSQL 
_B.resettypes=function() {
// [143]  recType.Initialize 
_B._rectype={};
// [144]  Return Me 
return _B;
// End Sub
};

// [148] Sub GetMax(tblName As String, fldName As String) As MSSQLResultSet 
_B.getmax=function(_tblname,_fldname) {
var _sb,_m;
// [149]  Dim sb As String = {0} 
_sb="SELECT MAX(" + _fldname + ") As " + _fldname + " FROM " + _B.escapefield(_tblname,_B) + "";
// [150]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [151]  m.Initialize 
_m.initialize();
// [152]  m.query = sb 
_m._query=_sb;
// [153]  m.args = Null 
_m._args=null;
// [154]  m.types = Null 
_m._types=null;
// [155]  m.command = {45} 
_m._command="getmax";
// [156]  m.response = {46} 
_m._response="";
// [157]  m.error = {47} 
_m._error="";
// [158]  m.result = Array() 
_m._result=[];
// [159]  m.json = {48} 
_m._json="";
// [160]  m.affectedRows = 0 
_m._affectedrows=0;
// [161]  Return m 
return _m;
// End Sub
};

// [165] Sub GetNextID(fld As String, rsl As List) As String 
_B.getnextid=function(_fld,_rsl) {
var _nextid,_strid,_nr,_ni;
// [166]  Dim nextid As Int 
_nextid=0;
// [167]  Dim strid As String 
_strid="";
// [169]  If rsl.Size = 0 Then 
if (_rsl.length==0) {
// [170]  nextid = 0 
_nextid=0;
// [171]  Else 
} else {
// [172]  Dim nr As Map = rsl.Get(0) 
_nr=_rsl[0];
// [173]  Dim ni As String = nr.GetDefault(fld, {49} ) 
_ni=(_nr[_fld] || "0");
// [174]  nextid = BANano.parseInt(ni) 
_nextid=parseInt(_ni);
// [175]  End If 
}
// [176]  nextid = nextid + 1 
_nextid=_nextid+1;
// [177]  strid = CStr(nextid) 
_strid=_B.cstr(_nextid,_B);
// [178]  Return strid 
return _strid;
// End Sub
};

// [182] private Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [183]  If o = BANano.UNDEFINED Then o = {50} 
if (_o=='undefined') {_o="";}
// [184]  Return {51} & o 
return ""+_o;
// End Sub
};

// [188] Sub Initialize() As BANanoMSSQL 
_B.initialize=function() {
// [189]  recType.Initialize 
_B._rectype={};
// [190]  MethodName = {52} 
_B._methodname="BANanoMSSQL";
// [191]  Return Me 
return _B;
// End Sub
};

// [195] private Sub Json2Map(strJSON As String) As Map 
_B.json2map=function(_strjson) {
var _json,_map1;
// [196]  Dim json As BANanoJSONParser 
_json={};
// [197]  Dim Map1 As Map 
_map1={};
// [198]  Map1.Initialize 
_map1={};
// [199]  Map1.clear 
_map1={};
// [200]  Try 
try {
// [201]  If strJSON.length > 0 Then 
if (_strjson.length>0) {
// [202]  json.Initialize(strJSON) 
_json=JSON.parse(_strjson);
// [203]  Map1 = json.NextObject 
_map1=_json;
// [204]  End If 
}
// [205]  Return Map1 
return _map1;
// [206]  Catch 
} catch(err) {
// [207]  Return Map1 
return _map1;
// [208]  End Try 
}
// End Sub
};

// [212] private Sub Map2Json(mp As Map) As String 
_B.map2json=function(_mp) {
var _json;
// [213]  Dim json As BANanoJSONGenerator 
_json={};
// [214]  json.Initialize(mp) 
_json=_mp;
// [215]  Return json.ToString 
return JSON.stringify(_json);
// End Sub
};

// [219] Sub AddStrings(fieldNames As List) As BANanoMSSQL 
_B.addstrings=function(_fieldnames) {
var _strfld;
// [220]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [221]  recType.Put(strfld, {53} ) 
_B._rectype[_strfld]="STRING";
// [222]  Next 
}
// [223]  Return Me 
return _B;
// End Sub
};

// [227] Sub AddIntegers(fieldNames As List) As BANanoMSSQL 
_B.addintegers=function(_fieldnames) {
var _strfld;
// [228]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [229]  recType.Put(strfld, {54} ) 
_B._rectype[_strfld]="INT";
// [230]  Next 
}
// [231]  Return Me 
return _B;
// End Sub
};

// [235] Sub AddDoubles(fieldNames As List) As BANanoMSSQL 
_B.adddoubles=function(_fieldnames) {
var _strfld;
// [236]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [237]  recType.Put(strfld, {55} ) 
_B._rectype[_strfld]="DOUBLE";
// [238]  Next 
}
// [239]  Return Me 
return _B;
// End Sub
};

// [243] Sub AddBlobs(fieldNames As List) As BANanoMSSQL 
_B.addblobs=function(_fieldnames) {
var _strfld;
// [244]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [245]  recType.Put(strfld, {56} ) 
_B._rectype[_strfld]="BLOB";
// [246]  Next 
}
// [247]  Return Me 
return _B;
// End Sub
};

// [251] Sub AddBooleans(fieldNames As List) As BANanoMSSQL 
_B.addbooleans=function(_fieldnames) {
var _strfld;
// [252]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [253]  recType.Put(strfld, {57} ) 
_B._rectype[_strfld]="BOOL";
// [254]  Next 
}
// [255]  Return Me 
return _B;
// End Sub
};

// [259] Private Sub EscapeField(f As String) As String 
_B.escapefield=function(_f) {
// [260]  Return {1} 
return "[" + _f + "]";
// End Sub
};

// [264] Sub Execute(strSQL As String) As MSSQLResultSet 
_B.execute=function(_strsql) {
var _m;
// [265]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [266]  m.Initialize 
_m.initialize();
// [267]  m.query = strSQL 
_m._query=_strsql;
// [268]  m.args = Null 
_m._args=null;
// [269]  m.types = Null 
_m._types=null;
// [270]  m.command = {58} 
_m._command="execute";
// [271]  m.response = {59} 
_m._response="";
// [272]  m.error = {60} 
_m._error="";
// [273]  m.result = Array() 
_m._result=[];
// [274]  m.json = {61} 
_m._json="";
// [275]  m.affectedRows = 0 
_m._affectedrows=0;
// [276]  Return m 
return _m;
// End Sub
};

// [280] private Sub GetMapTypes(sourceMap As Map) As List 
_B.getmaptypes=function(_sourcemap) {
var _listoftypes,_icnt,_itot,_col,_coltype;
// [281]  Dim listOfTypes As List 
_listoftypes=[];
// [282]  listOfTypes.Initialize 
_listoftypes.length=0;
// [283]  Dim iCnt As Int 
_icnt=0;
// [284]  Dim iTot As Int 
_itot=0;
// [285]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [286]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [287]  Dim col As String = sourceMap.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_sourcemap,_icnt);
// [288]  Dim colType As String = recType.GetDefault(col, {62} ) 
_coltype=(_B._rectype[_col] || "STRING");
// [289]  Select Case colType 
switch ("" + _coltype) {
// [290]  Case {63} , {64} , {65} , {66} , {67} , {68} 
case "" + "VARCHAR(20)":
case "" + "VARCHAR(10)":
case "" + "VARCHAR(30)":
case "" + "VARCHAR(40)":
case "" + "VARCHAR":
case "" + "NVARCHAR":
// [291]  listOfTypes.add( {69} ) 
_listoftypes.push("s");
// [292]  Case {70} , {71} , {72} 
break;
case "" + "VARCHAR(50)":
case "" + "VARCHAR(100)":
case "" + "VARCHAR(255)":
// [293]  listOfTypes.add( {73} ) 
_listoftypes.push("s");
// [294]  Case {74} , {75} , {76} , {77} , {78} , {79} 
break;
case "" + "STRING":
case "" + "VARCHAR":
case "" + "TEXT":
case "" + "DATE":
case "" + "DATETIME":
case "" + "NVARCHAR":
// [295]  listOfTypes.add( {80} ) 
_listoftypes.push("s");
// [296]  Case {81} , {82} , {83} , {84} 
break;
case "" + "INTEGER":
case "" + "INT":
case "" + "BOOL":
case "" + "BOOLEAN":
// [297]  listOfTypes.add( {85} ) 
_listoftypes.push("i");
// [298]  Case {86} , {87} , {88} 
break;
case "" + "REAL":
case "" + "FLOAT":
case "" + "DOUBLE":
// [299]  listOfTypes.add( {89} ) 
_listoftypes.push("d");
// [300]  Case {90} 
break;
case "" + "BLOB":
// [301]  listOfTypes.Add( {91} ) 
_listoftypes.push("b");
// [302]  Case Else 
break;
default:
// [303]  listOfTypes.add( {92} ) 
_listoftypes.push("s");
// [304]  End Select 
break;
}
// [305]  Next 
}
// [306]  Return listOfTypes 
return _listoftypes;
// End Sub
};

// [310] private Sub GetMapValues(sourceMap As Map) As List 
_B.getmapvalues=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [311]  Dim listOfValues As List 
_listofvalues=[];
// [312]  listOfValues.Initialize 
_listofvalues.length=0;
// [313]  Dim iCnt As Int 
_icnt=0;
// [314]  Dim iTot As Int 
_itot=0;
// [315]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [316]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [317]  Dim value As String = sourceMap.GetValueAt(iCnt) 
_value=banano_getB4JValueAt(_sourcemap,_icnt);
// [318]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [319]  Next 
}
// [320]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [324] private Sub GetMapKeys(sourceMap As Map) As List 
_B.getmapkeys=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [325]  Dim listOfValues As List 
_listofvalues=[];
// [326]  listOfValues.Initialize 
_listofvalues.length=0;
// [327]  Dim iCnt As Int 
_icnt=0;
// [328]  Dim iTot As Int 
_itot=0;
// [329]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [330]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [331]  Dim value As String = sourceMap.GetKeyAt(iCnt) 
_value=banano_getB4JKeyAt(_sourcemap,_icnt);
// [332]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [333]  Next 
}
// [334]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [339] Sub Insert(tblName As String, tblFields As Map) As MSSQLResultSet 
_B.insert=function(_tblname,_tblfields) {
var _sb,_columns,_values,_listofvalues,_listoftypes,_icnt,_itot,_col,_m;
// [340]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [341]  Dim columns As StringBuilder 
_columns=new StringBuilder();
// [342]  Dim values As StringBuilder 
_values=new StringBuilder();
// [343]  Dim listOfValues As List = GetMapValues(tblFields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [344]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [345]  Dim iCnt As Int 
_icnt=0;
// [346]  Dim iTot As Int 
_itot=0;
// [347]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [348]  columns.Initialize 
_columns.init();
_columns.isinitialized=true;
// [349]  values.Initialize 
_values.init();
_values.isinitialized=true;
// [350]  sb.Append( {2} ) 
_sb.append("INSERT INTO " + _B.escapefield(_tblname,_B) + " (");
// [351]  iTot = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [352]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [353]  Dim col As String = tblFields.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_tblfields,_icnt);
// [354]  If iCnt > 0 Then 
if (_icnt>0) {
// [355]  columns.Append( {93} ) 
_columns.append(", ");
// [356]  values.Append( {94} ) 
_values.append(", ");
// [357]  End If 
}
// [358]  columns.Append(EscapeField(col)) 
_columns.append(_B.escapefield(_col,_B));
// [359]  values.Append( {95} ) 
_values.append("?");
// [360]  Next 
}
// [361]  sb.Append(columns.ToString) 
_sb.append(_columns.toString());
// [362]  sb.Append( {96} ) 
_sb.append(") VALUES (");
// [363]  sb.Append(values.ToString) 
_sb.append(_values.toString());
// [364]  sb.Append( {97} ) 
_sb.append(")");
// [365]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [366]  m.Initialize 
_m.initialize();
// [367]  m.query = sb.ToString 
_m._query=_sb.toString();
// [368]  m.args = listOfValues 
_m._args=_listofvalues;
// [369]  m.types = listOfTypes 
_m._types=_listoftypes;
// [370]  m.command = {98} 
_m._command="insert";
// [371]  m.response = {99} 
_m._response="";
// [372]  m.error = {100} 
_m._error="";
// [373]  m.result = Array() 
_m._result=[];
// [374]  m.json = {101} 
_m._json="";
// [375]  m.affectedRows = 0 
_m._affectedrows=0;
// [376]  Return m 
return _m;
// End Sub
};

// [380] private Sub JoinFields(delimiter As String, lst As List) As String 
_B.joinfields=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [381]  Dim i As Int 
_i=0;
// [382]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [383]  Dim fld As String 
_fld="";
// [384]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [385]  fld = lst.Get(0) 
_fld=_lst[0];
// [386]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [387]  sb.Append(fld) 
_sb.append(_fld);
// [388]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [389]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [390]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [391]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [392]  Next 
}
// [393]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [397] private Sub Join(delimiter As String, lst As List) As String 
_B.join=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [398]  Dim i As Int 
_i=0;
// [399]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [400]  Dim fld As String 
_fld="";
// [401]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [402]  fld = lst.Get(0) 
_fld=_lst[0];
// [403]  sb.Append(fld) 
_sb.append(_fld);
// [404]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [405]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [406]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [407]  Next 
}
// [408]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [413] Sub Read(tblName As String, primaryKey As String, primaryValue As String, flds As List) As MSSQLResultSet 
_B.read=function(_tblname,_primarykey,_primaryvalue,_flds) {
var _qw,_qry;
// [414]  Dim qw As Map = CreateMap() 
_qw={};
// [415]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [416]  Dim qry As MSSQLResultSet = SelectWhere(tblName, flds, qw, Array( {102} ), Array(primaryKey)) 
_qry=_B.selectwhere(_tblname,_flds,_qw,["="],[_primarykey],_B);
// [417]  Return qry 
return _qry;
// End Sub
};

// [420] Sub Delete(tblName As String, primaryKey As String, primaryValue As String) As MSSQLResultSet 
_B.delete=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_qry;
// [421]  Dim qw As Map = CreateMap() 
_qw={};
// [422]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [423]  Dim qry As MSSQLResultSet = DeleteWhere(tblName, qw, Array( {103} )) 
_qry=_B.deletewhere(_tblname,_qw,["="],_B);
// [424]  Return qry 
return _qry;
// End Sub
};

// [428] Sub Exists(tblName As String, primaryKey As String, primaryValue As String) As MSSQLResultSet 
_B.exists=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_qry;
// [429]  Dim qw As Map = CreateMap() 
_qw={};
// [430]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [431]  Dim qry As MSSQLResultSet = SelectWhere(tblName, Array(primaryKey), qw, Array( {104} ), Array(primaryKey)) 
_qry=_B.selectwhere(_tblname,[_primarykey],_qw,["="],[_primarykey],_B);
// [432]  Return qry 
return _qry;
// End Sub
};

// [436] Sub SelectWhere(tblName As String, tblfields As List, tblWhere As Map, operators As List, orderBy As List) As MSSQLResultSet 
_B.selectwhere=function(_tblname,_tblfields,_tblwhere,_operators,_orderby) {
var _listoftypes,_listofvalues,_fld1,_selfields,_sb,_i,_iwhere,_col,_opr,_stro,_m;
// [437]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [438]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [439]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [441]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [442]  Dim selFIelds As String = {105} 
_selfields="";
// [443]  Select Case fld1 
switch ("" + _fld1) {
// [444]  Case {106} 
case "" + "*":
// [445]  selFIelds = {107} 
_selfields="*";
// [446]  Case Else 
break;
default:
// [447]  selFIelds = JoinFields( {108} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [448]  End Select 
break;
}
// [449]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [450]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [451]  sb.Append( {3} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [452]  Dim i As Int 
_i=0;
// [453]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [454]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [455]  If i > 0 Then 
if (_i>0) {
// [456]  sb.Append( {109} ) 
_sb.append(" AND ");
// [457]  End If 
}
// [458]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [459]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [460]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [461]  sb.Append( {4} ) 
_sb.append(" " + _opr + " ?");
// [462]  Next 
}
// [463]  If orderBy <> Null Then 
if (_orderby!=null) {
// [465]  Dim stro As String = JoinFields( {110} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [466]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [467]  sb.Append( {111} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [468]  End If 
}
// [469]  End If 
}
// [470]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [471]  m.Initialize 
_m.initialize();
// [472]  m.query = sb.tostring 
_m._query=_sb.toString();
// [473]  m.args = listOfValues 
_m._args=_listofvalues;
// [474]  m.types = listOfTypes 
_m._types=_listoftypes;
// [475]  m.command = {112} 
_m._command="select";
// [476]  m.response = {113} 
_m._response="";
// [477]  m.error = {114} 
_m._error="";
// [478]  m.result = Array() 
_m._result=[];
// [479]  m.json = {115} 
_m._json="";
// [480]  m.affectedRows = 0 
_m._affectedrows=0;
// [481]  Return m 
return _m;
// End Sub
};

// [485] Sub DeleteAll(tblName As String) As MSSQLResultSet 
_B.deleteall=function(_tblname) {
var _sb,_m;
// [486]  Dim sb As String = {5} 
_sb="DELETE FROM " + _B.escapefield(_tblname,_B) + "";
// [487]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [488]  m.Initialize 
_m.initialize();
// [489]  m.query = sb 
_m._query=_sb;
// [490]  m.args = Null 
_m._args=null;
// [491]  m.types = Null 
_m._types=null;
// [492]  m.response = {116} 
_m._response="";
// [493]  m.error = {117} 
_m._error="";
// [494]  m.result = Array() 
_m._result=[];
// [495]  m.json = {118} 
_m._json="";
// [496]  m.affectedRows = 0 
_m._affectedrows=0;
// [497]  m.command = {119} 
_m._command="delete";
// [498]  Return m 
return _m;
// End Sub
};

// [502] Sub DeleteWhere(tblName As String, tblWhere As Map, operators As List) As MSSQLResultSet 
_B.deletewhere=function(_tblname,_tblwhere,_operators) {
var _listoftypes,_listofvalues,_sb,_i,_iwhere,_col,_opr,_m;
// [503]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [504]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [505]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [506]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [507]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [508]  sb.Append( {6} ) 
_sb.append("DELETE FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [509]  Dim i As Int 
_i=0;
// [510]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [511]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [512]  If i > 0 Then 
if (_i>0) {
// [513]  sb.Append( {120} ) 
_sb.append(" AND ");
// [514]  End If 
}
// [515]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [516]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [517]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [518]  sb.Append( {7} ) 
_sb.append(" " + _opr + " ?");
// [519]  Next 
}
// [520]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [521]  m.Initialize 
_m.initialize();
// [522]  m.query = sb.tostring 
_m._query=_sb.toString();
// [523]  m.args = listOfValues 
_m._args=_listofvalues;
// [524]  m.types = listOfTypes 
_m._types=_listoftypes;
// [525]  m.command = {121} 
_m._command="delete";
// [526]  m.response = {122} 
_m._response="";
// [527]  m.error = {123} 
_m._error="";
// [528]  m.result = Array() 
_m._result=[];
// [529]  m.json = {124} 
_m._json="";
// [530]  m.affectedRows = 0 
_m._affectedrows=0;
// [531]  Return m 
return _m;
// End Sub
};

// [536] Sub SelectAll(tblName As String, tblfields As List, orderBy As List) As MSSQLResultSet 
_B.selectall=function(_tblname,_tblfields,_orderby) {
var _fld1,_selfields,_sb,_stro,_m;
// [538]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [539]  Dim selFIelds As String = {125} 
_selfields="";
// [540]  Select Case fld1 
switch ("" + _fld1) {
// [541]  Case {126} 
case "" + "*":
// [542]  selFIelds = {127} 
_selfields="*";
// [543]  Case Else 
break;
default:
// [544]  selFIelds = JoinFields( {128} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [545]  End Select 
break;
}
// [546]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [547]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [548]  sb.Append( {8} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + "");
// [549]  If orderBy <> Null Then 
if (_orderby!=null) {
// [551]  Dim stro As String = JoinFields( {129} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [552]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [553]  sb.Append( {130} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [554]  End If 
}
// [555]  End If 
}
// [556]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [557]  m.Initialize 
_m.initialize();
// [558]  m.query = sb.tostring 
_m._query=_sb.toString();
// [559]  m.args = Null 
_m._args=null;
// [560]  m.types = Null 
_m._types=null;
// [561]  m.command = {131} 
_m._command="select";
// [562]  m.response = {132} 
_m._response="";
// [563]  m.error = {133} 
_m._error="";
// [564]  m.result = Array() 
_m._result=[];
// [565]  m.json = {134} 
_m._json="";
// [566]  m.affectedRows = 0 
_m._affectedrows=0;
// [567]  Return m 
return _m;
// End Sub
};

// [571] Sub Build(rslt As MSSQLResultSet) As Map 
_B.build=function(_rslt) {
var _b;
// [572]  Dim b As Map = CreateMap() 
_b={};
// [573]  b.Put( {135} , rslt.command) 
_b["command"]=_rslt._command;
// [574]  b.Put( {136} , rslt.query) 
_b["query"]=_rslt._query;
// [575]  b.Put( {137} , rslt.args) 
_b["args"]=_rslt._args;
// [576]  b.Put( {138} , rslt.types) 
_b["types"]=_rslt._types;
// [577]  Return b 
return _b;
// End Sub
};

// [581] Sub UpdateWhere(tblName As String, tblfields As Map, tblWhere As Map, operators As List) As MSSQLResultSet 
_B.updatewhere=function(_tblname,_tblfields,_tblwhere,_operators) {
var _listoftypes,_listoftypes1,_listofvalues,_listofvalues1,_sb,_i,_itot,_col,_iwhere,_opr,_m;
// [582]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [583]  Dim listOfTypes As List = GetMapTypes(tblfields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [584]  Dim listOfTypes1 As List = GetMapTypes(tblWhere) 
_listoftypes1=_B.getmaptypes(_tblwhere,_B);
// [585]  listOfTypes.AddAll(listOfTypes1) 
_listoftypes.splice(_listoftypes.length,0,..._listoftypes1);
// [586]  Dim listOfValues As List = GetMapValues(tblfields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [587]  Dim listOfValues1 As List = GetMapValues(tblWhere) 
_listofvalues1=_B.getmapvalues(_tblwhere,_B);
// [588]  listOfValues.AddAll(listOfValues1) 
_listofvalues.splice(_listofvalues.length,0,..._listofvalues1);
// [589]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [590]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [591]  sb.Append( {9} ) 
_sb.append("UPDATE " + _B.escapefield(_tblname,_B) + " SET ");
// [592]  Dim i As Int 
_i=0;
// [593]  Dim iTot As Int = tblfields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [594]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [595]  Dim col As String = tblfields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [596]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [597]  If i <> iTot Then 
if (_i!=_itot) {
// [598]  sb.Append( {139} ) 
_sb.append("= ?,");
// [599]  Else 
} else {
// [600]  sb.Append( {140} ) 
_sb.append("= ?");
// [601]  End If 
}
// [602]  Next 
}
// [603]  sb.Append( {10} ) 
_sb.append(" WHERE ");
// [604]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [605]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [606]  If i > 0 Then 
if (_i>0) {
// [607]  sb.Append( {141} ) 
_sb.append(" AND ");
// [608]  End If 
}
// [609]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [610]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [611]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [612]  sb.Append( {11} ) 
_sb.append(" " + _opr + " ?");
// [613]  Next 
}
// [614]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [615]  m.Initialize 
_m.initialize();
// [616]  m.query = sb.tostring 
_m._query=_sb.toString();
// [617]  m.args = listOfValues 
_m._args=_listofvalues;
// [618]  m.types = listOfTypes 
_m._types=_listoftypes;
// [619]  m.command = {142} 
_m._command="update";
// [620]  m.response = {143} 
_m._response="";
// [621]  m.error = {144} 
_m._error="";
// [622]  m.result = Array() 
_m._result=[];
// [623]  m.json = {145} 
_m._json="";
// [624]  m.affectedRows = 0 
_m._affectedrows=0;
// [625]  Return m 
return _m;
// End Sub
};

// [630] Sub UpdateAll(tblName As String, tblFields As Map,operators As List) As MSSQLResultSet 
_B.updateall=function(_tblname,_tblfields,_operators) {
var _listoftypes,_args,_sb,_i,_itot,_col,_oper,_m;
// [631]  If operators = Null Then operators = EQOperators(tblFields) 
if (_operators==null) {_operators=_B.eqoperators(_tblfields,_B);}
// [632]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [633]  Dim args As List = GetMapValues(tblFields) 
_args=_B.getmapvalues(_tblfields,_B);
// [634]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [635]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [636]  sb.Append( {12} ) 
_sb.append("UPDATE " + _B.escapefield(_tblname,_B) + " SET ");
// [637]  Dim i As Int 
_i=0;
// [638]  Dim iTot As Int = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [639]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [640]  Dim col As String = tblFields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [641]  Dim oper As String = operators.Get(i) 
_oper=_operators[_i];
// [642]  sb.Append(col) 
_sb.append(_col);
// [643]  If i <> iTot Then 
if (_i!=_itot) {
// [644]  sb.Append( {146} ) 
_sb.append(" = ?,");
// [645]  Else 
} else {
// [646]  sb.Append( {13} ) 
_sb.append(" " + _oper + " ?");
// [647]  End If 
}
// [648]  Next 
}
// [649]  Dim m As MSSQLResultSet 
_m= new banano_bananovuematerial_mssqlresultset();
// [650]  m.Initialize 
_m.initialize();
// [651]  m.query = sb.tostring 
_m._query=_sb.toString();
// [652]  m.args = args 
_m._args=_args;
// [653]  m.types = listOfTypes 
_m._types=_listoftypes;
// [654]  m.command = {147} 
_m._command="update";
// [655]  m.response = {148} 
_m._response="";
// [656]  m.error = {149} 
_m._error="";
// [657]  m.result = Array() 
_m._result=[];
// [658]  m.json = {150} 
_m._json="";
// [659]  m.affectedRows = 0 
_m._affectedrows=0;
// [660]  Return m 
return _m;
// End Sub
};

// [663] Sub JSONToResultSet(rs As MSSQLResultSet) 
_B.jsontoresultset=function(_rs) {
var _m;
// [664]  rs.ok = False 
_rs._ok=false;
// [665]  Dim m As Map = BANano.FromJson(rs.json) 
_m=JSON.parse(_rs._json);
// [666]  rs.response = m.Get( {151} ) 
_rs._response=_m["response"];
// [667]  rs.error = m.Get( {152} ) 
_rs._error=_m["error"];
// [668]  rs.result = m.Get( {153} ) 
_rs._result=_m["result"];
// [669]  rs.affectedRows = m.Get( {154} ) 
_rs._affectedrows=_m["affectedRows"];
// [670]  If rs.response = {155} And rs.affectedRows >= 1 Then 
if (_rs._response=="Success" && _rs._affectedrows>=1) {
// [671]  rs.OK = True 
_rs._ok=true;
// [672]  End If 
}
// End Sub
};

}
/* =========================== BANanoMySQL  =========================== */
function banano_bananovuematerial_bananomysql() {
var _B=this;
_B._rectype={};

_B._db_varchar_20="VARCHAR(20)";

_B._db_varchar_10="VARCHAR(10)";

_B._db_varchar_30="VARCHAR(30)";

_B._db_varchar_40="VARCHAR(40)";

_B._db_varchar_50="VARCHAR(50)";

_B._db_varchar_100="VARCHAR(100)";

_B._db_varchar_255="VARCHAR(255)";

_B._db_string="TEXT";

_B._db_int="INT";

_B._db_float="FLOAT";

_B._db_blob="BLOB";

_B._db_bool="BOOL";

_B._db_real="REAL";

_B._db_date="DATE";

_B._db_integer="INTEGER";

_B._db_text="TEXT";

_B._methodname="";

_B._methodnamedynamic="";

_B._schema={};

_B._host="";

_B._username="";

_B._password="";

_B._dbase="";

_B._result=[];

_B._command="";

_B._types=[];

_B._args=[];

_B._query="";

_B._response="";

_B._error="";

_B._affectedrows=0;

_B._json="";

_B._ok=false;

_B._tablename="";

_B._primarykey="";

_B._record={};

// [49] Sub SetConnection(shost As String, susername As String, spassword As String, sdbname As String) As BANanoMySQL 
_B.setconnection=function(_shost,_susername,_spassword,_sdbname) {
// [50]  host = shost 
_B._host=_shost;
// [51]  username = susername 
_B._username=_susername;
// [52]  password = spassword 
_B._password=_spassword;
// [53]  DBase = sdbname 
_B._dbase=_sdbname;
// [54]  Return Me 
return _B;
// End Sub
};

// [57] Sub RecordFromMap(sm As Map) 
_B.recordfrommap=function(_sm) {
var _k,_v;
// [58]  Record.Initialize 
_B._record={};
// [59]  For Each k As String In sm.Keys 
var _kKeys = Object.keys(_sm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [60]  Dim v As Object = sm.Get(k) 
_v=_sm[_k];
// [61]  Record.Put(k, v) 
_B._record[_k]=_v;
// [62]  Next 
}
// End Sub
};

// [66] Sub FromJSON As BANanoMySQL 
_B.fromjson=function() {
var _m;
// [67]  OK = False 
_B._ok=false;
// [68]  Dim m As Map = BANano.FromJson(json) 
_m=JSON.parse(_B._json);
// [69]  response = m.Get( {47} ) 
_B._response=_m["response"];
// [70]  error = m.Get( {48} ) 
_B._error=_m["error"];
// [71]  result = m.Get( {49} ) 
_B._result=_m["result"];
// [72]  affectedRows = m.Get( {50} ) 
_B._affectedrows=_m["affectedRows"];
// [73]  If response = {51} Then 
if (_B._response=="Success") {
// [74]  OK = True 
_B._ok=true;
// [75]  End If 
}
// [76]  Return Me 
return _B;
// End Sub
};

// [81] Sub GetMax As BANanoMySQL 
_B.getmax=function() {
var _sb;
// [82]  Dim sb As String = {0} 
_sb="SELECT MAX(" + _B._primarykey + ") As " + _B._primarykey + " FROM " + _B.escapefield(_B._tablename,_B) + "";
// [83]  query = sb 
_B._query=_sb;
// [84]  command = {52} 
_B._command="getmax";
// [85]  Return Me 
return _B;
// End Sub
};

// [89] Sub GetTableNames As BANanoMySQL 
_B.gettablenames=function() {
var _sb;
// [90]  Dim sb As String = {1} 
_sb="select table_name from information_schema.tables where table_schema = '" + _B._dbase + "'";
// [91]  query = sb 
_B._query=_sb;
// [92]  command = {53} 
_B._command="select";
// [93]  Return Me 
return _B;
// End Sub
};

// [97] Sub GetTableStructure As BANanoMySQL 
_B.gettablestructure=function() {
var _sb;
// [98]  Dim sb As String = {2} 
_sb="describe " + _B.escapefield(_B._tablename,_B) + "";
// [99]  query = sb 
_B._query=_sb;
// [100]  command = {54} 
_B._command="select";
// [101]  Return Me 
return _B;
// End Sub
};

// [104] Sub GetNextID As String 
_B.getnextid=function() {
var _nextid,_strid,_nr,_ni;
// [105]  Dim nextid As Int 
_nextid=0;
// [106]  Dim strid As String 
_strid="";
// [108]  If result.Size = 0 Then 
if (_B._result.length==0) {
// [109]  nextid = 0 
_nextid=0;
// [110]  Else 
} else {
// [111]  Dim nr As Map = result.Get(0) 
_nr=_B._result[0];
// [112]  Dim ni As String = nr.GetDefault(PrimaryKey, {55} ) 
_ni=(_nr[_B._primarykey] || "0");
// [113]  nextid = BANano.parseInt(ni) 
_nextid=parseInt(_ni);
// [114]  End If 
}
// [115]  nextid = nextid + 1 
_nextid=_nextid+1;
// [116]  strid = CStr(nextid) 
_strid=_B.cstr(_nextid,_B);
// [117]  Return strid 
return _strid;
// End Sub
};

// [120] Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [121]  Return {56} & o 
return ""+_o;
// End Sub
};

// [126] Public Sub Initialize(dbName As String, tblName As String, PK As String) As BANanoMySQL 
_B.initialize=function(_dbname,_tblname,_pk) {
// [127]  Schema.Initialize 
_B._schema={};
// [128]  recType.Initialize 
_B._rectype={};
// [129]  Record.Initialize 
_B._record={};
// [130]  MethodName = {58} 
_B._methodname="BANanoMySQL";
// [131]  MethodNameDynamic = {59} 
_B._methodnamedynamic="BANanoMySQLDynamic";
// [132]  result.Initialize 
_B._result.length=0;
// [133]  command = {60} 
_B._command="";
// [134]  PrimaryKey = PK 
_B._primarykey=_pk;
// [135]  DBase = dbName 
_B._dbase=_dbname;
// [136]  TableName = tblName 
_B._tablename=_tblname;
// [137]  types.Initialize 
_B._types.length=0;
// [138]  args.Initialize 
_B._args.length=0;
// [139]  types = Null 
_B._types=null;
// [140]  args = Null 
_B._args=null;
// [141]  query = {61} 
_B._query="";
// [142]  response = {62} 
_B._response="";
// [143]  error = {63} 
_B._error="";
// [144]  affectedRows = 0 
_B._affectedrows=0;
// [145]  json = {64} 
_B._json="";
// [146]  OK = False 
_B._ok=false;
// [147]  host = {65} 
_B._host="";
// [148]  username = {66} 
_B._username="";
// [149]  password = {67} 
_B._password="";
// [150]  DBase = {68} 
_B._dbase="";
// [151]  Return Me 
return _B;
// End Sub
};

// [155] Sub SchemaClear As BANanoMySQL 
_B.schemaclear=function() {
// [156]  Schema.clear 
_B._schema={};
// [157]  Return Me 
return _B;
// End Sub
};

// [160] Sub SetField(fldName As String, fldValue As Object) As BANanoMySQL 
_B.setfield=function(_fldname,_fldvalue) {
// [161]  Record.Put(fldName, fldValue) 
_B._record[_fldname]=_fldvalue;
// [162]  Return Me 
return _B;
// End Sub
};

// [166] Sub SchemaAddBoolean(bools As List) As BANanoMySQL 
_B.schemaaddboolean=function(_bools) {
var _b;
// [167]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [168]  Schema.Put(b, DB_BOOL) 
_B._schema[_b]=_B._db_bool;
// [169]  Next 
}
// [170]  AddBooleans(bools) 
_B.addbooleans(_bools,_B);
// [171]  Return Me 
return _B;
// End Sub
};

// [174] Sub SchemaFromDesign(vDesign As VMContainer) 
_B.schemafromdesign=function(_vdesign) {
// [175]  SchemaAddBoolean(vDesign.Booleans) 
_B.schemaaddboolean(_vdesign._booleans,_B);
// [176]  SchemaAddDate(vDesign.Dates) 
_B.schemaadddate(_vdesign._dates,_B);
// [177]  SchemaAddFloat(vDesign.Doubles) 
_B.schemaaddfloat(_vdesign._doubles,_B);
// [178]  SchemaAddInt(vDesign.Integers) 
_B.schemaaddint(_vdesign._integers,_B);
// [179]  SchemaAddText(vDesign.Strings) 
_B.schemaaddtext(_vdesign._strings,_B);
// End Sub
};

// [183] Sub SchemaAddInt(bools As List) As BANanoMySQL 
_B.schemaaddint=function(_bools) {
var _b;
// [184]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [185]  Schema.Put(b, DB_INT) 
_B._schema[_b]=_B._db_int;
// [186]  Next 
}
// [187]  AddIntegers(bools) 
_B.addintegers(_bools,_B);
// [188]  Return Me 
return _B;
// End Sub
};

// [191] Sub SchemaAddFloat(bools As List) As BANanoMySQL 
_B.schemaaddfloat=function(_bools) {
var _b;
// [192]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [193]  Schema.Put(b, DB_FLOAT) 
_B._schema[_b]=_B._db_float;
// [194]  Next 
}
// [195]  AddDoubles(bools) 
_B.adddoubles(_bools,_B);
// [196]  Return Me 
return _B;
// End Sub
};

// [199] Sub SchemaAddBlob(bools As List) As BANanoMySQL 
_B.schemaaddblob=function(_bools) {
var _b;
// [200]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [201]  Schema.Put(b, DB_BLOB) 
_B._schema[_b]=_B._db_blob;
// [202]  Next 
}
// [203]  AddBlobs(bools) 
_B.addblobs(_bools,_B);
// [204]  Return Me 
return _B;
// End Sub
};

// [207] Sub SchemaAddText(bools As List) As BANanoMySQL 
_B.schemaaddtext=function(_bools) {
var _b;
// [208]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [209]  Schema.Put(b, DB_STRING) 
_B._schema[_b]=_B._db_string;
// [210]  Next 
}
// [211]  AddStrings(bools) 
_B.addstrings(_bools,_B);
// [212]  Return Me 
return _B;
// End Sub
};

// [215] Sub SchemaCreateTable(tblName As String, PK As String, Auto As String) As BANanoMySQL 
_B.schemacreatetable=function(_tblname,_pk,_auto) {
// [216]  Return CreateTable(tblName, Schema, PK, Auto) 
return _B.createtable(_tblname,_B._schema,_pk,_auto,_B);
// End Sub
};

// [219] Sub SchemaAddDate(bools As List) As BANanoMySQL 
_B.schemaadddate=function(_bools) {
var _b;
// [220]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [221]  Schema.Put(b, DB_DATE) 
_B._schema[_b]=_B._db_date;
// [222]  Next 
}
// [223]  AddStrings(bools) 
_B.addstrings(_bools,_B);
// [224]  Return Me 
return _B;
// End Sub
};

// [228] Sub Json2Map(strJSON As String) As Map 
_B.json2map=function(_strjson) {
var _jsonx,_map1;
// [229]  Dim jsonx As BANanoJSONParser 
_jsonx={};
// [230]  Dim Map1 As Map 
_map1={};
// [231]  Map1.Initialize 
_map1={};
// [232]  Map1.clear 
_map1={};
// [233]  Try 
try {
// [234]  If strJSON.length > 0 Then 
if (_strjson.length>0) {
// [235]  jsonx.Initialize(strJSON) 
_jsonx=JSON.parse(_strjson);
// [236]  Map1 = jsonx.NextObject 
_map1=_jsonx;
// [237]  End If 
}
// [238]  Return Map1 
return _map1;
// [239]  Catch 
} catch(err) {
// [240]  Return Map1 
return _map1;
// [241]  End Try 
}
// End Sub
};

// [245] Sub Map2Json(mp As Map) As String 
_B.map2json=function(_mp) {
var _jsonx;
// [246]  Dim jsonx As BANanoJSONGenerator 
_jsonx={};
// [247]  jsonx.Initialize(mp) 
_jsonx=_mp;
// [248]  Return jsonx.ToString 
return JSON.stringify(_jsonx);
// End Sub
};

// [253] Private Sub EscapeField(f As String) As String 
_B.escapefield=function(_f) {
// [254]  Return {3} 
return "`" + _f + "`";
// End Sub
};

// [258] Sub Connection As BANanoMySQL 
_B.connection=function() {
// [259]  command = {69} 
_B._command="connection";
// [260]  Return Me 
return _B;
// End Sub
};

// [264] Sub CreateDatabase As BANanoMySQL 
_B.createdatabase=function() {
var _ssql;
// [265]  Dim sSQL As String = {4} 
_ssql="CREATE DATABASE IF NOT EXISTS " + _B.escapefield(_B._dbase,_B) + "";
// [266]  query = sSQL 
_B._query=_ssql;
// [267]  command = {70} 
_B._command="createdb";
// [268]  Return Me 
return _B;
// End Sub
};

// [272] Sub DropDataBase As BANanoMySQL 
_B.dropdatabase=function() {
var _ssql;
// [273]  Dim sSQL As String = {5} 
_ssql="DROP DATABASE " + _B.escapefield(_B._dbase,_B) + "";
// [274]  query = sSQL 
_B._query=_ssql;
// [275]  command = {71} 
_B._command="dropdb";
// [276]  Return Me 
return _B;
// End Sub
};

// [279] Sub Execute(strSQL As String) As BANanoMySQL 
_B.execute=function(_strsql) {
// [280]  query = strSQL 
_B._query=_strsql;
// [281]  command = {72} 
_B._command="execute";
// [282]  Return Me 
return _B;
// End Sub
};

// [286] public Sub CreateTable(tblName As String, tblFields As Map, PK As String, Auto As String) As BANanoMySQL 
_B.createtable=function(_tblname,_tblfields,_pk,_auto) {
var _fldname,_fldtype,_fldtot,_fldcnt,_sb,_query;
// [287]  Dim fldName As String 
_fldname="";
// [288]  Dim fldType As String 
_fldtype="";
// [289]  Dim fldTot As Int 
_fldtot=0;
// [290]  Dim fldCnt As Int 
_fldcnt=0;
// [291]  fldTot = tblFields.Size - 1 
_fldtot=Object.keys(_tblfields).length-1;
// [292]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [293]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [294]  sb.Append( {73} ) 
_sb.append("(");
// [295]  For fldCnt = 0 To fldTot 
for (_fldcnt=0;_fldcnt<=_fldtot;_fldcnt++) {
// [296]  fldName = tblFields.GetKeyAt(fldCnt) 
_fldname=banano_getB4JKeyAt(_tblfields,_fldcnt);
// [297]  fldType = tblFields.Get(fldName) 
_fldtype=_tblfields[_fldname];
// [298]  fldType = fldType.Replace( {74} , {75} ) 
_fldtype=_fldtype.split("STRING").join("TEXT");
// [299]  If fldCnt > 0 Then 
if (_fldcnt>0) {
// [300]  sb.Append( {76} ) 
_sb.append(", ");
// [301]  End If 
}
// [302]  sb.Append(EscapeField(fldName)) 
_sb.append(_B.escapefield(_fldname,_B));
// [303]  sb.Append( {77} ) 
_sb.append(" ");
// [304]  sb.Append(fldType) 
_sb.append(_fldtype);
// [305]  If fldName.EqualsIgnoreCase(PK) Then 
if (_fldname.equalsIgnoreCase(_pk)) {
// [306]  sb.Append( {78} ) 
_sb.append(" NOT NULL PRIMARY KEY");
// [307]  End If 
}
// [308]  If fldName.EqualsIgnoreCase(Auto) Then 
if (_fldname.equalsIgnoreCase(_auto)) {
// [309]  sb.Append( {79} ) 
_sb.append(" AUTO_INCREMENT");
// [310]  End If 
}
// [311]  Next 
}
// [312]  sb.Append( {80} ) 
_sb.append(")");
// [314]  Dim query As String = {81} & EscapeField(tblName) & {82} & sb.ToString 
_query="CREATE TABLE IF NOT EXISTS "+_B.escapefield(_tblname,_B)+" "+_sb.toString();
// [315]  query = query 
_query=_query;
// [316]  command = {83} 
_B._command="createtable";
// [317]  Return Me 
return _B;
// End Sub
};

// [321] public Sub DropTable As BANanoMySQL 
_B.droptable=function() {
var _query;
// [323]  Dim query As String = {84} & EscapeField(TableName) 
_query="DROP TABLE "+_B.escapefield(_B._tablename,_B);
// [324]  query = query 
_query=_query;
// [325]  command = {85} 
_B._command="droptable";
// [326]  Return Me 
return _B;
// End Sub
};

// [330] private Sub GetMapTypes(sourceMap As Map) As List 
_B.getmaptypes=function(_sourcemap) {
var _listoftypes,_icnt,_itot,_col,_coltype;
// [331]  Dim listOfTypes As List 
_listoftypes=[];
// [332]  listOfTypes.Initialize 
_listoftypes.length=0;
// [333]  Dim iCnt As Int 
_icnt=0;
// [334]  Dim iTot As Int 
_itot=0;
// [335]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [336]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [337]  Dim col As String = sourceMap.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_sourcemap,_icnt);
// [338]  Dim colType As String = recType.GetDefault(col, {86} ) 
_coltype=(_B._rectype[_col] || "STRING");
// [339]  Select Case colType 
switch ("" + _coltype) {
// [340]  Case {87} , {88} , {89} , {90} 
case "" + "VARCHAR(20)":
case "" + "VARCHAR(10)":
case "" + "VARCHAR(30)":
case "" + "VARCHAR(40)":
// [341]  listOfTypes.add( {91} ) 
_listoftypes.push("s");
// [342]  Case {92} , {93} , {94} 
break;
case "" + "VARCHAR(50)":
case "" + "VARCHAR(100)":
case "" + "VARCHAR(255)":
// [343]  listOfTypes.add( {95} ) 
_listoftypes.push("s");
// [344]  Case {96} , {97} , {98} , {99} , {100} , {101} 
break;
case "" + "STRING":
case "" + "VARCHAR":
case "" + "TEXT":
case "" + "DATE":
case "" + "DATETIME":
case "" + "NVARCHAR":
// [345]  listOfTypes.add( {102} ) 
_listoftypes.push("s");
// [346]  Case {103} , {104} , {105} , {106} 
break;
case "" + "INTEGER":
case "" + "INT":
case "" + "BOOL":
case "" + "BOOLEAN":
// [347]  listOfTypes.add( {107} ) 
_listoftypes.push("i");
// [348]  Case {108} , {109} , {110} 
break;
case "" + "REAL":
case "" + "FLOAT":
case "" + "DOUBLE":
// [349]  listOfTypes.add( {111} ) 
_listoftypes.push("d");
// [350]  Case {112} 
break;
case "" + "BLOB":
// [351]  listOfTypes.Add( {113} ) 
_listoftypes.push("b");
// [352]  Case Else 
break;
default:
// [353]  listOfTypes.add( {114} ) 
_listoftypes.push("s");
// [354]  End Select 
break;
}
// [355]  Next 
}
// [356]  Return listOfTypes 
return _listoftypes;
// End Sub
};

// [360] private Sub GetMapValues(sourceMap As Map) As List 
_B.getmapvalues=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [361]  Dim listOfValues As List 
_listofvalues=[];
// [362]  listOfValues.Initialize 
_listofvalues.length=0;
// [363]  Dim iCnt As Int 
_icnt=0;
// [364]  Dim iTot As Int 
_itot=0;
// [365]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [366]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [367]  Dim value As String = sourceMap.GetValueAt(iCnt) 
_value=banano_getB4JValueAt(_sourcemap,_icnt);
// [368]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [369]  Next 
}
// [370]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [374] private Sub GetMapKeys(sourceMap As Map) As List 
_B.getmapkeys=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [375]  Dim listOfValues As List 
_listofvalues=[];
// [376]  listOfValues.Initialize 
_listofvalues.length=0;
// [377]  Dim iCnt As Int 
_icnt=0;
// [378]  Dim iTot As Int 
_itot=0;
// [379]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [380]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [381]  Dim value As String = sourceMap.GetKeyAt(iCnt) 
_value=banano_getB4JKeyAt(_sourcemap,_icnt);
// [382]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [383]  Next 
}
// [384]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [389] Sub Insert As BANanoMySQL 
_B.insert=function() {
var _sb,_columns,_values,_listofvalues,_listoftypes,_icnt,_itot,_col;
// [390]  If Schema.Size = 0 Then 
if (Object.keys(_B._schema).length==0) {
// [391]  Log( {6} ) 
console.log("BANanoMySQL.Insert: '" + _B._tablename + "' schema is not set!");
// [392]  End If 
}
// [393]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [394]  Dim columns As StringBuilder 
_columns=new StringBuilder();
// [395]  Dim values As StringBuilder 
_values=new StringBuilder();
// [396]  Dim listOfValues As List = GetMapValues(Record) 
_listofvalues=_B.getmapvalues(_B._record,_B);
// [397]  Dim listOfTypes As List = GetMapTypes(Record) 
_listoftypes=_B.getmaptypes(_B._record,_B);
// [398]  Dim iCnt As Int 
_icnt=0;
// [399]  Dim iTot As Int 
_itot=0;
// [400]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [401]  columns.Initialize 
_columns.init();
_columns.isinitialized=true;
// [402]  values.Initialize 
_values.init();
_values.isinitialized=true;
// [403]  sb.Append( {7} ) 
_sb.append("INSERT INTO " + _B.escapefield(_B._tablename,_B) + " (");
// [404]  iTot = Record.Size - 1 
_itot=Object.keys(_B._record).length-1;
// [405]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [406]  Dim col As String = Record.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_B._record,_icnt);
// [407]  If iCnt > 0 Then 
if (_icnt>0) {
// [408]  columns.Append( {115} ) 
_columns.append(", ");
// [409]  values.Append( {116} ) 
_values.append(", ");
// [410]  End If 
}
// [411]  columns.Append(EscapeField(col)) 
_columns.append(_B.escapefield(_col,_B));
// [412]  values.Append( {117} ) 
_values.append("?");
// [413]  Next 
}
// [414]  sb.Append(columns.ToString) 
_sb.append(_columns.toString());
// [415]  sb.Append( {118} ) 
_sb.append(") VALUES (");
// [416]  sb.Append(values.ToString) 
_sb.append(_values.toString());
// [417]  sb.Append( {119} ) 
_sb.append(")");
// [418]  query = sb.ToString 
_B._query=_sb.toString();
// [419]  args = listOfValues 
_B._args=_listofvalues;
// [420]  types = listOfTypes 
_B._types=_listoftypes;
// [421]  command = {120} 
_B._command="insert";
// [422]  Return Me 
return _B;
// End Sub
};

// [427] Sub InsertReplace As BANanoMySQL 
_B.insertreplace=function() {
var _sb,_columns,_values,_listofvalues,_listoftypes,_icnt,_itot,_col;
// [428]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [429]  Dim columns As StringBuilder 
_columns=new StringBuilder();
// [430]  Dim values As StringBuilder 
_values=new StringBuilder();
// [431]  Dim listOfValues As List = GetMapValues(Record) 
_listofvalues=_B.getmapvalues(_B._record,_B);
// [432]  Dim listOfTypes As List = GetMapTypes(Record) 
_listoftypes=_B.getmaptypes(_B._record,_B);
// [433]  Dim iCnt As Int 
_icnt=0;
// [434]  Dim iTot As Int 
_itot=0;
// [435]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [436]  columns.Initialize 
_columns.init();
_columns.isinitialized=true;
// [437]  values.Initialize 
_values.init();
_values.isinitialized=true;
// [438]  sb.Append( {8} ) 
_sb.append("REPLACE INTO " + _B.escapefield(_B._tablename,_B) + " (");
// [439]  iTot = Record.Size - 1 
_itot=Object.keys(_B._record).length-1;
// [440]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [441]  Dim col As String = Record.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_B._record,_icnt);
// [442]  If iCnt > 0 Then 
if (_icnt>0) {
// [443]  columns.Append( {121} ) 
_columns.append(", ");
// [444]  values.Append( {122} ) 
_values.append(", ");
// [445]  End If 
}
// [446]  columns.Append(EscapeField(col)) 
_columns.append(_B.escapefield(_col,_B));
// [447]  values.Append( {123} ) 
_values.append("?");
// [448]  Next 
}
// [449]  sb.Append(columns.ToString) 
_sb.append(_columns.toString());
// [450]  sb.Append( {124} ) 
_sb.append(") VALUES (");
// [451]  sb.Append(values.ToString) 
_sb.append(_values.toString());
// [452]  sb.Append( {125} ) 
_sb.append(")");
// [453]  query = sb.ToString 
_B._query=_sb.toString();
// [454]  args = listOfValues 
_B._args=_listofvalues;
// [455]  types = listOfTypes 
_B._types=_listoftypes;
// [456]  command = {126} 
_B._command="replace";
// [457]  Return Me 
return _B;
// End Sub
};

// [461] Sub Delete(primaryValue As String) As BANanoMySQL 
_B.delete=function(_primaryvalue) {
var _qw;
// [462]  Dim qw As Map = CreateMap() 
_qw={};
// [463]  qw.Put(PrimaryKey, primaryValue) 
_qw[_B._primarykey]=_primaryvalue;
// [464]  DeleteWhere(TableName, qw, Array( {127} )) 
_B.deletewhere(_B._tablename,_qw,["="],_B);
// [465]  Return Me 
return _B;
// End Sub
};

// [470] private Sub JoinFields(delimiter As String, lst As List) As String 
_B.joinfields=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [471]  Dim i As Int 
_i=0;
// [472]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [473]  Dim fld As String 
_fld="";
// [474]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [475]  fld = lst.Get(0) 
_fld=_lst[0];
// [476]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [477]  sb.Append(fld) 
_sb.append(_fld);
// [478]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [479]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [480]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [481]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [482]  Next 
}
// [483]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [487] private Sub Join(delimiter As String, lst As List) As String 
_B.join=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [488]  Dim i As Int 
_i=0;
// [489]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [490]  Dim fld As String 
_fld="";
// [491]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [492]  fld = lst.Get(0) 
_fld=_lst[0];
// [493]  sb.Append(fld) 
_sb.append(_fld);
// [494]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [495]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [496]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [497]  Next 
}
// [498]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [502] Sub Read(primaryValue As String) As BANanoMySQL 
_B.read=function(_primaryvalue) {
var _qw;
// [503]  Dim qw As Map = CreateMap() 
_qw={};
// [504]  qw.Put(PrimaryKey, primaryValue) 
_qw[_B._primarykey]=_primaryvalue;
// [505]  SelectWhere(TableName, Array( {128} ), qw, Null, Array(PrimaryKey)) 
_B.selectwhere(_B._tablename,["*"],_qw,null,[_B._primarykey],_B);
// [506]  Return Me 
return _B;
// End Sub
};

// [510] Sub Exists(primaryValue As String) As BANanoMySQL 
_B.exists=function(_primaryvalue) {
var _qw;
// [511]  Dim qw As Map = CreateMap() 
_qw={};
// [512]  qw.Put(PrimaryKey, primaryValue) 
_qw[_B._primarykey]=_primaryvalue;
// [513]  SelectWhere(TableName, Array(PrimaryKey), qw, Null, Array(PrimaryKey)) 
_B.selectwhere(_B._tablename,[_B._primarykey],_qw,null,[_B._primarykey],_B);
// [514]  Return Me 
return _B;
// End Sub
};

// [518] Sub SelectWhere(tblName As String, tblfields As List, tblWhere As Map, operators As List, orderBy As List) As BANanoMySQL 
_B.selectwhere=function(_tblname,_tblfields,_tblwhere,_operators,_orderby) {
var _listoftypes,_listofvalues,_fld1,_selfields,_sb,_i,_iwhere,_col,_oper,_stro;
// [519]  If Schema.Size = 0 Then 
if (Object.keys(_B._schema).length==0) {
// [520]  Log( {9} ) 
console.log("BANanoMySQL.SelectWhere: '" + _tblname + "' schema is not set!");
// [521]  End If 
}
// [522]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [523]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [524]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [526]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [527]  Dim selFIelds As String = {129} 
_selfields="";
// [528]  Select Case fld1 
switch ("" + _fld1) {
// [529]  Case {130} 
case "" + "*":
// [530]  selFIelds = {131} 
_selfields="*";
// [531]  Case Else 
break;
default:
// [532]  selFIelds = JoinFields( {132} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [533]  End Select 
break;
}
// [534]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [535]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [536]  sb.Append( {10} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [537]  Dim i As Int 
_i=0;
// [538]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [539]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [540]  If i > 0 Then 
if (_i>0) {
// [541]  sb.Append( {133} ) 
_sb.append(" AND ");
// [542]  End If 
}
// [543]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [544]  Dim oper As String = operators.Get(i) 
_oper=_operators[_i];
// [545]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [546]  sb.Append( {11} ) 
_sb.append(" " + _oper + " ?");
// [547]  Next 
}
// [548]  If orderBy <> Null Then 
if (_orderby!=null) {
// [550]  Dim stro As String = JoinFields( {134} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [551]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [552]  sb.Append( {135} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [553]  End If 
}
// [554]  End If 
}
// [555]  query = sb.tostring 
_B._query=_sb.toString();
// [556]  args = listOfValues 
_B._args=_listofvalues;
// [557]  types = listOfTypes 
_B._types=_listoftypes;
// [558]  command = {136} 
_B._command="select";
// [559]  Return Me 
return _B;
// End Sub
};

// [563] Sub SelectDistinctWhere(tblName As String, tblfields As List, tblWhere As Map, operators As List, orderBy As List) As BANanoMySQL 
_B.selectdistinctwhere=function(_tblname,_tblfields,_tblwhere,_operators,_orderby) {
var _listoftypes,_listofvalues,_fld1,_selfields,_sb,_i,_iwhere,_col,_oper,_stro;
// [564]  If Schema.Size = 0 Then 
if (Object.keys(_B._schema).length==0) {
// [565]  Log( {12} ) 
console.log("BANanoMySQL.SelectWhere: '" + _tblname + "' schema is not set!");
// [566]  End If 
}
// [567]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [568]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [569]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [571]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [572]  Dim selFIelds As String = {137} 
_selfields="";
// [573]  Select Case fld1 
switch ("" + _fld1) {
// [574]  Case {138} 
case "" + "*":
// [575]  selFIelds = {139} 
_selfields="*";
// [576]  Case Else 
break;
default:
// [577]  selFIelds = JoinFields( {140} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [578]  End Select 
break;
}
// [579]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [580]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [581]  sb.Append( {13} ) 
_sb.append("SELECT DISTINCT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [582]  Dim i As Int 
_i=0;
// [583]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [584]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [585]  If i > 0 Then 
if (_i>0) {
// [586]  sb.Append( {141} ) 
_sb.append(" AND ");
// [587]  End If 
}
// [588]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [589]  Dim oper As String = operators.Get(i) 
_oper=_operators[_i];
// [590]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [591]  sb.Append( {14} ) 
_sb.append(" " + _oper + " ?");
// [592]  Next 
}
// [593]  If orderBy <> Null Then 
if (_orderby!=null) {
// [595]  Dim stro As String = JoinFields( {142} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [596]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [597]  sb.Append( {143} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [598]  End If 
}
// [599]  End If 
}
// [600]  query = sb.tostring 
_B._query=_sb.toString();
// [601]  args = listOfValues 
_B._args=_listofvalues;
// [602]  types = listOfTypes 
_B._types=_listoftypes;
// [603]  command = {144} 
_B._command="select";
// [604]  Return Me 
return _B;
// End Sub
};

// [608] Sub DeleteAll As BANanoMySQL 
_B.deleteall=function() {
var _sb;
// [609]  Dim sb As String = {15} 
_sb="DELETE FROM " + _B.escapefield(_B._tablename,_B) + "";
// [610]  query = sb 
_B._query=_sb;
// [611]  command = {145} 
_B._command="delete";
// [612]  Return Me 
return _B;
// End Sub
};

// [615] private Sub EQOperators(sm As Map) As List 
_B.eqoperators=function(_sm) {
var _nl,_k;
// [616]  Dim nl As List 
_nl=[];
// [617]  nl.initialize 
_nl.length=0;
// [618]  For Each k As String In sm.Keys 
var _kKeys = Object.keys(_sm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [619]  nl.Add( {146} ) 
_nl.push("=");
// [620]  Next 
}
// [621]  Return nl 
return _nl;
// End Sub
};

// [626] Sub DeleteWhere(tblName As String, tblWhere As Map, operators As List) As BANanoMySQL 
_B.deletewhere=function(_tblname,_tblwhere,_operators) {
var _listoftypes,_listofvalues,_sb,_i,_iwhere,_col,_opr;
// [627]  If Schema.Size = 0 Then 
if (Object.keys(_B._schema).length==0) {
// [628]  Log( {16} ) 
console.log("BANanoMySQL.DeleteWhere: '" + _tblname + "' schema is not set!");
// [629]  End If 
}
// [630]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [631]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [632]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [633]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [634]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [635]  sb.Append( {17} ) 
_sb.append("DELETE FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [636]  Dim i As Int 
_i=0;
// [637]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [638]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [639]  If i > 0 Then 
if (_i>0) {
// [640]  sb.Append( {147} ) 
_sb.append(" AND ");
// [641]  End If 
}
// [642]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [643]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [644]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [645]  sb.Append( {18} ) 
_sb.append(" " + _opr + " ?");
// [646]  Next 
}
// [647]  query = sb.tostring 
_B._query=_sb.toString();
// [648]  args = listOfValues 
_B._args=_listofvalues;
// [649]  types = listOfTypes 
_B._types=_listoftypes;
// [650]  command = {148} 
_B._command="delete";
// [651]  Return Me 
return _B;
// End Sub
};

// [656] Sub SelectAll(tblfields As List, orderBy As List) As BANanoMySQL 
_B.selectall=function(_tblfields,_orderby) {
var _fld1,_selfields,_sb,_stro;
// [658]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [659]  Dim selFIelds As String = {149} 
_selfields="";
// [660]  Select Case fld1 
switch ("" + _fld1) {
// [661]  Case {150} 
case "" + "*":
// [662]  selFIelds = {151} 
_selfields="*";
// [663]  Case Else 
break;
default:
// [664]  selFIelds = JoinFields( {152} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [665]  End Select 
break;
}
// [666]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [667]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [668]  sb.Append( {19} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_B._tablename,_B) + "");
// [669]  If orderBy <> Null Then 
if (_orderby!=null) {
// [671]  Dim stro As String = JoinFields( {153} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [672]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [673]  sb.Append( {154} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [674]  End If 
}
// [675]  End If 
}
// [676]  query = sb.tostring 
_B._query=_sb.toString();
// [677]  command = {155} 
_B._command="select";
// [678]  Return Me 
return _B;
// End Sub
};

// [682] Sub SelectDistinctAll(tblfields As List, orderBy As List) As BANanoMySQL 
_B.selectdistinctall=function(_tblfields,_orderby) {
var _fld1,_selfields,_sb,_stro;
// [684]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [685]  Dim selFIelds As String = {156} 
_selfields="";
// [686]  Select Case fld1 
switch ("" + _fld1) {
// [687]  Case {157} 
case "" + "*":
// [688]  selFIelds = {158} 
_selfields="*";
// [689]  Case Else 
break;
default:
// [690]  selFIelds = JoinFields( {159} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [691]  End Select 
break;
}
// [692]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [693]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [694]  sb.Append( {20} ) 
_sb.append("SELECT DISTINCT " + _selfields + " FROM " + _B.escapefield(_B._tablename,_B) + "");
// [695]  If orderBy <> Null Then 
if (_orderby!=null) {
// [697]  Dim stro As String = JoinFields( {160} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [698]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [699]  sb.Append( {161} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [700]  End If 
}
// [701]  End If 
}
// [702]  query = sb.tostring 
_B._query=_sb.toString();
// [703]  command = {162} 
_B._command="select";
// [704]  Return Me 
return _B;
// End Sub
};

// [707] Sub Build As Map 
_B.build=function() {
var _b;
// [708]  Dim b As Map = CreateMap() 
_b={};
// [709]  b.Put( {163} , command) 
_b["command"]=_B._command;
// [710]  b.Put( {164} , query) 
_b["query"]=_B._query;
// [711]  b.Put( {165} , args) 
_b["args"]=_B._args;
// [712]  b.Put( {166} , types) 
_b["types"]=_B._types;
// [713]  Return b 
return _b;
// End Sub
};

// [717] Sub BuildDynamic As Map 
_B.builddynamic=function() {
var _b;
// [718]  Dim b As Map = CreateMap() 
_b={};
// [719]  b.Put( {167} , command) 
_b["command"]=_B._command;
// [720]  b.Put( {168} , query) 
_b["query"]=_B._query;
// [721]  b.Put( {169} , args) 
_b["args"]=_B._args;
// [722]  b.Put( {170} , types) 
_b["types"]=_B._types;
// [723]  b.put( {171} , host) 
_b["host"]=_B._host;
// [724]  b.Put( {172} , username) 
_b["username"]=_B._username;
// [725]  b.Put( {173} , password) 
_b["password"]=_B._password;
// [726]  b.Put( {174} , DBase) 
_b["dbname"]=_B._dbase;
// [727]  Return b 
return _b;
// End Sub
};

// [732] private Sub AddStrings(fieldNames As List) As BANanoMySQL 
_B.addstrings=function(_fieldnames) {
var _strfld;
// [733]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [734]  recType.Put(strfld, {175} ) 
_B._rectype[_strfld]="STRING";
// [735]  Next 
}
// [736]  Return Me 
return _B;
// End Sub
};

// [740] private Sub AddIntegers(fieldNames As List) As BANanoMySQL 
_B.addintegers=function(_fieldnames) {
var _strfld;
// [741]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [742]  recType.Put(strfld, {176} ) 
_B._rectype[_strfld]="INT";
// [743]  Next 
}
// [744]  Return Me 
return _B;
// End Sub
};

// [748] private Sub AddDoubles(fieldNames As List) As BANanoMySQL 
_B.adddoubles=function(_fieldnames) {
var _strfld;
// [749]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [750]  recType.Put(strfld, {177} ) 
_B._rectype[_strfld]="DOUBLE";
// [751]  Next 
}
// [752]  Return Me 
return _B;
// End Sub
};

// [756] private Sub AddBooleans(fieldNames As List) As BANanoMySQL 
_B.addbooleans=function(_fieldnames) {
var _strfld;
// [757]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [758]  recType.Put(strfld, {178} ) 
_B._rectype[_strfld]="BOOL";
// [759]  Next 
}
// [760]  Return Me 
return _B;
// End Sub
};

// [763] Sub FirstRecord As Map 
_B.firstrecord=function() {
var _rec;
// [764]  Dim rec As Map = result.Get(0) 
_rec=_B._result[0];
// [765]  Return rec 
return _rec;
// End Sub
};

// [769] private Sub AddBlobs(fieldNames As List) As BANanoMySQL 
_B.addblobs=function(_fieldnames) {
var _strfld;
// [770]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [771]  recType.Put(strfld, {179} ) 
_B._rectype[_strfld]="BLOB";
// [772]  Next 
}
// [773]  Return Me 
return _B;
// End Sub
};

// [776] Sub Update(priValue As String) As BANanoMySQL 
_B.update=function(_privalue) {
var _tblwhere;
// [777]  Dim tblWhere As Map = CreateMap() 
_tblwhere={};
// [778]  tblWhere.Put(PrimaryKey, priValue) 
_tblwhere[_B._primarykey]=_privalue;
// [779]  UpdateWhere(TableName, Record, tblWhere, Null) 
_B.updatewhere(_B._tablename,_B._record,_tblwhere,null,_B);
// [780]  Return Me 
return _B;
// End Sub
};

// [784] Sub UpdateWhere(tblName As String, tblfields As Map, tblWhere As Map, operators As List) As BANanoMySQL 
_B.updatewhere=function(_tblname,_tblfields,_tblwhere,_operators) {
var _listoftypes,_listoftypes1,_listofvalues,_listofvalues1,_sb,_i,_itot,_col,_iwhere,_opr;
// [785]  If Schema.Size = 0 Then 
if (Object.keys(_B._schema).length==0) {
// [786]  Log( {21} ) 
console.log("BANanoMySQL.UpdateWhere: '" + _tblname + "' schema is not set!");
// [787]  End If 
}
// [788]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [789]  Dim listOfTypes As List = GetMapTypes(tblfields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [790]  Dim listOfTypes1 As List = GetMapTypes(tblWhere) 
_listoftypes1=_B.getmaptypes(_tblwhere,_B);
// [791]  listOfTypes.AddAll(listOfTypes1) 
_listoftypes.splice(_listoftypes.length,0,..._listoftypes1);
// [792]  Dim listOfValues As List = GetMapValues(tblfields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [793]  Dim listOfValues1 As List = GetMapValues(tblWhere) 
_listofvalues1=_B.getmapvalues(_tblwhere,_B);
// [794]  listOfValues.AddAll(listOfValues1) 
_listofvalues.splice(_listofvalues.length,0,..._listofvalues1);
// [795]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [796]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [797]  sb.Append( {22} ) 
_sb.append("UPDATE " + _B.escapefield(_tblname,_B) + " SET ");
// [798]  Dim i As Int 
_i=0;
// [799]  Dim iTot As Int = tblfields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [800]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [801]  Dim col As String = tblfields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [802]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [803]  If i <> iTot Then 
if (_i!=_itot) {
// [804]  sb.Append( {180} ) 
_sb.append("= ?,");
// [805]  Else 
} else {
// [806]  sb.Append( {181} ) 
_sb.append("= ?");
// [807]  End If 
}
// [808]  Next 
}
// [809]  sb.Append( {23} ) 
_sb.append(" WHERE ");
// [810]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [811]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [812]  If i > 0 Then 
if (_i>0) {
// [813]  sb.Append( {182} ) 
_sb.append(" AND ");
// [814]  End If 
}
// [815]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [816]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [817]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [818]  sb.Append( {24} ) 
_sb.append(" " + _opr + " ?");
// [819]  Next 
}
// [820]  query = sb.tostring 
_B._query=_sb.toString();
// [821]  args = listOfValues 
_B._args=_listofvalues;
// [822]  types = listOfTypes 
_B._types=_listoftypes;
// [823]  command = {183} 
_B._command="update";
// [824]  Return Me 
return _B;
// End Sub
};

// [829] Sub UpdateAll(tblFields As Map, operators As List) As BANanoMySQL 
_B.updateall=function(_tblfields,_operators) {
var _listoftypes,_args,_sb,_i,_itot,_col,_oper;
// [830]  If operators = Null Then operators = EQOperators(tblFields) 
if (_operators==null) {_operators=_B.eqoperators(_tblfields,_B);}
// [831]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [832]  Dim args As List = GetMapValues(tblFields) 
_args=_B.getmapvalues(_tblfields,_B);
// [833]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [834]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [835]  sb.Append( {25} ) 
_sb.append("UPDATE " + _B.escapefield(_B._tablename,_B) + " SET ");
// [836]  Dim i As Int 
_i=0;
// [837]  Dim iTot As Int = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [838]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [839]  Dim col As String = tblFields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [840]  Dim oper As String = operators.Get(i) 
_oper=_operators[_i];
// [841]  sb.Append(col) 
_sb.append(_col);
// [842]  If i <> iTot Then 
if (_i!=_itot) {
// [843]  sb.Append( {184} ) 
_sb.append(" = ?,");
// [844]  Else 
} else {
// [845]  sb.Append( {26} ) 
_sb.append(" " + _oper + " ?");
// [846]  End If 
}
// [847]  Next 
}
// [848]  query = sb.tostring 
_B._query=_sb.toString();
// [849]  args = args 
_args=_args;
// [850]  types = listOfTypes 
_B._types=_listoftypes;
// [851]  command = {185} 
_B._command="update";
// [852]  Return Me 
return _B;
// End Sub
};

}
/* =========================== BANanoOXML  =========================== */
function banano_bananovuematerial_bananooxml() {
var _B=this;
_B._workbook=null;

_B._oxml=null;

_B._fname="";

_B._borderthick="thick";

_B._bordernone="none";

_B._borderthin="thin";

_B._bordermedium="medium";

_B._borderdashed="dashed";

_B._borderdotted="dotted";

_B._borderdouble="double";

_B._borderhair="hair";

_B._bordermediumdashed="mediumDashed";

_B._borderdashdot="dashDot";

_B._bordermediumdashdot="mediumDashDot";

_B._borderdashdotdot="dashDotDot";

_B._bordermediumdashdotdot="mediumDashDotDot";

_B._borderslantdashdot="slantDashDot";

_B._colors_red="F44336";

_B._colors_pink="E91E63";

_B._colors_purple="9C27B0";

_B._colors_deeppurple="673AB7";

_B._colors_indigo="3F51B5";

_B._colors_blue="2196F3";

_B._colors_lightblue="03A9F4";

_B._colors_cyan="00BCD4";

_B._colors_teal="009688";

_B._colors_green="4CAF50";

_B._colors_lightgreen="8BC34A";

_B._colors_lime="CDDC39";

_B._colors_yellow="ffe821";

_B._colors_amber="FFC107";

_B._colors_orange="FF9800";

_B._colors_deeporange="FF5722";

_B._colors_brown="795548";

_B._colors_grey="9E9E9E";

_B._colors_bluegrey="607D8B";

_B._colors_black="000000";

_B._colors_white="ffffff";

_B._colors_transparent="transparent";

_B._pattern_darkdown="darkDown";

_B._pattern_darkgray="darkGray";

_B._pattern_darkgrid="darkGrid";

_B._pattern_darkhorizontal="darkHorizontal";

_B._pattern_darktrellis="darkTrellis";

_B._pattern_darkup="darkUp";

_B._pattern_darkvertical="darkVertical";

_B._pattern_gray0625="gray0625";

_B._pattern_gray125="gray125";

_B._pattern_lightdown="lightDown";

_B._pattern_lightgray="lightGray";

_B._pattern_lightgrid="lightGrid";

_B._pattern_lighthorizontal="lightHorizontal";

_B._pattern_lighttrellis="lightTrellis";

_B._pattern_lightup="lightUp";

_B._pattern_lightvertical="lightVertical";

_B._pattern_mediumgray="mediumGray";

_B._pattern_none="none";

_B._pattern_solid="solid";

// [73] Public Sub Initialize(fileName As String) 
_B.initialize=function(_filename) {
// [74]  BANano.DependsOnAsset( {55} ) 
;
// [75]  BANano.DependsOnAsset( {56} ) 
;
// [76]  BANano.DependsOnAsset( {57} ) 
;
// [77]  BANano.DependsOnAsset( {58} ) 
;
// [79]  oxml.Initialize( {59} ) 
_B._oxml=oxml;
// [80]  WorkBook = oxml.RunMethod( {60} , Null) 
_B._workbook=_B._oxml["xlsx"]();
// [81]  fName = fileName 
_B._fname=_filename;
// End Sub
};

// [85] Sub CreateStyle As OXMLStyle 
_B.createstyle=function() {
var _s;
// [86]  Dim s As OXMLStyle 
_s= new banano_bananovuematerial_oxmlstyle();
// [87]  s.Initialize 
_s.initialize();
// [88]  s.bold = False 
_s._bold=false;
// [89]  s.italic = False 
_s._italic=false;
// [90]  s.underline = False 
_s._underline=false;
// [91]  s.strike = False 
_s._strike=false;
// [92]  s.fontSize = False 
_s._fontsize=false;
// [93]  s.fontColor = {61} 
_s._fontcolor="";
// [94]  s.fontName= {62} 
_s._fontname="";
// [95]  s.fontFamily = {63} 
_s._fontfamily="";
// [96]  s.scheme = {64} 
_s._scheme="";
// [97]  s.numberFrmat = {65} 
_s._numberfrmat="";
// [98]  s.bordercolor = {66} 
_s._bordercolor="";
// [99]  s.hAlignment = {67} 
_s._halignment="";
// [100]  s.vAlignment = {68} 
_s._valignment="";
// [101]  s.FillPattern = {69} 
_s._fillpattern="";
// [102]  s.FillForeColor = {70} 
_s._fillforecolor="";
// [103]  s.FillBackground = {71} 
_s._fillbackground="";
// [104]  Return s 
return _s;
// End Sub
};

// [108] Sub SetStyle(rc As BANanoObject, Style As OXMLStyle) 
_B.setstyle=function(_rc,_style) {
var _obj,_border,_fill;
// [109]  Dim obj As Map = CreateMap() 
_obj={};
// [110]  If Style.bold Then obj.Put( {72} , Style.bold) 
if (_style._bold) {_obj["bold"]=_style._bold;}
// [111]  If Style.italic Then obj.Put( {73} , Style.italic) 
if (_style._italic) {_obj["italic"]=_style._italic;}
// [112]  If Style.underline Then obj.Put( {74} , Style.underline) 
if (_style._underline) {_obj["underline"]=_style._underline;}
// [113]  If Style.strike Then obj.Put( {75} , Style.strike) 
if (_style._strike) {_obj["strike"]=_style._strike;}
// [114]  If Style.fontSize Then obj.Put( {76} , Style.fontSize) 
if (_style._fontsize) {_obj["fontSize"]=_style._fontsize;}
// [115]  If Style.fontColor <> {77} Then obj.Put( {78} , Style.fontColor) 
if (_style._fontcolor!="") {_obj["fontColor"]=_style._fontcolor;}
// [116]  If Style.fontName <> {79} Then obj.Put( {80} , Style.fontName) 
if (_style._fontname!="") {_obj["fontName"]=_style._fontname;}
// [117]  If Style.fontFamily <> {81} Then obj.Put( {82} , Style.fontFamily) 
if (_style._fontfamily!="") {_obj["fontFamily"]=_style._fontfamily;}
// [118]  If Style.scheme <> {83} Then obj.Put( {84} , Style.scheme) 
if (_style._scheme!="") {_obj["scheme"]=_style._scheme;}
// [119]  If Style.numberFrmat <> {85} Then obj.Put( {86} , Style.numberFrmat) 
if (_style._numberfrmat!="") {_obj["numberFormat"]=_style._numberfrmat;}
// [120]  If Style.vAlignment <> {87} Then obj.Put( {88} , Style.vAlignment) 
if (_style._valignment!="") {_obj["vAlignment"]=_style._valignment;}
// [121]  If Style.hAlignment <> {89} Then obj.Put( {90} , Style.hAlignment) 
if (_style._halignment!="") {_obj["hAlignment"]=_style._halignment;}
// [122]  If Style.borderColor <> {91} Or Style.borderThickness <> {92} Then 
if (_style._bordercolor!="" || _style._borderthickness!="") {
// [123]  Dim border As Map = CreateMap() 
_border={};
// [124]  border.Put( {93} , Style.bordercolor) 
_border["color"]=_style._bordercolor;
// [125]  border.Put( {94} , Style.borderthickness) 
_border["style"]=_style._borderthickness;
// [126]  obj.Put( {95} , border) 
_obj["border"]=_border;
// [127]  End If 
}
// [129]  If Style.FillPattern <> {96} And Style.FillForeColor <> {97} And Style.FillBackground <> {98} Then 
if (_style._fillpattern!="" && _style._fillforecolor!="" && _style._fillbackground!="") {
// [130]  Dim fill As Map = CreateMap() 
_fill={};
// [131]  fill.Put( {99} , Style.FillPattern) 
_fill["pattern"]=_style._fillpattern;
// [132]  fill.Put( {100} , Style.FillForeColor) 
_fill["foreColor"]=_style._fillforecolor;
// [133]  fill.Put( {101} , Style.FillBackground) 
_fill["backColor"]=_style._fillbackground;
// [134]  obj.Put( {102} , fill) 
_obj["fill"]=_fill;
// [135]  End If 
}
// [136]  rc.RunMethod( {103} , Array(obj)) 
_rc["style"](_obj);
// End Sub
};

// [140] Sub Merge(sheet As BANanoObject, range As String) As BANanoOXML 
_B.merge=function(_sheet,_range) {
// [141]  sheet.RunMethod( {104} , Array(range)) 
_sheet["merge"](_range);
// [142]  Return Me 
return _B;
// End Sub
};

// [146] Sub GetRow(sheet As BANanoObject, rowPos As Int, colPos As Int) As BANanoObject 
_B.getrow=function(_sheet,_rowpos,_colpos) {
var _row;
// [147]  Dim row As BANanoObject = sheet.RunMethod( {105} , Array(rowPos, colPos)) 
_row=_sheet["row"](_rowpos,_colpos);
// [148]  Return row 
return _row;
// End Sub
};

// [152] Sub GetColumn(sheet As BANanoObject, rowPos As Int, colPos As Int) As BANanoObject 
_B.getcolumn=function(_sheet,_rowpos,_colpos) {
var _colx;
// [153]  Dim colx As BANanoObject = sheet.RunMethod( {106} , Array(rowPos, colPos)) 
_colx=_sheet["column"](_rowpos,_colpos);
// [154]  Return colx 
return _colx;
// End Sub
};

// [158] Sub GetCell(sheet As BANanoObject, rowPos As Int, colPos As Int) As BANanoObject 
_B.getcell=function(_sheet,_rowpos,_colpos) {
var _colx;
// [159]  Dim colx As BANanoObject = sheet.RunMethod( {107} , Array(rowPos, colPos)) 
_colx=_sheet["cell"](_rowpos,_colpos);
// [160]  Return colx 
return _colx;
// End Sub
};

// [164] Sub CreateRow(rowPos As Int, colPos As Int) As OXMLRow 
_B.createrow=function(_rowpos,_colpos) {
var _row;
// [165]  Dim row As OXMLRow 
_row= new banano_bananovuematerial_oxmlrow();
// [166]  row.Initialize 
_row.initialize();
// [167]  row.columnIndex = colPos 
_row._columnindex=_colpos;
// [168]  row.rowIndex = rowPos 
_row._rowindex=_rowpos;
// [169]  row.values.Initialize 
_row._values.length=0;
// [170]  row.style = CreateMap() 
_row._style={};
// [171]  Return row 
return _row;
// End Sub
};

// [175] private Sub CreateFormula(formula As String) As OXMLCell 
_B.createformula=function(_formula) {
var _cell;
// [176]  Dim cell As OXMLCell 
_cell= new banano_bananovuematerial_oxmlcell();
// [177]  cell.Initialize 
_cell.initialize();
// [178]  cell.typeOf = {108} 
_cell._typeof="formula";
// [179]  cell.formula = formula 
_cell._formula=_formula;
// [180]  cell.style = CreateMap() 
_cell._style={};
// [181]  Return cell 
return _cell;
// End Sub
};

// [185] private Sub CreateText(value As String) As OXMLCell 
_B.createtext=function(_value) {
var _cell;
// [186]  Dim cell As OXMLCell 
_cell= new banano_bananovuematerial_oxmlcell();
// [187]  cell.Initialize 
_cell.initialize();
// [188]  cell.typeOf = {109} 
_cell._typeof="string";
// [189]  cell.value = value 
_cell._value=_value;
// [190]  cell.style = CreateMap() 
_cell._style={};
// [191]  Return cell 
return _cell;
// End Sub
};

// [195] private Sub CreateNumber(value As String) As OXMLCell 
_B.createnumber=function(_value) {
var _cell;
// [196]  Dim cell As OXMLCell 
_cell= new banano_bananovuematerial_oxmlcell();
// [197]  cell.Initialize 
_cell.initialize();
// [198]  cell.typeOf = {110} 
_cell._typeof="numeric";
// [199]  cell.value = value 
_cell._value=_value;
// [200]  cell.style = CreateMap() 
_cell._style={};
// [201]  Return cell 
return _cell;
// End Sub
};

// [205] private Sub CreateSharedText(value As String) As OXMLCell 
_B.createsharedtext=function(_value) {
var _cell;
// [206]  Dim cell As OXMLCell 
_cell= new banano_bananovuematerial_oxmlcell();
// [207]  cell.Initialize 
_cell.initialize();
// [208]  cell.typeOf = {111} 
_cell._typeof="sharedString";
// [209]  cell.value = value 
_cell._value=_value;
// [210]  cell.style = CreateMap() 
_cell._style={};
// [211]  Return cell 
return _cell;
// End Sub
};

// [215] private Sub Cell2Map(cell As OXMLCell) As Map 
_B.cell2map=function(_cell) {
var _m;
// [216]  Dim m As Map = CreateMap() 
_m={};
// [217]  m.Put( {112} , cell.typeOf) 
_m["type"]=_cell._typeof;
// [218]  m.Put( {113} , cell.value) 
_m["value"]=_cell._value;
// [219]  If cell.formula <> {114} Then 
if (_cell._formula!="") {
// [220]  m.Put( {115} , cell.formula) 
_m["formula"]=_cell._formula;
// [221]  End If 
}
// [222]  Return m 
return _m;
// End Sub
};

// [226] Sub WorkSheet(sheetName As String) As BANanoObject 
_B.worksheet=function(_sheetname) {
var _wksheet;
// [227]  Dim wkSheet As BANanoObject 
_wksheet=null;
// [228]  wkSheet = WorkBook.RunMethod( {116} , Array(sheetName)) 
_wksheet=_B._workbook["sheet"](_sheetname);
// [229]  Return wkSheet 
return _wksheet;
// End Sub
};

// [233] Sub SetRow(sheet As BANanoObject, rowPos As Int, colPos As Int, values As List) 
_B.setrow=function(_sheet,_rowpos,_colpos,_values) {
// [234]  sheet.RunMethod( {117} , Array(rowPos, colPos, values)) 
_sheet["row"](_rowpos,_colpos,_values);
// End Sub
};

// [238] Sub SetColumn(sheet As BANanoObject, rowPos As Int, colPos As Int, values As List) 
_B.setcolumn=function(_sheet,_rowpos,_colpos,_values) {
// [239]  sheet.RunMethod( {118} , Array(rowPos, colPos, values)) 
_sheet["column"](_rowpos,_colpos,_values);
// End Sub
};

// [243] Sub SetRowBO(row As BANanoObject, values As List) 
_B.setrowbo=function(_row,_values) {
// [244]  row.RunMethod( {119} , values) 
_row["set"](_values);
// End Sub
};

// [248] Sub SetColBO(col As BANanoObject, values As List) 
_B.setcolbo=function(_col,_values) {
// [249]  col.RunMethod( {120} , values) 
_col["set"](_values);
// End Sub
};

// [253] Sub SetRow1(sheet As BANanoObject, row As OXMLRow) 
_B.setrow1=function(_sheet,_row) {
var _rowpos,_colpos,_values;
// [254]  Dim rowPos As Int = row.rowIndex 
_rowpos=_row._rowindex;
// [255]  Dim colPos As Int = row.columnIndex 
_colpos=_row._columnindex;
// [256]  Dim values As List = row.values 
_values=_row._values;
// [257]  SetRow(sheet, rowPos, colPos, values) 
_B.setrow(_sheet,_rowpos,_colpos,_values,_B);
// End Sub
};

// [261] Sub Download(module As Object, methodName As String) 
_B.download=function(_module,_methodname) {
var _cb,_prom;
// [262]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [263]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Null) 
_cb=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [264]  Dim prom As BANanoObject = WorkBook.RunMethod( {121} , Array(fName)) 
_prom=_B._workbook["download"](_B._fname);
// [265]  prom.RunMethod( {122} , Array(cb)) 
_prom["then"](_cb);
// End Sub
};

// [269] Sub AddRowText(row As OXMLRow, value As String) As BANanoOXML 
_B.addrowtext=function(_row,_value) {
var _cell;
// [270]  Dim cell As Map = Cell2Map(CreateText(value)) 
_cell=_B.cell2map(_B.createtext(_value,_B),_B);
// [271]  row.values.Add(cell) 
_row._values.push(_cell);
// [272]  Return Me 
return _B;
// End Sub
};

// [276] Sub AddRowNumber(row As OXMLRow, value As String) As BANanoOXML 
_B.addrownumber=function(_row,_value) {
var _cell;
// [277]  Dim cell As Map = Cell2Map(CreateNumber(value)) 
_cell=_B.cell2map(_B.createnumber(_value,_B),_B);
// [278]  row.values.Add(cell) 
_row._values.push(_cell);
// [279]  Return Me 
return _B;
// End Sub
};

// [283] Sub AddRowSharedText(row As OXMLRow, value As String) As BANanoOXML 
_B.addrowsharedtext=function(_row,_value) {
var _cell;
// [284]  Dim cell As Map = Cell2Map(CreateSharedText(value)) 
_cell=_B.cell2map(_B.createsharedtext(_value,_B),_B);
// [285]  row.values.Add(cell) 
_row._values.push(_cell);
// [286]  Return Me 
return _B;
// End Sub
};

// [290] Sub AddRowFormula(row As OXMLRow, formula As String) As BANanoOXML 
_B.addrowformula=function(_row,_formula) {
var _cell;
// [291]  Dim cell As Map = Cell2Map(CreateFormula(formula)) 
_cell=_B.cell2map(_B.createformula(_formula,_B),_B);
// [292]  row.values.Add(cell) 
_row._values.push(_cell);
// [293]  Return Me 
return _B;
// End Sub
};

// [297] Sub AddRowFormula1(row As OXMLRow, formula As String, value As String) As BANanoOXML 
_B.addrowformula1=function(_row,_formula,_value) {
var _cell,_cellv;
// [298]  Dim cell As OXMLCell = CreateFormula(formula) 
_cell=_B.createformula(_formula,_B);
// [299]  cell.value = value 
_cell._value=_value;
// [300]  Dim cellV As Map = Cell2Map(cell) 
_cellv=_B.cell2map(_cell,_B);
// [301]  row.values.Add(cellV) 
_row._values.push(_cellv);
// [302]  Return Me 
return _B;
// End Sub
};

// [306] Sub SetText(sheet As BANanoObject, rowPos As Int, colPos As Int, value As String) 
_B.settext=function(_sheet,_rowpos,_colpos,_value) {
var _cell;
// [307]  Dim cell As Map = Cell2Map(CreateText(value)) 
_cell=_B.cell2map(_B.createtext(_value,_B),_B);
// [308]  sheet.RunMethod( {123} , Array(rowPos, colPos)).RunMethod( {124} , Array(cell)) 
_sheet["cell"](_rowpos,_colpos)["set"](_cell);
// End Sub
};

// [312] Sub SetCellText(cellBO As BANanoObject, value As String) 
_B.setcelltext=function(_cellbo,_value) {
var _cell;
// [313]  Dim cell As Map = Cell2Map(CreateText(value)) 
_cell=_B.cell2map(_B.createtext(_value,_B),_B);
// [314]  cellBO.RunMethod( {125} , Array(cell)) 
_cellbo["set"](_cell);
// End Sub
};

// [318] Sub SetCellNumber(cellBO As BANanoObject, value As String) 
_B.setcellnumber=function(_cellbo,_value) {
var _cell;
// [319]  Dim cell As Map = Cell2Map(CreateNumber(value)) 
_cell=_B.cell2map(_B.createnumber(_value,_B),_B);
// [320]  cellBO.RunMethod( {126} , Array(cell)) 
_cellbo["set"](_cell);
// End Sub
};

// [324] Sub SetNumber(sheet As BANanoObject, rowPos As Int, colPos As Int, value As String) 
_B.setnumber=function(_sheet,_rowpos,_colpos,_value) {
var _cell;
// [325]  Dim cell As Map = Cell2Map(CreateNumber(value)) 
_cell=_B.cell2map(_B.createnumber(_value,_B),_B);
// [326]  sheet.RunMethod( {127} , Array(rowPos, colPos)).RunMethod( {128} , Array(cell)) 
_sheet["cell"](_rowpos,_colpos)["set"](_cell);
// End Sub
};

// [330] Sub SetCellSharedText(cellBO As BANanoObject, value As String) 
_B.setcellsharedtext=function(_cellbo,_value) {
var _cell;
// [331]  Dim cell As Map = Cell2Map(CreateSharedText(value)) 
_cell=_B.cell2map(_B.createsharedtext(_value,_B),_B);
// [332]  cellBO.RunMethod( {129} , Array(cell)) 
_cellbo["set"](_cell);
// End Sub
};

// [336] Sub SetSharedText(sheet As BANanoObject, rowPos As Int, colPos As Int, value As String) 
_B.setsharedtext=function(_sheet,_rowpos,_colpos,_value) {
var _cell;
// [337]  Dim cell As Map = Cell2Map(CreateSharedText(value)) 
_cell=_B.cell2map(_B.createsharedtext(_value,_B),_B);
// [338]  sheet.RunMethod( {130} , Array(rowPos, colPos)).RunMethod( {131} , Array(cell)) 
_sheet["cell"](_rowpos,_colpos)["set"](_cell);
// End Sub
};

// [342] Sub SetCellFormula(cellBO As BANanoObject, formula As String) 
_B.setcellformula=function(_cellbo,_formula) {
var _cell;
// [343]  Dim cell As Map = Cell2Map(CreateFormula(formula)) 
_cell=_B.cell2map(_B.createformula(_formula,_B),_B);
// [344]  cellBO.RunMethod( {132} , Array(cell)) 
_cellbo["set"](_cell);
// End Sub
};

// [349] Sub SetFormula(sheet As BANanoObject, rowPos As Int, colPos As Int, formula As String) 
_B.setformula=function(_sheet,_rowpos,_colpos,_formula) {
var _cell;
// [350]  Dim cell As Map = Cell2Map(CreateFormula(formula)) 
_cell=_B.cell2map(_B.createformula(_formula,_B),_B);
// [351]  sheet.RunMethod( {133} , Array(rowPos, colPos)).RunMethod( {134} , Array(cell)) 
_sheet["cell"](_rowpos,_colpos)["set"](_cell);
// End Sub
};

// [355] Sub SetCellFormula1(cellBO As BANanoObject, formula As String, value As String) 
_B.setcellformula1=function(_cellbo,_formula,_value) {
var _cell,_cellv;
// [356]  Dim cell As OXMLCell = CreateFormula(formula) 
_cell=_B.createformula(_formula,_B);
// [357]  cell.value = value 
_cell._value=_value;
// [358]  Dim cellV As Map = Cell2Map(cell) 
_cellv=_B.cell2map(_cell,_B);
// [359]  cellBO.RunMethod( {135} , Array(cellV)) 
_cellbo["set"](_cellv);
// End Sub
};

// [363] Sub SetFormula1(sheet As BANanoObject, rowPos As Int, colPos As Int, formula As String, value As String) 
_B.setformula1=function(_sheet,_rowpos,_colpos,_formula,_value) {
var _cell,_cellv;
// [364]  Dim cell As OXMLCell = CreateFormula(formula) 
_cell=_B.createformula(_formula,_B);
// [365]  cell.value = value 
_cell._value=_value;
// [366]  Dim cellV As Map = Cell2Map(cell) 
_cellv=_B.cell2map(_cell,_B);
// [367]  sheet.RunMethod( {136} , Array(rowPos, colPos)).RunMethod( {137} , Array(cellV)) 
_sheet["cell"](_rowpos,_colpos)["set"](_cellv);
// End Sub
};

}
/* =========================== BANanoSQLite  =========================== */
function banano_bananovuematerial_bananosqlite() {
var _B=this;
_B._db_varchar_20="VARCHAR(20)";

_B._db_varchar_10="VARCHAR(10)";

_B._db_varchar_30="VARCHAR(30)";

_B._db_varchar_40="VARCHAR(40)";

_B._db_varchar_50="VARCHAR(50)";

_B._db_varchar_100="VARCHAR(100)";

_B._db_varchar_255="VARCHAR(255)";

_B._db_string="TEXT";

_B._db_int="INT";

_B._db_float="FLOAT";

_B._db_blob="BLOB";

_B._db_bool="BOOL";

_B._db_real="REAL";

_B._db_date="DATE";

_B._db_integer="INTEGER";

_B._db_text="TEXT";

_B._rectype={};

_B._dbname="";

_B._methodname="";

_B._schema={};

_B._ok=false;

// [29] Sub Update(tblName As String, priKey As String, priValue As String, tblfields As Map) As SQLiteResultSet 
_B.update=function(_tblname,_prikey,_privalue,_tblfields) {
var _tblwhere;
// [30]  Dim tblWhere As Map = CreateMap() 
_tblwhere={};
// [31]  tblWhere.Put(priKey, priValue) 
_tblwhere[_prikey]=_privalue;
// [32]  Return UpdateWhere(tblName, tblfields, tblWhere, Null) 
return _B.updatewhere(_tblname,_tblfields,_tblwhere,null,_B);
// End Sub
};

// [36] Public Sub Initialize As BANanoSQLite 
_B.initialize=function() {
// [37]  recType.Initialize 
_B._rectype={};
// [38]  MethodName = {35} 
_B._methodname="BANanoSQLite";
// [39]  schema.Initialize 
_B._schema={};
// [40]  OK = False 
_B._ok=false;
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetDB(db As String) As BANanoSQLite 
_B.setdb=function(_db) {
// [45]  dbName = db 
_B._dbname=_db;
// [46]  Return Me 
return _B;
// End Sub
};

// [51] Sub SchemaClear As BANanoSQLite 
_B.schemaclear=function() {
// [52]  schema.clear 
_B._schema={};
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub JSONToResultSet(rs As SQLiteResultSet) 
_B.jsontoresultset=function(_rs) {
var _m;
// [58]  OK = False 
_B._ok=false;
// [59]  Dim m As Map = BANano.FromJson(rs.json) 
_m=JSON.parse(_rs._json);
// [60]  rs.response = m.Get( {36} ) 
_rs._response=_m["response"];
// [61]  rs.error = m.Get( {37} ) 
_rs._error=_m["error"];
// [62]  rs.result = m.Get( {38} ) 
_rs._result=_m["result"];
// [63]  rs.affectedRows = m.Get( {39} ) 
_rs._affectedrows=_m["affectedRows"];
// [64]  If rs.response = {40} And rs.affectedRows >= 1 Then 
if (_rs._response=="Success" && _rs._affectedrows>=1) {
// [65]  OK = True 
_B._ok=true;
// [66]  End If 
}
// End Sub
};

// [70] Sub SchemaAddBoolean(bools As List) As BANanoSQLite 
_B.schemaaddboolean=function(_bools) {
var _b;
// [71]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [72]  schema.Put(b, DB_BOOL) 
_B._schema[_b]=_B._db_bool;
// [73]  Next 
}
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SchemaAddInt(bools As List) As BANanoSQLite 
_B.schemaaddint=function(_bools) {
var _b;
// [78]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [79]  schema.Put(b, DB_INT) 
_B._schema[_b]=_B._db_int;
// [80]  Next 
}
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub SchemaAddFloat(bools As List) As BANanoSQLite 
_B.schemaaddfloat=function(_bools) {
var _b;
// [85]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [86]  schema.Put(b, DB_FLOAT) 
_B._schema[_b]=_B._db_float;
// [87]  Next 
}
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub SchemaAddBlob(bools As List) As BANanoSQLite 
_B.schemaaddblob=function(_bools) {
var _b;
// [92]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [93]  schema.Put(b, DB_BLOB) 
_B._schema[_b]=_B._db_blob;
// [94]  Next 
}
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SchemaAddText(bools As List) As BANanoSQLite 
_B.schemaaddtext=function(_bools) {
var _b;
// [99]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [100]  schema.Put(b, DB_TEXT) 
_B._schema[_b]=_B._db_text;
// [101]  Next 
}
// [102]  Return Me 
return _B;
// End Sub
};

// [106] Sub SchemaCreateTable(tblName As String, PK As String, Auto As String) As SQLiteResultSet 
_B.schemacreatetable=function(_tblname,_pk,_auto) {
// [107]  Return CreateTable(tblName, schema, PK, Auto) 
return _B.createtable(_tblname,_B._schema,_pk,_auto,_B);
// End Sub
};

// [110] Sub SchemaAddDate(bools As List) As BANanoSQLite 
_B.schemaadddate=function(_bools) {
var _b;
// [111]  For Each b As String In bools 
for (var _bindex=0;_bindex<_bools.length;_bindex++) {
_b=_bools[_bindex];
// [112]  schema.Put(b, DB_DATE) 
_B._schema[_b]=_B._db_date;
// [113]  Next 
}
// [114]  Return Me 
return _B;
// End Sub
};

// [117] Sub ResetTypes As BANanoSQLite 
_B.resettypes=function() {
// [118]  recType.Initialize 
_B._rectype={};
// [119]  Return Me 
return _B;
// End Sub
};

// [123] Sub Pragma(tblName As String) As SQLiteResultSet 
_B.pragma=function(_tblname) {
var _sb,_gr;
// [124]  Dim sb As String = {0} 
_sb="PRAGMA table_info('" + _tblname + "')";
// [125]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [126]  gr.Initialize 
_gr.initialize();
// [127]  gr.query = sb 
_gr._query=_sb;
// [128]  gr.args = Null 
_gr._args=null;
// [129]  gr.command = {41} 
_gr._command="pragma";
// [130]  gr.types = Null 
_gr._types=null;
// [131]  gr.response = {42} 
_gr._response="";
// [132]  gr.error = {43} 
_gr._error="";
// [133]  gr.result = Array() 
_gr._result=[];
// [134]  gr.json = {44} 
_gr._json="";
// [135]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [136]  Return gr 
return _gr;
// End Sub
};

// [140] Sub ForeignKeys(tblName As String) As SQLiteResultSet 
_B.foreignkeys=function(_tblname) {
var _sb,_gr;
// [141]  Dim sb As String = {1} 
_sb="PRAGMA foreign_key_list('" + _tblname + "')";
// [142]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [143]  gr.Initialize 
_gr.initialize();
// [144]  gr.query = sb 
_gr._query=_sb;
// [145]  gr.args = Null 
_gr._args=null;
// [146]  gr.command = {45} 
_gr._command="foreignkeys";
// [147]  gr.types = Null 
_gr._types=null;
// [148]  gr.response = {46} 
_gr._response="";
// [149]  gr.error = {47} 
_gr._error="";
// [150]  gr.result = Array() 
_gr._result=[];
// [151]  gr.json = {48} 
_gr._json="";
// [152]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [153]  Return gr 
return _gr;
// End Sub
};

// [157] Sub TableNames() As SQLiteResultSet 
_B.tablenames=function() {
var _sb,_gr;
// [158]  Dim sb As String = {2} 
_sb="SELECT name FROM sqlite_master WHERE type ='table' AND name NOT LIKE 'sqlite_%'";
// [159]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [160]  gr.Initialize 
_gr.initialize();
// [161]  gr.query = sb 
_gr._query=_sb;
// [162]  gr.args = Null 
_gr._args=null;
// [163]  gr.command = {49} 
_gr._command="tables";
// [164]  gr.types = Null 
_gr._types=null;
// [165]  gr.response = {50} 
_gr._response="";
// [166]  gr.error = {51} 
_gr._error="";
// [167]  gr.result = Array() 
_gr._result=[];
// [168]  gr.json = {52} 
_gr._json="";
// [169]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [170]  Return gr 
return _gr;
// End Sub
};

// [174] Sub DeleteAll(tblName As String) As SQLiteResultSet 
_B.deleteall=function(_tblname) {
var _sb,_gr;
// [175]  Dim sb As String = {3} 
_sb="DELETE FROM " + _B.escapefield(_tblname,_B) + "";
// [176]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [177]  gr.Initialize 
_gr.initialize();
// [178]  gr.query = sb 
_gr._query=_sb;
// [179]  gr.args = Null 
_gr._args=null;
// [180]  gr.command = {53} 
_gr._command="delete";
// [181]  gr.types = Null 
_gr._types=null;
// [182]  gr.response = {54} 
_gr._response="";
// [183]  gr.error = {55} 
_gr._error="";
// [184]  gr.result = Array() 
_gr._result=[];
// [185]  gr.json = {56} 
_gr._json="";
// [186]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [187]  Return gr 
return _gr;
// End Sub
};

// [191] Sub GetMax(tblName As String, fldName As String) As SQLiteResultSet 
_B.getmax=function(_tblname,_fldname) {
var _sb,_gr;
// [192]  Dim sb As String = {4} 
_sb="SELECT MAX(" + _fldname + ") As " + _fldname + " FROM " + _B.escapefield(_tblname,_B) + "";
// [193]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [194]  gr.Initialize 
_gr.initialize();
// [195]  gr.query = sb 
_gr._query=_sb;
// [196]  gr.args = Null 
_gr._args=null;
// [197]  gr.command = {57} 
_gr._command="getmax";
// [198]  gr.types = Null 
_gr._types=null;
// [199]  gr.response = {58} 
_gr._response="";
// [200]  gr.error = {59} 
_gr._error="";
// [201]  gr.result = Array() 
_gr._result=[];
// [202]  gr.json = {60} 
_gr._json="";
// [203]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [204]  Return gr 
return _gr;
// End Sub
};

// [208] Sub Map2Json(mp As Map) As String 
_B.map2json=function(_mp) {
var _json;
// [209]  Dim JSON As BANanoJSONGenerator 
_json={};
// [210]  JSON.Initialize(mp) 
_json=_mp;
// [211]  Return JSON.ToString 
return JSON.stringify(_json);
// End Sub
};

// [215] Sub List2Json(mp As List) As String 
_B.list2json=function(_mp) {
var _json;
// [216]  Dim JSON As BANanoJSONGenerator 
_json={};
// [217]  JSON.Initialize2(mp) 
_json=_mp;
// [218]  Return JSON.ToString 
return JSON.stringify(_json);
// End Sub
};

// [223] Sub Json2Map(strJSON As String) As Map 
_B.json2map=function(_strjson) {
var _json,_map1;
// [224]  Dim json As BANanoJSONParser 
_json={};
// [225]  Dim Map1 As Map 
_map1={};
// [226]  Map1.Initialize 
_map1={};
// [227]  Map1.clear 
_map1={};
// [228]  Try 
try {
// [229]  If strJSON.length > 0 Then 
if (_strjson.length>0) {
// [230]  json.Initialize(strJSON) 
_json=JSON.parse(_strjson);
// [231]  Map1 = json.NextObject 
_map1=_json;
// [232]  End If 
}
// [233]  Return Map1 
return _map1;
// [234]  Catch 
} catch(err) {
// [235]  Return Map1 
return _map1;
// [236]  End Try 
}
// End Sub
};

// [240] Sub Json2List(strValue As String) As List 
_B.json2list=function(_strvalue) {
var _lst,_parser;
// [241]  Dim lst As List 
_lst=[];
// [242]  lst.Initialize 
_lst.length=0;
// [243]  lst.clear 
_lst.length=0;
// [244]  If strValue.Length = 0 Then 
if (_strvalue.length==0) {
// [245]  Return lst 
return _lst;
// [246]  End If 
}
// [247]  Try 
try {
// [248]  Dim parser As BANanoJSONParser 
_parser={};
// [249]  parser.Initialize(strValue) 
_parser=JSON.parse(_strvalue);
// [250]  Return parser.NextArray 
return _parser;
// [251]  Catch 
} catch(err) {
// [252]  Return lst 
return _lst;
// [253]  End Try 
}
// End Sub
};

// [257] Sub UpdateAll(tblName As String, tblFields As Map, operators As List) As SQLiteResultSet 
_B.updateall=function(_tblname,_tblfields,_operators) {
var _listoftypes,_args,_sb,_i,_itot,_col,_oper,_gr;
// [258]  If operators = Null Then operators = EQOperators(tblFields) 
if (_operators==null) {_operators=_B.eqoperators(_tblfields,_B);}
// [259]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [260]  Dim args As List = GetMapValues(tblFields) 
_args=_B.getmapvalues(_tblfields,_B);
// [261]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [262]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [263]  sb.Append( {5} ) 
_sb.append("UPDATE " + _B.escapefield(_tblname,_B) + " SET ");
// [264]  Dim i As Int 
_i=0;
// [265]  Dim iTot As Int = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [266]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [267]  Dim col As String = tblFields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [268]  Dim oper As String = operators.Get(i) 
_oper=_operators[_i];
// [269]  sb.Append(col) 
_sb.append(_col);
// [270]  If i <> iTot Then 
if (_i!=_itot) {
// [271]  sb.Append( {61} ) 
_sb.append(" = ?,");
// [272]  Else 
} else {
// [273]  sb.Append( {6} ) 
_sb.append(" " + _oper + " ?");
// [274]  End If 
}
// [275]  Next 
}
// [276]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [277]  gr.Initialize 
_gr.initialize();
// [278]  gr.query = sb.tostring 
_gr._query=_sb.toString();
// [279]  gr.args = args 
_gr._args=_args;
// [280]  gr.command = {62} 
_gr._command="update";
// [281]  gr.types = listOfTypes 
_gr._types=_listoftypes;
// [282]  gr.response = {63} 
_gr._response="";
// [283]  gr.error = {64} 
_gr._error="";
// [284]  gr.result = Array() 
_gr._result=[];
// [285]  gr.json = {65} 
_gr._json="";
// [286]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [287]  Return gr 
return _gr;
// End Sub
};

// [291] Sub Read(tblName As String, primaryKey As String, primaryValue As String) As SQLiteResultSet 
_B.read=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_gr;
// [292]  Dim qw As Map = CreateMap() 
_qw={};
// [293]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [294]  Dim gr As SQLiteResultSet = SelectWhere(tblName, Array( {66} ), qw, Null, Array(primaryKey)) 
_gr=_B.selectwhere(_tblname,["*"],_qw,null,[_primarykey],_B);
// [295]  Return gr 
return _gr;
// End Sub
};

// [298] Sub Delete(tblName As String, primaryKey As String, primaryValue As String) As SQLiteResultSet 
_B.delete=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_qry;
// [299]  Dim qw As Map = CreateMap() 
_qw={};
// [300]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [301]  Dim qry As SQLiteResultSet = DeleteWhere(tblName, qw, Array( {67} )) 
_qry=_B.deletewhere(_tblname,_qw,["="],_B);
// [302]  Return qry 
return _qry;
// End Sub
};

// [307] Sub Exists(tblName As String, primaryKey As String, primaryValue As String) As SQLiteResultSet 
_B.exists=function(_tblname,_primarykey,_primaryvalue) {
var _qw,_gr;
// [308]  Dim qw As Map = CreateMap() 
_qw={};
// [309]  qw.Put(primaryKey, primaryValue) 
_qw[_primarykey]=_primaryvalue;
// [310]  Dim gr As SQLiteResultSet = SelectWhere(tblName, Array(primaryKey), qw, Null, Array(primaryKey)) 
_gr=_B.selectwhere(_tblname,[_primarykey],_qw,null,[_primarykey],_B);
// [311]  Return gr 
return _gr;
// End Sub
};

// [315] Sub SelectWhere(tblName As String, tblfields As List, tblWhere As Map, operators As List, orderBy As List) As SQLiteResultSet 
_B.selectwhere=function(_tblname,_tblfields,_tblwhere,_operators,_orderby) {
var _listoftypes,_listofvalues,_fld1,_selfields,_sb,_i,_iwhere,_col,_oper,_stro,_gr;
// [316]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [317]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [318]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [320]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [321]  Dim selFIelds As String = {68} 
_selfields="";
// [322]  Select Case fld1 
switch ("" + _fld1) {
// [323]  Case {69} 
case "" + "*":
// [324]  selFIelds = {70} 
_selfields="*";
// [325]  Case Else 
break;
default:
// [326]  selFIelds = JoinFields( {71} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [327]  End Select 
break;
}
// [328]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [329]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [330]  sb.Append( {7} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [331]  Dim i As Int 
_i=0;
// [332]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [333]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [334]  If i > 0 Then 
if (_i>0) {
// [335]  sb.Append( {72} ) 
_sb.append(" AND ");
// [336]  End If 
}
// [337]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [338]  Dim oper As String = operators.Get(i) 
_oper=_operators[_i];
// [339]  sb.Append(col) 
_sb.append(_col);
// [340]  sb.Append( {8} ) 
_sb.append(" " + _oper + " ?");
// [341]  Next 
}
// [342]  If orderBy <> Null Then 
if (_orderby!=null) {
// [344]  Dim stro As String = JoinFields( {73} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [345]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [346]  sb.Append( {74} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [347]  End If 
}
// [348]  End If 
}
// [349]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [350]  gr.Initialize 
_gr.initialize();
// [351]  gr.query = sb.tostring 
_gr._query=_sb.toString();
// [352]  gr.args = listOfValues 
_gr._args=_listofvalues;
// [353]  gr.command = {75} 
_gr._command="select";
// [354]  gr.types = listOfTypes 
_gr._types=_listoftypes;
// [355]  gr.response = {76} 
_gr._response="";
// [356]  gr.error = {77} 
_gr._error="";
// [357]  gr.result = Array() 
_gr._result=[];
// [358]  gr.json = {78} 
_gr._json="";
// [359]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [360]  Return gr 
return _gr;
// End Sub
};

// [364] Sub EQOperators(sm As Map) As List 
_B.eqoperators=function(_sm) {
var _nl,_k;
// [365]  Dim nl As List 
_nl=[];
// [366]  nl.initialize 
_nl.length=0;
// [367]  For Each k As String In sm.Keys 
var _kKeys = Object.keys(_sm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [368]  nl.Add( {79} ) 
_nl.push("=");
// [369]  Next 
}
// [370]  Return nl 
return _nl;
// End Sub
};

// [375] Sub UpdateWhere(tblName As String, tblfields As Map, tblWhere As Map, operators As List) As SQLiteResultSet 
_B.updatewhere=function(_tblname,_tblfields,_tblwhere,_operators) {
var _listoftypes,_listoftypes1,_listofvalues,_listofvalues1,_sb,_i,_itot,_col,_iwhere,_opr,_gr;
// [376]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [377]  Dim listOfTypes As List = GetMapTypes(tblfields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [378]  Dim listOfTypes1 As List = GetMapTypes(tblWhere) 
_listoftypes1=_B.getmaptypes(_tblwhere,_B);
// [379]  listOfTypes.AddAll(listOfTypes1) 
_listoftypes.splice(_listoftypes.length,0,..._listoftypes1);
// [380]  Dim listOfValues As List = GetMapValues(tblfields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [381]  Dim listOfValues1 As List = GetMapValues(tblWhere) 
_listofvalues1=_B.getmapvalues(_tblwhere,_B);
// [382]  listOfValues.AddAll(listOfValues1) 
_listofvalues.splice(_listofvalues.length,0,..._listofvalues1);
// [383]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [384]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [385]  sb.Append( {9} ) 
_sb.append("UPDATE " + _B.escapefield(_tblname,_B) + " SET ");
// [386]  Dim i As Int 
_i=0;
// [387]  Dim iTot As Int = tblfields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [388]  For i = 0 To iTot 
for (_i=0;_i<=_itot;_i++) {
// [389]  Dim col As String = tblfields.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblfields,_i);
// [390]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [391]  If i <> iTot Then 
if (_i!=_itot) {
// [392]  sb.Append( {80} ) 
_sb.append("= ?,");
// [393]  Else 
} else {
// [394]  sb.Append( {81} ) 
_sb.append("= ?");
// [395]  End If 
}
// [396]  Next 
}
// [397]  sb.Append( {10} ) 
_sb.append(" WHERE ");
// [398]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [399]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [400]  If i > 0 Then 
if (_i>0) {
// [401]  sb.Append( {82} ) 
_sb.append(" AND ");
// [402]  End If 
}
// [403]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [404]  sb.Append(EscapeField(col)) 
_sb.append(_B.escapefield(_col,_B));
// [405]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [406]  sb.Append( {11} ) 
_sb.append(" " + _opr + " ?");
// [407]  Next 
}
// [408]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [409]  gr.Initialize 
_gr.initialize();
// [410]  gr.query = sb.tostring 
_gr._query=_sb.toString();
// [411]  gr.args = listOfValues 
_gr._args=_listofvalues;
// [412]  gr.command = {83} 
_gr._command="update";
// [413]  gr.types = listOfTypes 
_gr._types=_listoftypes;
// [414]  gr.response = {84} 
_gr._response="";
// [415]  gr.error = {85} 
_gr._error="";
// [416]  gr.result = Array() 
_gr._result=[];
// [417]  gr.json = {86} 
_gr._json="";
// [418]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [419]  Return gr 
return _gr;
// End Sub
};

// [423] private Sub GetMapTypes(sourceMap As Map) As List 
_B.getmaptypes=function(_sourcemap) {
var _listoftypes,_icnt,_itot,_col,_coltype;
// [424]  Dim listOfTypes As List 
_listoftypes=[];
// [425]  listOfTypes.Initialize 
_listoftypes.length=0;
// [426]  Dim iCnt As Int 
_icnt=0;
// [427]  Dim iTot As Int 
_itot=0;
// [428]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [429]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [430]  Dim col As String = sourceMap.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_sourcemap,_icnt);
// [431]  Dim colType As String = recType.GetDefault(col, {87} ) 
_coltype=(_B._rectype[_col] || "STRING");
// [432]  Select Case colType 
switch ("" + _coltype) {
// [433]  Case {88} , {89} , {90} , {91} 
case "" + "VARCHAR(20)":
case "" + "VARCHAR(10)":
case "" + "VARCHAR(30)":
case "" + "VARCHAR(40)":
// [434]  listOfTypes.add( {92} ) 
_listoftypes.push("s");
// [435]  Case {93} , {94} , {95} 
break;
case "" + "VARCHAR(50)":
case "" + "VARCHAR(100)":
case "" + "VARCHAR(255)":
// [436]  listOfTypes.add( {96} ) 
_listoftypes.push("s");
// [437]  Case {97} , {98} , {99} , {100} , {101} , {102} 
break;
case "" + "STRING":
case "" + "VARCHAR":
case "" + "TEXT":
case "" + "DATE":
case "" + "DATETIME":
case "" + "NVARCHAR":
// [438]  listOfTypes.add( {103} ) 
_listoftypes.push("s");
// [439]  Case {104} , {105} , {106} , {107} 
break;
case "" + "INTEGER":
case "" + "INT":
case "" + "BOOL":
case "" + "BOOLEAN":
// [440]  listOfTypes.add( {108} ) 
_listoftypes.push("i");
// [441]  Case {109} 
break;
case "" + "BLOB":
// [442]  listOfTypes.add( {110} ) 
_listoftypes.push("b");
// [443]  Case {111} , {112} , {113} 
break;
case "" + "REAL":
case "" + "FLOAT":
case "" + "DOUBLE":
// [444]  listOfTypes.add( {114} ) 
_listoftypes.push("d");
// [445]  Case Else 
break;
default:
// [446]  listOfTypes.add( {115} ) 
_listoftypes.push("s");
// [447]  End Select 
break;
}
// [448]  Next 
}
// [449]  Return listOfTypes 
return _listoftypes;
// End Sub
};

// [453] private Sub GetMapValues(sourceMap As Map) As List 
_B.getmapvalues=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [454]  Dim listOfValues As List 
_listofvalues=[];
// [455]  listOfValues.Initialize 
_listofvalues.length=0;
// [456]  Dim iCnt As Int 
_icnt=0;
// [457]  Dim iTot As Int 
_itot=0;
// [458]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [459]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [460]  Dim value As String = sourceMap.GetValueAt(iCnt) 
_value=banano_getB4JValueAt(_sourcemap,_icnt);
// [461]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [462]  Next 
}
// [463]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [467] private Sub GetMapKeys(sourceMap As Map) As List 
_B.getmapkeys=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [468]  Dim listOfValues As List 
_listofvalues=[];
// [469]  listOfValues.Initialize 
_listofvalues.length=0;
// [470]  Dim iCnt As Int 
_icnt=0;
// [471]  Dim iTot As Int 
_itot=0;
// [472]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [473]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [474]  Dim value As String = sourceMap.GetKeyAt(iCnt) 
_value=banano_getB4JKeyAt(_sourcemap,_icnt);
// [475]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [476]  Next 
}
// [477]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [481] Sub AddStrings(fieldNames As List) As BANanoSQLite 
_B.addstrings=function(_fieldnames) {
var _strfld;
// [482]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [483]  recType.Put(strfld, {116} ) 
_B._rectype[_strfld]="STRING";
// [484]  Next 
}
// [485]  Return Me 
return _B;
// End Sub
};

// [489] Sub AddIntegers(fieldNames As List) As BANanoSQLite 
_B.addintegers=function(_fieldnames) {
var _strfld;
// [490]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [491]  recType.Put(strfld, {117} ) 
_B._rectype[_strfld]="INT";
// [492]  Next 
}
// [493]  Return Me 
return _B;
// End Sub
};

// [497] Sub AddDoubles(fieldNames As List) As BANanoSQLite 
_B.adddoubles=function(_fieldnames) {
var _strfld;
// [498]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [499]  recType.Put(strfld, {118} ) 
_B._rectype[_strfld]="DOUBLE";
// [500]  Next 
}
// [501]  Return Me 
return _B;
// End Sub
};

// [505] Sub AddBooleans(fieldNames As List) As BANanoSQLite 
_B.addbooleans=function(_fieldnames) {
var _strfld;
// [506]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [507]  recType.Put(strfld, {119} ) 
_B._rectype[_strfld]="BOOL";
// [508]  Next 
}
// [509]  Return Me 
return _B;
// End Sub
};

// [513] Sub AddBlobs(fieldNames As List) As BANanoSQLite 
_B.addblobs=function(_fieldnames) {
var _strfld;
// [514]  For Each strfld As String In fieldNames 
for (var _strfldindex=0;_strfldindex<_fieldnames.length;_strfldindex++) {
_strfld=_fieldnames[_strfldindex];
// [515]  recType.Put(strfld, {120} ) 
_B._rectype[_strfld]="BLOB";
// [516]  Next 
}
// [517]  Return Me 
return _B;
// End Sub
};

// [522] public Sub DropTable(tblName As String) As SQLiteResultSet 
_B.droptable=function(_tblname) {
var _query,_m;
// [524]  Dim query As String = {121} & EscapeField(tblName) 
_query="DROP TABLE "+_B.escapefield(_tblname,_B);
// [525]  Dim m As SQLiteResultSet 
_m= new banano_bananovuematerial_sqliteresultset();
// [526]  m.Initialize 
_m.initialize();
// [527]  m.query = query 
_m._query=_query;
// [528]  m.args = Null 
_m._args=null;
// [529]  m.types = Null 
_m._types=null;
// [530]  m.response = {122} 
_m._response="";
// [531]  m.error = {123} 
_m._error="";
// [532]  m.command = {124} 
_m._command="droptable";
// [533]  m.result = Array() 
_m._result=[];
// [534]  m.json = {125} 
_m._json="";
// [535]  m.affectedRows = 0 
_m._affectedrows=0;
// [536]  Return m 
return _m;
// End Sub
};

// [539] Private Sub EscapeField(f As String) As String 
_B.escapefield=function(_f) {
// [540]  Return {12} 
return "[" + _f + "]";
// End Sub
};

// [544] public Sub CreateTable(tblName As String, tblFields As Map, PK As String, Auto As String) As SQLiteResultSet 
_B.createtable=function(_tblname,_tblfields,_pk,_auto) {
var _fldname,_fldtype,_fldtot,_fldcnt,_sb,_query,_gr;
// [545]  Dim fldName As String 
_fldname="";
// [546]  Dim fldType As String 
_fldtype="";
// [547]  Dim fldTot As Int 
_fldtot=0;
// [548]  Dim fldCnt As Int 
_fldcnt=0;
// [549]  fldTot = tblFields.Size - 1 
_fldtot=Object.keys(_tblfields).length-1;
// [550]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [551]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [552]  sb.Append( {126} ) 
_sb.append("(");
// [553]  For fldCnt = 0 To fldTot 
for (_fldcnt=0;_fldcnt<=_fldtot;_fldcnt++) {
// [554]  fldName = tblFields.GetKeyAt(fldCnt) 
_fldname=banano_getB4JKeyAt(_tblfields,_fldcnt);
// [555]  fldType = tblFields.Get(fldName) 
_fldtype=_tblfields[_fldname];
// [556]  fldType = fldType.Replace( {127} , {128} ) 
_fldtype=_fldtype.split("STRING").join("TEXT");
// [557]  If fldCnt > 0 Then 
if (_fldcnt>0) {
// [558]  sb.Append( {129} ) 
_sb.append(", ");
// [559]  End If 
}
// [560]  sb.Append(EscapeField(fldName)) 
_sb.append(_B.escapefield(_fldname,_B));
// [561]  sb.Append( {130} ) 
_sb.append(" ");
// [562]  sb.Append(fldType) 
_sb.append(_fldtype);
// [563]  Select Case fldType 
switch ("" + _fldtype) {
// [564]  Case {131} , {132} 
case "" + "STRING":
case "" + "TEXT":
// [565]  sb.Append( {133} ) 
_sb.append(" COLLATE NOCASE");
// [566]  End Select 
break;
}
// [567]  If fldName.EqualsIgnoreCase(PK) Then 
if (_fldname.equalsIgnoreCase(_pk)) {
// [568]  sb.Append( {134} ) 
_sb.append(" PRIMARY KEY");
// [569]  End If 
}
// [570]  If fldName.EqualsIgnoreCase(Auto) Then 
if (_fldname.equalsIgnoreCase(_auto)) {
// [571]  sb.Append( {135} ) 
_sb.append(" AUTOINCREMENT");
// [572]  End If 
}
// [573]  Next 
}
// [574]  sb.Append( {136} ) 
_sb.append(")");
// [576]  Dim query As String = {137} & EscapeField(tblName) & {138} & sb.ToString 
_query="CREATE TABLE IF NOT EXISTS "+_B.escapefield(_tblname,_B)+" "+_sb.toString();
// [577]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [578]  gr.Initialize 
_gr.initialize();
// [579]  gr.query = query 
_gr._query=_query;
// [580]  gr.args = Null 
_gr._args=null;
// [581]  gr.command = {139} 
_gr._command="createtable";
// [582]  gr.types = Null 
_gr._types=null;
// [583]  gr.response = {140} 
_gr._response="";
// [584]  gr.error = {141} 
_gr._error="";
// [585]  gr.result = Array() 
_gr._result=[];
// [586]  gr.json = {142} 
_gr._json="";
// [587]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [588]  Return gr 
return _gr;
// End Sub
};

// [592] Sub Insert(tblName As String, tblFields As Map) As SQLiteResultSet 
_B.insert=function(_tblname,_tblfields) {
var _sb,_columns,_values,_listofvalues,_listoftypes,_icnt,_itot,_col,_gr;
// [593]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [594]  Dim columns As StringBuilder 
_columns=new StringBuilder();
// [595]  Dim values As StringBuilder 
_values=new StringBuilder();
// [596]  Dim listOfValues As List = GetMapValues(tblFields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [597]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [598]  Dim iCnt As Int 
_icnt=0;
// [599]  Dim iTot As Int 
_itot=0;
// [600]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [601]  columns.Initialize 
_columns.init();
_columns.isinitialized=true;
// [602]  values.Initialize 
_values.init();
_values.isinitialized=true;
// [603]  sb.Append( {13} ) 
_sb.append("INSERT INTO " + _B.escapefield(_tblname,_B) + " (");
// [604]  iTot = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [605]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [606]  Dim col As String = tblFields.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_tblfields,_icnt);
// [607]  If iCnt > 0 Then 
if (_icnt>0) {
// [608]  columns.Append( {143} ) 
_columns.append(", ");
// [609]  values.Append( {144} ) 
_values.append(", ");
// [610]  End If 
}
// [611]  columns.Append(EscapeField(col)) 
_columns.append(_B.escapefield(_col,_B));
// [612]  values.Append( {145} ) 
_values.append("?");
// [613]  Next 
}
// [614]  sb.Append(columns.ToString) 
_sb.append(_columns.toString());
// [615]  sb.Append( {146} ) 
_sb.append(") VALUES (");
// [616]  sb.Append(values.ToString) 
_sb.append(_values.toString());
// [617]  sb.Append( {147} ) 
_sb.append(")");
// [618]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [619]  gr.Initialize 
_gr.initialize();
// [620]  gr.query = sb.tostring 
_gr._query=_sb.toString();
// [621]  gr.args = listOfValues 
_gr._args=_listofvalues;
// [622]  gr.command = {148} 
_gr._command="insert";
// [623]  gr.types = listOfTypes 
_gr._types=_listoftypes;
// [624]  gr.response = {149} 
_gr._response="";
// [625]  gr.error = {150} 
_gr._error="";
// [626]  gr.result = Array() 
_gr._result=[];
// [627]  gr.json = {151} 
_gr._json="";
// [628]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [629]  Return gr 
return _gr;
// End Sub
};

// [633] Sub InsertReplace(tblName As String, tblFields As Map) As SQLiteResultSet 
_B.insertreplace=function(_tblname,_tblfields) {
var _sb,_columns,_values,_listofvalues,_listoftypes,_icnt,_itot,_col,_gr;
// [634]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [635]  Dim columns As StringBuilder 
_columns=new StringBuilder();
// [636]  Dim values As StringBuilder 
_values=new StringBuilder();
// [637]  Dim listOfValues As List = GetMapValues(tblFields) 
_listofvalues=_B.getmapvalues(_tblfields,_B);
// [638]  Dim listOfTypes As List = GetMapTypes(tblFields) 
_listoftypes=_B.getmaptypes(_tblfields,_B);
// [639]  Dim iCnt As Int 
_icnt=0;
// [640]  Dim iTot As Int 
_itot=0;
// [641]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [642]  columns.Initialize 
_columns.init();
_columns.isinitialized=true;
// [643]  values.Initialize 
_values.init();
_values.isinitialized=true;
// [644]  sb.Append( {14} ) 
_sb.append("REPLACE INTO " + _B.escapefield(_tblname,_B) + " (");
// [645]  iTot = tblFields.Size - 1 
_itot=Object.keys(_tblfields).length-1;
// [646]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [647]  Dim col As String = tblFields.GetKeyAt(iCnt) 
_col=banano_getB4JKeyAt(_tblfields,_icnt);
// [648]  If iCnt > 0 Then 
if (_icnt>0) {
// [649]  columns.Append( {152} ) 
_columns.append(", ");
// [650]  values.Append( {153} ) 
_values.append(", ");
// [651]  End If 
}
// [652]  columns.Append(EscapeField(col)) 
_columns.append(_B.escapefield(_col,_B));
// [653]  values.Append( {154} ) 
_values.append("?");
// [654]  Next 
}
// [655]  sb.Append(columns.ToString) 
_sb.append(_columns.toString());
// [656]  sb.Append( {155} ) 
_sb.append(") VALUES (");
// [657]  sb.Append(values.ToString) 
_sb.append(_values.toString());
// [658]  sb.Append( {156} ) 
_sb.append(")");
// [659]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [660]  gr.Initialize 
_gr.initialize();
// [661]  gr.query = sb.tostring 
_gr._query=_sb.toString();
// [662]  gr.args = listOfValues 
_gr._args=_listofvalues;
// [663]  gr.command = {157} 
_gr._command="replace";
// [664]  gr.types = listOfTypes 
_gr._types=_listoftypes;
// [665]  gr.response = {158} 
_gr._response="";
// [666]  gr.error = {159} 
_gr._error="";
// [667]  gr.result = Array() 
_gr._result=[];
// [668]  gr.json = {160} 
_gr._json="";
// [669]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [671]  Return gr 
return _gr;
// End Sub
};

// [675] private Sub JoinFields(delimiter As String, lst As List) As String 
_B.joinfields=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [676]  Dim i As Int 
_i=0;
// [677]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [678]  Dim fld As String 
_fld="";
// [679]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [680]  fld = lst.Get(0) 
_fld=_lst[0];
// [681]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [682]  sb.Append(fld) 
_sb.append(_fld);
// [683]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [684]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [685]  fld = EscapeField(fld) 
_fld=_B.escapefield(_fld,_B);
// [686]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [687]  Next 
}
// [688]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [693] Sub SelectAll(tblName As String, tblfields As List, orderBy As List) As SQLiteResultSet 
_B.selectall=function(_tblname,_tblfields,_orderby) {
var _fld1,_selfields,_sb,_stro,_gr;
// [695]  Dim fld1 As String = tblfields.Get(0) 
_fld1=_tblfields[0];
// [696]  Dim selFIelds As String = {161} 
_selfields="";
// [697]  Select Case fld1 
switch ("" + _fld1) {
// [698]  Case {162} 
case "" + "*":
// [699]  selFIelds = {163} 
_selfields="*";
// [700]  Case Else 
break;
default:
// [701]  selFIelds = JoinFields( {164} , tblfields) 
_selfields=_B.joinfields(",",_tblfields,_B);
// [702]  End Select 
break;
}
// [703]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [704]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [705]  sb.Append( {15} ) 
_sb.append("SELECT " + _selfields + " FROM " + _B.escapefield(_tblname,_B) + "");
// [706]  If orderBy <> Null Then 
if (_orderby!=null) {
// [708]  Dim stro As String = JoinFields( {165} , orderBy) 
_stro=_B.joinfields(",",_orderby,_B);
// [709]  If stro.Length > 0 Then 
if (_stro.length>0) {
// [710]  sb.Append( {166} ).Append(stro) 
_sb.append(" ORDER BY ").append(_stro);
// [711]  End If 
}
// [712]  End If 
}
// [713]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [714]  gr.Initialize 
_gr.initialize();
// [715]  gr.query = sb.tostring 
_gr._query=_sb.toString();
// [716]  gr.args = Null 
_gr._args=null;
// [717]  gr.command = {167} 
_gr._command="select";
// [718]  gr.types = Null 
_gr._types=null;
// [719]  gr.response = {168} 
_gr._response="";
// [720]  gr.error = {169} 
_gr._error="";
// [721]  gr.result = Array() 
_gr._result=[];
// [722]  gr.json = {170} 
_gr._json="";
// [723]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [725]  Return gr 
return _gr;
// End Sub
};

// [729] Sub DeleteWhere(tblName As String, tblWhere As Map, operators As List) As SQLiteResultSet 
_B.deletewhere=function(_tblname,_tblwhere,_operators) {
var _listoftypes,_listofvalues,_sb,_i,_iwhere,_col,_opr,_gr;
// [730]  If operators = Null Then operators = EQOperators(tblWhere) 
if (_operators==null) {_operators=_B.eqoperators(_tblwhere,_B);}
// [731]  Dim listOfTypes As List = GetMapTypes(tblWhere) 
_listoftypes=_B.getmaptypes(_tblwhere,_B);
// [732]  Dim listOfValues As List = GetMapValues(tblWhere) 
_listofvalues=_B.getmapvalues(_tblwhere,_B);
// [733]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [734]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [735]  sb.Append( {16} ) 
_sb.append("DELETE FROM " + _B.escapefield(_tblname,_B) + " WHERE ");
// [736]  Dim i As Int 
_i=0;
// [737]  Dim iWhere As Int = tblWhere.Size - 1 
_iwhere=Object.keys(_tblwhere).length-1;
// [738]  For i = 0 To iWhere 
for (_i=0;_i<=_iwhere;_i++) {
// [739]  If i > 0 Then 
if (_i>0) {
// [740]  sb.Append( {171} ) 
_sb.append(" AND ");
// [741]  End If 
}
// [742]  Dim col As String = tblWhere.GetKeyAt(i) 
_col=banano_getB4JKeyAt(_tblwhere,_i);
// [743]  sb.Append(col) 
_sb.append(_col);
// [744]  Dim opr As String = operators.Get(i) 
_opr=_operators[_i];
// [745]  sb.Append( {17} ) 
_sb.append(" " + _opr + " ?");
// [746]  Next 
}
// [747]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [748]  gr.Initialize 
_gr.initialize();
// [749]  gr.query = sb.tostring 
_gr._query=_sb.toString();
// [750]  gr.args = listOfValues 
_gr._args=_listofvalues;
// [751]  gr.command = {172} 
_gr._command="delete";
// [752]  gr.types = listOfTypes 
_gr._types=_listoftypes;
// [753]  gr.response = {173} 
_gr._response="";
// [754]  gr.error = {174} 
_gr._error="";
// [755]  gr.result = Array() 
_gr._result=[];
// [756]  gr.json = {175} 
_gr._json="";
// [757]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [759]  Return gr 
return _gr;
// End Sub
};

// [762] Sub Execute(strSQL As String) As SQLiteResultSet 
_B.execute=function(_strsql) {
var _gr;
// [763]  Dim gr As SQLiteResultSet 
_gr= new banano_bananovuematerial_sqliteresultset();
// [764]  gr.Initialize 
_gr.initialize();
// [765]  gr.query = strSQL 
_gr._query=_strsql;
// [766]  gr.args = Null 
_gr._args=null;
// [767]  gr.command = {176} 
_gr._command="execute";
// [768]  gr.types = Null 
_gr._types=null;
// [769]  gr.response = {177} 
_gr._response="";
// [770]  gr.error = {178} 
_gr._error="";
// [771]  gr.result = Array() 
_gr._result=[];
// [772]  gr.json = {179} 
_gr._json="";
// [773]  gr.affectedRows = 0 
_gr._affectedrows=0;
// [774]  Return gr 
return _gr;
// End Sub
};

// [777] Sub Build(rslt As SQLiteResultSet) As Map 
_B.build=function(_rslt) {
var _b;
// [778]  Dim b As Map = CreateMap() 
_b={};
// [779]  If dbName = {180} Then 
if (_B._dbname=="") {
// [780]  Log( {181} ) 
console.log("BANanoSQLite.Build: The database name has not been set!");
// [781]  Return b 
return _b;
// [782]  End If 
}
// [783]  b.Put( {182} , dbName) 
_b["dbname"]=_B._dbname;
// [784]  b.Put( {183} , rslt.command) 
_b["command"]=_rslt._command;
// [785]  b.Put( {184} , rslt.query) 
_b["query"]=_rslt._query;
// [786]  b.Put( {185} , rslt.args) 
_b["args"]=_rslt._args;
// [787]  b.Put( {186} , rslt.types) 
_b["types"]=_rslt._types;
// [788]  Return b 
return _b;
// End Sub
};

// [792] Sub GetNextID(fld As String, rsl As List) As String 
_B.getnextid=function(_fld,_rsl) {
var _nextid,_strid,_nr,_ni;
// [793]  Dim nextid As Int 
_nextid=0;
// [794]  Dim strid As String 
_strid="";
// [796]  If rsl.Size = 0 Then 
if (_rsl.length==0) {
// [797]  nextid = 0 
_nextid=0;
// [798]  Else 
} else {
// [799]  Dim nr As Map = rsl.Get(0) 
_nr=_rsl[0];
// [800]  Dim ni As String = nr.Getdefault(fld, {187} ) 
_ni=(_nr[_fld] || "0");
// [801]  nextid = BANano.parseInt(ni) 
_nextid=parseInt(_ni);
// [802]  End If 
}
// [803]  nextid = nextid + 1 
_nextid=_nextid+1;
// [804]  strid = CStr(nextid) 
_strid=_B.cstr(_nextid,_B);
// [805]  Return strid 
return _strid;
// End Sub
};

// [809] Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [810]  Return {188} & o 
return ""+_o;
// End Sub
};

}
/* =========================== BANanoVM  =========================== */
function banano_bananovuematerial_bananovm() {
var _B=this;
_B._overlay= new banano_bananovuematerial_vmloader();

_B._themes={};

_B._refs={};

_B._data={};

_B._prompt= new banano_bananovuematerial_vmprompt();

_B._material=null;

_B._vueloading=null;

_B._vuecal=null;

_B._vuebo=null;

_B._jquery=null;

_B._vm=null;

_B._vue= new banano_bananovuematerial_bananovue();

_B._vmdef=null;

_B._content= new banano_bananovuematerial_vmelement();

_B._navbar= new banano_bananovuematerial_vmtoolbar();

_B._drawer= new banano_bananovuematerial_vmdrawer();

_B._app= new banano_bananovuematerial_vmelement();

_B._alert= new banano_bananovuematerial_vmalert();

_B._confirm= new banano_bananovuematerial_vmconfirm();

_B._snack= new banano_bananovuematerial_vmsnackbar();

_B._coloroptions={};

_B._borderoptions={};

_B._intensityoptions={};

_B._hasknob=false;

_B._hasinfobox=false;

_B._elevation={};

_B._container= new banano_bananovuematerial_vmcontainer();

_B._gettemplate="";

_B._pages=[];

_B._chartkick=null;

_B._chart=null;

_B._vuegooglemaps=null;

// [39] Public Sub YearNow() As String 
_B.yearnow=function() {
// [40]  Return Vue.YearNow 
return _B._vue.yearnow();
// End Sub
};

// [43] Public Sub MonthNow() As String 
_B.monthnow=function() {
// [44]  Return Vue.monthnow 
return _B._vue.monthnow();
// End Sub
};

// [47] Sub CreateGMap(sid As String, eventHandler As Object) As VMGMap 
_B.creategmap=function(_sid,_eventhandler) {
var _el;
// [48]  Dim el As VMGMap 
_el= new banano_bananovuematerial_vmgmap();
// [49]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [50]  Return el 
return _el;
// End Sub
};

// [53] Sub SetGMapKey(key As String) 
_B.setgmapkey=function(_key) {
var _opt,_load;
// [54]  VueGoogleMaps.Initialize( {25} ) 
_B._vuegooglemaps=VueGoogleMaps;
// [55]  Dim opt As Map = CreateMap() 
_opt={};
// [56]  Dim load As Map = CreateMap() 
_load={};
// [57]  load.Put( {26} , key) 
_load["key"]=_key;
// [58]  load.Put( {27} , {28} ) 
_load["libraries"]="places";
// [59]  opt.Put( {29} , load) 
_opt["load"]=_load;
// [60]  opt.Put( {30} , True) 
_opt["installComponents"]=true;
// [61]  Vue.Use1(VueGoogleMaps, opt) 
_B._vue.use1(_B._vuegooglemaps,_opt);
// End Sub
};

// [65] Sub AddContainer(cont As VMContainer) 
_B.addcontainer=function(_cont) {
// [66]  Content.SetText(cont.tostring) 
_B._content.settext(_cont.tostring());
// End Sub
};

// [70] Sub AddContainerRC(row As Int, col As Int, cont As VMContainer) 
_B.addcontainerrc=function(_row,_col,_cont) {
// [71]  Container.AddComponent(row, col, cont.ToString) 
_B._container.addcomponent(_row,_col,_cont.tostring());
// End Sub
};

// [75] Sub AddGrid(grd As VMGrid) 
_B.addgrid=function(_grd) {
// [76]  grd.Pop(Content) 
_grd.pop(_B._content);
// End Sub
};

// [79] Sub JoinLists(lst As List) As List 
_B.joinlists=function(_lst) {
// [80]  Return Vue.JoinLists(lst) 
return _B._vue.joinlists(_lst);
// End Sub
};

// [83] Sub FixRecordsUseDesign(recs As List, design As VMContainer) 
_B.fixrecordsusedesign=function(_recs,_design) {
// [84]  Vue.FixRecords(recs, design.Strings, design.Integers, design.Booleans, design.Dates, design.Doubles) 
_B._vue.fixrecords(_recs,_design._strings,_design._integers,_design._booleans,_design._dates,_design._doubles);
// End Sub
};

// [88] Sub State2Another(source As String, target As String, defaultValue As Object) 
_B.state2another=function(_source,_target,_defaultvalue) {
// [89]  Vue.State2Another(source, target, defaultValue) 
_B._vue.state2another(_source,_target,_defaultvalue);
// End Sub
};

// [92] Sub CreateChartKick(sid As String, eventHandler As Object) As VMChartKick 
_B.createchartkick=function(_sid,_eventhandler) {
var _el;
// [93]  Dim el As VMChartKick 
_el= new banano_bananovuematerial_vmchartkick();
// [94]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [95]  Return el 
return _el;
// End Sub
};

// [98] Sub CreateTable(sid As String, eventHandler As Object) As VMTable 
_B.createtable=function(_sid,_eventhandler) {
var _el;
// [99]  Dim el As VMTable 
_el= new banano_bananovuematerial_vmtable();
// [100]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [101]  Return el 
return _el;
// End Sub
};

// [104] Sub CreateSpinner(sid As String, eventHandler As Object) As VMSpinner 
_B.createspinner=function(_sid,_eventhandler) {
var _el;
// [105]  Dim el As VMSpinner 
_el= new banano_bananovuematerial_vmspinner();
// [106]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [107]  Return el 
return _el;
// End Sub
};

// [110] Sub CreateProgress(sid As String, eventHandler As Object) As VMProgress 
_B.createprogress=function(_sid,_eventhandler) {
var _el;
// [111]  Dim el As VMProgress 
_el= new banano_bananovuematerial_vmprogress();
// [112]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [113]  Return el 
return _el;
// End Sub
};

// [117] Sub SetProgressValue(pID As String, pVal As Int) As BANanoVM 
_B.setprogressvalue=function(_pid,_pval) {
// [118]  pID = pID.ToLowerCase 
_pid=_pid.toLowerCase();
// [119]  SetStateSingle( {0} , pVal) 
_B.setstatesingle("" + _pid + "value",_pval,_B);
// [120]  Return Me 
return _B;
// End Sub
};

// [124] Sub SetProgressBuffer(pID As String, bVal As Int) As BANanoVM 
_B.setprogressbuffer=function(_pid,_bval) {
// [125]  pID = pID.ToLowerCase 
_pid=_pid.toLowerCase();
// [126]  SetStateSingle( {1} , bVal) 
_B.setstatesingle("" + _pid + "buffer",_bval,_B);
// [127]  Return Me 
return _B;
// End Sub
};

// [131] Sub AddDialog(diag As VMDialog) 
_B.adddialog=function(_diag) {
// [132]  diag.Pop(Content) 
_diag.pop(_B._content);
// End Sub
};

// [136] Sub AddSnackBar(SnackBar As VMSnackbar) 
_B.addsnackbar=function(_snackbar) {
// [137]  SnackBar.Pop(Content) 
_snackbar.pop(_B._content);
// End Sub
};

// [141] Sub AddSpeedDial(speed As VMSpeedDial) 
_B.addspeeddial=function(_speed) {
// [142]  speed.Pop(Content) 
_speed.pop(_B._content);
// End Sub
};

// [146] Sub ShowDialog(dID As String) 
_B.showdialog=function(_did) {
// [147]  dID = dID.tolowercase 
_did=_did.toLowerCase();
// [148]  SetStateTrue(dID) 
_B.setstatetrue(_did,_B);
// End Sub
};

// [151] Sub HideDialog(dID As String) 
_B.hidedialog=function(_did) {
// [152]  dID = dID.tolowercase 
_did=_did.toLowerCase();
// [153]  SetStateFalse(dID) 
_B.setstatefalse(_did,_B);
// End Sub
};

// [156] Sub SetCloak(b As Boolean) As BANanoVM 
_B.setcloak=function(_b) {
// [157]  Vue.SetCloak(b) 
_B._vue.setcloak(_b);
// [158]  Return Me 
return _B;
// End Sub
};

// [161] Sub SetRequired(elID As String, b As Boolean) 
_B.setrequired=function(_elid,_b) {
// [162]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [163]  Vue.SetStateSingle( {2} , b) 
_B._vue.setstatesingle("" + _elid + "required",_b);
// End Sub
};

// [166] Sub Enable(elID As String) 
_B.enable=function(_elid) {
// [167]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [168]  Vue.SetStateSingle( {3} , False) 
_B._vue.setstatesingle("" + _elid + "disabled",false);
// End Sub
};

// [171] Sub Disable(elID As String) 
_B.disable=function(_elid) {
// [172]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [173]  Vue.SetStateSingle( {4} , True) 
_B._vue.setstatesingle("" + _elid + "disabled",true);
// End Sub
};

// [176] Sub SetEnabled(elID As String, b As Boolean) 
_B.setenabled=function(_elid,_b) {
// [177]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [178]  Vue.SetStateSingle( {5} , b) 
_B._vue.setstatesingle("" + _elid + "disabled",_b);
// End Sub
};

// [181] Sub Hide(elID As String) 
_B.hide=function(_elid) {
// [182]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [183]  Vue.SetStateSingle( {6} , False) 
_B._vue.setstatesingle("" + _elid + "show",false);
// End Sub
};

// [186] Sub Show(elID As String) 
_B.show=function(_elid) {
// [187]  Vue.SetStateSingle( {7} , True) 
_B._vue.setstatesingle("" + _elid + "show",true);
// End Sub
};

// [190] Sub ShowError(elID As String) 
_B.showerror=function(_elid) {
// [191]  Vue.SetStateSingle( {8} , True) 
_B._vue.setstatesingle("" + _elid + "error",true);
// End Sub
};

// [194] Sub HideError(elID As String) 
_B.hideerror=function(_elid) {
// [195]  Vue.SetStateSingle( {9} , False) 
_B._vue.setstatesingle("" + _elid + "error",false);
// End Sub
};

// [198] Sub Date2YYYYMMDD(value As Object) As String 
_B.date2yyyymmdd=function(_value) {
// [199]  Return Vue.Date2YYYYMMDD(value) 
return _B._vue.date2yyyymmdd(_value);
// End Sub
};

// [204] Sub DateAdd(mDate As String, HowManyDays As Int) As String 
_B.dateadd=function(_mdate,_howmanydays) {
// [205]  Return Vue.DateAdd(mDate, HowManyDays) 
return _B._vue.dateadd(_mdate,_howmanydays);
// End Sub
};

// [208] Sub Age(birthDay As String) As Int 
_B.age=function(_birthday) {
// [209]  Return Vue.Age(birthDay) 
return _B._vue.age(_birthday);
// End Sub
};

// [212] Sub DateDiff(CurrentDate As String, OtherDate As String) As Int 
_B.datediff=function(_currentdate,_otherdate) {
// [213]  Return Vue.DateDiff(CurrentDate, OtherDate) 
return _B._vue.datediff(_currentdate,_otherdate);
// End Sub
};

// [216] Sub CreateFrappeGantt(sid As String, eventHandler As Object) As VMFrappeGantt 
_B.createfrappegantt=function(_sid,_eventhandler) {
var _el;
// [217]  Dim el As VMFrappeGantt 
_el= new banano_bananovuematerial_vmfrappegantt();
// [218]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [219]  Return el 
return _el;
// End Sub
};

// [222] Sub CreateContainer(sid As String, eventHandler As Object) As VMContainer 
_B.createcontainer=function(_sid,_eventhandler) {
var _el;
// [223]  Dim el As VMContainer 
_el= new banano_bananovuematerial_vmcontainer();
// [224]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [225]  Return el 
return _el;
// End Sub
};

// [228] Sub InStr(searchit As String, searchfor As String) As Int 
_B.instr=function(_searchit,_searchfor) {
// [229]  Return Vue.InStr(searchit, searchfor) 
return _B._vue.instr(_searchit,_searchfor);
// End Sub
};

// [232] Public Sub GetAlphabets(value As String) As String 
_B.getalphabets=function(_value) {
// [233]  Return Vue.GetAlphabets(value) 
return _B._vue.getalphabets(_value);
// End Sub
};

// [236] Sub JSONSetProperty(sjson As String, updates As Map) As String 
_B.jsonsetproperty=function(_sjson,_updates) {
// [237]  Return Vue.JSONSetProperty(sjson, updates) 
return _B._vue.jsonsetproperty(_sjson,_updates);
// End Sub
};

// [240] Sub CreateCSS As VMCSS 
_B.createcss=function() {
var _el;
// [241]  Dim El As VMCSS 
_el= new banano_bananovuematerial_vmcss();
// [242]  El.Initialize 
_el.initialize();
// [243]  Return El 
return _el;
// End Sub
};

// [246] Sub EQOperators(sm As Map) As List 
_B.eqoperators=function(_sm) {
// [247]  Return Vue.EQOperators(sm) 
return _B._vue.eqoperators(_sm);
// End Sub
};

// [251] Sub ExtractMap(source As Map, keys As List) As Map 
_B.extractmap=function(_source,_keys) {
// [252]  Return ExtractMap(source, keys) 
return _B.extractmap(_source,_keys,_B);
// End Sub
};

// [256] Sub Md5Hash(value As String, key As String, raw As Boolean) As String 
_B.md5hash=function(_value,_key,_raw) {
// [257]  Return Vue.Md5Hash(value, key, raw) 
return _B._vue.md5hash(_value,_key,_raw);
// End Sub
};

// [260] Sub CreatePrettyPrint(sid As String, lang As String) As VMPrettyPrint 
_B.createprettyprint=function(_sid,_lang) {
var _el;
// [261]  Dim El As VMPrettyPrint 
_el= new banano_bananovuematerial_vmprettyprint();
// [262]  El.Initialize(Vue, sid, lang) 
_el.initialize(_B._vue,_sid,_lang);
// [263]  Return El 
return _el;
// End Sub
};

// [266] Sub CreateEnlighter(sid As String, lang As String) As VMEnlighter 
_B.createenlighter=function(_sid,_lang) {
var _el;
// [267]  Dim el As VMEnlighter 
_el= new banano_bananovuematerial_vmenlighter();
// [268]  el.Initialize(Vue, sid, lang) 
_el.initialize(_B._vue,_sid,_lang);
// [269]  Return el 
return _el;
// End Sub
};

// [273] Sub SetStyle(className As String, prop As String, val As String) As BANanoVM 
_B.setstyle=function(_classname,_prop,_val) {
// [274]  Vue.SetStyle(className, prop, val) 
_B._vue.setstyle(_classname,_prop,_val);
// [275]  Return Me 
return _B;
// End Sub
};

// [279] Sub JSONPretty(m As Object) As String 
_B.jsonpretty=function(_m) {
// [280]  Return Vue.JSONPretty(m) 
return _B._vue.jsonpretty(_m);
// End Sub
};

// [289] Sub CreateEmptyState(sid As String, eventHandler As Object) As VMEmptyState 
_B.createemptystate=function(_sid,_eventhandler) {
var _el;
// [290]  Dim el As VMEmptyState 
_el= new banano_bananovuematerial_vmemptystate();
// [291]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [292]  Return el 
return _el;
// End Sub
};

// [295] Sub CreateImage(img As String, eventHandler As Object) As VMImage 
_B.createimage=function(_img,_eventhandler) {
var _el;
// [296]  Dim el As VMImage 
_el= new banano_bananovuematerial_vmimage();
// [297]  el.Initialize(Vue, img, eventHandler) 
_el.initialize(_B._vue,_img,_eventhandler);
// [298]  Return el 
return _el;
// End Sub
};

// [301] Sub CreatePDF(sid As String, url As String) As VMPDF 
_B.createpdf=function(_sid,_url) {
var _el;
// [302]  Dim el As VMPDF 
_el= new banano_bananovuematerial_vmpdf();
// [303]  el.Initialize(Vue, sid, url) 
_el.initialize(_B._vue,_sid,_url);
// [304]  Return el 
return _el;
// End Sub
};

// [307] Sub CreateGijgoTable(sid As String, PrimaryKey As String, module As Object) As VMGijgoTable 
_B.creategijgotable=function(_sid,_primarykey,_module) {
var _el;
// [308]  Dim el As VMGijgoTable 
_el= new banano_bananovuematerial_vmgijgotable();
// [309]  el.Initialize(Vue, sid, PrimaryKey, module) 
_el.initialize(_B._vue,_sid,_primarykey,_module);
// [310]  Return el 
return _el;
// End Sub
};

// [313] Sub CreateTimePicker(sid As String, eventHandler As Object) As VMTimePicker 
_B.createtimepicker=function(_sid,_eventhandler) {
var _el;
// [314]  Dim el As VMTimePicker 
_el= new banano_bananovuematerial_vmtimepicker();
// [315]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [316]  Return el 
return _el;
// End Sub
};

// [320] Sub MvField(sValue As String, iPosition As Int, Delimiter As String) As String 
_B.mvfield=function(_svalue,_iposition,_delimiter) {
// [321]  Return Vue.MvField(sValue, iPosition, Delimiter) 
return _B._vue.mvfield(_svalue,_iposition,_delimiter);
// End Sub
};

// [325] Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [326]  Return Vue.CStr(o) 
return _B._vue.cstr(_o);
// End Sub
};

// [331] Sub PadRight(Value As String, MaxLen As Int, PadChar As String) As String 
_B.padright=function(_value,_maxlen,_padchar) {
// [332]  Return Vue.PadRight(Value, MaxLen, PadChar) 
return _B._vue.padright(_value,_maxlen,_padchar);
// End Sub
};

// [336] private Sub Len(Text As String) As Int 
_B.len=function(_text) {
// [337]  Return Text.Length 
return _text.length;
// End Sub
};

// [340] Sub StrParse(Delim As String, InputString As String) As List 
_B.strparse=function(_delim,_inputstring) {
// [341]  Return Vue.StrParse(Delim, InputString) 
return _B._vue.strparse(_delim,_inputstring);
// End Sub
};

// [344] private Sub InitColors 
_B.initcolors=function() {
// [345]  IntensityOptions.Initialize 
_B._intensityoptions={};
// [346]  IntensityOptions.put( {31} , {32} ) 
_B._intensityoptions[""]="Normal";
// [347]  IntensityOptions.put( {33} , {34} ) 
_B._intensityoptions["lighten-1"]="Lighten 1";
// [348]  IntensityOptions.put( {35} , {36} ) 
_B._intensityoptions["lighten-2"]="Lighten 2";
// [349]  IntensityOptions.put( {37} , {38} ) 
_B._intensityoptions["lighten-3"]="Lighten 3";
// [350]  IntensityOptions.put( {39} , {40} ) 
_B._intensityoptions["lighten-4"]="Lighten 4";
// [351]  IntensityOptions.put( {41} , {42} ) 
_B._intensityoptions["lighten-5"]="Lighten 5";
// [352]  IntensityOptions.put( {43} , {44} ) 
_B._intensityoptions["darken-1"]="Darken 1";
// [353]  IntensityOptions.put( {45} , {46} ) 
_B._intensityoptions["darken-2"]="Darken 2";
// [354]  IntensityOptions.put( {47} , {48} ) 
_B._intensityoptions["darken-3"]="Darken 3";
// [355]  IntensityOptions.put( {49} , {50} ) 
_B._intensityoptions["darken-4"]="Darken 4";
// [356]  IntensityOptions.put( {51} , {52} ) 
_B._intensityoptions["accent-1"]="Accent 1";
// [357]  IntensityOptions.put( {53} , {54} ) 
_B._intensityoptions["accent-2"]="Accent 2";
// [358]  IntensityOptions.put( {55} , {56} ) 
_B._intensityoptions["accent-3"]="Accent 3";
// [359]  IntensityOptions.put( {57} , {58} ) 
_B._intensityoptions["accent-4"]="Accent 4";
// [361]  ColorOptions.Initialize 
_B._coloroptions={};
// [362]  ColorOptions.Put( {59} , {60} ) 
_B._coloroptions["amber"]="Amber";
// [363]  ColorOptions.Put( {61} , {62} ) 
_B._coloroptions["black"]="Black";
// [364]  ColorOptions.Put( {63} , {64} ) 
_B._coloroptions["blue"]="Blue";
// [365]  ColorOptions.Put( {65} , {66} ) 
_B._coloroptions["blue-grey"]="Blue Grey";
// [366]  ColorOptions.Put( {67} , {68} ) 
_B._coloroptions["brown"]="Brown";
// [367]  ColorOptions.Put( {69} , {70} ) 
_B._coloroptions["cyan"]="Cyan";
// [368]  ColorOptions.Put( {71} , {72} ) 
_B._coloroptions["deep-orange"]="Deep Orange";
// [369]  ColorOptions.Put( {73} , {74} ) 
_B._coloroptions["deep-purple"]="Deep Purple";
// [370]  ColorOptions.Put( {75} , {76} ) 
_B._coloroptions["green"]="Green";
// [371]  ColorOptions.Put( {77} , {78} ) 
_B._coloroptions["grey"]="Grey";
// [372]  ColorOptions.Put( {79} , {80} ) 
_B._coloroptions["indigo"]="Indigo";
// [373]  ColorOptions.Put( {81} , {82} ) 
_B._coloroptions["light-blue"]="Light Blue";
// [374]  ColorOptions.Put( {83} , {84} ) 
_B._coloroptions["light-green"]="Light Green";
// [375]  ColorOptions.Put( {85} , {86} ) 
_B._coloroptions["lime"]="Lime";
// [376]  ColorOptions.Put( {87} , {88} ) 
_B._coloroptions["orange"]="Orange";
// [377]  ColorOptions.Put( {89} , {90} ) 
_B._coloroptions["pink"]="Pink";
// [378]  ColorOptions.Put( {91} , {92} ) 
_B._coloroptions["purple"]="Purple";
// [379]  ColorOptions.Put( {93} , {94} ) 
_B._coloroptions["red"]="Red";
// [380]  ColorOptions.Put( {95} , {96} ) 
_B._coloroptions["teal"]="Teal";
// [381]  ColorOptions.Put( {97} , {98} ) 
_B._coloroptions["transparent"]="Transparent";
// [382]  ColorOptions.Put( {99} , {100} ) 
_B._coloroptions["white"]="White";
// [383]  ColorOptions.Put( {101} , {102} ) 
_B._coloroptions["yellow"]="Yellow";
// [385]  BorderOptions.Initialize 
_B._borderoptions={};
// [386]  BorderOptions.Put( {103} , {104} ) 
_B._borderoptions["dashed"]="Dashed";
// [387]  BorderOptions.Put( {105} , {106} ) 
_B._borderoptions["dotted"]="Dotted";
// [388]  BorderOptions.Put( {107} , {108} ) 
_B._borderoptions["double"]="Double";
// [389]  BorderOptions.Put( {109} , {110} ) 
_B._borderoptions["groove"]="Groove";
// [390]  BorderOptions.Put( {111} , {112} ) 
_B._borderoptions["hidden"]="Hidden";
// [391]  BorderOptions.Put( {113} , {114} ) 
_B._borderoptions["inset"]="Inset";
// [392]  BorderOptions.Put( {115} , {116} ) 
_B._borderoptions["none"]="None";
// [393]  BorderOptions.Put( {117} , {118} ) 
_B._borderoptions["outset"]="Outset";
// [394]  BorderOptions.Put( {119} , {120} ) 
_B._borderoptions["ridge"]="Ridge";
// [395]  BorderOptions.Put( {121} , {122} ) 
_B._borderoptions["solid"]="Solid";
// End Sub
};

// [400] Sub MergeMaps(oldm As Map, newm As Map) As Map 
_B.mergemaps=function(_oldm,_newm) {
// [401]  Return Vue.MergeMaps(oldm, newm) 
return _B._vue.mergemaps(_oldm,_newm);
// End Sub
};

// [404] Sub CreateInfoBox(sid As String, eventHandler As Object) As VMInfoBox 
_B.createinfobox=function(_sid,_eventhandler) {
var _el;
// [405]  HasInfoBox = True 
_B._hasinfobox=true;
// [406]  Dim el As VMInfoBox 
_el= new banano_bananovuematerial_vminfobox();
// [407]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [408]  Return el 
return _el;
// End Sub
};

// [411] Sub CreateKnob(sid As String, eventHandler As Object) As VMKnob 
_B.createknob=function(_sid,_eventhandler) {
var _el;
// [412]  HasKnob = True 
_B._hasknob=true;
// [413]  Dim el As VMKnob 
_el= new banano_bananovuematerial_vmknob();
// [414]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [415]  Return el 
return _el;
// End Sub
};

// [418] Sub AddComponent(comp As VueComponent) 
_B.addcomponent=function(_comp) {
// [419]  Vue.AddComponent(comp) 
_B._vue.addcomponent(_comp);
// End Sub
};

// [423] Sub AddElement(elm As VMElement) 
_B.addelement=function(_elm) {
// [424]  elm.Pop(Content) 
_elm.pop(_B._content);
// End Sub
};

// [427] Sub AddHTML(htmlContent As String) 
_B.addhtml=function(_htmlcontent) {
// [428]  Content.SetText(htmlContent) 
_B._content.settext(_htmlcontent);
// End Sub
};

// [431] Sub CreateCustomComponent(id As String, tag As String) As VMElement 
_B.createcustomcomponent=function(_id,_tag) {
var _el;
// [432]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [433]  el.Initialize(Vue, id).SetTag(tag) 
_el.initialize(_B._vue,_id).settag(_tag);
// [434]  Return el 
return _el;
// End Sub
};

// [438] Sub CreateComponent(id As String, tag As String, eventHandler As Object) As VueComponent 
_B.createcomponent=function(_id,_tag,_eventhandler) {
var _el;
// [439]  Dim el As VueComponent 
_el= new banano_bananovuematerial_vuecomponent();
// [440]  el.Initialize(id, tag, eventHandler) 
_el.initialize(_id,_tag,_eventhandler);
// [441]  Return el 
return _el;
// End Sub
};

// [445] Sub CreateComponent1(id As String) As VMElement 
_B.createcomponent1=function(_id) {
var _el;
// [446]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [447]  el.Initialize(Vue, id).SetTag( {123} ) 
_el.initialize(_B._vue,_id).settag("component");
// [448]  Return el 
return _el;
// End Sub
};

// [451] Sub AddRoute(path As String, comp As VueComponent) As BANanoVM 
_B.addroute=function(_path,_comp) {
// [452]  Vue.AddRoute(path, comp) 
_B._vue.addroute(_path,_comp);
// [453]  Return Me 
return _B;
// End Sub
};

// [456] Sub UpdateBadge(elID As String, counted As String) As BANanoVM 
_B.updatebadge=function(_elid,_counted) {
var _badvalue;
// [457]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [458]  Dim badValue As String = {10} 
_badvalue="" + _elid + "value";
// [459]  Vue.SetStateSingle(badValue, counted) 
_B._vue.setstatesingle(_badvalue,_counted);
// [460]  Return Me 
return _B;
// End Sub
};

// [463] Sub UpdateItemBadge(elID As String, counted As String) As BANanoVM 
_B.updateitembadge=function(_elid,_counted) {
var _badvalue;
// [464]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [465]  Dim badValue As String = {11} 
_badvalue="" + _elid + "badgevalue";
// [466]  Vue.SetStateSingle(badValue, counted) 
_B._vue.setstatesingle(_badvalue,_counted);
// [467]  Return Me 
return _B;
// End Sub
};

// [470] Sub IncrementBadge(elID As String, counted As Int) As BANanoVM 
_B.incrementbadge=function(_elid,_counted) {
var _badvalue,_lastvalue,_intlast;
// [471]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [472]  Dim badValue As String = {12} 
_badvalue="" + _elid + "badgevalue";
// [473]  Dim lastValue As String = Vue.GetState(badValue, {124} ) 
_lastvalue=_B._vue.getstate(_badvalue,"0");
// [474]  Dim intLast As Int = BANano.parseInt(lastValue) 
_intlast=parseInt(_lastvalue);
// [475]  intLast = intLast + counted 
_intlast=_intlast+_counted;
// [476]  Vue.SetStateSingle(badValue, intLast) 
_B._vue.setstatesingle(_badvalue,_intlast);
// [477]  Return Me 
return _B;
// End Sub
};

// [480] Sub DecrementBadge(elID As String, counted As Int) As BANanoVM 
_B.decrementbadge=function(_elid,_counted) {
var _badvalue,_lastvalue,_intlast;
// [481]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [482]  Dim badValue As String = {13} 
_badvalue="" + _elid + "badgevalue";
// [483]  Dim lastValue As String = Vue.GetState(badValue, {125} ) 
_lastvalue=_B._vue.getstate(_badvalue,"0");
// [484]  Dim intLast As Int = BANano.parseInt(lastValue) 
_intlast=parseInt(_lastvalue);
// [485]  intLast = intLast - counted 
_intlast=_intlast-_counted;
// [486]  Vue.SetStateSingle(badValue, intLast) 
_B._vue.setstatesingle(_badvalue,_intlast);
// [487]  Return Me 
return _B;
// End Sub
};

// [491] Sub GetChipIDFromEvent(e As BANanoEvent) As String 
_B.getchipidfromevent=function(_e) {
var _spath,_sitem,_sid;
// [492]  Try 
try {
// [493]  Dim spath As List = e.OtherField( {126} ).Result 
_spath=_e["path"];
// [494]  Dim sitem As Map = spath.get(5) 
_sitem=_spath[5];
// [495]  Dim sid As String = sitem.get( {127} ) 
_sid=_sitem["id"];
// [496]  Return sid 
return _sid;
// [497]  Catch 
} catch(err) {
// [498]  Return {128} 
return "";
// [499]  Log(LastException) 
console.log(err);
// [500]  End Try 
}
// End Sub
};

// [503] Sub CreateAvatar(sid As String, module As Object) As VMAvatar 
_B.createavatar=function(_sid,_module) {
var _el;
// [504]  Dim el As VMAvatar 
_el= new banano_bananovuematerial_vmavatar();
// [505]  el.Initialize(Vue,sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [506]  Return el 
return _el;
// End Sub
};

// [510] Sub CreateBadge(sid As String) As VMBadge 
_B.createbadge=function(_sid) {
var _el;
// [511]  Dim el As VMBadge 
_el= new banano_bananovuematerial_vmbadge();
// [512]  el.Initialize(Vue, sid) 
_el.initialize(_B._vue,_sid);
// [513]  Return el 
return _el;
// End Sub
};

// [517] Sub BR As String 
_B.br=function() {
// [518]  Return {129} 
return "<br>";
// End Sub
};

// [522] Sub HR As String 
_B.hr=function() {
// [523]  Return {130} 
return "<hr>";
// End Sub
};

// [526] Sub CreateRouterLink(rID As String, Text As String) As VMElement 
_B.createrouterlink=function(_rid,_text) {
var _el;
// [527]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [528]  el.Initialize(Vue,rID).SetTag( {131} ).SetText(Text) 
_el.initialize(_B._vue,_rid).settag("router-link").settext(_text);
// [529]  Return el 
return _el;
// End Sub
};

// [532] Sub CreateRouterView(rID As String) As VMElement 
_B.createrouterview=function(_rid) {
var _el;
// [533]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [534]  el.Initialize(Vue,rID).SetTag( {132} ) 
_el.initialize(_B._vue,_rid).settag("router-view");
// [535]  Return el 
return _el;
// End Sub
};

// [538] Sub CreateKeepAlive(sid As String) As VMElement 
_B.createkeepalive=function(_sid) {
var _el;
// [539]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [540]  el.Initialize(Vue,sid).SetTag( {133} ) 
_el.initialize(_B._vue,_sid).settag("keep-alive");
// [541]  Return el 
return _el;
// End Sub
};

// [544] Sub CreateTag(id As String, tag As String) As VMElement 
_B.createtag=function(_id,_tag) {
var _el;
// [545]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [546]  el.Initialize(Vue,id).SetTag(tag) 
_el.initialize(_B._vue,_id).settag(_tag);
// [547]  Return el 
return _el;
// End Sub
};

// [550] Sub CreateDiv(id As String) As VMElement 
_B.creatediv=function(_id) {
var _el;
// [551]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [552]  el.Initialize(Vue,id).SetTag( {134} ) 
_el.initialize(_B._vue,_id).settag("div");
// [553]  Return el 
return _el;
// End Sub
};

// [556] Sub CreateUL(id As String) As VMElement 
_B.createul=function(_id) {
var _el;
// [557]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [558]  el.Initialize(Vue,id).SetTag( {135} ) 
_el.initialize(_B._vue,_id).settag("ul");
// [559]  Return el 
return _el;
// End Sub
};

// [562] Sub CreateLI(id As String) As VMElement 
_B.createli=function(_id) {
var _el;
// [563]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [564]  el.Initialize(Vue,id).SetTag( {136} ) 
_el.initialize(_B._vue,_id).settag("li");
// [565]  Return el 
return _el;
// End Sub
};

// [569] Sub CreateOL(id As String) As VMElement 
_B.createol=function(_id) {
var _el;
// [570]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [571]  el.Initialize(Vue,id).SetTag( {137} ) 
_el.initialize(_B._vue,_id).settag("ol");
// [572]  Return el 
return _el;
// End Sub
};

// [576] Sub CreateP(id As String) As VMElement 
_B.createp=function(_id) {
var _el;
// [577]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [578]  el.Initialize(Vue, id).SetTag( {138} ) 
_el.initialize(_B._vue,_id).settag("p");
// [579]  Return el 
return _el;
// End Sub
};

// [582] Sub CreateH1(id As String) As VMElement 
_B.createh1=function(_id) {
var _el;
// [583]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [584]  el.Initialize(Vue, id).SetTag( {139} ) 
_el.initialize(_B._vue,_id).settag("h1");
// [585]  Return el 
return _el;
// End Sub
};

// [589] Sub CreateFORM1(id As String) As VMElement 
_B.createform1=function(_id) {
var _el;
// [590]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [591]  el.Initialize(Vue, id).SetTag( {140} ) 
_el.initialize(_B._vue,_id).settag("form");
// [592]  Return el 
return _el;
// End Sub
};

// [595] Sub CreateLABEL(id As String) As VMLabel 
_B.createlabel=function(_id) {
var _el;
// [596]  Dim el As VMLabel 
_el= new banano_bananovuematerial_vmlabel();
// [597]  el.Initialize(Vue, id) 
_el.initialize(_B._vue,_id);
// [598]  Return el 
return _el;
// End Sub
};

// [602] Sub CreateINPUT1(id As String) As VMElement 
_B.createinput1=function(_id) {
var _el;
// [603]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [604]  el.Initialize(Vue, id).SetTag( {141} ) 
_el.initialize(_B._vue,_id).settag("input");
// [605]  Return el 
return _el;
// End Sub
};

// [609] Sub CreateTEXTAREA1(id As String) As VMElement 
_B.createtextarea1=function(_id) {
var _el;
// [610]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [611]  el.Initialize(Vue, id).SetTag( {142} ) 
_el.initialize(_B._vue,_id).settag("textarea");
// [612]  Return el 
return _el;
// End Sub
};

// [616] Sub CreateBUTTON1(id As String) As VMElement 
_B.createbutton1=function(_id) {
var _el;
// [617]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [618]  el.Initialize(Vue, id).SetTag( {143} ) 
_el.initialize(_B._vue,_id).settag("button");
// [619]  Return el 
return _el;
// End Sub
};

// [623] Sub CreateH2(id As String) As VMElement 
_B.createh2=function(_id) {
var _el;
// [624]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [625]  el.Initialize(Vue, id).SetTag( {144} ) 
_el.initialize(_B._vue,_id).settag("h2");
// [626]  Return el 
return _el;
// End Sub
};

// [629] Sub CreateH3(id As String) As VMElement 
_B.createh3=function(_id) {
var _el;
// [630]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [631]  el.Initialize(Vue, id).SetTag( {145} ) 
_el.initialize(_B._vue,_id).settag("h3");
// [632]  Return el 
return _el;
// End Sub
};

// [635] Sub CreateH4(id As String) As VMElement 
_B.createh4=function(_id) {
var _el;
// [636]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [637]  el.Initialize(Vue, id).SetTag( {146} ) 
_el.initialize(_B._vue,_id).settag("h4");
// [638]  Return el 
return _el;
// End Sub
};

// [641] Sub CreateH5(id As String) As VMElement 
_B.createh5=function(_id) {
var _el;
// [642]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [643]  el.Initialize(Vue, id).SetTag( {147} ) 
_el.initialize(_B._vue,_id).settag("h5");
// [644]  Return el 
return _el;
// End Sub
};

// [647] Sub CreateH6(id As String) As VMElement 
_B.createh6=function(_id) {
var _el;
// [648]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [649]  el.Initialize(Vue, id).SetTag( {148} ) 
_el.initialize(_B._vue,_id).settag("h6");
// [650]  Return el 
return _el;
// End Sub
};

// [654] Sub SetDateFormat(df As String) As BANanoVM 
_B.setdateformat=function(_df) {
// [655]  material.GetField( {149} ).SetField( {150} , df) 
_B._material["locale"]["dateFormat"]=_df;
// [656]  Return Me 
return _B;
// End Sub
};

// [660] Sub HasState(k As String) As Boolean 
_B.hasstate=function(_k) {
// [661]  Return Vue.HasState(k) 
return _B._vue.hasstate(_k);
// End Sub
};

// [665] Sub GetStates(lst As List) As Map 
_B.getstates=function(_lst) {
// [666]  Return Vue.GetStates(lst) 
return _B._vue.getstates(_lst);
// End Sub
};

// [670] Sub SetState(m As Map) As BANanoVM 
_B.setstate=function(_m) {
// [671]  Vue.SetState(m) 
_B._vue.setstate(_m);
// [672]  Return Me 
return _B;
// End Sub
};

// [676] Sub List2Options(lst As List, keyName As String, valueName As String) As Map 
_B.list2options=function(_lst,_keyname,_valuename) {
// [677]  Return List2Options(lst, keyName, valueName) 
return _B.list2options(_lst,_keyname,_valuename,_B);
// End Sub
};

// [681] Sub List2Map(lst As List, keyName As String, valueName As String) As Map 
_B.list2map=function(_lst,_keyname,_valuename) {
// [682]  Return List2Options(lst, keyName, valueName) 
return _B.list2options(_lst,_keyname,_valuename,_B);
// End Sub
};

// [686] Sub Map2Options(m As Map, keyName As String, valueName As String) As List 
_B.map2options=function(_m,_keyname,_valuename) {
// [687]  Return Vue.Map2Options(m, keyName, valueName) 
return _B._vue.map2options(_m,_keyname,_valuename);
// End Sub
};

// [691] Sub HideItems(items As List) 
_B.hideitems=function(_items) {
var _item;
// [692]  For Each item As String In items 
for (var _itemindex=0;_itemindex<_items.length;_itemindex++) {
_item=_items[_itemindex];
// [693]  Vue.SetStateSingle(item, False) 
_B._vue.setstatesingle(_item,false);
// [694]  Next 
}
// End Sub
};

// [698] Sub ShowItems(items As List) 
_B.showitems=function(_items) {
var _item;
// [699]  For Each item As String In items 
for (var _itemindex=0;_itemindex<_items.length;_itemindex++) {
_item=_items[_itemindex];
// [700]  Vue.SetStateSingle(item, True) 
_B._vue.setstatesingle(_item,true);
// [701]  Next 
}
// End Sub
};

// [704] Sub SetStateSingle(k As Object, v As Object) As BANanoVM 
_B.setstatesingle=function(_k,_v) {
// [705]  Vue.SetStateSingle(k, v) 
_B._vue.setstatesingle(_k,_v);
// [706]  Return Me 
return _B;
// End Sub
};

// [709] Sub SetStateListValues(mapValues As List) As BANanoVM 
_B.setstatelistvalues=function(_mapvalues) {
// [710]  Vue.SetStateListValues(mapValues) 
_B._vue.setstatelistvalues(_mapvalues);
// [711]  Return Me 
return _B;
// End Sub
};

// [715] Sub SetStateList(mapKey As String, mapValues As List) As BANanoVM 
_B.setstatelist=function(_mapkey,_mapvalues) {
// [716]  Vue.SetStateList(mapKey, mapValues) 
_B._vue.setstatelist(_mapkey,_mapvalues);
// [717]  Return Me 
return _B;
// End Sub
};

// [721] Sub SetStateMap(mapKey As String, mapValues As Map) As BANanoVM 
_B.setstatemap=function(_mapkey,_mapvalues) {
// [722]  Vue.SetStateMap(mapKey, mapValues) 
_B._vue.setstatemap(_mapkey,_mapvalues);
// [723]  Return Me 
return _B;
// End Sub
};

// [727] Sub SetWatch(k As String, bImmediate As Boolean, bDeep As Boolean, module As Object, methodName As String) As BANanoVM 
_B.setwatch=function(_k,_bimmediate,_bdeep,_module,_methodname) {
// [728]  Vue.SetWatch(k, bImmediate, bDeep, module, methodName) 
_B._vue.setwatch(_k,_bimmediate,_bdeep,_module,_methodname);
// [729]  Return Me 
return _B;
// End Sub
};

// [734] Sub SetMethod(module As Object, methodName As String) As BANanoVM 
_B.setmethod=function(_module,_methodname) {
// [735]  Vue.SetMethod(module, methodName) 
_B._vue.setmethod(_module,_methodname);
// [736]  Return Me 
return _B;
// End Sub
};

// [740] Sub SetCreated(module As Object, methodName As String) As BANanoVM 
_B.setcreated=function(_module,_methodname) {
// [741]  Vue.SetCreated(module, methodName) 
_B._vue.setcreated(_module,_methodname);
// [742]  Return Me 
return _B;
// End Sub
};

// [745] Sub RunMethod(methodName As String, params As Object) As BANanoObject 
_B.runmethod=function(_methodname,_params) {
// [746]  Return Vue.RunMethod(methodName, params) 
return _B._vue.runmethod(_methodname,_params);
// End Sub
};

// [750] Sub CallMethod(methodName As String) 
_B.callmethod=function(_methodname) {
// [751]  Vue.CallMethod(methodName) 
_B._vue.callmethod(_methodname);
// End Sub
};

// [754] Sub CallComputed(methodName As String) As Object 
_B.callcomputed=function(_methodname) {
// [755]  Return Vue.CallComputed(methodName) 
return _B._vue.callcomputed(_methodname);
// End Sub
};

// [758] Sub GetIDFromEvent(e As BANanoEvent) As String 
_B.getidfromevent=function(_e) {
// [759]  Return Vue.GetIDFromEvent(e) 
return _B._vue.getidfromevent(_e);
// End Sub
};

// [762] Sub GetKeyFromEvent(e As BANanoEvent) As String 
_B.getkeyfromevent=function(_e) {
// [763]  Return Vue.GetKeyFromEvent(e) 
return _B._vue.getkeyfromevent(_e);
// End Sub
};

// [767] Sub GetEventTargetProperty(e As BANanoEvent, prop As String) As String 
_B.geteventtargetproperty=function(_e,_prop) {
// [768]  Return Vue.GetEventTargetProperty(e, prop) 
return _B._vue.geteventtargetproperty(_e,_prop);
// End Sub
};

// [771] private Sub SetFontFamily(ff As Object) 
_B.setfontfamily=function(_ff) {
// [772]  Vue.SetFontFamily(ff) 
_B._vue.setfontfamily(_ff);
// End Sub
};

// [775] Sub StateExists(stateName As String) As Boolean 
_B.stateexists=function(_statename) {
// [776]  Return Vue.StateExists(stateName) 
return _B._vue.stateexists(_statename);
// End Sub
};

// [779] Sub ToggleState(stateName As String) As BANanoVM 
_B.togglestate=function(_statename) {
// [780]  Vue.ToggleState(stateName) 
_B._vue.togglestate(_statename);
// [781]  Return Me 
return _B;
// End Sub
};

// [784] Sub SetStateTrue(k As String) As BANanoVM 
_B.setstatetrue=function(_k) {
// [785]  Vue.SetStateTrue(k) 
_B._vue.setstatetrue(_k);
// [786]  Return Me 
return _B;
// End Sub
};

// [789] Sub AuditTrail(oldM As Map, newM As Map) As Map 
_B.audittrail=function(_oldm,_newm) {
// [790]  Return Vue.AuditTrail(oldM, newM) 
return _B._vue.audittrail(_oldm,_newm);
// End Sub
};

// [793] Sub SetStateFalse(k As String) As BANanoVM 
_B.setstatefalse=function(_k) {
// [794]  Vue.SetStateFalse(k) 
_B._vue.setstatefalse(_k);
// [795]  Return Me 
return _B;
// End Sub
};

// [798] Sub SetStateIncrement(k As String) As BANanoVM 
_B.setstateincrement=function(_k) {
// [799]  Vue.SetStateIncrement(k) 
_B._vue.setstateincrement(_k);
// [800]  Return Me 
return _B;
// End Sub
};

// [803] Sub SetStateDecrement(k As String) As BANanoVM 
_B.setstatedecrement=function(_k) {
// [804]  Vue.SetStateDecrement(k) 
_B._vue.setstatedecrement(_k);
// [805]  Return Me 
return _B;
// End Sub
};

// [808] Sub GetState(k As String, default As Object) As Object 
_B.getstate=function(_k,_default) {
var _res;
// [809]  Dim res As Object = Vue.GetState(k, default) 
_res=_B._vue.getstate(_k,_default);
// [810]  Return res 
return _res;
// End Sub
};

// [814] Sub SetMounted(module As Object, methodName As String) As BANanoVM 
_B.setmounted=function(_module,_methodname) {
// [815]  Vue.SetMounted(module, methodName) 
_B._vue.setmounted(_module,_methodname);
// [816]  Return Me 
return _B;
// End Sub
};

// [820] Sub ForceUpdate 
_B.forceupdate=function() {
// [821]  Vue.ForceUpdate 
_B._vue.forceupdate();
// End Sub
};

// [824] Sub CreateSlider(sid As String, eventHandler As Object) As VMSlider 
_B.createslider=function(_sid,_eventhandler) {
var _el;
// [825]  Dim el As VMSlider 
_el= new banano_bananovuematerial_vmslider();
// [826]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [827]  Return el 
return _el;
// End Sub
};

// [830] Sub CreateBottomBarItem(sid As String, eventHandler As Object) As VMBottomBarItem 
_B.createbottombaritem=function(_sid,_eventhandler) {
var _el;
// [831]  Dim el As VMBottomBarItem 
_el= new banano_bananovuematerial_vmbottombaritem();
// [832]  el.Initialize(Vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [833]  Return el 
return _el;
// End Sub
};

// [836] Sub CreateButtomBar(sid As String, eventHandler As Object) As VMBottomBar 
_B.createbuttombar=function(_sid,_eventhandler) {
var _el;
// [837]  Dim el As VMBottomBar 
_el= new banano_bananovuematerial_vmbottombar();
// [838]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [839]  Return el 
return _el;
// End Sub
};

// [842] Sub CreateTabsItem(sid As String, eventHandler As Object) As VMTabsItem 
_B.createtabsitem=function(_sid,_eventhandler) {
var _el;
// [843]  Dim el As VMTabsItem 
_el= new banano_bananovuematerial_vmtabsitem();
// [844]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [845]  Return el 
return _el;
// End Sub
};

// [848] Sub CreateTabs(sid As String, eventHandler As Object) As VMTabs 
_B.createtabs=function(_sid,_eventhandler) {
var _el;
// [849]  Dim el As VMTabs 
_el= new banano_bananovuematerial_vmtabs();
// [850]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [851]  Return el 
return _el;
// End Sub
};

// [854] Sub CreateVueCal(sid As String, eventHandler As Object, width As String, height As String) As VMVueCal 
_B.createvuecal=function(_sid,_eventhandler,_width,_height) {
var _el;
// [855]  Dim el As VMVueCal 
_el= new banano_bananovuematerial_vmvuecal();
// [856]  el.Initialize(Vue, sid, eventHandler, width, height) 
_el.initialize(_B._vue,_sid,_eventhandler,_width,_height);
// [857]  Return el 
return _el;
// End Sub
};

// [860] Sub CreateSwitch(sid As String, eventHandler As Object) As VMSwitch 
_B.createswitch=function(_sid,_eventhandler) {
var _el;
// [861]  Dim el As VMSwitch 
_el= new banano_bananovuematerial_vmswitch();
// [862]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [863]  Return el 
return _el;
// End Sub
};

// [866] Sub CreateCheckBox(sid As String, eventHandler As Object) As VMCheckBox 
_B.createcheckbox=function(_sid,_eventhandler) {
var _el;
// [867]  Dim el As VMCheckBox 
_el= new banano_bananovuematerial_vmcheckbox();
// [868]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [869]  Return el 
return _el;
// End Sub
};

// [872] Sub UX() 
_B.ux=function() {
var _rkey,_srefs,_dkey;
// [873]  Content.SetText(Container.ToString) 
_B._content.settext(_B._container.tostring());
// [874]  Create 
_B.create(_B);
// [875]  Vue.ux 
_B._vue.ux();
// [876]  GetTemplate = Vue.GetTemplate 
_B._gettemplate=_B._vue._gettemplate;
// [877]  VueBO = Vue.BOVue 
_B._vuebo=_B._vue._bovue;
// [879]  Dim rKey As String = {151} 
_rkey="$material";
// [880]  material = VueBO.GetField(rKey) 
_B._material=_B._vuebo[_rkey];
// [881]  Dim srefs As String = {152} 
_srefs="$refs";
// [882]  refs = VueBO.GetField(srefs).result 
_B._refs=_B._vuebo[_srefs];
// [883]  Dim dKey As String = {153} 
_dkey="$data";
// [884]  data = VueBO.GetField(dKey).Result 
_B._data=_B._vuebo[_dkey];
// [885]  If HasInfoBox Then SetInfoBox 
if (_B._hasinfobox) {_B.setinfobox(_B);}
// [886]  If HasKnob Then SetKnob 
if (_B._hasknob) {_B.setknob(_B);}
// [888]  SetDateFormat( {154} ) 
_B.setdateformat("yyyy-MM-dd",_B);
// End Sub
};

// [892] Sub PageRefresh 
_B.pagerefresh=function() {
// [893]  If HasInfoBox Then SetInfoBox 
if (_B._hasinfobox) {_B.setinfobox(_B);}
// [894]  If HasKnob Then SetKnob 
if (_B._hasknob) {_B.setknob(_B);}
// End Sub
};

// [897] Sub Use(bo As BANanoObject) 
_B.use=function(_bo) {
// [898]  Vue.Use(bo) 
_B._vue.use(_bo);
// End Sub
};

// [901] Sub CreateStepperItem(sid As String, eventHandler As Object) As VMStepItem 
_B.createstepperitem=function(_sid,_eventhandler) {
var _el;
// [902]  Dim el As VMStepItem 
_el= new banano_bananovuematerial_vmstepitem();
// [903]  el.Initialize(Vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [904]  Return el 
return _el;
// End Sub
};

// [907] Sub CreateSteppers(sid As String, eventHandler As Object) As VMSteppers 
_B.createsteppers=function(_sid,_eventhandler) {
var _el;
// [908]  Dim el As VMSteppers 
_el= new banano_bananovuematerial_vmsteppers();
// [909]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [910]  Return el 
return _el;
// End Sub
};

// [913] Sub SetScrollBar(b As Boolean) As BANanoVM 
_B.setscrollbar=function(_b) {
// [914]  App.SetAttr(CreateMap( {155} :b)) 
_B._app.setattr({":md-scrollbar":_b});
// [915]  Return Me 
return _B;
// End Sub
};

// [918] Sub CreateList(sid As String,module As Object) As VMList 
_B.createlist=function(_sid,_module) {
var _el;
// [919]  Dim el As VMList 
_el= new banano_bananovuematerial_vmlist();
// [920]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [921]  Return el 
return _el;
// End Sub
};

// [924] Sub CreateListView(sid As String, module As Object) As VMListView 
_B.createlistview=function(_sid,_module) {
var _el;
// [925]  Dim el As VMListView 
_el= new banano_bananovuematerial_vmlistview();
// [926]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [927]  Return el 
return _el;
// End Sub
};

// [930] Sub CreateGrid(sid As String, eventHandler As Object) As VMGrid 
_B.creategrid=function(_sid,_eventhandler) {
var _el;
// [931]  Dim el As VMGrid 
_el= new banano_bananovuematerial_vmgrid();
// [932]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [933]  Return el 
return _el;
// End Sub
};

// [936] Sub CreateCaption(sid As String) As VMElement 
_B.createcaption=function(_sid) {
var _el;
// [937]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [938]  el.Initialize(Vue, sid).SetTag( {156} ).AddClass( {157} ) 
_el.initialize(_B._vue,_sid).settag("span").addclass("md-caption");
// [939]  Return el 
return _el;
// End Sub
};

// [942] Sub CreateBody1(sid As String) As VMElement 
_B.createbody1=function(_sid) {
var _el;
// [943]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [944]  el.Initialize(Vue, sid).SetTag( {158} ).SetBody1(True) 
_el.initialize(_B._vue,_sid).settag("span").setbody1(true);
// [945]  Return el 
return _el;
// End Sub
};

// [948] Sub CreateA(sid As String) As VMElement 
_B.createa=function(_sid) {
var _el;
// [949]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [950]  el.Initialize(Vue, sid).SetTag( {159} ) 
_el.initialize(_B._vue,_sid).settag("a");
// [951]  Return el 
return _el;
// End Sub
};

// [954] Sub CreateBody2(sid As String) As VMElement 
_B.createbody2=function(_sid) {
var _el;
// [955]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [956]  el.Initialize(Vue, sid).SetTag( {160} ).SetBody2(True) 
_el.initialize(_B._vue,_sid).settag("span").setbody2(true);
// [957]  Return el 
return _el;
// End Sub
};

// [960] Sub CreateSubHeading(sid As String) As VMElement 
_B.createsubheading=function(_sid) {
var _el;
// [961]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [962]  el.Initialize(Vue, sid).SetTag( {161} ).SetSubHeading(True) 
_el.initialize(_B._vue,_sid).settag("span").setsubheading(true);
// [963]  Return el 
return _el;
// End Sub
};

// [966] Sub CreateSubHead(sid As String) As VMElement 
_B.createsubhead=function(_sid) {
var _el;
// [967]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [968]  el.Initialize(Vue, sid).SetTag( {162} ).SetSubHead(True) 
_el.initialize(_B._vue,_sid).settag("span").setsubhead(true);
// [969]  Return el 
return _el;
// End Sub
};

// [972] Sub CreateHeadline(sid As String) As VMElement 
_B.createheadline=function(_sid) {
var _el;
// [973]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [974]  el.Initialize(Vue, sid).SetTag( {163} ).SetHeadline(True) 
_el.initialize(_B._vue,_sid).settag("span").setheadline(true);
// [975]  Return el 
return _el;
// End Sub
};

// [978] Sub CreateDisplay1(sid As String) As VMElement 
_B.createdisplay1=function(_sid) {
var _el;
// [979]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [980]  el.Initialize(Vue, sid).SetTag( {164} ).SetDisplay1(True) 
_el.initialize(_B._vue,_sid).settag("span").setdisplay1(true);
// [981]  Return el 
return _el;
// End Sub
};

// [984] Sub CreateDisplay2(sid As String) As VMElement 
_B.createdisplay2=function(_sid) {
var _el;
// [985]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [986]  el.Initialize(Vue, sid).SetTag( {165} ).SetDisplay2(True) 
_el.initialize(_B._vue,_sid).settag("span").setdisplay2(true);
// [987]  Return el 
return _el;
// End Sub
};

// [990] Sub CreateDisplay3(sid As String) As VMElement 
_B.createdisplay3=function(_sid) {
var _el;
// [991]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [992]  el.Initialize(Vue, sid).SetTag( {166} ).SetDisplay3(True) 
_el.initialize(_B._vue,_sid).settag("span").setdisplay3(true);
// [993]  Return el 
return _el;
// End Sub
};

// [996] Sub CreateDisplay4(sid As String) As VMElement 
_B.createdisplay4=function(_sid) {
var _el;
// [997]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [998]  el.Initialize(Vue, sid).SetTag( {167} ).SetDisplay4(True) 
_el.initialize(_B._vue,_sid).settag("span").setdisplay4(true);
// [999]  Return el 
return _el;
// End Sub
};

// [1002] private Sub SetNeeds 
_B.setneeds=function() {
// [1003]  HasKnob = False 
_B._hasknob=false;
// [1004]  HasInfoBox = False 
_B._hasinfobox=false;
// End Sub
};

// [1007] Sub GetShowState(k As String) As Boolean 
_B.getshowstate=function(_k) {
var _showkey;
// [1008]  Dim showKey As String = {14} 
_showkey="" + _k + "show";
// [1009]  Return GetState(showKey,False) 
return _B.getstate(_showkey,false,_B);
// End Sub
};

// [1012] Sub GetDisabledState(k As String) As Boolean 
_B.getdisabledstate=function(_k) {
var _diskey;
// [1013]  Dim disKey As String = {15} 
_diskey="" + _k + "disabled";
// [1014]  Return GetState(disKey,False) 
return _B.getstate(_diskey,false,_B);
// End Sub
};

// [1017] Sub GetRequiredState(k As String) As Boolean 
_B.getrequiredstate=function(_k) {
var _diskey;
// [1018]  Dim disKey As String = {16} 
_diskey="" + _k + "required";
// [1019]  Return GetState(disKey,False) 
return _B.getstate(_diskey,false,_B);
// End Sub
};

// [1022] Sub SetErrorState(k As String, v As Boolean) 
_B.seterrorstate=function(_k,_v) {
var _showkey;
// [1023]  Dim showKey As String = {17} 
_showkey="" + _k + "error";
// [1024]  SetStateSingle(showKey, v) 
_B.setstatesingle(_showkey,_v,_B);
// End Sub
};

// [1027] Sub SetShowState(k As String, v As Boolean) 
_B.setshowstate=function(_k,_v) {
var _showkey;
// [1028]  Dim showKey As String = {18} 
_showkey="" + _k + "show";
// [1029]  SetStateSingle(showKey, v) 
_B.setstatesingle(_showkey,_v,_B);
// End Sub
};

// [1032] Sub SetDisabledState(k As String, v As Boolean) 
_B.setdisabledstate=function(_k,_v) {
var _diskey;
// [1033]  Dim disKey As String = {19} 
_diskey="" + _k + "disabled";
// [1034]  SetStateSingle(disKey, v) 
_B.setstatesingle(_diskey,_v,_B);
// End Sub
};

// [1037] Sub SetRequiredState(k As String, v As Boolean) 
_B.setrequiredstate=function(_k,_v) {
var _diskey;
// [1038]  Dim disKey As String = {20} 
_diskey="" + _k + "required";
// [1039]  SetStateSingle(disKey, v) 
_B.setstatesingle(_diskey,_v,_B);
// End Sub
};

// [1042] Sub CopyMap(source As Map, keys As List) As Map 
_B.copymap=function(_source,_keys) {
// [1043]  Return Vue.CopyMap(source, keys) 
return _B._vue.copymap(_source,_keys);
// End Sub
};

// [1046] Sub FixRecords(recs As List, trimThese As List, numThese As List, boolThese As List, dateThese As List, dblThese As List) 
_B.fixrecords=function(_recs,_trimthese,_numthese,_boolthese,_datethese,_dblthese) {
// [1047]  Vue.FixRecords(recs, trimThese, numThese, boolThese, dateThese, dblThese) 
_B._vue.fixrecords(_recs,_trimthese,_numthese,_boolthese,_datethese,_dblthese);
// End Sub
};

// [1050] Sub MakeDouble(m As Map, xkeys As List) 
_B.makedouble=function(_m,_xkeys) {
// [1051]  Vue.MakeDouble(m, xkeys) 
_B._vue.makedouble(_m,_xkeys);
// End Sub
};

// [1054] Sub MakeInteger(m As Map, xkeys As List) 
_B.makeinteger=function(_m,_xkeys) {
// [1055]  Vue.MakeInteger(m, xkeys) 
_B._vue.makeinteger(_m,_xkeys);
// End Sub
};

// [1058] Sub MakeBoolean(m As Map, xkeys As List) 
_B.makeboolean=function(_m,_xkeys) {
// [1059]  Vue.MakeBoolean(m, xkeys) 
_B._vue.makeboolean(_m,_xkeys);
// End Sub
};

// [1062] Sub MakeTrim(m As Map, xkeys As List) 
_B.maketrim=function(_m,_xkeys) {
// [1063]  Vue.MakeTrim(m, xkeys) 
_B._vue.maketrim(_m,_xkeys);
// End Sub
};

// [1067] Sub Prepare(keys As List) 
_B.prepare=function(_keys) {
var _k,_sk;
// [1068]  For Each k As String In keys 
for (var _kindex=0;_kindex<_keys.length;_kindex++) {
_k=_keys[_kindex];
// [1069]  Dim sk As String = GetState(k, {168} ) 
_sk=_B.getstate(_k,"",_B);
// [1070]  sk = Date2YYYYMMDD(sk) 
_sk=_B.date2yyyymmdd(_sk,_B);
// [1071]  SetStateSingle(k, sk) 
_B.setstatesingle(_k,_sk,_B);
// [1072]  Next 
}
// End Sub
};

// [1076] Sub ToYYYYMMDD(vmodel As String) 
_B.toyyyymmdd=function(_vmodel) {
var _sk;
// [1077]  Dim sk As String = GetState(vmodel, {169} ) 
_sk=_B.getstate(_vmodel,"",_B);
// [1078]  sk = Date2YYYYMMDD(sk) 
_sk=_B.date2yyyymmdd(_sk,_B);
// [1079]  SetStateSingle(vmodel, sk) 
_B.setstatesingle(_vmodel,_sk,_B);
// End Sub
};

// [1082] Sub JoinNonBlanks(delimiter As String, lst As List) As String 
_B.joinnonblanks=function(_delimiter,_lst) {
// [1083]  Return Vue.JoinNonBlanks(delimiter, lst) 
return _B._vue.joinnonblanks(_delimiter,_lst);
// End Sub
};

// [1086] Sub JoinMaps(lst As List) As Map 
_B.joinmaps=function(_lst) {
// [1087]  Return Vue.JoinMaps(lst) 
return _B._vue.joinmaps(_lst);
// End Sub
};

// [1090] Sub MakeDate(m As Map, xkeys As List) 
_B.makedate=function(_m,_xkeys) {
// [1091]  Vue.MakeDate(m, xkeys) 
_B._vue.makedate(_m,_xkeys);
// End Sub
};

// [1094] Sub ToggleNamedState(stateName As String, state1 As String, state2 As String) As BANanoVM 
_B.togglenamedstate=function(_statename,_state1,_state2) {
// [1095]  Vue.ToggleNamedState(stateName, state1, state2) 
_B._vue.togglenamedstate(_statename,_state1,_state2);
// [1096]  Return Me 
return _B;
// End Sub
};

// [1100] Sub Compile(html As String) As BANanoObject 
_B.compile=function(_html) {
var _bo;
// [1101]  Dim bo As BANanoObject = Vue.Compile(html) 
_bo=_B._vue.compile(_html);
// [1102]  Return bo 
return _bo;
// End Sub
};

// [1105] Sub CreateWaterBall(sid As String, eventHandler As Object, Width As String, Height As String) As VMWaterBall 
_B.createwaterball=function(_sid,_eventhandler,_width,_height) {
var _el;
// [1106]  Dim el As VMWaterBall 
_el= new banano_bananovuematerial_vmwaterball();
// [1107]  el.Initialize(Vue, sid, eventHandler, Width, Height) 
_el.initialize(_B._vue,_sid,_eventhandler,_width,_height);
// [1108]  Return el 
return _el;
// End Sub
};

// [1111] Sub CreateProgressCircle(sid As String, Width As String, Height As String) As VMProgressCircle 
_B.createprogresscircle=function(_sid,_width,_height) {
var _el;
// [1112]  Dim el As VMProgressCircle 
_el= new banano_bananovuematerial_vmprogresscircle();
// [1113]  el.Initialize(Vue, sid, Width, Height) 
_el.initialize(_B._vue,_sid,_width,_height);
// [1114]  Return el 
return _el;
// End Sub
};

// [1118] Sub SetBackgroundImage(url As String) As BANanoVM 
_B.setbackgroundimage=function(_url) {
// [1119]  Content.SetBackgroundImage(url) 
_B._content.setbackgroundimage(_url);
// [1120]  Return Me 
return _B;
// End Sub
};

// [1124] Sub UpdateBackgroundImage(url As String) 
_B.updatebackgroundimage=function(_url) {
// [1125]  BANano.GetElement( {170} ).SetStyle(BANano.ToJson(CreateMap( {171} : {21} , {172} : {173} ))) 
u("#content").css(JSON.parse(JSON.stringify({"background-image":"url('" + _url + "')", "background-size":"100% 100%"})));
// End Sub
};

// [1128] Sub MakePx(sValue As String) As String 
_B.makepx=function(_svalue) {
// [1129]  Return Vue.MakePx(sValue) 
return _B._vue.makepx(_svalue);
// End Sub
};

// [1132] Sub SetDestroyed(module As Object, methodName As String) As BANanoVM 
_B.setdestroyed=function(_module,_methodname) {
// [1133]  Vue.SetDestroyed(module, methodName) 
_B._vue.setdestroyed(_module,_methodname);
// [1134]  Return Me 
return _B;
// End Sub
};

// [1137] Sub SetActivated(module As Object, methodName As String) As BANanoVM 
_B.setactivated=function(_module,_methodname) {
// [1138]  Vue.SetActivated(module, methodName) 
_B._vue.setactivated(_module,_methodname);
// [1139]  Return Me 
return _B;
// End Sub
};

// [1142] Sub SetComputed(k As String, module As Object, methodName As String) As BANanoVM 
_B.setcomputed=function(_k,_module,_methodname) {
// [1143]  Vue.SetComputed(k, module, methodName) 
_B._vue.setcomputed(_k,_module,_methodname);
// [1144]  Return Me 
return _B;
// End Sub
};

// [1148] Sub SetDeActivated(module As Object, methodName As String) As BANanoVM 
_B.setdeactivated=function(_module,_methodname) {
// [1149]  Vue.SetDeActivated(module, methodName) 
_B._vue.setdeactivated(_module,_methodname);
// [1150]  Return Me 
return _B;
// End Sub
};

// [1153] Sub SetUpdated(module As Object, methodName As String) As BANanoVM 
_B.setupdated=function(_module,_methodname) {
// [1154]  Vue.SetUpdated(module, methodName) 
_B._vue.setupdated(_module,_methodname);
// [1155]  Return Me 
return _B;
// End Sub
};

// [1158] Sub SetBeforeMount(module As Object, methodName As String) As BANanoVM 
_B.setbeforemount=function(_module,_methodname) {
// [1159]  Vue.SetBeforeMount(module, methodName) 
_B._vue.setbeforemount(_module,_methodname);
// [1160]  Return Me 
return _B;
// End Sub
};

// [1163] Sub SetBeforeUpdate(module As Object, methodName As String) As BANanoVM 
_B.setbeforeupdate=function(_module,_methodname) {
// [1164]  Vue.SetBeforeUpdate(module, methodName) 
_B._vue.setbeforeupdate(_module,_methodname);
// [1165]  Return Me 
return _B;
// End Sub
};

// [1168] Sub SetBeforeDestroy(module As Object, methodName As String) As BANanoVM 
_B.setbeforedestroy=function(_module,_methodname) {
// [1169]  Vue.SetBeforeDestroy(module, methodName) 
_B._vue.setbeforedestroy(_module,_methodname);
// [1170]  Return Me 
return _B;
// End Sub
};

// [1173] Sub SetBeforeCreate(module As Object, methodName As String) As BANanoVM 
_B.setbeforecreate=function(_module,_methodname) {
// [1174]  Vue.SetBeforeCreate(module, methodName) 
_B._vue.setbeforecreate(_module,_methodname);
// [1175]  Return Me 
return _B;
// End Sub
};

// [1179] Sub AddPage(name As String, module As Object) 
_B.addpage=function(_name,_module) {
// [1180]  Pages.add(name) 
_B._pages.push(_name);
// [1181]  BANano.CallSub(module, {174} , Array(Me)) 'ignore 
(function() {if (typeof _module[("Code").toLowerCase()]==="function") {var CSr = _module[("Code").toLowerCase()](_B,_B);if(CSr!=null) {return CSr}}})();
// End Sub
};

// [1185] Sub ShowPage(name As String) 
_B.showpage=function(_name) {
var _page;
// [1186]  For Each page As String In Pages 
for (var _pageindex=0;_pageindex<_B._pages.length;_pageindex++) {
_page=_B._pages[_pageindex];
// [1187]  If name = page Then 
if (_name==_page) {
// [1188]  Show(name) 
_B.show(_name,_B);
// [1189]  Else 
} else {
// [1190]  Hide(page) 
_B.hide(_page,_B);
// [1191]  End If 
}
// [1192]  Next 
}
// End Sub
};

// [1196] Public Sub Initialize(module As Object, sAppName As String) 
_B.initialize=function(_module,_sappname) {
var _e;
// [1197]  Pages.initialize 
_B._pages.length=0;
// [1198]  Vue.Initialize() 
_B._vue.initialize();
// [1199]  Themes.Initialize 
_B._themes={};
// [1200]  SetNeeds 
_B.setneeds(_B);
// [1201]  JQuery = Vue.jquery 
_B._jquery=_B._vue._jquery;
// [1202]  VM.Initialize( {175} ) 
_B._vm=VueMaterial;
// [1203]  VueCal.Initialize( {176} ) 
_B._vuecal=vuecal;
// [1204]  VueLoading.initialize( {177} ) 
_B._vueloading=VueLoading;
// [1205]  VMDef = VM.GetField( {178} ) 
_B._vmdef=_B._vm["default"];
// [1206]  Chartkick.initialize( {179} ) 
_B._chartkick=Chartkick;
// [1207]  Chart.Initialize( {180} ) 
_B._chart=Chart;
// [1208]  Vue.Use(Chartkick.RunMethod( {181} , Chart)) 
_B._vue.use(_B._chartkick["use"](_B._chart));
// [1209]  Vue.Use(VMDef) 
_B._vue.use(_B._vmdef);
// [1210]  Vue.Use(VueLoading) 
_B._vue.use(_B._vueloading);
// [1211]  Vue.AddComponentBO( {182} ,VueLoading) 
_B._vue.addcomponentbo("loading",_B._vueloading);
// [1212]  Vue.AddComponentBO( {183} , VueCal) 
_B._vue.addcomponentbo("vue-cal",_B._vuecal);
// [1213]  App = CreateApp( {184} ) 
_B._app=_B.createapp("",_B);
// [1214]  Vue.SetStateSingle( {185} , Null) 
_B._vue.setstatesingle("navbarmode",null);
// [1215]  App.SetAttr1( {186} , {187} ) 
_B._app.setattr1(":md-mode","navbarmode");
// [1216]  Vue.SetState(CreateMap( {188} :sAppName)) 
_B._vue.setstate({"navbartitle":_sappname});
// [1217]  Vue.SetState(CreateMap( {189} :sAppName)) 
_B._vue.setstate({"drawertblbartitle":_sappname});
// [1218]  Vue.SetState(CreateMap( {190} :False, {191} :False, {192} :True)) 
_B._vue.setstate({"snack":false, "backshow":false, "menushow":true});
// [1219]  Vue.SetState(CreateMap( {193} : {194} , {195} : {196} , {197} : {198} , {199} : {200} , {201} : {202} )) 
_B._vue.setstate({"alerttitle":"", "alertmessage":"", "alertkey":"", "snackmessage":"", "confirmtext":""});
// [1220]  Vue.SetState(CreateMap( {203} : {204} , {205} : {206} , {207} : {208} , {209} : {210} , {211} : {212} )) 
_B._vue.setstate({"confirmtitle":"", "confirmmessage":"", "confirmkey":"", "confirmtext":"", "canceltext":""});
// [1221]  NavBar.Initialize(Vue, {213} , module) 
_B._navbar.initialize(_B._vue,"navbar",_module);
// [1222]  Drawer.Initialize(Vue, {214} , module) 
_B._drawer.initialize(_B._vue,"drawer",_module);
// [1223]  Content = CreateAppContent( {215} ) 
_B._content=_B.createappcontent("content",_B);
// [1224]  NavBar.SetHasBackButton(False).SetAppToolbar(True) 
_B._navbar.sethasbackbutton(false).setapptoolbar(true);
// [1225]  NavBar.SetHasMenuButton(True) 
_B._navbar.sethasmenubutton(true);
// [1228]  Overlay = CreateLoader( {216} , module) 
_B._overlay=_B.createloader("pageloader",_module,_B);
// [1229]  Overlay.Pop(Content) 
_B._overlay.pop(_B._content);
// [1231]  CreateButton( {217} ,module).SetIconButton(True).SetIcon( {218} ).Pop(NavBar.StartSection) 
_B.createbutton("back",_module,_B).seticonbutton(true).seticon("keyboard_arrow_left").pop(_B._navbar._startsection);
// [1232]  CreateButton( {219} ,module).SetIconButton(True).SetIcon( {220} ).SetOnClick(Me).Pop(NavBar.StartSection) 
_B.createbutton("menu",_module,_B).seticonbutton(true).seticon("menu").setonclick(_B).pop(_B._navbar._startsection);
// [1234]  NavBar.SetHasLogo(False) 
_B._navbar.sethaslogo(false);
// [1235]  NavBar.SetLogo( {221} ) 
_B._navbar.setlogo("");
// [1237]  Alert = CreateAlert( {222} ,module).SetTitle( {223} ).SetConfirmText( {224} ).SetContent( {225} ) 
_B._alert=_B.createalert("alert",_module,_B).settitle("Alert").setconfirmtext("Ok").setcontent("Alert Content!");
// [1238]  Alert.Pop(Content) 
_B._alert.pop(_B._content);
// [1240]  Confirm = CreateConfirm( {226} ,module).SetTitle( {227} ).SetContent( {228} ) 
_B._confirm=_B.createconfirm("confirm",_module,_B).settitle("Title").setcontent("Content");
// [1241]  Confirm.SetConfirmText( {229} ).SetCancelText( {230} ) 
_B._confirm.setconfirmtext("Ok").setcanceltext("Cancel");
// [1242]  Confirm.Pop(Content) 
_B._confirm.pop(_B._content);
// [1244]  Prompt = CreatePrompt( {231} , module).SetTitle( {232} ).SetContent( {233} ).SetMaxLength(20).SetPlaceHolder( {234} ) 
_B._prompt=_B.createprompt("prompt",_module,_B).settitle("Title").setcontent("Content").setmaxlength(20).setplaceholder("Placeholder");
// [1245]  Prompt.SetConfirmText( {235} ).SetCancelText( {236} ) 
_B._prompt.setconfirmtext("Ok").setcanceltext("Cancel");
// [1246]  Prompt.Pop(Content) 
_B._prompt.pop(_B._content);
// [1248]  Snack = CreateSnackBar( {237} ,module) 
_B._snack=_B.createsnackbar("snack",_module,_B);
// [1249]  Snack.Pop(Content) 
_B._snack.pop(_B._content);
// [1251]  If SubExists(module, {238} ) = False Then 
if ((typeof _module[("confirm_cancel").toLowerCase()]==="function")==false) {
// [1252]  Log( {239} ) 
console.log("Initialize: Pleasure ensure you have a confirm_cancel event!");
// [1253]  End If 
}
// [1255]  If SubExists(module, {240} ) = False Then 
if ((typeof _module[("confirm_ok").toLowerCase()]==="function")==false) {
// [1256]  Log( {241} ) 
console.log("Initialize: Pleasure ensure you have a confirm_ok event!");
// [1257]  End If 
}
// [1259]  If SubExists(module, {242} ) = False Then 
if ((typeof _module[("prompt_cancel").toLowerCase()]==="function")==false) {
// [1260]  Log( {243} ) 
console.log("Initialize: Pleasure ensure you have a prompt_cancel event!");
// [1261]  End If 
}
// [1263]  If SubExists(module, {244} ) = False Then 
if ((typeof _module[("prompt_ok").toLowerCase()]==="function")==false) {
// [1264]  Log( {245} ) 
console.log("Initialize: Pleasure ensure you have a prompt_ok event!");
// [1265]  End If 
}
// [1267]  InitColors 
_B.initcolors(_B);
// [1268]  Vue.Template.AddClass( {246} ) 
_B._vue._template.addclass("page-container");
// [1269]  Container.Initialize(Vue, sAppName & {247} , module) 
_B._container.initialize(_B._vue,_sappname+"page",_module);
// [1271]  Dim e As Int 
_e=0;
// [1272]  For e = 0 To 24 
for (_e=0;_e<=24;_e++) {
// [1273]  Elevation.Put(e, e) 
_B._elevation[_e]=_e;
// [1274]  Next 
}
// End Sub
};

// [1278] Sub ShowPrompt1(pName As String) 
_B.showprompt1=function(_pname) {
// [1279]  SetPrompt(Null) 
_B.setprompt(null,_B);
// [1280]  ShowDialog(pName) 
_B.showdialog(_pname,_B);
// End Sub
};

// [1283] Sub SetPrompt(pvalue As Object) 
_B.setprompt=function(_pvalue) {
// [1284]  Vue.SetStateSingle( {248} ,pvalue) 
_B._vue.setstatesingle("promptvalue",_pvalue);
// End Sub
};

// [1287] Sub GetPrompt As String 
_B.getprompt=function() {
var _ss;
// [1288]  Dim ss As String = Vue.GetState( {249} , {250} ) 
_ss=_B._vue.getstate("promptvalue","");
// [1289]  Return ss 
return _ss;
// End Sub
};

// [1293] Sub AddAlert(alertid As String, eventHandler As Object, title As String, AlertContent As String, ConfirmText As String) 
_B.addalert=function(_alertid,_eventhandler,_title,_alertcontent,_confirmtext) {
var _myalert;
// [1294]  Dim myalert As VMAlert = CreateAlert(alertid,eventHandler).SetStatic(True).SetTitle(title).SetConfirmText(ConfirmText).SetContent(AlertContent) 
_myalert=_B.createalert(_alertid,_eventhandler,_B).setstatic(true).settitle(_title).setconfirmtext(_confirmtext).setcontent(_alertcontent);
// [1295]  myalert.Pop(Content) 
_myalert.pop(_B._content);
// End Sub
};

// [1299] Sub AddConfirm(confirmid As String, eventHandler As Object, title As String, ConfirmContent As String, ConfirmText As String, CancelText As String) 
_B.addconfirm=function(_confirmid,_eventhandler,_title,_confirmcontent,_confirmtext,_canceltext) {
var _myalert;
// [1300]  Dim myalert As VMConfirm = CreateConfirm(confirmid,eventHandler).SetStatic(True).SetTitle(title).SetConfirmText(ConfirmText).SetContent(ConfirmContent).SetCancelText(CancelText) 
_myalert=_B.createconfirm(_confirmid,_eventhandler,_B).setstatic(true).settitle(_title).setconfirmtext(_confirmtext).setcontent(_confirmcontent).setcanceltext(_canceltext);
// [1301]  myalert.Pop(Content) 
_myalert.pop(_B._content);
// End Sub
};

// [1305] Sub AddPrompt(promptid As String, eventHandler As Object, title As String, Message As String, placeHolder As String, maxLen As Int,ConfirmText As String, CancelText As String) 
_B.addprompt=function(_promptid,_eventhandler,_title,_message,_placeholder,_maxlen,_confirmtext,_canceltext) {
var _myprompt;
// [1306]  Vue.SetStateSingle(promptid, Null) 
_B._vue.setstatesingle(_promptid,null);
// [1307]  Dim myprompt As VMPrompt = CreatePrompt(promptid, eventHandler).SetStatic(True).SetTitle(title).SetContent(Message).SetMaxLength(maxLen).SetPlaceHolder(placeHolder) 
_myprompt=_B.createprompt(_promptid,_eventhandler,_B).setstatic(true).settitle(_title).setcontent(_message).setmaxlength(_maxlen).setplaceholder(_placeholder);
// [1308]  myprompt.SetConfirmText(ConfirmText).SetCancelText(CancelText) 
_myprompt.setconfirmtext(_confirmtext).setcanceltext(_canceltext);
// [1309]  myprompt.Pop(Content) 
_myprompt.pop(_B._content);
// End Sub
};

// [1312] Sub SetCallBack(module As Object, methodName As String) As BANanoVM 
_B.setcallback=function(_module,_methodname) {
var _e,_cb;
// [1313]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1314]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [1315]  Dim e As BANanoEvent 
_e=null;
// [1316]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [1317]  Vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [1318]  Return Me 
return _B;
// End Sub
};

// [1321] Sub menu_click(e As BANanoEvent) 
_B.menu_click=function(_e) {
// [1322]  Drawer.Toggle 
_B._drawer.toggle();
// [1323]  NavBar.ToggleMenu 
_B._navbar.togglemenu();
// End Sub
};

// [1327] Sub AddTheme(themeName As String, ForeColor As String, ForeColorIntensity As String, BackColor As String, BackColorIntensity As String) 
_B.addtheme=function(_themename,_forecolor,_forecolorintensity,_backcolor,_backcolorintensity) {
var _fc,_bc,_theme;
// [1328]  themeName = themeName.ToLowerCase 
_themename=_themename.toLowerCase();
// [1329]  Dim fc As String = {22} 
_fc="" + _forecolor + " " + _forecolorintensity + "";
// [1330]  Dim bc As String = {23} 
_bc="" + _backcolor + " " + _backcolorintensity + "";
// [1332]  fc = fc.Trim 
_fc=_fc.trim();
// [1333]  bc = bc.trim 
_bc=_bc.trim();
// [1335]  Dim theme As Map = CreateMap() 
_theme={};
// [1336]  theme.Put( {251} , fc) 
_theme["fc"]=_fc;
// [1337]  theme.Put( {252} , bc) 
_theme["bc"]=_bc;
// [1338]  Themes.Put(themeName, theme) 
_B._themes[_themename]=_theme;
// End Sub
};

// [1343] Sub UseTheme(ve As VMElement, themeName As String) 
_B.usetheme=function(_ve,_themename) {
var _theme,_fc,_bc,_color;
// [1344]  themeName = themeName.ToLowerCase 
_themename=_themename.toLowerCase();
// [1345]  If Themes.ContainsKey(themeName) Then 
if ((_themename in _B._themes)) {
// [1346]  Dim theme As Map = Themes.Get(themeName) 
_theme=_B._themes[_themename];
// [1347]  Dim fc As String = theme.Get(themeName) 
_fc=_theme[_themename];
// [1348]  Dim bc As String = theme.Get(themeName) 
_bc=_theme[_themename];
// [1350]  Dim color As Map = CreateMap() 
_color={};
// [1351]  color.Put( {253} , fc) 
_color["color"]=_fc;
// [1352]  color.Put( {254} , bc) 
_color["background-color"]=_bc;
// [1353]  ve.SetStyle(color) 
_ve.setstyle(_color);
// [1354]  End If 
}
// End Sub
};

// [1358] Sub ShowAlert(process As String, Title As String, Message As String, ConfirmText As String) 
_B.showalert=function(_process,_title,_message,_confirmtext) {
// [1359]  Vue.SetState(CreateMap( {255} :process, {256} :Title, {257} :Message, {258} :ConfirmText)) 
_B._vue.setstate({"alertkey":_process, "alerttitle":_title, "alertmessage":_message, "confirmtext":_confirmtext});
// [1360]  Alert.Show 
_B._alert.show();
// End Sub
};

// [1363] Sub ShowConfirm(process As String, Title As String, Message As String,ConfirmText As String, CancelText As String) 
_B.showconfirm=function(_process,_title,_message,_confirmtext,_canceltext) {
// [1364]  Vue.SetState(CreateMap( {259} :Title, {260} :Message, {261} :process, {262} :ConfirmText, {263} :CancelText)) 
_B._vue.setstate({"confirmtitle":_title, "confirmmessage":_message, "confirmkey":_process, "confirmtext":_confirmtext, "canceltext":_canceltext});
// [1365]  Confirm.Show 
_B._confirm.show();
// End Sub
};

// [1368] Sub ShowPrompt(Title As String, Message As String,Placeholder As String, MaxLen As Int, ConfirmText As String, CancelText As String) 
_B.showprompt=function(_title,_message,_placeholder,_maxlen,_confirmtext,_canceltext) {
// [1369]  Vue.SetStateSingle( {264} ,Null) 
_B._vue.setstatesingle("promptvalue",null);
// [1370]  Vue.SetState(CreateMap( {265} :Placeholder, {266} :Title, {267} :Message, {268} :ConfirmText, {269} :CancelText, {270} :MaxLen)) 
_B._vue.setstate({"promptplaceholder":_placeholder, "prompttitle":_title, "promptcontent":_message, "promptconfirmtext":_confirmtext, "promptcanceltext":_canceltext, "promptmaxlength":_maxlen});
// [1371]  Prompt.Show 
_B._prompt.show();
// End Sub
};

// [1374] Sub ShowSnackBar(Message As String) 
_B.showsnackbar=function(_message) {
// [1375]  Vue.SetState(CreateMap( {271} :Message)) 
_B._vue.setstate({"snackmessage":_message});
// [1376]  Snack.show 
_B._snack.show();
// End Sub
};

// [1379] Sub CreateSnackBar(sid As String, eventHandler As Object) As VMSnackbar 
_B.createsnackbar=function(_sid,_eventhandler) {
var _el;
// [1380]  Dim el As VMSnackbar 
_el= new banano_bananovuematerial_vmsnackbar();
// [1381]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1382]  Return el 
return _el;
// End Sub
};

// [1385] Sub GetConfirm As String 
_B.getconfirm=function() {
// [1386]  Return Vue.getstate( {272} , {273} ) 
return _B._vue.getstate("confirmkey","");
// End Sub
};

// [1390] Sub GetAlert As String 
_B.getalert=function() {
// [1391]  Return Vue.getstate( {274} , {275} ) 
return _B._vue.getstate("alertkey","");
// End Sub
};

// [1394] Sub CreateAutoComplete(sid As String, eventHandler As Object) As VMAutoComplete 
_B.createautocomplete=function(_sid,_eventhandler) {
var _el;
// [1395]  Dim el As VMAutoComplete 
_el= new banano_bananovuematerial_vmautocomplete();
// [1396]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1397]  el.SetVModel(sid) 
_el.setvmodel(_sid);
// [1398]  Return el 
return _el;
// End Sub
};

// [1401] Sub CreateChips(sid As String, eventHandler As Object) As VMChips 
_B.createchips=function(_sid,_eventhandler) {
var _el;
// [1402]  Dim el As VMChips 
_el= new banano_bananovuematerial_vmchips();
// [1403]  el.Initialize(Vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1404]  Return el 
return _el;
// End Sub
};

// [1407] Sub CreateForm(sid As String, eventHandler As Object) As VMForm 
_B.createform=function(_sid,_eventhandler) {
var _el;
// [1408]  Dim el As VMForm 
_el= new banano_bananovuematerial_vmform();
// [1409]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1410]  Return el 
return _el;
// End Sub
};

// [1413] Sub CreateChip(sid As String, eventHandler As Object) As VMChip 
_B.createchip=function(_sid,_eventhandler) {
var _el;
// [1414]  Dim el As VMChip 
_el= new banano_bananovuematerial_vmchip();
// [1415]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1416]  Return el 
return _el;
// End Sub
};

// [1419] Sub CreateTextArea(sid As String, eventHandler As Object) As VMTextArea 
_B.createtextarea=function(_sid,_eventhandler) {
var _el;
// [1420]  Dim el As VMTextArea 
_el= new banano_bananovuematerial_vmtextarea();
// [1421]  el.Initialize(Vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1422]  Return el 
return _el;
// End Sub
};

// [1425] Sub CreateInput(sid As String, eventHandler As Object) As VMInput 
_B.createinput=function(_sid,_eventhandler) {
var _el;
// [1426]  Dim el As VMInput 
_el= new banano_bananovuematerial_vminput();
// [1427]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1428]  Return el 
return _el;
// End Sub
};

// [1431] Sub CreateFile(sid As String, eventHandler As Object) As VMFile 
_B.createfile=function(_sid,_eventhandler) {
var _el;
// [1432]  Dim el As VMFile 
_el= new banano_bananovuematerial_vmfile();
// [1433]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1434]  Return el 
return _el;
// End Sub
};

// [1438] Sub CreateNumber(sid As String, eventHandler As Object) As VMInput 
_B.createnumber=function(_sid,_eventhandler) {
var _el;
// [1439]  Dim el As VMInput = CreateInput(sid,eventHandler).SetTypeNumber(True) 
_el=_B.createinput(_sid,_eventhandler,_B).settypenumber(true);
// [1440]  Return el 
return _el;
// End Sub
};

// [1443] Sub CreateEmail(sid As String, eventHandler As Object) As VMInput 
_B.createemail=function(_sid,_eventhandler) {
var _el;
// [1444]  Dim el As VMInput = CreateInput(sid, eventHandler).SetTypeEmail(True) 
_el=_B.createinput(_sid,_eventhandler,_B).settypeemail(true);
// [1445]  Return el 
return _el;
// End Sub
};

// [1448] Sub CreatePassword(sid As String, eventHandler As Object) As VMInput 
_B.createpassword=function(_sid,_eventhandler) {
var _el;
// [1449]  Dim el As VMInput = CreateInput(sid,eventHandler).SetTypePassword(True) 
_el=_B.createinput(_sid,_eventhandler,_B).settypepassword(true);
// [1450]  Return el 
return _el;
// End Sub
};

// [1453] Sub CreateTel(sid As String, eventHandler As Object) As VMInput 
_B.createtel=function(_sid,_eventhandler) {
var _el;
// [1454]  Dim el As VMInput = CreateInput(sid,eventHandler).SetTypeTel(True) 
_el=_B.createinput(_sid,_eventhandler,_B).settypetel(true);
// [1455]  Return el 
return _el;
// End Sub
};

// [1459] Sub CreateField(parentid As String, sid As String, eventHandler As Object) As VMField 
_B.createfield=function(_parentid,_sid,_eventhandler) {
var _el;
// [1460]  Dim el As VMField 
_el= new banano_bananovuematerial_vmfield();
// [1461]  el.Initialize(Vue, parentid, sid,eventHandler) 
_el.initialize(_B._vue,_parentid,_sid,_eventhandler);
// [1462]  Return el 
return _el;
// End Sub
};

// [1465] Sub CreateRow(sid As String) As VMRow 
_B.createrow=function(_sid) {
var _el;
// [1466]  Dim el As VMRow 
_el= new banano_bananovuematerial_vmrow();
// [1467]  el.Initialize(Vue, sid) 
_el.initialize(_B._vue,_sid);
// [1468]  Return el 
return _el;
// End Sub
};

// [1471] Sub CreateCol(sid As String) As VMCol 
_B.createcol=function(_sid) {
var _el;
// [1472]  Dim el As VMCol 
_el= new banano_bananovuematerial_vmcol();
// [1473]  el.Initialize(Vue, sid) 
_el.initialize(_B._vue,_sid);
// [1474]  Return el 
return _el;
// End Sub
};

// [1477] Sub AddContent(els As String) 
_B.addcontent=function(_els) {
// [1478]  Vue.SetTemplate(els) 
_B._vue.settemplate(_els);
// End Sub
};

// [1482] Sub Create 
_B.create=function() {
// [1483]  NavBar.Pop(App) 
_B._navbar.pop(_B._app);
// [1484]  Drawer.Pop(App) 
_B._drawer.pop(_B._app);
// [1485]  Content.Pop(App) 
_B._content.pop(_B._app);
// [1486]  AddContent(App.ToString) 
_B.addcontent(_B._app.tostring(),_B);
// End Sub
};

// [1489] Sub CreateSpeedDial(sid As String, eventHandler As Object) As VMSpeedDial 
_B.createspeeddial=function(_sid,_eventhandler) {
var _el;
// [1490]  Dim el As VMSpeedDial 
_el= new banano_bananovuematerial_vmspeeddial();
// [1491]  el.Initialize(Vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1492]  Return el 
return _el;
// End Sub
};

// [1495] Sub CreateSubHeader(sid As String) As VMElement 
_B.createsubheader=function(_sid) {
var _el;
// [1496]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1497]  el.Initialize(Vue, sid).SetTagSubHeader(True) 
_el.initialize(_B._vue,_sid).settagsubheader(true);
// [1498]  Return el 
return _el;
// End Sub
};

// [1501] Sub CreateMenuItem(sid As String, eventHandler As Object) As VMMenuItem 
_B.createmenuitem=function(_sid,_eventhandler) {
var _el;
// [1502]  Dim el As VMMenuItem 
_el= new banano_bananovuematerial_vmmenuitem();
// [1503]  el.Initialize(Vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1504]  Return el 
return _el;
// End Sub
};

// [1507] Sub CreateMenu(sid As String, module As Object) As VMMenu 
_B.createmenu=function(_sid,_module) {
var _el;
// [1508]  Dim el As VMMenu 
_el= new banano_bananovuematerial_vmmenu();
// [1509]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [1510]  Return el 
return _el;
// End Sub
};

// [1513] Sub CreatePrompt(sid As String, eventHandler As Object) As VMPrompt 
_B.createprompt=function(_sid,_eventhandler) {
var _el;
// [1514]  Dim el As VMPrompt 
_el= new banano_bananovuematerial_vmprompt();
// [1515]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1516]  Return el 
return _el;
// End Sub
};

// [1519] Sub CreateConfirm(sid As String, eventHandler As Object) As VMConfirm 
_B.createconfirm=function(_sid,_eventhandler) {
var _el;
// [1520]  Dim el As VMConfirm 
_el= new banano_bananovuematerial_vmconfirm();
// [1521]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1522]  Return el 
return _el;
// End Sub
};

// [1525] Sub CreateAlert(sid As String, eventHandler As Object) As VMAlert 
_B.createalert=function(_sid,_eventhandler) {
var _el;
// [1526]  Dim el As VMAlert 
_el= new banano_bananovuematerial_vmalert();
// [1527]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1528]  Return el 
return _el;
// End Sub
};

// [1531] Sub CreateProperty(module As Object, sid As String) As VMProperty 
_B.createproperty=function(_module,_sid) {
var _el;
// [1532]  Dim el As VMProperty 
_el= new banano_bananovuematerial_vmproperty();
// [1533]  el.Initialize(Vue, module, sid) 
_el.initialize(_B._vue,_module,_sid);
// [1534]  Return el 
return _el;
// End Sub
};

// [1537] Sub CreateTree(module As Object, sid As String, priKey As String) As VMTree 
_B.createtree=function(_module,_sid,_prikey) {
var _el;
// [1538]  Dim el As VMTree 
_el= new banano_bananovuematerial_vmtree();
// [1539]  el.Initialize(Vue, module, sid, priKey) 
_el.initialize(_B._vue,_module,_sid,_prikey);
// [1540]  Return el 
return _el;
// End Sub
};

// [1544] Sub CreateDialog(sid As String, module As Object) As VMDialog 
_B.createdialog=function(_sid,_module) {
var _el;
// [1545]  Dim el As VMDialog 
_el= new banano_bananovuematerial_vmdialog();
// [1546]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [1547]  Return el 
return _el;
// End Sub
};

// [1550] Sub CreateDivider(b As Boolean) As VMDivider 
_B.createdivider=function(_b) {
var _el;
// [1551]  Dim el As VMDivider 
_el= new banano_bananovuematerial_vmdivider();
// [1552]  el.Initialize(Vue, {276} ) 
_el.initialize(_B._vue,"");
// [1553]  Return el 
return _el;
// End Sub
};

// [1556] Sub CreateRadio(sid As String, eventHandler As Object) As VMRadio 
_B.createradio=function(_sid,_eventhandler) {
var _el;
// [1557]  Dim el As VMRadio 
_el= new banano_bananovuematerial_vmradio();
// [1558]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1559]  Return el 
return _el;
// End Sub
};

// [1562] Sub CreateDatePicker(sid As String, eventHandler As Object) As VMDatePicker 
_B.createdatepicker=function(_sid,_eventhandler) {
var _el;
// [1563]  Dim el As VMDatePicker 
_el= new banano_bananovuematerial_vmdatepicker();
// [1564]  el.Initialize(Vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1565]  Return el 
return _el;
// End Sub
};

// [1568] Sub CreateListItem(sid As String, module As Object) As VMListItem 
_B.createlistitem=function(_sid,_module) {
var _el;
// [1569]  Dim el As VMListItem 
_el= new banano_bananovuematerial_vmlistitem();
// [1570]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [1571]  Return el 
return _el;
// End Sub
};

// [1574] Sub CreateIcon(sid As String) As VMIcon 
_B.createicon=function(_sid) {
var _el;
// [1575]  Dim el As VMIcon 
_el= new banano_bananovuematerial_vmicon();
// [1576]  el.Initialize(Vue, sid) 
_el.initialize(_B._vue,_sid);
// [1577]  Return el 
return _el;
// End Sub
};

// [1580] Sub CreateSpan(sid As String) As VMElement 
_B.createspan=function(_sid) {
var _el;
// [1581]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1582]  el.Initialize(Vue,sid).SetTag( {277} ) 
_el.initialize(_B._vue,_sid).settag("span");
// [1583]  Return el 
return _el;
// End Sub
};

// [1586] Sub CreateAppContent(sid As String) As VMElement 
_B.createappcontent=function(_sid) {
var _el;
// [1587]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1588]  el.Initialize(Vue, sid) 
_el.initialize(_B._vue,_sid);
// [1589]  el.SetTag( {278} ) 
_el.settag("md-app-content");
// [1590]  Return el 
return _el;
// End Sub
};

// [1593] Sub CreateElement(sid As String, stag As String) As VMElement 
_B.createelement=function(_sid,_stag) {
var _el;
// [1594]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1595]  el.Initialize(Vue,sid).SetTag(stag) 
_el.initialize(_B._vue,_sid).settag(_stag);
// [1596]  Return el 
return _el;
// End Sub
};

// [1599] Sub CreateDrawer(sid As String, module As Object) As VMDrawer 
_B.createdrawer=function(_sid,_module) {
var _el;
// [1600]  Dim el As VMDrawer 
_el= new banano_bananovuematerial_vmdrawer();
// [1601]  el.Initialize(Vue,sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [1602]  Return el 
return _el;
// End Sub
};

// [1605] Sub CreateButton(sid As String,module As Object) As VMButton 
_B.createbutton=function(_sid,_module) {
var _el;
// [1606]  Dim el As VMButton 
_el= new banano_bananovuematerial_vmbutton();
// [1607]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [1608]  Return el 
return _el;
// End Sub
};

// [1611] Sub CreateRadioGroup(sid As String, sCaption As String, eventHandler As Object) As VMRadioGroup 
_B.createradiogroup=function(_sid,_scaption,_eventhandler) {
var _el;
// [1612]  Dim el As VMRadioGroup 
_el= new banano_bananovuematerial_vmradiogroup();
// [1613]  el.Initialize(Vue, sid, sCaption, eventHandler) 
_el.initialize(_B._vue,_sid,_scaption,_eventhandler);
// [1614]  Return el 
return _el;
// End Sub
};

// [1617] Sub CreateCheckBoxGroup(sid As String, sCaption As String, eventHandler As Object) As VMCheckBoxGroup 
_B.createcheckboxgroup=function(_sid,_scaption,_eventhandler) {
var _el;
// [1618]  Dim el As VMCheckBoxGroup 
_el= new banano_bananovuematerial_vmcheckboxgroup();
// [1619]  el.Initialize(Vue, sid, sCaption, eventHandler) 
_el.initialize(_B._vue,_sid,_scaption,_eventhandler);
// [1620]  Return el 
return _el;
// End Sub
};

// [1623] Sub CreateToolbar(sid As String, module As Object) As VMToolBar 
_B.createtoolbar=function(_sid,_module) {
var _el;
// [1624]  Dim el As VMToolBar 
_el= new banano_bananovuematerial_vmtoolbar();
// [1625]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [1626]  Return el 
return _el;
// End Sub
};

// [1629] Sub CreateLoader(sid As String, module As Object) As VMLoader 
_B.createloader=function(_sid,_module) {
var _el;
// [1630]  Dim el As VMLoader 
_el= new banano_bananovuematerial_vmloader();
// [1631]  el.Initialize(Vue, sid, module) 
_el.initialize(_B._vue,_sid,_module);
// [1632]  Return el 
return _el;
// End Sub
};

// [1635] Sub Validate(rec As Map, required As Map) As Boolean 
_B.validate=function(_rec,_required) {
// [1636]  Return Vue.Validate(rec, required) 
return _B._vue.validate(_rec,_required);
// End Sub
};

// [1639] Sub CreateApp(sid As String) As VMElement 
_B.createapp=function(_sid) {
var _el;
// [1640]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1641]  el.Initialize(Vue, sid).SetTag( {279} ) 
_el.initialize(_B._vue,_sid).settag("md-app");
// [1642]  el.SetStyle(CreateMap( {280} : {281} )) 
_el.setstyle({"height":"100vh"});
// [1643]  Return el 
return _el;
// End Sub
};

// [1646] Sub CreateLayout(sid As String) As VMElement 
_B.createlayout=function(_sid) {
var _el;
// [1647]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1648]  el.Initialize(Vue,sid).SetTag( {282} ).SetLayout(True) 
_el.initialize(_B._vue,_sid).settag("div").setlayout(true);
// [1649]  Return el 
return _el;
// End Sub
};

// [1652] Sub CreateLayoutItem(sid As String) As VMElement 
_B.createlayoutitem=function(_sid) {
var _el;
// [1653]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1654]  el.Initialize(Vue,sid).SetTag( {283} ).SetLayoutItem(True) 
_el.initialize(_B._vue,_sid).settag("div").setlayoutitem(true);
// [1655]  Return el 
return _el;
// End Sub
};

// [1658] Sub CreateSelect(sid As String, eventHandler As Object) As VMSelect 
_B.createselect=function(_sid,_eventhandler) {
var _el;
// [1659]  Dim el As VMSelect 
_el= new banano_bananovuematerial_vmselect();
// [1660]  el.Initialize(Vue,sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1661]  Return el 
return _el;
// End Sub
};

// [1665] Sub CreateSELECT1(sid As String) As VMElement 
_B.createselect1=function(_sid) {
var _el;
// [1666]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1667]  el.Initialize(Vue,sid).SetTag( {284} ) 
_el.initialize(_B._vue,_sid).settag("select");
// [1668]  Return el 
return _el;
// End Sub
};

// [1672] Sub CreateOPTION1(sid As String) As VMElement 
_B.createoption1=function(_sid) {
var _el;
// [1673]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1674]  el.Initialize(Vue,sid).SetTag( {285} ) 
_el.initialize(_B._vue,_sid).settag("option");
// [1675]  Return el 
return _el;
// End Sub
};

// [1678] Public Sub DateNow() As String 
_B.datenow=function() {
// [1679]  Return Vue.DateNow 
return _B._vue.datenow();
// End Sub
};

// [1683] Public Sub DateTimeNow() As String 
_B.datetimenow=function() {
// [1684]  Return Vue.DateTimeNow 
return _B._vue.datetimenow();
// End Sub
};

// [1688] Sub JQueryElement(sid As String) As BANanoObject 
_B.jqueryelement=function(_sid) {
var _bo;
// [1689]  sid = sid.ToLowerCase 
_sid=_sid.toLowerCase();
// [1690]  Dim bo As BANanoObject = JQuery.Selector( {24} ) 
_bo=_B._jquery("#" + _sid + "");
// [1691]  Return bo 
return _bo;
// End Sub
};

// [1695] Sub MakeLowerCase(m As Map) As Map 
_B.makelowercase=function(_m) {
// [1696]  Return Vue.MakeLowerCase(m) 
return _B._vue.makelowercase(_m);
// End Sub
};

// [1699] Sub HTTPUpload(fileObj As Object, module As Object, methodname As String) 
_B.httpupload=function(_fileobj,_module,_methodname) {
// [1700]  Vue.HTTPUpload(fileObj, module, methodname) 
_B._vue.httpupload(_fileobj,_module,_methodname);
// End Sub
};

// [1703] Sub GetFileDetails(fileObj As Map) As FileObject 
_B.getfiledetails=function(_fileobj) {
// [1704]  Return Vue.GetFileDetails(fileObj) 
return _B._vue.getfiledetails(_fileobj);
// End Sub
};

// [1708] Sub SetInfoBox 
_B.setinfobox=function() {
// [1709]  JQuery.Selector( {286} ).RunMethod( {287} , Null) 
_B._jquery(".count-to")["countTo"]();
// End Sub
};

// [1712] Sub SetKnob 
_B.setknob=function() {
// [1713]  BANano.RunJavascriptMethod( {288} , Null) 
BANanoExec("tron", window);
// End Sub
};

// [1717] Sub PagePause 
_B.pagepause=function() {
// [1718]  Overlay.SetIsLoading(True) 
_B._overlay.setisloading(true);
// End Sub
};

// [1722] Sub PageResume 
_B.pageresume=function() {
// [1723]  Overlay.SetIsLoading(False) 
_B._overlay.setisloading(false);
// End Sub
};

}
/* =========================== BANanoVue  =========================== */
function banano_bananovuematerial_bananovue() {
var _B=this;
_B._bovue=null;

_B._methods={};

_B._data={};

_B._refs={};

_B._body=null;

_B._template= new banano_bananovuematerial_vuehtml();

_B._computed={};

_B._watches={};

_B._created=null;

_B._mounted=null;

_B._beforecreate=null;

_B._destroyed=null;

_B._beforemount=null;

_B._updated=null;

_B._beforedestroy=null;

_B._activated=null;

_B._deactivated=null;

_B._beforeupdate=null;

_B._typeofstring=null;

_B._typeofnumber=null;

_B._typeofboolean=null;

_B._typeofarray=null;

_B._typeofobject=null;

_B._typeofdate=null;

_B._typeoffunction=null;

_B._typeofsymbol=null;

_B._borouter=null;

_B._routes=[];

_B._components={};

_B._options={};

_B._dynamicstyle={};

_B._jquery=null;

_B._gettemplate="";

_B._colors_red="#F44336";

_B._colors_pink="#E91E63";

_B._colors_purple="#9C27B0";

_B._colors_deeppurple="#673AB7";

_B._colors_indigo="#3F51B5";

_B._colors_blue="#2196F3";

_B._colors_lightblue="#03A9F4";

_B._colors_cyan="#00BCD4";

_B._colors_teal="#009688";

_B._colors_green="#4CAF50";

_B._colors_lightgreen="#8BC34A";

_B._colors_lime="#CDDC39";

_B._colors_yellow="#ffe821";

_B._colors_amber="#FFC107";

_B._colors_orange="#FF9800";

_B._colors_deeporange="#FF5722";

_B._colors_brown="#795548";

_B._colors_grey="#9E9E9E";

_B._colors_bluegrey="#607D8B";

_B._colors_black="#000000";

_B._colors_white="#ffffff";

_B._colors_transparent="transparent";

_B._border_default="";

_B._border_dashed="dashed";

_B._border_dotted="dotted";

_B._border_double="double";

_B._border_groove="groove";

_B._border_hidden="hidden";

_B._border_inset="inset";

_B._border_none="none";

_B._border_outset="outset";

_B._border_ridge="ridge";

_B._border_solid="solid";

_B._color_amber="amber";

_B._color_black="black";

_B._color_blue="blue";

_B._color_bluegrey="blue-grey";

_B._color_brown="brown";

_B._color_cyan="cyan";

_B._color_deeporange="deep-orange";

_B._color_deeppurple="deep-purple";

_B._color_green="green";

_B._color_grey="grey";

_B._color_indigo="indigo";

_B._color_lightblue="light-blue";

_B._color_lightgreen="light-green";

_B._color_lime="lime";

_B._color_orange="orange";

_B._color_pink="pink";

_B._color_purple="purple";

_B._color_red="red";

_B._color_teal="teal";

_B._color_transparent="transparent";

_B._color_white="white";

_B._color_yellow="yellow";

_B._intensity_normal="";

_B._intensity_lighten5="lighten-5";

_B._intensity_lighten4="lighten-4";

_B._intensity_lighten3="lighten-3";

_B._intensity_lighten2="lighten-2";

_B._intensity_lighten1="lighten-1";

_B._intensity_darken1="darken-1";

_B._intensity_darken2="darken-2";

_B._intensity_darken3="darken-3";

_B._intensity_darken4="darken-4";

_B._intensity_accent1="accent-1";

_B._intensity_accent2="accent-2";

_B._intensity_accent3="accent-3";

_B._intensity_accent4="accent-4";

_B._colors= new banano_bananovuematerial_colortypes();

_B._colormap={};

_B._attention_seekers_bounce="bounce";

_B._attention_seekers_flash="flash";

_B._attention_seekers_pulse="pulse";

_B._attention_seekers_rubberband="rubberBand";

_B._attention_seekers_shake="shake";

_B._attention_seekers_swing="swing";

_B._attention_seekers_tada="tada";

_B._attention_seekers_wobble="wobble";

_B._attention_seekers_jello="jello";

_B._bouncing_entrances_bouncein="bounceIn";

_B._bouncing_entrances_bounceindown="bounceInDown";

_B._bouncing_entrances_bounceinleft="bounceInLeft";

_B._bouncing_entrances_bounceinright="bounceInRight";

_B._bouncing_entrancesbounceinup="bounceInUp";

_B._bouncing_exits_bounceout="bounceOut";

_B._bouncing_exits_bounceoutdown="bounceOutDown";

_B._bouncing_exits_bounceoutleft="bounceOutLeft";

_B._bouncing_exits_bounceoutright="bounceOutRight";

_B._bouncing_exits_bounceoutup="bounceOutUp";

_B._fading_entrances_fadein="fadeIn";

_B._fading_entrances_fadeindown="fadeInDown";

_B._fading_entrances_fadeindownbig="fadeInDownBig";

_B._fading_entrances_fadeinleft="fadeInLeft";

_B._fading_entrances_fadeinleftbig="fadeInLeftBig";

_B._fading_entrances_fadeinright="fadeInRight";

_B._fading_entrances_fadeinrightbig="fadeInRightBig";

_B._fading_entrances_fadeinup="fadeInUp";

_B._fading_entrances_fadeinupbig="fadeInUpBig";

_B._fading_exits_fadeout="fadeOut";

_B._fading_exits_fadeoutdown="fadeOutDown";

_B._fading_exits_fadeoutdownbig="fadeOutDownBig";

_B._fading_exits_fadeoutleft="fadeOutLeft";

_B._fading_exits_fadeoutleftbig="fadeOutLeftBig";

_B._fading_exits_fadeoutright="fadeOutRight";

_B._fading_exits_fadeoutrightbig="fadeOutRightBig";

_B._fading_exits_fadeoutup="fadeOutUp";

_B._fading_exits_fadeoutupbig="fadeOutUpBig";

_B._flippers_flip="flip";

_B._flippers_flipinx="flipInX";

_B._flippers_flipiny="flipInY";

_B._flippers_flipoutx="flipOutX";

_B._flippers_flipouty="flipOutY";

_B._lightspeed_lightspeedin="lightSpeedIn";

_B._lightspeed_lightspeedout="lightSpeedOut";

_B._rotating_entrances_rotatein="rotateIn";

_B._rotating_entrances_rotateindownleft="rotateInDownLeft";

_B._rotating_entrances_rotateindownright="rotateInDownRight";

_B._rotating_entrances_rotateinupleft="rotateInUpLeft";

_B._rotating_entrances_rotateinupright="rotateInUpRight";

_B._rotating_exits_rotateout="rotateOut";

_B._rotating_exits_rotateoutdownleft="rotateOutDownLeft";

_B._rotating_exits_rotateoutdownright="rotateOutDownRight";

_B._rotating_exits_rotateoutupleft="rotateOutUpLeft";

_B._rotating_exits_rotateoutupright="rotateOutUpRight";

_B._sliding_entrances_slideinup="slideInUp";

_B._sliding_entrances_slideindown="slideInDown";

_B._sliding_entrances_slideinleft="slideInLeft";

_B._sliding_entrances_slideinright="slideInRight";

_B._sliding_exits_slideoutup="slideOutUp";

_B._sliding_exits_slideoutdown="slideOutDown";

_B._sliding_exits_slideoutleft="slideOutLeft";

_B._sliding_exits_slideoutright="slideOutRight";

_B._zoom_entrances_zoomin="zoomIn";

_B._zoom_entrances_zoomindown="zoomInDown";

_B._zoom_entrances_zoominleft="zoomInLeft";

_B._zoom_entrances_zoominright="zoomInRight";

_B._zoom_entrances_zoominup="zoomInUp";

_B._zoom_exits_zoomout="zoomOut";

_B._zoom_exits_zoomoutdown="zoomOutDown";

_B._zoom_exits_zoomoutleft="zoomOutLeft";

_B._zoom_exits_zoomoutright="zoomOutRight";

_B._zoom_exits_zoomoutup="zoomOutUp";

_B._specials_hinge="hinge";

_B._specials_rollin="rollIn";

_B._specials_rollout="rollOut";

// [196] Sub ListRemoveDuplicates(lst As List) As List 
_B.listremoveduplicates=function(_lst) {
var _nd,_k,_nl;
// [197]  Dim nd As Map = CreateMap() 
_nd={};
// [198]  For Each k As String In lst 
for (var _kindex=0;_kindex<_lst.length;_kindex++) {
_k=_lst[_kindex];
// [199]  nd.Put(k, k) 
_nd[_k]=_k;
// [200]  Next 
}
// [201]  Dim nl As List 
_nl=[];
// [202]  nl.Initialize 
_nl.length=0;
// [203]  For Each k As String In nd.Keys 
var _kKeys = Object.keys(_nd);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [204]  nl.Add(k) 
_nl.push(_k);
// [205]  Next 
}
// [206]  nl.Sort(True) 
if (!isNaN(parseFloat(_nl[0])) && isFinite(_nl[0])) {
_nl.sort(function(a, b){return a - b});
} else {
_nl.sort();
};
// [207]  Return nl 
return _nl;
// End Sub
};

// [210] Sub GetFileDetails(fileObj As Map) As FileObject 
_B.getfiledetails=function(_fileobj) {
var _sname,_slastmodifieddate,_ssize,_stype,_ff;
// [211]  Dim sname As String = fileObj.Get( {163} ) 
_sname=_fileobj["name"];
// [212]  Dim slastModifiedDate As String = fileObj.Get( {164} ) 
_slastmodifieddate=_fileobj["lastModifiedDate"];
// [213]  slastModifiedDate = Date2YYYYMMDDHHMM(slastModifiedDate) 
_slastmodifieddate=_B.date2yyyymmddhhmm(_slastmodifieddate,_B);
// [214]  Dim ssize As String = fileObj.Get( {165} ) 
_ssize=_fileobj["size"];
// [215]  Dim stype As String = fileObj.Get( {166} ) 
_stype=_fileobj["type"];
// [217]  Dim ff As FileObject 
_ff= new banano_bananovuematerial_fileobject();
// [218]  ff.Initialize 
_ff.initialize();
// [219]  ff.FileName = sname 
_ff._filename=_sname;
// [220]  ff.FileDate = slastModifiedDate 
_ff._filedate=_slastmodifieddate;
// [221]  ff.FileSize = ssize 
_ff._filesize=_ssize;
// [222]  ff.FileType = stype 
_ff._filetype=_stype;
// [223]  Return ff 
return _ff;
// End Sub
};

// [231] private Sub DoUpload(fileObj As Object) As String 'ignore 
_B.doupload=function(_fileobj) {
var _BANp = gBANp(arguments);
var _aevt,_xhr,_fd,_err,_serr;
// [232]  Dim aEvt As Object 
_aevt={};
// [233]  Dim xhr As BANanoXMLHttpRequest 
_xhr=null;
// [235]  Dim fd As BANanoObject 
_fd=null;
// [236]  fd.Initialize2( {168} ,Null) 
_fd=new FormData();
// [237]  fd.RunMethod( {169} , Array( {170} , fileObj)) 
_fd["append"]("upload",_fileobj);
// [239]  xhr.Initialize 
_xhr=new XMLHttpRequest();
// [240]  xhr.Open( {171} , {172} ) 
_xhr.open("POST","./assets/upload.php");
// [241]  xhr.AddEventListenerOpenAsync( {173} , aEvt) 
_xhr.onreadystatechange=async function(_aevt) {
// [242]  If xhr.ReadyState = 4 Then 
if (_xhr.readyState==4) {
// [243]  If xhr.Status = 200 Then 
if (_xhr.status==200) {
// [244]  BANAno.ReturnThen(xhr.ResponseText) 
return _BANp.resolve(_xhr.responseText);
// [245]  Else 
} else {
// [246]  Dim err As Map = CreateMap() 
_err={};
// [247]  err.Put( {174} , {175} ) 
_err["status"]="error";
// [248]  Dim serr As String = BANAno.ToJson(err) 
_serr=JSON.stringify(_err);
// [249]  BANAno.ReturnElse(serr) 
return _BANp.reject(_serr);
// [250]  End If 
}
// [251]  End If 
}
// [252]  xhr.CloseEventListener 
};
// [253]  xhr.Send2(fd) 
_xhr.send(_fd);
// End Sub
};

// [256] Sub HTTPUpload(fileObj As Object, module As Object, methodname As String) 
_B.httpupload=function(_fileobj,_module,_methodname) {
var _promise,_error,_json;
// [257]  Dim promise As BANanoPromise 'ignore 
_promise=null;
// [259]  Dim Error As String 
_error="";
// [260]  Dim json As String 
_json="";
// [263]  promise.CallSub(Me, {176} , Array(fileObj)) 
_promise=BANanoPromise();
_B[("DoUpload").toLowerCase()](_fileobj,_promise,_B);
// [264]  promise.ThenWait(json) 
_promise.then(async function(_json) {
// [265]  BANAno.CallSub(module, methodname, Array(fileObj, json)) 
(function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {var CSr = _module[(_methodname).toLowerCase()](_fileobj,_json,_B);if(CSr!=null) {return CSr}}})();
// [266]  promise.ElseWait(Error) 'ignore 
}).catch(async function(_error) {
// [267]  BANAno.CallSub(module, methodname, Array(fileObj, Error)) 
(function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {var CSr = _module[(_methodname).toLowerCase()](_fileobj,_error,_B);if(CSr!=null) {return CSr}}})();
// [268]  promise.End 
});
// End Sub
};

// [273] Sub State2Another(source As String, target As String, defaultValue As Object) 
_B.state2another=function(_source,_target,_defaultvalue) {
var _readobj;
// [274]  Dim readObj As Object = GetState(source, defaultValue) 
_readobj=_B.getstate(_source,_defaultvalue,_B);
// [275]  SetStateSingle(target, readObj) 
_B.setstatesingle(_target,_readobj,_B);
// End Sub
};

// [279] Public Sub GetAlphabets(value As String) As String 
_B.getalphabets=function(_value) {
var _sout,_mout,_slen,_i;
// [280]  value = CStr(value) 
_value=_B.cstr(_value,_B);
// [281]  Try 
try {
// [282]  value = value.Trim 
_value=_value.trim();
// [283]  If value = {177} Then value = {178} 
if (_value=="") {_value="";}
// [284]  Dim sout As String = {179} 
_sout="";
// [285]  Dim mout As String = {180} 
_mout="";
// [286]  Dim slen As Int = value.Length 
_slen=_value.length;
// [287]  Dim i As Int = 0 
_i=0;
// [288]  For i = 0 To slen - 1 
for (_i=0;_i<=_slen-1;_i++) {
// [289]  mout = value.CharAt(i) 
_mout=_value.charAt(_i);
// [290]  If InStr( {181} , mout) <> -1 Then 
if (_B.instr("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ ",_mout,_B)!=-1) {
// [291]  sout = sout & mout 
_sout=_sout+_mout;
// [292]  End If 
}
// [293]  Next 
}
// [294]  Return sout 
return _sout;
// [295]  Catch 
} catch(err) {
// [296]  Return value 
return _value;
// [297]  End Try 
}
// End Sub
};

// [301] Sub JSONPretty(m As Object) As String 
_B.jsonpretty=function(_m) {
var _pretty;
// [302]  Dim pretty As String = BANAno.RunJavascriptMethod( {182} , Array(m, Null, 4)) 
_pretty=BANanoExec("JSON.stringify", window, _m,null,4);
// [303]  Return pretty 
return _pretty;
// End Sub
};

// [307] Sub JQueryElement(sid As String) As BANanoObject 
_B.jqueryelement=function(_sid) {
var _bo;
// [308]  sid = sid.ToLowerCase 
_sid=_sid.toLowerCase();
// [309]  Dim bo As BANanoObject = JQuery.Selector( {0} ) 
_bo=_B._jquery("#" + _sid + "");
// [310]  Return bo 
return _bo;
// End Sub
};

// [314] Sub ExtractMap(source As Map, keys As List) As Map 
_B.extractmap=function(_source,_keys) {
var _nm,_k,_v;
// [315]  Dim nm As Map = CreateMap() 
_nm={};
// [316]  For Each k As String In keys 
for (var _kindex=0;_kindex<_keys.length;_kindex++) {
_k=_keys[_kindex];
// [317]  Dim v As Object = source.get(k) 
_v=_source[_k];
// [318]  nm.put(k, v) 
_nm[_k]=_v;
// [319]  Next 
}
// [320]  Return nm 
return _nm;
// End Sub
};

// [323] Sub InStr(Text As String, sFind As String) As Int 
_B.instr=function(_text,_sfind) {
// [324]  Return Text.tolowercase.IndexOf(sFind.tolowercase) 
return _text.toLowerCase().indexOf(_sfind.toLowerCase());
// End Sub
};

// [328] Sub JoinNonBlanks(delimiter As String, lst As List) As String 
_B.joinnonblanks=function(_delimiter,_lst) {
var _nl,_str,_i,_sb,_fld;
// [330]  Dim nl As List 
_nl=[];
// [331]  nl.Initialize 
_nl.length=0;
// [332]  For Each str As String In lst 
for (var _strindex=0;_strindex<_lst.length;_strindex++) {
_str=_lst[_strindex];
// [333]  str = str.Trim 
_str=_str.trim();
// [334]  If str.Length > 0 Then 
if (_str.length>0) {
// [335]  nl.Add(str) 
_nl.push(_str);
// [336]  End If 
}
// [337]  Next 
}
// [338]  If nl.Size = 0 Then Return {183} 
if (_nl.length==0) { return "";}
// [340]  Dim i As Int 
_i=0;
// [341]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [342]  Dim fld As String 
_fld="";
// [343]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [344]  fld = nl.Get(0) 
_fld=_nl[0];
// [345]  sb.Append(fld) 
_sb.append(_fld);
// [346]  For i = 1 To nl.size - 1 
for (_i=1;_i<=_nl.length-1;_i++) {
// [347]  Dim fld As String = nl.Get(i) 
_fld=_nl[_i];
// [348]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [349]  Next 
}
// [350]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [355] Sub Join(delimiter As String, lst As List) As String 
_B.join=function(_delimiter,_lst) {
var _i,_sb,_fld;
// [356]  Dim i As Int 
_i=0;
// [357]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [358]  Dim fld As String 
_fld="";
// [359]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [360]  fld = lst.Get(0) 
_fld=_lst[0];
// [361]  sb.Append(fld) 
_sb.append(_fld);
// [362]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [363]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [364]  sb.Append(delimiter).Append(fld) 
_sb.append(_delimiter).append(_fld);
// [365]  Next 
}
// [366]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [370] Sub JoinMaps(lst As List) As Map 
_B.joinmaps=function(_lst) {
var _nm,_mr,_k,_v;
// [371]  Dim nm As Map = CreateMap() 
_nm={};
// [372]  For Each mr As Map In lst 
for (var _mrindex=0;_mrindex<_lst.length;_mrindex++) {
_mr=_lst[_mrindex];
// [373]  For Each k As String In mr.Keys 
var _kKeys = Object.keys(_mr);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [374]  Dim v As Object = mr.Get(k) 
_v=_mr[_k];
// [375]  nm.Put(k, v) 
_nm[_k]=_v;
// [376]  Next 
}
// [377]  Next 
}
// [378]  Return nm 
return _nm;
// End Sub
};

// [382] Sub JoinLists(lst As List) As List 
_B.joinlists=function(_lst) {
var _nl,_lo,_k;
// [383]  Dim nl As List 
_nl=[];
// [384]  nl.Initialize 
_nl.length=0;
// [385]  For Each lo As List In lst 
for (var _loindex=0;_loindex<_lst.length;_loindex++) {
_lo=_lst[_loindex];
// [386]  For Each k As Object In lo 
for (var _kindex=0;_kindex<_lo.length;_kindex++) {
_k=_lo[_kindex];
// [387]  nl.Add(k) 
_nl.push(_k);
// [388]  Next 
}
// [389]  Next 
}
// [390]  Return nl 
return _nl;
// End Sub
};

// [395] Sub MapKeys2List(m As Map) As List 
_B.mapkeys2list=function(_m) {
var _lst,_k;
// [396]  Dim lst As List 
_lst=[];
// [397]  lst.Initialize 
_lst.length=0;
// [398]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [399]  lst.Add(k) 
_lst.push(_k);
// [400]  Next 
}
// [401]  Return lst 
return _lst;
// End Sub
};

// [405] Sub MapValues2List(m As Map) As List 
_B.mapvalues2list=function(_m) {
var _lst,_k;
// [406]  Dim lst As List 
_lst=[];
// [407]  lst.Initialize 
_lst.length=0;
// [408]  For Each k As String In m.values 
for (_kKEY in _m) {
var _k=_m[_kKEY];
// [409]  lst.Add(k) 
_lst.push(_k);
// [410]  Next 
}
// [411]  Return lst 
return _lst;
// End Sub
};

// [416] Sub RSAIDNumber2DateOfBirth(rsaID As String) As String 
_B.rsaidnumber2dateofbirth=function(_rsaid) {
var _yymmdd,_yy,_mm,_dd;
// [418]  If rsaID.length = 13 Then 
if (_rsaid.length==13) {
// [419]  Dim yymmdd As String = LeftString(rsaID, 6) 
_yymmdd=_B.leftstring(_rsaid,6,_B);
// [420]  Dim yy As String = LeftString(yymmdd,2) 
_yy=_B.leftstring(_yymmdd,2,_B);
// [421]  Dim mm As String = MidString(yymmdd,3,2) 
_mm=_B.midstring(_yymmdd,3,2,_B);
// [422]  Dim dd As String = RightString(yymmdd,2) 
_dd=_B.rightstring(_yymmdd,2,_B);
// [423]  yymmdd = {1} 
_yymmdd="19" + _yy + "-" + _mm + "-" + _dd + "";
// [424]  Return yymmdd 
return _yymmdd;
// [425]  Else 
} else {
// [426]  Return {184} 
return "";
// [427]  End If 
}
// End Sub
};

// [430] Public Sub YearNow() As String 
_B.yearnow=function() {
var _lnow,_dt;
// [431]  Dim lNow As Long 
_lnow=0;
// [432]  Dim dt As String 
_dt="";
// [433]  lNow = DateTime.Now 
_lnow=DateTime.Now();
// [434]  DateTime.DateFormat = {185} 
DateTime.SetDateFormat("yyyy");
// [435]  dt = DateTime.Date(lNow) 
_dt=DateTime.Date(_lnow);
// [436]  Return dt 
return _dt;
// End Sub
};

// [439] Public Sub MonthNow() As String 
_B.monthnow=function() {
var _lnow,_dt;
// [440]  Dim lNow As Long 
_lnow=0;
// [441]  Dim dt As String 
_dt="";
// [442]  lNow = DateTime.Now 
_lnow=DateTime.Now();
// [443]  DateTime.DateFormat = {186} 
DateTime.SetDateFormat("M");
// [444]  dt = DateTime.Date(lNow) 
_dt=DateTime.Date(_lnow);
// [445]  Return dt 
return _dt;
// End Sub
};

// [448] Sub DateAdd(mDate As String, HowManyDays As Int) As String 
_B.dateadd=function(_mdate,_howmanydays) {
var _convertdate,_newdateday;
// [449]  Dim ConvertDate, NewDateDay As Long 
_convertdate=0;
_newdateday=0;
// [450]  ConvertDate = DateTime.DateParse(mDate) 
_convertdate=DateTime.DateParse(_mdate);
// [451]  NewDateDay = DateTime.Add(ConvertDate, 0, 0, HowManyDays) 
_newdateday=DateTime.Add(_convertdate,0,0,_howmanydays);
// [452]  Return DateTime.Date(NewDateDay) 
return DateTime.Date(_newdateday);
// End Sub
};

// [455] Sub Age(birthDay As String) As Int 
_B.age=function(_birthday) {
var _tday,_cday,_adays,_ayears;
// [456]  DateTime.DateFormat = {187} 
DateTime.SetDateFormat("yyyy-MM-dd");
// [457]  Dim tDay As String = DateTime.Date(DateTime.Now) 
_tday=DateTime.Date(DateTime.Now());
// [458]  Dim cDay As String = DateTime.Date(DateTime.DateParse(birthDay)) 
_cday=DateTime.Date(DateTime.DateParse(_birthday));
// [459]  Dim aDays As Int = DateDiff(tDay, cDay) 
_adays=_B.datediff(_tday,_cday,_B);
// [460]  Dim aYears As Int = aDays / 365.25 
_ayears=_adays/365.25;
// [461]  Return BANAno.parseInt(aYears) 
return parseInt(_ayears);
// End Sub
};

// [464] Sub DateDiff(CurrentDate As String, OtherDate As String) As Int 
_B.datediff=function(_currentdate,_otherdate) {
var _currdate,_othdate;
// [465]  DateTime.DateFormat = {188} 
DateTime.SetDateFormat("yyyy-MM-dd");
// [467]  Dim CurrDate As Long 
_currdate=0;
// [468]  Dim OthDate As Long 
_othdate=0;
// [469]  CurrDate = DateTime.DateParse(CurrentDate) 
_currdate=DateTime.DateParse(_currentdate);
// [470]  OthDate = DateTime.DateParse(OtherDate) 
_othdate=DateTime.DateParse(_otherdate);
// [472]  Return (CurrDate-OthDate) / DateTime.TicksPerDay 
return (_currdate-_othdate)/DateTime.TicksPerDay();
// End Sub
};

// [476] Public Sub CDbl(value As String) As Double 
_B.cdbl=function(_value) {
var _out;
// [477]  Try 
try {
// [478]  value = value.Trim 
_value=_value.trim();
// [479]  If value = {189} Then value = {190} 
if (_value=="") {_value="0";}
// [480]  value = value.Replace( {191} , {192} ) 
_value=_value.split(",").join("");
// [481]  Dim out As Double = NumberFormat2(value,0,2,2,False) 
_out=BANano_nf2(BANano_r2f(_value, 2, 2),0,false);
// [482]  Return out 
return _out;
// [483]  Catch 
} catch(err) {
// [484]  Return value 
return _value;
// [485]  End Try 
}
// End Sub
};

// [489] Sub ProjectDays(sDays As String) As String 
_B.projectdays=function(_sdays) {
// [490]  Try 
try {
// [491]  sDays = sDays.trim 
_sdays=_sdays.trim();
// [492]  If sDays = {193} Then sDays = {194} 
if (_sdays=="") {_sdays="0";}
// [493]  sDays = sDays.Replace( {195} , {196} ) 
_sdays=_sdays.split(",").join("");
// [494]  sDays = NumberFormat2(sDays,0,0,0,True) 
_sdays=BANano_nf2(BANano_r2f(_sdays, 0, 0),0,true);
// [495]  Return sDays & {197} 
return _sdays+" Dys";
// [496]  Catch 
} catch(err) {
// [497]  Return {198} 
return "0 Dys";
// [498]  End Try 
}
// End Sub
};

// [501] Sub ProjectDate(sDate As String) As String 
_B.projectdate=function(_sdate) {
var _dt;
// [502]  If sDate.Length = 0 Then Return {199} 
if (_sdate.length==0) { return "";}
// [503]  Try 
try {
// [504]  DateTime.DateFormat = {200} 
DateTime.SetDateFormat("yyyy-MM-dd");
// [505]  Dim dt As Long = DateTime.DateParse(sDate) 
_dt=DateTime.DateParse(_sdate);
// [506]  DateTime.DateFormat = {201} 
DateTime.SetDateFormat("dd-MMM-yyyy, EEE");
// [507]  Return DateTime.Date(dt) 
return DateTime.Date(_dt);
// [508]  Catch 
} catch(err) {
// [509]  Return {202} 
return "";
// [510]  End Try 
}
// End Sub
};

// [513] Sub FormatFileSize(Bytes As Float) As String 
_B.formatfilesize=function(_bytes) {
var _unit,_po,_si,_i;
// [514]  Try 
try {
// [515]  Private Unit() As String = Array As String( {203} , {204} , {205} , {206} , {207} , {208} , {209} , {210} , {211} ) 
_unit=[" Byte"," KB"," MB"," GB"," TB"," PB"," EB"," ZB"," YB"];
// [516]  If Bytes = 0 Then 
if (_bytes==0) {
// [517]  Return {212} 
return "0 Bytes";
// [518]  Else 
} else {
// [519]  Private Po, Si As Double 
_po=0;
_si=0;
// [520]  Private I As Int 
_i=0;
// [521]  Bytes = Abs(Bytes) 
_bytes=(Math.abs(_bytes));
// [522]  I = Floor(Logarithm(Bytes, 1024)) 
_i=(Math.floor((Math.log(_bytes)/Math.log(1024))));
// [523]  Po = Power(1024, I) 
_po=Math.pow(1024,_i);
// [524]  Si = Bytes / Po 
_si=_bytes/_po;
// [525]  Return NumberFormat(Si, 1, 3) & Unit(I) 
return BANano_nf(BANano_r(_si, 3),1)+_unit[_i];
// [526]  End If 
}
// [527]  Catch 
} catch(err) {
// [528]  Return {213} 
return "0 Bytes";
// [529]  End Try 
}
// End Sub
};

// [532] Sub InStrRev(value As String, search As String) As Long 
_B.instrrev=function(_value,_search) {
// [533]  Return value.LastIndexOf(search) + 1 
return _value.lastIndexOf(_search)+1;
// End Sub
};

// [537] Sub Len(Text As String) As Int 
_B.len=function(_text) {
// [538]  Return Text.Length 
return _text.length;
// End Sub
};

// [542] Sub PadRight(Value As String, MaxLen As Int, PadChar As String) As String 
_B.padright=function(_value,_maxlen,_padchar) {
var _intordnolen,_i;
// [543]  Value = CStr(Value) 
_value=_B.cstr(_value,_B);
// [544]  Dim intOrdNoLen As Int = Len(Value) 
_intordnolen=_B.len(_value,_B);
// [545]  Dim i As Int 
_i=0;
// [546]  For i = 1 To (MaxLen - intOrdNoLen) Step 1 
for (_i=1;_i<=(_maxlen-_intordnolen);_i+=1) {
// [547]  Value = PadChar & Value 
_value=_padchar+_value;
// [548]  Next 
}
// [549]  Return Value 
return _value;
// End Sub
};

// [553] Sub SumListOfMapsProperty(lst As List, prop As String) As Double 
_B.sumlistofmapsproperty=function(_lst,_prop) {
var _tsum,_rec,_propv;
// [554]  Dim tsum As Double = 0 
_tsum=0;
// [555]  For Each rec As Map In lst 
for (var _recindex=0;_recindex<_lst.length;_recindex++) {
_rec=_lst[_recindex];
// [556]  Dim propv As String = rec.GetDefault(prop, {214} ) 
_propv=(_rec[_prop] || "0");
// [557]  tsum = tsum + BANAno.parseFloat(propv) 
_tsum=_tsum+parseFloat(_propv);
// [558]  Next 
}
// [559]  Return tsum 
return _tsum;
// End Sub
};

// [563] Public Sub Val(value As String) As String 
_B.val=function(_value) {
var _sout,_mout,_slen,_i;
// [564]  value = CStr(value) 
_value=_B.cstr(_value,_B);
// [565]  Try 
try {
// [566]  value = value.Trim 
_value=_value.trim();
// [567]  If value = {215} Then value = {216} 
if (_value=="") {_value="0";}
// [568]  Dim sout As String = {217} 
_sout="";
// [569]  Dim mout As String = {218} 
_mout="";
// [570]  Dim slen As Int = value.Length 
_slen=_value.length;
// [571]  Dim i As Int = 0 
_i=0;
// [572]  For i = 0 To slen - 1 
for (_i=0;_i<=_slen-1;_i++) {
// [573]  mout = value.CharAt(i) 
_mout=_value.charAt(_i);
// [574]  If InStr( {219} , mout) <> -1 Then 
if (_B.instr("0123456789.-",_mout,_B)!=-1) {
// [575]  sout = sout & mout 
_sout=_sout+_mout;
// [576]  End If 
}
// [577]  Next 
}
// [578]  Return sout 
return _sout;
// [579]  Catch 
} catch(err) {
// [580]  Return value 
return _value;
// [581]  End Try 
}
// End Sub
};

// [584] Public Sub Alpha(value As String) As String 
_B.alpha=function(_value) {
var _sout,_mout,_slen,_i;
// [585]  value = CStr(value) 
_value=_B.cstr(_value,_B);
// [586]  Try 
try {
// [587]  value = value.Trim 
_value=_value.trim();
// [588]  If value = {220} Then value = {221} 
if (_value=="") {_value="";}
// [589]  Dim sout As String = {222} 
_sout="";
// [590]  Dim mout As String = {223} 
_mout="";
// [591]  Dim slen As Int = value.Length 
_slen=_value.length;
// [592]  Dim i As Int = 0 
_i=0;
// [593]  For i = 0 To slen - 1 
for (_i=0;_i<=_slen-1;_i++) {
// [594]  mout = value.CharAt(i) 
_mout=_value.charAt(_i);
// [595]  If InStr( {224} , mout) <> -1 Then 
if (_B.instr("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",_mout,_B)!=-1) {
// [596]  sout = sout & mout 
_sout=_sout+_mout;
// [597]  End If 
}
// [598]  Next 
}
// [599]  Return sout 
return _sout;
// [600]  Catch 
} catch(err) {
// [601]  Return value 
return _value;
// [602]  End Try 
}
// End Sub
};

// [607] Sub List2KeyValues(lst As List, mapvalues As List) As List 
_B.list2keyvalues=function(_lst,_mapvalues) {
// [608]  Return List2IDValue(lst, mapvalues) 
return _B.list2idvalue(_lst,_mapvalues,_B);
// End Sub
};

// [612] Sub List2IDValue(lst As List, mapValues As List) As List 
_B.list2idvalue=function(_lst,_mapvalues) {
var _mv1,_mv2,_nlst,_dict,_mk,_mv,_nm;
// [613]  Dim mv1 As String = mapValues.get(0) 
_mv1=_mapvalues[0];
// [614]  Dim mv2 As String = mapValues.get(1) 
_mv2=_mapvalues[1];
// [615]  Dim nlst As List 
_nlst=[];
// [616]  nlst.initialize 
_nlst.length=0;
// [617]  For Each dict As Map In lst 
for (var _dictindex=0;_dictindex<_lst.length;_dictindex++) {
_dict=_lst[_dictindex];
// [618]  Dim mk As String = dict.get(mv1) 
_mk=_dict[_mv1];
// [619]  Dim mv As String = dict.get(mv2) 
_mv=_dict[_mv2];
// [620]  Dim nm As Map = CreateMap() 
_nm={};
// [621]  nm.Put( {225} , mk) 
_nm["id"]=_mk;
// [622]  nm.put( {226} , mv) 
_nm["value"]=_mv;
// [623]  nlst.Add(nm) 
_nlst.push(_nm);
// [624]  Next 
}
// [625]  Return nlst 
return _nlst;
// End Sub
};

// [628] Sub List2ArrayVariable(lst As List) As String 
_B.list2arrayvariable=function(_lst) {
var _i,_sb,_fld;
// [629]  If lst.Size = 0 Then 
if (_lst.length==0) {
// [630]  Return {2} 
return "\"\"";
// [631]  End If 
}
// [632]  Dim i As Int 
_i=0;
// [633]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [634]  Dim fld As String 
_fld="";
// [635]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [636]  fld = lst.Get(0) 
_fld=_lst[0];
// [637]  fld = {3} 
_fld="\"" + _fld + "\"";
// [638]  sb.Append(fld) 
_sb.append(_fld);
// [639]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [640]  Dim fld As String = lst.Get(i) 
_fld=_lst[_i];
// [641]  fld = {4} 
_fld="\"" + _fld + "\"";
// [642]  sb.Append( {227} ).Append(fld) 
_sb.append(",").append(_fld);
// [643]  Next 
}
// [644]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [648] Sub JSONValues2LowerCase(sJSON As String, props As List) As String 
_B.jsonvalues2lowercase=function(_sjson,_props) {
var _jmap,_njson;
// [650]  Dim jmap As Map = Json2Map(sJSON) 
_jmap=_B.json2map(_sjson,_B);
// [651]  MapValues2LowerCase(jmap, props) 
_B.mapvalues2lowercase(_jmap,_props,_B);
// [652]  Dim nJSON As String = Map2Json(jmap) 
_njson=_B.map2json(_jmap,_B);
// [653]  Return nJSON 
return _njson;
// End Sub
};

// [658] Sub Map2Json(mp As Map) As String 
_B.map2json=function(_mp) {
var _json;
// [659]  Dim JSON As BANanoJSONGenerator 
_json={};
// [660]  JSON.Initialize(mp) 
_json=_mp;
// [661]  Return JSON.ToString 
return JSON.stringify(_json);
// End Sub
};

// [664] Sub Map2JsonPretty(mp As Map) As String 
_B.map2jsonpretty=function(_mp) {
var _json;
// [665]  Dim JSON As BANanoJSONGenerator 
_json={};
// [666]  JSON.Initialize(mp) 
_json=_mp;
// [667]  Return JSON.ToPrettyString(4) 
return JSON.stringify(_json, null, 4);
// End Sub
};

// [672] Sub Json2Map(strJSON As String) As Map 
_B.json2map=function(_strjson) {
var _json,_map1;
// [673]  Dim json As BANanoJSONParser 
_json={};
// [674]  Dim Map1 As Map 
_map1={};
// [675]  Map1.Initialize 
_map1={};
// [676]  Map1.clear 
_map1={};
// [677]  Try 
try {
// [678]  If strJSON.length > 0 Then 
if (_strjson.length>0) {
// [679]  json.Initialize(strJSON) 
_json=JSON.parse(_strjson);
// [680]  Map1 = json.NextObject 
_map1=_json;
// [681]  End If 
}
// [682]  Return Map1 
return _map1;
// [683]  Catch 
} catch(err) {
// [684]  Return Map1 
return _map1;
// [685]  End Try 
}
// End Sub
};

// [688] Sub NewDate(year As Int, month As Int, day As Int) As BANanoObject 
_B.newdate=function(_year,_month,_day) {
var _dd;
// [689]  Dim dd As BANanoObject 
_dd=null;
// [690]  dd.Initialize2( {228} , Array(year, month, day)) 
_dd=new Date(_year,_month,_day);
// [691]  Return dd 
return _dd;
// End Sub
};

// [694] Sub NewDateTime(year As Int, month As Int, day As Int, hour As Int, minute As Int) As BANanoObject 
_B.newdatetime=function(_year,_month,_day,_hour,_minute) {
var _dd;
// [695]  Dim dd As BANanoObject 
_dd=null;
// [696]  dd.Initialize2( {229} , Array(year, month, day, hour, minute)) 
_dd=new Date(_year,_month,_day,_hour,_minute);
// [697]  Return dd 
return _dd;
// End Sub
};

// [700] Sub Pad(Value As String, MaxLen As Int, PadChar As String, right As Boolean) As String 
_B.pad=function(_value,_maxlen,_padchar,_right) {
var _intordnolen,_i;
// [701]  Dim intOrdNoLen As Int = Value.Length 
_intordnolen=_value.length;
// [702]  Dim i As Int 
_i=0;
// [703]  For i = 1 To (MaxLen - intOrdNoLen) Step 1 
for (_i=1;_i<=(_maxlen-_intordnolen);_i+=1) {
// [704]  If right Then 
if (_right) {
// [705]  Value = Value & PadChar 
_value=_value+_padchar;
// [706]  Else 
} else {
// [707]  Value = PadChar & Value 
_value=_padchar+_value;
// [708]  End If 
}
// [709]  Next 
}
// [710]  Return Value 
return _value;
// End Sub
};

// [713] Sub CLng(o As Object) As Long 
_B.clng=function(_o) {
// [714]  Return Floor(o) 
return (Math.floor(_o));
// End Sub
};

// [717] Sub CInt(o As Object) As Int 
_B.cint=function(_o) {
// [718]  Return Floor(o) 
return (Math.floor(_o));
// End Sub
};

// [723] Sub List2Json(mp As List) As String 
_B.list2json=function(_mp) {
var _json;
// [724]  Dim JSON As BANanoJSONGenerator 
_json={};
// [725]  JSON.Initialize2(mp) 
_json=_mp;
// [726]  Return JSON.ToString 
return JSON.stringify(_json);
// End Sub
};

// [730] Sub Json2List(strValue As String) As List 
_B.json2list=function(_strvalue) {
var _lst,_parser;
// [731]  Dim lst As List 
_lst=[];
// [732]  lst.Initialize 
_lst.length=0;
// [733]  lst.clear 
_lst.length=0;
// [734]  If strValue.Length = 0 Then 
if (_strvalue.length==0) {
// [735]  Return lst 
return _lst;
// [736]  End If 
}
// [737]  Try 
try {
// [738]  Dim parser As BANanoJSONParser 
_parser={};
// [739]  parser.Initialize(strValue) 
_parser=JSON.parse(_strvalue);
// [740]  Return parser.NextArray 
return _parser;
// [741]  Catch 
} catch(err) {
// [742]  Return lst 
return _lst;
// [743]  End Try 
}
// End Sub
};

// [747] Sub MapValues2LowerCase(m As Map, props As List) 
_B.mapvalues2lowercase=function(_m,_props) {
var _prop,_v;
// [748]  For Each prop As String In props 
for (var _propindex=0;_propindex<_props.length;_propindex++) {
_prop=_props[_propindex];
// [749]  If m.ContainsKey(prop) Then 
if ((_prop in _m)) {
// [750]  Dim v As String = m.GetDefault(prop, {230} ) 
_v=(_m[_prop] || "");
// [751]  v = v.tolowercase 
_v=_v.toLowerCase();
// [752]  m.Put(prop,v) 
_m[_prop]=_v;
// [753]  End If 
}
// [754]  Next 
}
// End Sub
};

// [757] Sub NumberSuffix(N As Double) As String 
_B.numbersuffix=function(_n) {
var _suffix,_thousands,_maxdecimalplaces,_relativeerror;
// [758]  If N < 0 Then 
if (_n<0) {
// [759]  Return {231} & NumberSuffix(-N) 
return "-"+_B.numbersuffix(-_n,_B);
// [760]  End If 
}
// [761]  Dim Suffix() As String = Array As String( {232} , {233} , {234} , {235} , {236} ) 
_suffix=["","k","M","B","T"];
// [762]  Dim Thousands As Int = 0 
_thousands=0;
// [763]  Do While N >= 1000 And Thousands < Suffix.Length - 1 
while (_n>=1000 && _thousands<_suffix.length-1) {
// [764]  Thousands = Thousands + 1 
_thousands=_thousands+1;
// [765]  N = N / 1000 
_n=_n/1000;
// [766]  Loop 
}
// [767]  If Thousands = 0 Then 
if (_thousands==0) {
// [768]  Return NumberFormat2(N, 1, 2, 2, False) 
return BANano_nf2(BANano_r2f(_n, 2, 2),1,false);
// [769]  End If 
}
// [771]  Dim MaxDecimalPlaces As Int = 0 
_maxdecimalplaces=0;
// [772]  Do While MaxDecimalPlaces < 5 
while (_maxdecimalplaces<5) {
// [773]  Dim RelativeError As Double = Abs(N - Round2(N, MaxDecimalPlaces)) / N 
_relativeerror=(Math.abs(_n-(+(Math.round(_n+"e+"+_maxdecimalplaces)+"e-"+_maxdecimalplaces))))/_n;
// [774]  If RelativeError < 0.007 Then 
if (_relativeerror<0.007) {
// [775]  Exit 
break;
// [776]  End If 
}
// [777]  MaxDecimalPlaces = MaxDecimalPlaces + 1 
_maxdecimalplaces=_maxdecimalplaces+1;
// [778]  Loop 
}
// [779]  Return NumberFormat2(N, 1, 0, MaxDecimalPlaces, False) & Suffix(Thousands) 
return BANano_nf2(BANano_r2f(_n, 0, _maxdecimalplaces),1,false)+_suffix[_thousands];
// End Sub
};

// [783] Sub MakeMoney(sValue As String) As String 
_B.makemoney=function(_svalue) {
// [784]  If sValue.Length = 0 Then Return {237} 
if (_svalue.length==0) { return "0.00";}
// [785]  If sValue = {238} Then sValue = {239} 
if (_svalue=="null") {_svalue="0.00";}
// [786]  sValue = sValue.Replace( {240} , {241} ) 
_svalue=_svalue.split(",").join("");
// [787]  sValue = Val(sValue) 
_svalue=_B.val(_svalue,_B);
// [788]  If sValue = {242} Then sValue = {243} 
if (_svalue=="0") {_svalue="000";}
// [789]  sValue = Round2(sValue,2) 
_svalue=(+(Math.round(_svalue+"e+"+2)+"e-"+2));
// [790]  Return NumberFormat2(sValue, 1, 2, 2, True) 
return BANano_nf2(BANano_r2f(_svalue, 2, 2),1,true);
// End Sub
};

// [793] Sub Percentage(sValue As String) As String 
_B.percentage=function(_svalue) {
// [794]  If sValue = {244} Then sValue = {245} 
if (_svalue=="") {_svalue="0.00";}
// [795]  If sValue.Length = 0 Then Return {246} 
if (_svalue.length==0) { return "0.00";}
// [796]  If sValue = {247} Then sValue = {248} 
if (_svalue=="null") {_svalue="0.00";}
// [797]  sValue = sValue.Replace( {249} , {250} ) 
_svalue=_svalue.split(",").join("");
// [798]  sValue = Val(sValue) 
_svalue=_B.val(_svalue,_B);
// [799]  If sValue = {251} Then sValue = {252} 
if (_svalue=="0") {_svalue="0.00";}
// [800]  sValue = Round2(sValue,2) 
_svalue=(+(Math.round(_svalue+"e+"+2)+"e-"+2));
// [801]  sValue = sValue & {253} 
_svalue=_svalue+"%";
// [802]  Return sValue 
return _svalue;
// End Sub
};

// [805] Sub MidString(Text As String, Start As Int, lLength As Int) As String 
_B.midstring=function(_text,_start,_llength) {
// [806]  Return Text.SubString2(Start-1,Start+lLength-1) 
return _text.substring(_start-1,_start+_llength-1);
// End Sub
};

// [809] Sub MidString2(Text As String, Start As Int) As String 
_B.midstring2=function(_text,_start) {
// [810]  Return Text.SubString(Start-1) 
return _text.substring(_start-1);
// End Sub
};

// [813] Sub RightString(Text As String, lLength As Long) As String 
_B.rightstring=function(_text,_llength) {
// [814]  If lLength>Text.Length Then lLength=Text.Length 
if (_llength>_text.length) {_llength=_text.length;}
// [815]  Return Text.SubString(Text.Length-lLength) 
return _text.substring(_text.length-_llength);
// End Sub
};

// [818] Sub LeftString(Text As String, lLength As Long)As String 
_B.leftstring=function(_text,_llength) {
// [819]  If lLength>Text.Length Then lLength=Text.Length 
if (_llength>_text.length) {_llength=_text.length;}
// [820]  Return Text.SubString2(0, lLength) 
return _text.substring(0,_llength);
// End Sub
};

// [823] Sub ReplaceString(Text As String, sFind As String, sReplaceWith As String) As String 
_B.replacestring=function(_text,_sfind,_sreplacewith) {
// [824]  Return Text.Replace(sFind, sReplaceWith) 
return _text.split(_sfind).join(_sreplacewith);
// End Sub
};

// [827] Sub LongDate(sDate As String) As String 
_B.longdate=function(_sdate) {
var _dt;
// [828]  If sDate.Length = 0 Then Return {254} 
if (_sdate.length==0) { return "";}
// [829]  Try 
try {
// [830]  DateTime.DateFormat = {255} 
DateTime.SetDateFormat("yyyy-MM-dd");
// [831]  Dim dt As Long = DateTime.DateParse(sDate) 
_dt=DateTime.DateParse(_sdate);
// [832]  DateTime.DateFormat = {256} 
DateTime.SetDateFormat("EEEE, dd MMMM yyyy");
// [833]  Return DateTime.Date(dt) 
return DateTime.Date(_dt);
// [834]  Catch 
} catch(err) {
// [835]  Return {257} 
return "";
// [836]  End Try 
}
// End Sub
};

// [839] Sub LongDateTime(sDate As String) As String 
_B.longdatetime=function(_sdate) {
var _dt;
// [840]  If sDate.Length = 0 Then Return {258} 
if (_sdate.length==0) { return "";}
// [841]  Try 
try {
// [842]  DateTime.DateFormat = {259} 
DateTime.SetDateFormat("yyyy-MM-dd HH:mm");
// [843]  Dim dt As Long = DateTime.DateParse(sDate) 
_dt=DateTime.DateParse(_sdate);
// [844]  DateTime.DateFormat = {260} 
DateTime.SetDateFormat("EEEE, dd MMMM yyyy HH:mm");
// [845]  Return DateTime.Date(dt) 
return DateTime.Date(_dt);
// [846]  Catch 
} catch(err) {
// [847]  Return {261} 
return "";
// [848]  End Try 
}
// End Sub
};

// [851] private Sub TrimString(strValue As String) As String 
_B.trimstring=function(_strvalue) {
// [852]  Return strValue.trim 
return _strvalue.trim();
// End Sub
};

// [855] Sub LCase(Text As String) As String 
_B.lcase=function(_text) {
// [856]  Return Text.ToLowerCase 
return _text.toLowerCase();
// End Sub
};

// [859] Sub Space(HM As Int) As String 
_B.space=function(_hm) {
var _rs;
// [860]  Dim RS As String = {262} 
_rs="";
// [861]  Do While Len(RS) < HM 
while (_B.len(_rs,_B)<_hm) {
// [862]  RS = RS & {263} 
_rs=_rs+" ";
// [863]  Loop 
}
// [864]  Return RS 
return _rs;
// End Sub
};

// [867] Public Sub InQuotes(sValue As String) As String 
_B.inquotes=function(_svalue) {
// [868]  Return QUOTE & sValue & QUOTE 
return "\""+_svalue+"\"";
// End Sub
};

// [871] Sub ProperCase(myStr As String) As String 
_B.propercase=function(_mystr) {
var _x,_j,_k;
// [872]  Try 
try {
// [873]  If myStr.trim.length = 0 Then Return {264} 
if (_mystr.trim().length==0) { return "";}
// [874]  Dim x As String 
_x="";
// [875]  Dim j, k As Int 
_j=0;
_k=0;
// [876]  myStr = myStr.tolowercase 
_mystr=_mystr.toLowerCase();
// [877]  x = myStr.ToUpperCase.CharAt(0) 
_x=_mystr.toUpperCase().charAt(0);
// [878]  myStr = x & myStr.SubString2(1, myStr.Length) 
_mystr=_x+_mystr.substring(1,_mystr.length);
// [879]  For j = 1 To myStr.Length 
for (_j=1;_j<=_mystr.length;_j++) {
// [880]  k = myStr.IndexOf2( {265} , j + 1) 
_k=_mystr.indexOf(" ",_j+1);
// [881]  If k = -1 Then Exit 
if (_k==-1) {break;}
// [882]  x = myStr.ToUpperCase.CharAt(k + 1) 
_x=_mystr.toUpperCase().charAt(_k+1);
// [883]  myStr = myStr.SubString2(0, k + 1) & x & myStr.SubString2(k + 2, myStr.Length) 
_mystr=_mystr.substring(0,_k+1)+_x+_mystr.substring(_k+2,_mystr.length);
// [884]  Next 
}
// [885]  Return myStr 
return _mystr;
// [886]  Catch 
} catch(err) {
// [887]  Return myStr 
return _mystr;
// [888]  End Try 
}
// End Sub
};

// [891] Sub Capitalize(t As String) As String 
_B.capitalize=function(_t) {
var _s,_r,_o;
// [892]  Dim s , r , o As String 
_s="";
_r="";
_o="";
// [893]  s = t.SubString2(0,1) 
_s=_t.substring(0,1);
// [894]  r = t.SubString2(1, t.Length) 
_r=_t.substring(1,_t.length);
// [895]  o = s.ToUpperCase & r 
_o=_s.toUpperCase()+_r;
// [896]  Return o 
return _o;
// End Sub
};

// [900] Sub MapKeysLowerCaseSingle(m As Map) As Map 
_B.mapkeyslowercasesingle=function(_m) {
var _nm,_k,_v;
// [901]  Dim nm As Map = CreateMap() 
_nm={};
// [902]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [903]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [904]  k = k.tolowercase 
_k=_k.toLowerCase();
// [905]  nm.Put(k, v) 
_nm[_k]=_v;
// [906]  Next 
}
// [907]  Return nm 
return _nm;
// End Sub
};

// [911] Sub MapKeysLowerCaseList(lst As List) As List 
_B.mapkeyslowercaselist=function(_lst) {
var _nl,_rec;
// [912]  Dim nl As List 
_nl=[];
// [913]  nl.Initialize 
_nl.length=0;
// [914]  For Each rec As Map In lst 
for (var _recindex=0;_recindex<_lst.length;_recindex++) {
_rec=_lst[_recindex];
// [915]  rec = MapKeysLowerCaseSingle(rec) 
_rec=_B.mapkeyslowercasesingle(_rec,_B);
// [916]  nl.Add(rec) 
_nl.push(_rec);
// [917]  Next 
}
// [918]  Return nl 
return _nl;
// End Sub
};

// [923] Sub GetMapValues(sourceMap As Map) As List 
_B.getmapvalues=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [924]  Dim listOfValues As List 
_listofvalues=[];
// [925]  listOfValues.Initialize 
_listofvalues.length=0;
// [926]  Dim iCnt As Int 
_icnt=0;
// [927]  Dim iTot As Int 
_itot=0;
// [928]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [929]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [930]  Dim value As Object = sourceMap.GetValueAt(iCnt) 
_value=banano_getB4JValueAt(_sourcemap,_icnt);
// [931]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [932]  Next 
}
// [933]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [937] Sub GetMapKeys(sourceMap As Map) As List 
_B.getmapkeys=function(_sourcemap) {
var _listofvalues,_icnt,_itot,_value;
// [938]  Dim listOfValues As List 
_listofvalues=[];
// [939]  listOfValues.Initialize 
_listofvalues.length=0;
// [940]  Dim iCnt As Int 
_icnt=0;
// [941]  Dim iTot As Int 
_itot=0;
// [942]  iTot = sourceMap.Size - 1 
_itot=Object.keys(_sourcemap).length-1;
// [943]  For iCnt = 0 To iTot 
for (_icnt=0;_icnt<=_itot;_icnt++) {
// [944]  Dim value As Object = sourceMap.GetKeyAt(iCnt) 
_value=banano_getB4JKeyAt(_sourcemap,_icnt);
// [945]  listOfValues.Add(value) 
_listofvalues.push(_value);
// [946]  Next 
}
// [947]  Return listOfValues 
return _listofvalues;
// End Sub
};

// [952] Public Sub GetNumbers(value As String) As String 
_B.getnumbers=function(_value) {
var _sout,_mout,_slen,_i;
// [953]  value = CStr(value) 
_value=_B.cstr(_value,_B);
// [954]  Try 
try {
// [955]  value = value.Trim 
_value=_value.trim();
// [956]  Dim sout As String = {266} 
_sout="";
// [957]  Dim mout As String = {267} 
_mout="";
// [958]  Dim slen As Int = value.Length 
_slen=_value.length;
// [959]  Dim i As Int = 0 
_i=0;
// [960]  For i = 0 To slen - 1 
for (_i=0;_i<=_slen-1;_i++) {
// [961]  mout = value.CharAt(i) 
_mout=_value.charAt(_i);
// [962]  If InStr( {268} , mout) <> -1 Then 
if (_B.instr("0123456789.-",_mout,_B)!=-1) {
// [963]  sout = sout & mout 
_sout=_sout+_mout;
// [964]  End If 
}
// [965]  Next 
}
// [966]  Return sout 
return _sout;
// [967]  Catch 
} catch(err) {
// [968]  Return value 
return _value;
// [969]  End Try 
}
// End Sub
};

// [973] Sub ToYYYYMMDD(vmodel As String) 
_B.toyyyymmdd=function(_vmodel) {
var _sk;
// [974]  Dim sk As String = GetState(vmodel, {269} ) 
_sk=_B.getstate(_vmodel,"",_B);
// [975]  sk = Date2YYYYMMDD(sk) 
_sk=_B.date2yyyymmdd(_sk,_B);
// [976]  SetStateSingle(vmodel, sk) 
_B.setstatesingle(_vmodel,_sk,_B);
// End Sub
};

// [980] Sub Date2YYYYMMDD(value As Object) As String 
_B.date2yyyymmdd=function(_value) {
var _m,_res;
// [981]  Try 
try {
// [982]  If CStr(value) = {270} Then Return {271} 
if (_B.cstr(_value,_B)=="") { return "";}
// [983]  If value = Null Then Return {272} 
if (_value==null) { return "";}
// [984]  Dim m As BANanoObject = BANAno.RunJavascriptMethod( {273} , Array(value)) 
_m=BANanoExec("moment", window, _value);
// [985]  Dim res As String = m.RunMethod( {274} , {275} ).result 
_res=_m["format"]("YYYY-MM-DD");
// [986]  If res.IndexOf( {276} ) > 0 Then res = {277} 
if (_res.indexOf("Invalid")>0) {_res="";}
// [987]  Return res 
return _res;
// [988]  Catch 
} catch(err) {
// [989]  Return {278} 
return "";
// [990]  End Try 
}
// End Sub
};

// [993] Sub Date2YYYYMMDDHHMM(value As Object) As String 
_B.date2yyyymmddhhmm=function(_value) {
var _m,_res;
// [994]  Try 
try {
// [995]  If CStr(value) = {279} Then Return {280} 
if (_B.cstr(_value,_B)=="") { return "";}
// [996]  If value = Null Then Return {281} 
if (_value==null) { return "";}
// [997]  Dim m As BANanoObject = BANAno.RunJavascriptMethod( {282} , Array(value)) 
_m=BANanoExec("moment", window, _value);
// [998]  Dim res As String = m.RunMethod( {283} , {284} ).result 
_res=_m["format"]("YYYY-MM-DD HH:MM");
// [999]  If res.IndexOf( {285} ) > 0 Then res = {286} 
if (_res.indexOf("Invalid")>0) {_res="";}
// [1000]  Return res 
return _res;
// [1001]  Catch 
} catch(err) {
// [1002]  Return {287} 
return "";
// [1003]  End Try 
}
// End Sub
};

// [1007] Sub Md5Hash(value As String, key As String, raw As Boolean) As String 
_B.md5hash=function(_value,_key,_raw) {
var _res;
// [1008]  Dim res As Object = BANAno.RunJavascriptMethod( {288} , Array(value, key, raw)) 
_res=BANanoExec("md5", window, _value,_key,_raw);
// [1009]  Return res 
return _res;
// End Sub
};

// [1012] Sub SortMap(m As Map) As Map 
_B.sortmap=function(_m) {
var _nm,_lst,_strkey,_strvalue;
// [1013]  Try 
try {
// [1014]  Dim nm As Map 
_nm={};
// [1015]  nm.Initialize 
_nm={};
// [1016]  Dim lst As List 
_lst=[];
// [1017]  lst.Initialize 
_lst.length=0;
// [1018]  For Each strkey As String In m.Keys 
var _strkeyKeys = Object.keys(_m);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [1019]  lst.Add(strkey) 
_lst.push(_strkey);
// [1020]  Next 
}
// [1022]  lst.Sort(True) 
if (!isNaN(parseFloat(_lst[0])) && isFinite(_lst[0])) {
_lst.sort(function(a, b){return a - b});
} else {
_lst.sort();
};
// [1023]  For Each strkey As String In lst 
for (var _strkeyindex=0;_strkeyindex<_lst.length;_strkeyindex++) {
_strkey=_lst[_strkeyindex];
// [1024]  Dim strvalue As Object = m.Get(strkey) 
_strvalue=_m[_strkey];
// [1025]  nm.Put(strkey,strvalue) 
_nm[_strkey]=_strvalue;
// [1026]  Next 
}
// [1027]  Return nm 
return _nm;
// [1028]  Catch 
} catch(err) {
// [1029]  Return m 
return _m;
// [1030]  End Try 
}
// End Sub
};

// [1033] Sub GetShowState(k As String) As Boolean 
_B.getshowstate=function(_k) {
var _showkey;
// [1034]  Dim showKey As String = {5} 
_showkey="" + _k + "show";
// [1035]  Return GetState(showKey,False) 
return _B.getstate(_showkey,false,_B);
// End Sub
};

// [1038] Sub GetDisabledState(k As String) As Boolean 
_B.getdisabledstate=function(_k) {
var _diskey;
// [1039]  Dim disKey As String = {6} 
_diskey="" + _k + "disabled";
// [1040]  Return GetState(disKey,False) 
return _B.getstate(_diskey,false,_B);
// End Sub
};

// [1043] Sub SetShowState(k As String, v As Boolean) 
_B.setshowstate=function(_k,_v) {
var _showkey;
// [1044]  Dim showKey As String = {7} 
_showkey="" + _k + "show";
// [1045]  SetStateSingle(showKey, v) 
_B.setstatesingle(_showkey,_v,_B);
// End Sub
};

// [1048] Sub SetErrorState(k As String, v As Boolean) 
_B.seterrorstate=function(_k,_v) {
var _showkey;
// [1049]  Dim showKey As String = {8} 
_showkey="" + _k + "error";
// [1050]  SetStateSingle(showKey, v) 
_B.setstatesingle(_showkey,_v,_B);
// End Sub
};

// [1054] Sub SetDisabledState(k As String, v As Boolean) 
_B.setdisabledstate=function(_k,_v) {
var _diskey;
// [1055]  Dim disKey As String = {9} 
_diskey="" + _k + "disabled";
// [1056]  SetStateSingle(disKey, v) 
_B.setstatesingle(_diskey,_v,_B);
// End Sub
};

// [1059] Sub MergeMaps(oldm As Map, newm As Map) As Map 
_B.mergemaps=function(_oldm,_newm) {
var _om,_k,_v;
// [1060]  Dim om As Map = CreateMap() 
_om={};
// [1061]  For Each k As String In oldm.Keys 
var _kKeys = Object.keys(_oldm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1062]  Dim v As Object = oldm.Get(k) 
_v=_oldm[_k];
// [1063]  om.Put(k, v) 
_om[_k]=_v;
// [1064]  Next 
}
// [1066]  For Each k As String In newm.Keys 
var _kKeys = Object.keys(_newm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1067]  Dim v As Object = newm.Get(k) 
_v=_newm[_k];
// [1068]  om.Put(k, v) 
_om[_k]=_v;
// [1069]  Next 
}
// [1070]  Return om 
return _om;
// End Sub
};

// [1074] Sub HideItems(items As List) 
_B.hideitems=function(_items) {
var _item;
// [1075]  For Each item As String In items 
for (var _itemindex=0;_itemindex<_items.length;_itemindex++) {
_item=_items[_itemindex];
// [1076]  SetStateSingle(item, False) 
_B.setstatesingle(_item,false,_B);
// [1077]  Next 
}
// End Sub
};

// [1081] Sub ShowItems(items As List) 
_B.showitems=function(_items) {
var _item;
// [1082]  For Each item As String In items 
for (var _itemindex=0;_itemindex<_items.length;_itemindex++) {
_item=_items[_itemindex];
// [1083]  SetStateSingle(item, True) 
_B.setstatesingle(_item,true,_B);
// [1084]  Next 
}
// End Sub
};

// [1089] Sub List2Options(lst As List, keyName As String, valueName As String) As Map 
_B.list2options=function(_lst,_keyname,_valuename) {
var _recs,_k,_nrec;
// [1090]  Dim recs As List 
_recs=[];
// [1091]  recs.Initialize 
_recs.length=0;
// [1092]  For Each k As String In lst 
for (var _kindex=0;_kindex<_lst.length;_kindex++) {
_k=_lst[_kindex];
// [1093]  Dim nrec As Map = CreateMap() 
_nrec={};
// [1094]  nrec.Put(keyName, k) 
_nrec[_keyname]=_k;
// [1095]  nrec.Put(valueName, k) 
_nrec[_valuename]=_k;
// [1096]  recs.Add(nrec) 
_recs.push(_nrec);
// [1097]  Next 
}
// [1098]  Return recs 
return _recs;
// End Sub
};

// [1102] Sub List2Map(lst As List, keyName As String, valueName As String) As Map 
_B.list2map=function(_lst,_keyname,_valuename) {
// [1103]  Return List2Options(lst, keyName, valueName) 
return _B.list2options(_lst,_keyname,_valuename,_B);
// End Sub
};

// [1107] Sub Map2Options(m As Map, keyName As String, valueName As String) As List 
_B.map2options=function(_m,_keyname,_valuename) {
var _recs,_k,_v,_nrec;
// [1108]  Dim recs As List 
_recs=[];
// [1109]  recs.Initialize 
_recs.length=0;
// [1110]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1111]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [1112]  Dim nrec As Map = CreateMap() 
_nrec={};
// [1113]  nrec.Put(keyName, k) 
_nrec[_keyname]=_k;
// [1114]  nrec.Put(valueName, v) 
_nrec[_valuename]=_v;
// [1115]  recs.Add(nrec) 
_recs.push(_nrec);
// [1116]  Next 
}
// [1117]  Return recs 
return _recs;
// End Sub
};

// [1121] Sub SetBackgroundImage(elid As String, url As String) 
_B.setbackgroundimage=function(_elid,_url) {
// [1122]  BANAno.GetElement(elid).SetStyle(BANAno.ToJson(CreateMap( {289} : {10} , {290} : {291} ))) 
u(_elid).css(JSON.parse(JSON.stringify({"background-image":"url('" + _url + "')", "background-size":"100% 100%"})));
// End Sub
};

// [1127] Sub Compile(html As String) As BANanoObject 
_B.compile=function(_html) {
var _bo;
// [1128]  Dim bo As BANanoObject = BOVue.RunMethod( {292} , Array(html)) 
_bo=_B._bovue["compile"](_html);
// [1129]  Return bo 
return _bo;
// End Sub
};

// [1133] Sub JSONSetProperty(sjson As String, updates As Map) As String 
_B.jsonsetproperty=function(_sjson,_updates) {
var _m,_k,_v,_sout;
// [1134]  Dim m As Map = BANAno.FromJson(sjson) 
_m=JSON.parse(_sjson);
// [1135]  For Each k As String In updates.Keys 
var _kKeys = Object.keys(_updates);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1136]  Dim v As Object = updates.Get(k) 
_v=_updates[_k];
// [1137]  m.Put(k, v) 
_m[_k]=_v;
// [1138]  Next 
}
// [1139]  Dim sout As String = BANAno.ToJson(m) 
_sout=JSON.stringify(_m);
// [1140]  Return sout 
return _sout;
// End Sub
};

// [1144] Sub CreateOPTION(sid As String) As VMElement 
_B.createoption=function(_sid) {
var _el;
// [1145]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1146]  el.Initialize(Me,sid).SetTag( {293} ) 
_el.initialize(_B,_sid).settag("option");
// [1147]  Return el 
return _el;
// End Sub
};

// [1152] Sub CreateSELECT(sid As String) As VMElement 
_B.createselect=function(_sid) {
var _el;
// [1153]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1154]  el.Initialize(Me,sid).SetTag( {294} ) 
_el.initialize(_B,_sid).settag("select");
// [1155]  Return el 
return _el;
// End Sub
};

// [1159] Sub EQOperators(sm As Map) As List 
_B.eqoperators=function(_sm) {
var _nl,_k;
// [1160]  Dim nl As List 
_nl=[];
// [1161]  nl.initialize 
_nl.length=0;
// [1162]  For Each k As String In sm.Keys 
var _kKeys = Object.keys(_sm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1163]  nl.Add( {295} ) 
_nl.push("=");
// [1164]  Next 
}
// [1165]  Return nl 
return _nl;
// End Sub
};

// [1168] Sub SetCloak(b As Boolean) As BANanoVue 
_B.setcloak=function(_b) {
// [1169]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [1170]  Template.SetAttr( {296} , {297} ) 
_B._template.setattr("v-cloak","true");
// [1171]  Return Me 
return _B;
// End Sub
};

// [1175] Public Sub Initialize() 
_B.initialize=function() {
// [1176]  BOVue.Initialize( {298} ) 
_B._bovue=Vue;
// [1177]  JQuery.Initialize( {299} ) 
_B._jquery=$;
// [1179]  body = BANAno.GetElement( {300} ) 
_B._body=u("#body");
// [1180]  body.empty 
_B._body.empty();
// [1182]  body.Append( {11} ) 
_B._body.append("<div id=\"app\"></div>");
// [1183]  Template.Initialize( {301} , {302} ) 
_B._template.initialize("app","div");
// [1184]  Template.SetVCloak 
_B._template.setvcloak();
// [1185]  methods.Initialize 
_B._methods={};
// [1186]  data.Initialize 
_B._data={};
// [1187]  computed.Initialize 
_B._computed={};
// [1188]  watches.Initialize 
_B._watches={};
// [1189]  routes.Initialize 
_B._routes.length=0;
// [1190]  beforeMount = Null 
_B._beforemount=null;
// [1191]  beforeUpdate = Null 
_B._beforeupdate=null;
// [1192]  created = Null 
_B._created=null;
// [1193]  mounted = Null 
_B._mounted=null;
// [1194]  destroyed = Null 
_B._destroyed=null;
// [1195]  updated = Null 
_B._updated=null;
// [1196]  beforeCreate = Null 
_B._beforecreate=null;
// [1197]  activated = Null 
_B._activated=null;
// [1198]  deactivated = Null 
_B._deactivated=null;
// [1199]  beforeDestroy = Null 
_B._beforedestroy=null;
// [1201]  TypeOfString = BOVue.GetField( {303} ) 
_B._typeofstring=_B._bovue["String"];
// [1202]  TypeOfNumber = BOVue.GetField( {304} ) 
_B._typeofnumber=_B._bovue["Number"];
// [1203]  TypeOfBoolean = BOVue.GetField( {305} ) 
_B._typeofboolean=_B._bovue["Boolean"];
// [1204]  TypeOfArray = BOVue.GetField( {306} ) 
_B._typeofarray=_B._bovue["Array"];
// [1205]  TypeOfObject = BOVue.GetField( {307} ) 
_B._typeofobject=_B._bovue["Object"];
// [1206]  TypeOfDate = BOVue.GetField( {308} ) 
_B._typeofdate=_B._bovue["Date"];
// [1207]  TypeOfFunction = BOVue.GetField( {309} ) 
_B._typeoffunction=_B._bovue["Function"];
// [1208]  TypeOfSymbol = BOVue.GetField( {310} ) 
_B._typeofsymbol=_B._bovue["Symbol"];
// [1209]  Options = CreateMap() 
_B._options={};
// [1210]  dynamicStyle = CreateMap() 
_B._dynamicstyle={};
// [1211]  SetFontFamily( {311} ) 
_B.setfontfamily("'Roboto', 'Helvetica', Arial, sans-serif",_B);
// [1213]  Colors.initialize 
_B._colors.initialize();
// [1214]  Colors.red = {312} 
_B._colors._red="red";
// [1215]  Colors.pink = {313} 
_B._colors._pink="pink";
// [1216]  Colors.purple = {314} 
_B._colors._purple="purple";
// [1217]  Colors.deepPurple = {315} 
_B._colors._deeppurple="deep-purple";
// [1218]  Colors.indigo = {316} 
_B._colors._indigo="indigo";
// [1219]  Colors.blue = {317} 
_B._colors._blue="blue";
// [1220]  Colors.lightBlue = {318} 
_B._colors._lightblue="light-blue";
// [1221]  Colors.cyan = {319} 
_B._colors._cyan="cyan";
// [1222]  Colors.teal = {320} 
_B._colors._teal="teal";
// [1223]  Colors.green = {321} 
_B._colors._green="green";
// [1224]  Colors.lightGreen = {322} 
_B._colors._lightgreen="light-green";
// [1225]  Colors.lime = {323} 
_B._colors._lime="lime";
// [1226]  Colors.yellow = {324} 
_B._colors._yellow="yellow";
// [1227]  Colors.amber = {325} 
_B._colors._amber="amber";
// [1228]  Colors.Orange = {326} 
_B._colors._orange="orange";
// [1229]  Colors.deepOrange = {327} 
_B._colors._deeporange="deep-orange";
// [1230]  Colors.brown = {328} 
_B._colors._brown="brown";
// [1231]  Colors.grey = {329} 
_B._colors._grey="grey";
// [1232]  Colors.blueGrey = {330} 
_B._colors._bluegrey="blue-grey";
// [1233]  Colors.black = {331} 
_B._colors._black="black";
// [1234]  Colors.white = {332} 
_B._colors._white="white";
// [1235]  Colors.transparent = {333} 
_B._colors._transparent="transparent";
// [1237]  ColorMap.Initialize 
_B._colormap={};
// [1238]  ColorMap.put( {334} , {335} ) 
_B._colormap["red lighten-5"]="#ffebee";
// [1239]  ColorMap.put( {336} , {337} ) 
_B._colormap["red lighten-4"]="#ffcdd2";
// [1240]  ColorMap.put( {338} , {339} ) 
_B._colormap["red lighten-3"]="#ef9a9a";
// [1241]  ColorMap.put( {340} , {341} ) 
_B._colormap["red lighten-2"]="#e57373";
// [1242]  ColorMap.put( {342} , {343} ) 
_B._colormap["red lighten-1"]="#ef5350";
// [1243]  ColorMap.put( {344} , {345} ) 
_B._colormap["red"]="#f44336";
// [1244]  ColorMap.put( {346} , {347} ) 
_B._colormap["red darken-1"]="#e53935";
// [1245]  ColorMap.put( {348} , {349} ) 
_B._colormap["red darken-2"]="#d32f2f";
// [1246]  ColorMap.put( {350} , {351} ) 
_B._colormap["red darken-3"]="#c62828";
// [1247]  ColorMap.put( {352} , {353} ) 
_B._colormap["red darken-4"]="#b71c1c";
// [1248]  ColorMap.put( {354} , {355} ) 
_B._colormap["red accent-1"]="#ff8a80";
// [1249]  ColorMap.put( {356} , {357} ) 
_B._colormap["red accent-2"]="#ff5252";
// [1250]  ColorMap.put( {358} , {359} ) 
_B._colormap["red accent-3"]="#ff1744";
// [1251]  ColorMap.put( {360} , {361} ) 
_B._colormap["red accent-4"]="#d50000";
// [1252]  ColorMap.put( {362} , {363} ) 
_B._colormap["pink lighten-5"]="#fce4ec";
// [1253]  ColorMap.put( {364} , {365} ) 
_B._colormap["pink lighten-4"]="#f8bbd0";
// [1254]  ColorMap.put( {366} , {367} ) 
_B._colormap["pink lighten-3"]="#f48fb1";
// [1255]  ColorMap.put( {368} , {369} ) 
_B._colormap["pink lighten-2"]="#f06292";
// [1256]  ColorMap.put( {370} , {371} ) 
_B._colormap["pink lighten-1"]="#ec407a";
// [1257]  ColorMap.put( {372} , {373} ) 
_B._colormap["pink"]="#e91e63";
// [1258]  ColorMap.put( {374} , {375} ) 
_B._colormap["pink darken-1"]="#d81b60";
// [1259]  ColorMap.put( {376} , {377} ) 
_B._colormap["pink darken-2"]="#c2185b";
// [1260]  ColorMap.put( {378} , {379} ) 
_B._colormap["pink darken-3"]="#ad1457";
// [1261]  ColorMap.put( {380} , {381} ) 
_B._colormap["pink darken-4"]="#880e4f";
// [1262]  ColorMap.put( {382} , {383} ) 
_B._colormap["pink accent-1"]="#ff80ab";
// [1263]  ColorMap.put( {384} , {385} ) 
_B._colormap["pink accent-2"]="#ff4081";
// [1264]  ColorMap.put( {386} , {387} ) 
_B._colormap["pink accent-3"]="#f50057";
// [1265]  ColorMap.put( {388} , {389} ) 
_B._colormap["pink accent-4"]="#c51162";
// [1266]  ColorMap.put( {390} , {391} ) 
_B._colormap["purple lighten-5"]="#f3e5f5";
// [1267]  ColorMap.put( {392} , {393} ) 
_B._colormap["purple lighten-4"]="#e1bee7";
// [1268]  ColorMap.put( {394} , {395} ) 
_B._colormap["purple lighten-3"]="#ce93d8";
// [1269]  ColorMap.put( {396} , {397} ) 
_B._colormap["purple lighten-2"]="#ba68c8";
// [1270]  ColorMap.put( {398} , {399} ) 
_B._colormap["purple lighten-1"]="#ab47bc";
// [1271]  ColorMap.put( {400} , {401} ) 
_B._colormap["purple"]="#9c27b0";
// [1272]  ColorMap.put( {402} , {403} ) 
_B._colormap["purple darken-1"]="#8e24aa";
// [1273]  ColorMap.put( {404} , {405} ) 
_B._colormap["purple darken-2"]="#7b1fa2";
// [1274]  ColorMap.put( {406} , {407} ) 
_B._colormap["purple darken-3"]="#6a1b9a";
// [1275]  ColorMap.put( {408} , {409} ) 
_B._colormap["purple darken-4"]="#4a148c";
// [1276]  ColorMap.put( {410} , {411} ) 
_B._colormap["purple accent-1"]="#ea80fc";
// [1277]  ColorMap.put( {412} , {413} ) 
_B._colormap["purple accent-2"]="#e040fb";
// [1278]  ColorMap.put( {414} , {415} ) 
_B._colormap["purple accent-3"]="#d500f9";
// [1279]  ColorMap.put( {416} , {417} ) 
_B._colormap["purple accent-4"]="#aa00ff";
// [1280]  ColorMap.put( {418} , {419} ) 
_B._colormap["deep-purple lighten-5"]="#ede7f6";
// [1281]  ColorMap.put( {420} , {421} ) 
_B._colormap["deep-purple lighten-4"]="#d1c4e9";
// [1282]  ColorMap.put( {422} , {423} ) 
_B._colormap["deep-purple lighten-3"]="#b39ddb";
// [1283]  ColorMap.put( {424} , {425} ) 
_B._colormap["deep-purple lighten-2"]="#9575cd";
// [1284]  ColorMap.put( {426} , {427} ) 
_B._colormap["deep-purple lighten-1"]="#7e57c2";
// [1285]  ColorMap.put( {428} , {429} ) 
_B._colormap["deep-purple"]="#673ab7";
// [1286]  ColorMap.put( {430} , {431} ) 
_B._colormap["deep-purple darken-1"]="#5e35b1";
// [1287]  ColorMap.put( {432} , {433} ) 
_B._colormap["deep-purple darken-2"]="#512da8";
// [1288]  ColorMap.put( {434} , {435} ) 
_B._colormap["deep-purple darken-3"]="#4527a0";
// [1289]  ColorMap.put( {436} , {437} ) 
_B._colormap["deep-purple darken-4"]="#311b92";
// [1290]  ColorMap.put( {438} , {439} ) 
_B._colormap["deep-purple accent-1"]="#b388ff";
// [1291]  ColorMap.put( {440} , {441} ) 
_B._colormap["deep-purple accent-2"]="#7c4dff";
// [1292]  ColorMap.put( {442} , {443} ) 
_B._colormap["deep-purple accent-3"]="#651fff";
// [1293]  ColorMap.put( {444} , {445} ) 
_B._colormap["deep-purple accent-4"]="#6200ea";
// [1294]  ColorMap.put( {446} , {447} ) 
_B._colormap["indigo lighten-5"]="#e8eaf6";
// [1295]  ColorMap.put( {448} , {449} ) 
_B._colormap["indigo lighten-4"]="#c5cae9";
// [1296]  ColorMap.put( {450} , {451} ) 
_B._colormap["indigo lighten-3"]="#9fa8da";
// [1297]  ColorMap.put( {452} , {453} ) 
_B._colormap["indigo lighten-2"]="#7986cb";
// [1298]  ColorMap.put( {454} , {455} ) 
_B._colormap["indigo lighten-1"]="#5c6bc0";
// [1299]  ColorMap.put( {456} , {457} ) 
_B._colormap["indigo"]="#3f51b5";
// [1300]  ColorMap.put( {458} , {459} ) 
_B._colormap["indigo darken-1"]="#3949ab";
// [1301]  ColorMap.put( {460} , {461} ) 
_B._colormap["indigo darken-2"]="#303f9f";
// [1302]  ColorMap.put( {462} , {463} ) 
_B._colormap["indigo darken-3"]="#283593";
// [1303]  ColorMap.put( {464} , {465} ) 
_B._colormap["indigo darken-4"]="#1a237e";
// [1304]  ColorMap.put( {466} , {467} ) 
_B._colormap["indigo accent-1"]="#8c9eff";
// [1305]  ColorMap.put( {468} , {469} ) 
_B._colormap["indigo accent-2"]="#536dfe";
// [1306]  ColorMap.put( {470} , {471} ) 
_B._colormap["indigo accent-3"]="#3d5afe";
// [1307]  ColorMap.put( {472} , {473} ) 
_B._colormap["indigo accent-4"]="#304ffe";
// [1308]  ColorMap.put( {474} , {475} ) 
_B._colormap["blue lighten-5"]="#e3f2fd";
// [1309]  ColorMap.put( {476} , {477} ) 
_B._colormap["blue lighten-4"]="#bbdefb";
// [1310]  ColorMap.put( {478} , {479} ) 
_B._colormap["blue lighten-3"]="#90caf9";
// [1311]  ColorMap.put( {480} , {481} ) 
_B._colormap["blue lighten-2"]="#64b5f6";
// [1312]  ColorMap.put( {482} , {483} ) 
_B._colormap["blue lighten-1"]="#42a5f5";
// [1313]  ColorMap.put( {484} , {485} ) 
_B._colormap["blue"]="#2196f3";
// [1314]  ColorMap.put( {486} , {487} ) 
_B._colormap["blue darken-1"]="#1e88e5";
// [1315]  ColorMap.put( {488} , {489} ) 
_B._colormap["blue darken-2"]="#1976d2";
// [1316]  ColorMap.put( {490} , {491} ) 
_B._colormap["blue darken-3"]="#1565c0";
// [1317]  ColorMap.put( {492} , {493} ) 
_B._colormap["blue darken-4"]="#0d47a1";
// [1318]  ColorMap.put( {494} , {495} ) 
_B._colormap["blue accent-1"]="#82b1ff";
// [1319]  ColorMap.put( {496} , {497} ) 
_B._colormap["blue accent-2"]="#448aff";
// [1320]  ColorMap.put( {498} , {499} ) 
_B._colormap["blue accent-3"]="#2979ff";
// [1321]  ColorMap.put( {500} , {501} ) 
_B._colormap["blue accent-4"]="#2962ff";
// [1322]  ColorMap.put( {502} , {503} ) 
_B._colormap["light-blue lighten-5"]="#e1f5fe";
// [1323]  ColorMap.put( {504} , {505} ) 
_B._colormap["light-blue lighten-4"]="#b3e5fc";
// [1324]  ColorMap.put( {506} , {507} ) 
_B._colormap["light-blue lighten-3"]="#81d4fa";
// [1325]  ColorMap.put( {508} , {509} ) 
_B._colormap["light-blue lighten-2"]="#4fc3f7";
// [1326]  ColorMap.put( {510} , {511} ) 
_B._colormap["light-blue lighten-1"]="#29b6f6";
// [1327]  ColorMap.put( {512} , {513} ) 
_B._colormap["light-blue"]="#03a9f4";
// [1328]  ColorMap.put( {514} , {515} ) 
_B._colormap["light-blue darken-1"]="#039be5";
// [1329]  ColorMap.put( {516} , {517} ) 
_B._colormap["light-blue darken-2"]="#0288d1";
// [1330]  ColorMap.put( {518} , {519} ) 
_B._colormap["light-blue darken-3"]="#0277bd";
// [1331]  ColorMap.put( {520} , {521} ) 
_B._colormap["light-blue darken-4"]="#01579b";
// [1332]  ColorMap.put( {522} , {523} ) 
_B._colormap["light-blue accent-1"]="#80d8ff";
// [1333]  ColorMap.put( {524} , {525} ) 
_B._colormap["light-blue accent-2"]="#40c4ff";
// [1334]  ColorMap.put( {526} , {527} ) 
_B._colormap["light-blue accent-3"]="#00b0ff";
// [1335]  ColorMap.put( {528} , {529} ) 
_B._colormap["light-blue accent-4"]="#0091ea";
// [1336]  ColorMap.put( {530} , {531} ) 
_B._colormap["cyan lighten-5"]="#e0f7fa";
// [1337]  ColorMap.put( {532} , {533} ) 
_B._colormap["cyan lighten-4"]="#b2ebf2";
// [1338]  ColorMap.put( {534} , {535} ) 
_B._colormap["cyan lighten-3"]="#80deea";
// [1339]  ColorMap.put( {536} , {537} ) 
_B._colormap["cyan lighten-2"]="#4dd0e1";
// [1340]  ColorMap.put( {538} , {539} ) 
_B._colormap["cyan lighten-1"]="#26c6da";
// [1341]  ColorMap.put( {540} , {541} ) 
_B._colormap["cyan"]="#00bcd4";
// [1342]  ColorMap.put( {542} , {543} ) 
_B._colormap["cyan darken-1"]="#00acc1";
// [1343]  ColorMap.put( {544} , {545} ) 
_B._colormap["cyan darken-2"]="#0097a7";
// [1344]  ColorMap.put( {546} , {547} ) 
_B._colormap["cyan darken-3"]="#00838f";
// [1345]  ColorMap.put( {548} , {549} ) 
_B._colormap["cyan darken-4"]="#006064";
// [1346]  ColorMap.put( {550} , {551} ) 
_B._colormap["cyan accent-1"]="#84ffff";
// [1347]  ColorMap.put( {552} , {553} ) 
_B._colormap["cyan accent-2"]="#18ffff";
// [1348]  ColorMap.put( {554} , {555} ) 
_B._colormap["cyan accent-3"]="#00e5ff";
// [1349]  ColorMap.put( {556} , {557} ) 
_B._colormap["cyan accent-4"]="#00b8d4";
// [1350]  ColorMap.put( {558} , {559} ) 
_B._colormap["teal lighten-5"]="#e0f2f1";
// [1351]  ColorMap.put( {560} , {561} ) 
_B._colormap["teal lighten-4"]="#b2dfdb";
// [1352]  ColorMap.put( {562} , {563} ) 
_B._colormap["teal lighten-3"]="#80cbc4";
// [1353]  ColorMap.put( {564} , {565} ) 
_B._colormap["teal lighten-2"]="#4db6ac";
// [1354]  ColorMap.put( {566} , {567} ) 
_B._colormap["teal lighten-1"]="#26a69a";
// [1355]  ColorMap.put( {568} , {569} ) 
_B._colormap["teal"]="#009688";
// [1356]  ColorMap.put( {570} , {571} ) 
_B._colormap["teal darken-1"]="#00897b";
// [1357]  ColorMap.put( {572} , {573} ) 
_B._colormap["teal darken-2"]="#00796b";
// [1358]  ColorMap.put( {574} , {575} ) 
_B._colormap["teal darken-3"]="#00695c";
// [1359]  ColorMap.put( {576} , {577} ) 
_B._colormap["teal darken-4"]="#004d40";
// [1360]  ColorMap.put( {578} , {579} ) 
_B._colormap["teal accent-1"]="#a7ffeb";
// [1361]  ColorMap.put( {580} , {581} ) 
_B._colormap["teal accent-2"]="#64ffda";
// [1362]  ColorMap.put( {582} , {583} ) 
_B._colormap["teal accent-3"]="#1de9b6";
// [1363]  ColorMap.put( {584} , {585} ) 
_B._colormap["teal accent-4"]="#00bfa5";
// [1364]  ColorMap.put( {586} , {587} ) 
_B._colormap["green lighten-5"]="#e8f5e9";
// [1365]  ColorMap.put( {588} , {589} ) 
_B._colormap["green lighten-4"]="#c8e6c9";
// [1366]  ColorMap.put( {590} , {591} ) 
_B._colormap["green lighten-3"]="#a5d6a7";
// [1367]  ColorMap.put( {592} , {593} ) 
_B._colormap["green lighten-2"]="#81c784";
// [1368]  ColorMap.put( {594} , {595} ) 
_B._colormap["green lighten-1"]="#66bb6a";
// [1369]  ColorMap.put( {596} , {597} ) 
_B._colormap["green"]="#4caf50";
// [1370]  ColorMap.put( {598} , {599} ) 
_B._colormap["green darken-1"]="#43a047";
// [1371]  ColorMap.put( {600} , {601} ) 
_B._colormap["green darken-2"]="#388e3c";
// [1372]  ColorMap.put( {602} , {603} ) 
_B._colormap["green darken-3"]="#2e7d32";
// [1373]  ColorMap.put( {604} , {605} ) 
_B._colormap["green darken-4"]="#1b5e20";
// [1374]  ColorMap.put( {606} , {607} ) 
_B._colormap["green accent-1"]="#b9f6ca";
// [1375]  ColorMap.put( {608} , {609} ) 
_B._colormap["green accent-2"]="#69f0ae";
// [1376]  ColorMap.put( {610} , {611} ) 
_B._colormap["green accent-3"]="#00e676";
// [1377]  ColorMap.put( {612} , {613} ) 
_B._colormap["green accent-4"]="#00c853";
// [1378]  ColorMap.put( {614} , {615} ) 
_B._colormap["light-green lighten-5"]="#f1f8e9";
// [1379]  ColorMap.put( {616} , {617} ) 
_B._colormap["light-green lighten-4"]="#dcedc8";
// [1380]  ColorMap.put( {618} , {619} ) 
_B._colormap["light-green lighten-3"]="#c5e1a5";
// [1381]  ColorMap.put( {620} , {621} ) 
_B._colormap["light-green lighten-2"]="#aed581";
// [1382]  ColorMap.put( {622} , {623} ) 
_B._colormap["light-green lighten-1"]="#9ccc65";
// [1383]  ColorMap.put( {624} , {625} ) 
_B._colormap["light-green"]="#8bc34a";
// [1384]  ColorMap.put( {626} , {627} ) 
_B._colormap["light-green darken-1"]="#7cb342";
// [1385]  ColorMap.put( {628} , {629} ) 
_B._colormap["light-green darken-2"]="#689f38";
// [1386]  ColorMap.put( {630} , {631} ) 
_B._colormap["light-green darken-3"]="#558b2f";
// [1387]  ColorMap.put( {632} , {633} ) 
_B._colormap["light-green darken-4"]="#33691e";
// [1388]  ColorMap.put( {634} , {635} ) 
_B._colormap["light-green accent-1"]="#ccff90";
// [1389]  ColorMap.put( {636} , {637} ) 
_B._colormap["light-green accent-2"]="#b2ff59";
// [1390]  ColorMap.put( {638} , {639} ) 
_B._colormap["light-green accent-3"]="#76ff03";
// [1391]  ColorMap.put( {640} , {641} ) 
_B._colormap["light-green accent-4"]="#64dd17";
// [1392]  ColorMap.put( {642} , {643} ) 
_B._colormap["lime lighten-5"]="#f9fbe7";
// [1393]  ColorMap.put( {644} , {645} ) 
_B._colormap["lime lighten-4"]="#f0f4c3";
// [1394]  ColorMap.put( {646} , {647} ) 
_B._colormap["lime lighten-3"]="#e6ee9c";
// [1395]  ColorMap.put( {648} , {649} ) 
_B._colormap["lime lighten-2"]="#dce775";
// [1396]  ColorMap.put( {650} , {651} ) 
_B._colormap["lime lighten-1"]="#d4e157";
// [1397]  ColorMap.put( {652} , {653} ) 
_B._colormap["lime"]="#cddc39";
// [1398]  ColorMap.put( {654} , {655} ) 
_B._colormap["lime darken-1"]="#c0ca33";
// [1399]  ColorMap.put( {656} , {657} ) 
_B._colormap["lime darken-2"]="#afb42b";
// [1400]  ColorMap.put( {658} , {659} ) 
_B._colormap["lime darken-3"]="#9e9d24";
// [1401]  ColorMap.put( {660} , {661} ) 
_B._colormap["lime darken-4"]="#827717";
// [1402]  ColorMap.put( {662} , {663} ) 
_B._colormap["lime accent-1"]="#f4ff81";
// [1403]  ColorMap.put( {664} , {665} ) 
_B._colormap["lime accent-2"]="#eeff41";
// [1404]  ColorMap.put( {666} , {667} ) 
_B._colormap["lime accent-3"]="#c6ff00";
// [1405]  ColorMap.put( {668} , {669} ) 
_B._colormap["lime accent-4"]="#aeea00";
// [1406]  ColorMap.put( {670} , {671} ) 
_B._colormap["yellow lighten-5"]="#fffde7";
// [1407]  ColorMap.put( {672} , {673} ) 
_B._colormap["yellow lighten-4"]="#fff9c4";
// [1408]  ColorMap.put( {674} , {675} ) 
_B._colormap["yellow lighten-3"]="#fff59d";
// [1409]  ColorMap.put( {676} , {677} ) 
_B._colormap["yellow lighten-2"]="#fff176";
// [1410]  ColorMap.put( {678} , {679} ) 
_B._colormap["yellow lighten-1"]="#ffee58";
// [1411]  ColorMap.put( {680} , {681} ) 
_B._colormap["yellow"]="#ffeb3b";
// [1412]  ColorMap.put( {682} , {683} ) 
_B._colormap["yellow darken-1"]="#fdd835";
// [1413]  ColorMap.put( {684} , {685} ) 
_B._colormap["yellow darken-2"]="#fbc02d";
// [1414]  ColorMap.put( {686} , {687} ) 
_B._colormap["yellow darken-3"]="#f9a825";
// [1415]  ColorMap.put( {688} , {689} ) 
_B._colormap["yellow darken-4"]="#f57f17";
// [1416]  ColorMap.put( {690} , {691} ) 
_B._colormap["yellow accent-1"]="#ffff8d";
// [1417]  ColorMap.put( {692} , {693} ) 
_B._colormap["yellow accent-2"]="#ffff00";
// [1418]  ColorMap.put( {694} , {695} ) 
_B._colormap["yellow accent-3"]="#ffea00";
// [1419]  ColorMap.put( {696} , {697} ) 
_B._colormap["yellow accent-4"]="#ffd600";
// [1420]  ColorMap.put( {698} , {699} ) 
_B._colormap["amber lighten-5"]="#fff8e1";
// [1421]  ColorMap.put( {700} , {701} ) 
_B._colormap["amber lighten-4"]="#ffecb3";
// [1422]  ColorMap.put( {702} , {703} ) 
_B._colormap["amber lighten-3"]="#ffe082";
// [1423]  ColorMap.put( {704} , {705} ) 
_B._colormap["amber lighten-2"]="#ffd54f";
// [1424]  ColorMap.put( {706} , {707} ) 
_B._colormap["amber lighten-1"]="#ffca28";
// [1425]  ColorMap.put( {708} , {709} ) 
_B._colormap["amber"]="#ffc107";
// [1426]  ColorMap.put( {710} , {711} ) 
_B._colormap["amber darken-1"]="#ffb300";
// [1427]  ColorMap.put( {712} , {713} ) 
_B._colormap["amber darken-2"]="#ffa000";
// [1428]  ColorMap.put( {714} , {715} ) 
_B._colormap["amber darken-3"]="#ff8f00";
// [1429]  ColorMap.put( {716} , {717} ) 
_B._colormap["amber darken-4"]="#ff6f00";
// [1430]  ColorMap.put( {718} , {719} ) 
_B._colormap["amber accent-1"]="#ffe57f";
// [1431]  ColorMap.put( {720} , {721} ) 
_B._colormap["amber accent-2"]="#ffd740";
// [1432]  ColorMap.put( {722} , {723} ) 
_B._colormap["amber accent-3"]="#ffc400";
// [1433]  ColorMap.put( {724} , {725} ) 
_B._colormap["amber accent-4"]="#ffab00";
// [1434]  ColorMap.put( {726} , {727} ) 
_B._colormap["orange lighten-5"]="#fff3e0";
// [1435]  ColorMap.put( {728} , {729} ) 
_B._colormap["orange lighten-4"]="#ffe0b2";
// [1436]  ColorMap.put( {730} , {731} ) 
_B._colormap["orange lighten-3"]="#ffcc80";
// [1437]  ColorMap.put( {732} , {733} ) 
_B._colormap["orange lighten-2"]="#ffb74d";
// [1438]  ColorMap.put( {734} , {735} ) 
_B._colormap["orange lighten-1"]="#ffa726";
// [1439]  ColorMap.put( {736} , {737} ) 
_B._colormap["orange"]="#ff9800";
// [1440]  ColorMap.put( {738} , {739} ) 
_B._colormap["orange darken-1"]="#fb8c00";
// [1441]  ColorMap.put( {740} , {741} ) 
_B._colormap["orange darken-2"]="#f57c00";
// [1442]  ColorMap.put( {742} , {743} ) 
_B._colormap["orange darken-3"]="#ef6c00";
// [1443]  ColorMap.put( {744} , {745} ) 
_B._colormap["orange darken-4"]="#e65100";
// [1444]  ColorMap.put( {746} , {747} ) 
_B._colormap["orange accent-1"]="#ffd180";
// [1445]  ColorMap.put( {748} , {749} ) 
_B._colormap["orange accent-2"]="#ffab40";
// [1446]  ColorMap.put( {750} , {751} ) 
_B._colormap["orange accent-3"]="#ff9100";
// [1447]  ColorMap.put( {752} , {753} ) 
_B._colormap["orange accent-4"]="#ff6d00";
// [1448]  ColorMap.put( {754} , {755} ) 
_B._colormap["deep-orange lighten-5"]="#fbe9e7";
// [1449]  ColorMap.put( {756} , {757} ) 
_B._colormap["deep-orange lighten-4"]="#ffccbc";
// [1450]  ColorMap.put( {758} , {759} ) 
_B._colormap["deep-orange lighten-3"]="#ffab91";
// [1451]  ColorMap.put( {760} , {761} ) 
_B._colormap["deep-orange lighten-2"]="#ff8a65";
// [1452]  ColorMap.put( {762} , {763} ) 
_B._colormap["deep-orange lighten-1"]="#ff7043";
// [1453]  ColorMap.put( {764} , {765} ) 
_B._colormap["deep-orange"]="#ff5722";
// [1454]  ColorMap.put( {766} , {767} ) 
_B._colormap["deep-orange darken-1"]="#f4511e";
// [1455]  ColorMap.put( {768} , {769} ) 
_B._colormap["deep-orange darken-2"]="#e64a19";
// [1456]  ColorMap.put( {770} , {771} ) 
_B._colormap["deep-orange darken-3"]="#d84315";
// [1457]  ColorMap.put( {772} , {773} ) 
_B._colormap["deep-orange darken-4"]="#bf360c";
// [1458]  ColorMap.put( {774} , {775} ) 
_B._colormap["deep-orange accent-1"]="#ff9e80";
// [1459]  ColorMap.put( {776} , {777} ) 
_B._colormap["deep-orange accent-2"]="#ff6e40";
// [1460]  ColorMap.put( {778} , {779} ) 
_B._colormap["deep-orange accent-3"]="#ff3d00";
// [1461]  ColorMap.put( {780} , {781} ) 
_B._colormap["deep-orange accent-4"]="#dd2c00";
// [1462]  ColorMap.put( {782} , {783} ) 
_B._colormap["brown lighten-5"]="#efebe9";
// [1463]  ColorMap.put( {784} , {785} ) 
_B._colormap["brown lighten-4"]="#d7ccc8";
// [1464]  ColorMap.put( {786} , {787} ) 
_B._colormap["brown lighten-3"]="#bcaaa4";
// [1465]  ColorMap.put( {788} , {789} ) 
_B._colormap["brown lighten-2"]="#a1887f";
// [1466]  ColorMap.put( {790} , {791} ) 
_B._colormap["brown lighten-1"]="#8d6e63";
// [1467]  ColorMap.put( {792} , {793} ) 
_B._colormap["brown"]="#795548";
// [1468]  ColorMap.put( {794} , {795} ) 
_B._colormap["brown darken-1"]="#6d4c41";
// [1469]  ColorMap.put( {796} , {797} ) 
_B._colormap["brown darken-2"]="#5d4037";
// [1470]  ColorMap.put( {798} , {799} ) 
_B._colormap["brown darken-3"]="#4e342e";
// [1471]  ColorMap.put( {800} , {801} ) 
_B._colormap["brown darken-4"]="#3e2723";
// [1472]  ColorMap.put( {802} , {803} ) 
_B._colormap["grey lighten-5"]="#fafafa";
// [1473]  ColorMap.put( {804} , {805} ) 
_B._colormap["grey lighten-4"]="#f5f5f5";
// [1474]  ColorMap.put( {806} , {807} ) 
_B._colormap["grey lighten-3"]="#eeeeee";
// [1475]  ColorMap.put( {808} , {809} ) 
_B._colormap["grey lighten-2"]="#e0e0e0";
// [1476]  ColorMap.put( {810} , {811} ) 
_B._colormap["grey lighten-1"]="#bdbdbd";
// [1477]  ColorMap.put( {812} , {813} ) 
_B._colormap["grey"]="#9e9e9e";
// [1478]  ColorMap.put( {814} , {815} ) 
_B._colormap["grey darken-1"]="#757575";
// [1479]  ColorMap.put( {816} , {817} ) 
_B._colormap["grey darken-2"]="#616161";
// [1480]  ColorMap.put( {818} , {819} ) 
_B._colormap["grey darken-3"]="#424242";
// [1481]  ColorMap.put( {820} , {821} ) 
_B._colormap["grey darken-4"]="#212121";
// [1482]  ColorMap.put( {822} , {823} ) 
_B._colormap["blue-grey lighten-5"]="#eceff1";
// [1483]  ColorMap.put( {824} , {825} ) 
_B._colormap["blue-grey lighten-4"]="#cfd8dc";
// [1484]  ColorMap.put( {826} , {827} ) 
_B._colormap["blue-grey lighten-3"]="#b0bec5";
// [1485]  ColorMap.put( {828} , {829} ) 
_B._colormap["blue-grey lighten-2"]="#90a4ae";
// [1486]  ColorMap.put( {830} , {831} ) 
_B._colormap["blue-grey lighten-1"]="#78909c";
// [1487]  ColorMap.put( {832} , {833} ) 
_B._colormap["blue-grey"]="#607d8b";
// [1488]  ColorMap.put( {834} , {835} ) 
_B._colormap["blue-grey darken-1"]="#546e7a";
// [1489]  ColorMap.put( {836} , {837} ) 
_B._colormap["blue-grey darken-2"]="#455a64";
// [1490]  ColorMap.put( {838} , {839} ) 
_B._colormap["blue-grey darken-3"]="#37474f";
// [1491]  ColorMap.put( {840} , {841} ) 
_B._colormap["blue-grey darken-4"]="#263238";
// [1492]  ColorMap.put( {842} , {843} ) 
_B._colormap["black"]="#000000";
// [1493]  ColorMap.put( {844} , {845} ) 
_B._colormap["white"]="#ffffff";
// [1494]  ColorMap.put( {846} , {847} ) 
_B._colormap["transparent"]="transparent";
// End Sub
};

// [1498] Sub GetColorHex(sColor As String) As String 
_B.getcolorhex=function(_scolor) {
var _xcolor;
// [1499]  sColor = sColor.tolowercase 
_scolor=_scolor.toLowerCase();
// [1500]  If ColorMap.ContainsKey(sColor) Then 
if ((_scolor in _B._colormap)) {
// [1501]  Dim xColor As String = ColorMap.Get(sColor) 
_xcolor=_B._colormap[_scolor];
// [1502]  Return xColor 
return _xcolor;
// [1503]  End If 
}
// [1504]  Return {848} 
return "";
// End Sub
};

// [1508] Sub BR As String 
_B.br=function() {
// [1509]  Return {849} 
return "<br>";
// End Sub
};

// [1513] Sub HR As String 
_B.hr=function() {
// [1514]  Return {850} 
return "<hr>";
// End Sub
};

// [1520] Sub MakePx(sValue As String) As String 
_B.makepx=function(_svalue) {
// [1521]  sValue = sValue.trim 
_svalue=_svalue.trim();
// [1522]  If sValue.EndsWith( {851} ) Then 
if (_svalue.endsWith("%")) {
// [1523]  Return sValue 
return _svalue;
// [1524]  else If sValue.EndsWith( {852} ) Then 
} else if (_svalue.endsWith("vm")) {
// [1525]  Return sValue 
return _svalue;
// [1526]  else If sValue.EndsWith( {853} ) Then 
} else if (_svalue.endsWith("px")) {
// [1527]  Return sValue 
return _svalue;
// [1528]  else If sValue.EndsWith( {854} ) Then 
} else if (_svalue.endsWith("cm")) {
// [1529]  Return sValue 
return _svalue;
// [1530]  else If sValue.EndsWith( {855} ) Then 
} else if (_svalue.endsWith("mm")) {
// [1531]  Return sValue 
return _svalue;
// [1532]  else If sValue.EndsWith( {856} ) Then 
} else if (_svalue.endsWith("in")) {
// [1533]  Return sValue 
return _svalue;
// [1534]  else If sValue.EndsWith( {857} ) Then 
} else if (_svalue.endsWith("pt")) {
// [1535]  Return sValue 
return _svalue;
// [1536]  else If sValue.EndsWith( {858} ) Then 
} else if (_svalue.endsWith("pc")) {
// [1537]  Return sValue 
return _svalue;
// [1538]  else If sValue.EndsWith( {859} ) Then 
} else if (_svalue.endsWith("em")) {
// [1539]  Return sValue 
return _svalue;
// [1540]  else If sValue.EndsWith( {860} ) Then 
} else if (_svalue.endsWith("ex")) {
// [1541]  Return sValue 
return _svalue;
// [1542]  else If sValue.EndsWith( {861} ) Then 
} else if (_svalue.endsWith("ch")) {
// [1543]  Return sValue 
return _svalue;
// [1544]  else If sValue.EndsWith( {862} ) Then 
} else if (_svalue.endsWith("rem")) {
// [1545]  Return sValue 
return _svalue;
// [1546]  else If sValue.EndsWith( {863} ) Then 
} else if (_svalue.endsWith("vw")) {
// [1547]  Return sValue 
return _svalue;
// [1548]  else If sValue.EndsWith( {864} ) Then 
} else if (_svalue.endsWith("vh")) {
// [1549]  Return sValue 
return _svalue;
// [1550]  else If sValue.EndsWith( {865} ) Then 
} else if (_svalue.endsWith("vmin")) {
// [1551]  Return sValue 
return _svalue;
// [1552]  else If sValue.EndsWith( {866} ) Then 
} else if (_svalue.endsWith("vmax")) {
// [1553]  Return sValue 
return _svalue;
// [1554]  else If sValue.EndsWith( {867} ) Then 
} else if (_svalue.endsWith(";")) {
// [1555]  Return sValue 
return _svalue;
// [1556]  Else 
} else {
// [1557]  sValue = sValue.Replace( {868} , {869} ) 
_svalue=_svalue.split("px").join("");
// [1558]  sValue = {12} 
_svalue="" + _svalue + "px";
// [1559]  If sValue = {870} Then sValue = {871} 
if (_svalue=="px") {_svalue="";}
// [1560]  Return sValue 
return _svalue;
// [1561]  End If 
}
// End Sub
};

// [1564] Sub CreateFORM(id As String) As VMElement 
_B.createform=function(_id) {
var _el;
// [1565]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1566]  el.Initialize(Me, id).SetTag( {872} ) 
_el.initialize(_B,_id).settag("form");
// [1567]  Return el 
return _el;
// End Sub
};

// [1570] Sub CreateLABEL(id As String) As VMElement 
_B.createlabel=function(_id) {
var _el;
// [1571]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1572]  el.Initialize(Me, id).SetTag( {873} ) 
_el.initialize(_B,_id).settag("label");
// [1573]  Return el 
return _el;
// End Sub
};

// [1576] Sub CreateINPUT(id As String) As VMElement 
_B.createinput=function(_id) {
var _el;
// [1577]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1578]  el.Initialize(Me, id).SetTag( {874} ) 
_el.initialize(_B,_id).settag("input");
// [1579]  Return el 
return _el;
// End Sub
};

// [1582] Sub CreateTEXTAREA(id As String) As VMElement 
_B.createtextarea=function(_id) {
var _el;
// [1583]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1584]  el.Initialize(Me, id).SetTag( {875} ) 
_el.initialize(_B,_id).settag("textarea");
// [1585]  Return el 
return _el;
// End Sub
};

// [1588] Sub CreateBUTTON1(id As String) As VMElement 
_B.createbutton1=function(_id) {
var _el;
// [1589]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [1590]  el.Initialize(Me, id).SetTag( {876} ) 
_el.initialize(_B,_id).settag("button");
// [1591]  Return el 
return _el;
// End Sub
};

// [1595] Sub SetStyle(className As String, prop As String, valx As String) As BANanoVue 
_B.setstyle=function(_classname,_prop,_valx) {
var _m;
// [1596]  Dim m As Map 
_m={};
// [1597]  If dynamicStyle.ContainsKey(className) Then 
if ((_classname in _B._dynamicstyle)) {
// [1598]  m = dynamicStyle.Get(className) 
_m=_B._dynamicstyle[_classname];
// [1599]  m.Put(prop, valx) 
_m[_prop]=_valx;
// [1600]  Else 
} else {
// [1601]  m = CreateMap() 
_m={};
// [1602]  m.Put(prop, valx) 
_m[_prop]=_valx;
// [1603]  End If 
}
// [1604]  dynamicStyle.Put(className, m) 
_B._dynamicstyle[_classname]=_m;
// [1605]  Return Me 
return _B;
// End Sub
};

// [1609] Sub SaveText2File(content As String, fileName As String) 
_B.savetext2file=function(_content,_filename) {
var _fc,_blob;
// [1610]  Dim fc As List 
_fc=[];
// [1611]  fc.Initialize 
_fc.length=0;
// [1612]  fc.Add(content) 
_fc.push(_content);
// [1613]  Dim blob As BANanoObject 
_blob=null;
// [1614]  blob.Initialize2( {877} ,Array(fc, CreateMap( {878} : {879} ))) 
_blob=new Blob(_fc,{"type":"text/plain;charset=utf-8"});
// [1615]  BANAno.RunJavascriptMethod( {880} ,Array(blob,fileName)) 
BANanoExec("saveAs", window, _blob,_filename);
// End Sub
};

// [1619] Sub MvCount(strMV As String, Delimiter As String) As Int 
_B.mvcount=function(_strmv,_delimiter) {
var _spvalues;
// [1620]  Dim spValues() As String = BANAno.Split(Delimiter,strMV) 
_spvalues=_strmv.split(_delimiter);
// [1621]  Return spValues.Length 
return _spvalues.length;
// End Sub
};

// [1624] Sub SetOptionBO(optionName As String, optionObject As BANanoObject) 
_B.setoptionbo=function(_optionname,_optionobject) {
// [1625]  Options.Put(optionName, optionObject) 
_B._options[_optionname]=_optionobject;
// End Sub
};

// [1628] Sub AddComponent(comp As VueComponent) As BANanoVue 
_B.addcomponent=function(_comp) {
var _sid;
// [1629]  Dim sid As String = comp.id 
_sid=_comp._id;
// [1630]  components.Put(sid, comp.Component) 
_B._components[_sid]=_comp.component();
// [1631]  Return Me 
return _B;
// End Sub
};

// [1634] Sub AddComponentBO(compName As String, comp As BANanoObject) As BANanoVue 
_B.addcomponentbo=function(_compname,_comp) {
// [1635]  components.Put(compName, comp) 
_B._components[_compname]=_comp;
// [1636]  Return Me 
return _B;
// End Sub
};

// [1640] Sub AddRoute(path As String, comp As VueComponent) 
_B.addroute=function(_path,_comp) {
var _eachroute;
// [1641]  If comp.name = {881} Then 
if (_comp._name=="") {
// [1642]  Log( {882} ) 
console.log("AddRoute: Please specify the name of the Route!");
// [1643]  End If 
}
// [1645]  Dim eachroute As Map = CreateMap() 
_eachroute={};
// [1646]  eachroute.Put( {883} , path) 
_eachroute["path"]=_path;
// [1647]  eachroute.Put( {884} , comp.name) 
_eachroute["name"]=_comp._name;
// [1648]  eachroute.Put( {885} , comp.component) 
_eachroute["component"]=_comp.component();
// [1650]  routes.Add(eachroute) 
_B._routes.push(_eachroute);
// End Sub
};

// [1653] Sub CreateRouterLink(Text As String) As VueHTML 
_B.createrouterlink=function(_text) {
var _el;
// [1654]  Dim el As VueHTML 
_el= new banano_bananovuematerial_vuehtml();
// [1655]  el.Initialize( {886} , {887} ).SetText(Text) 
_el.initialize("","router-link").settext(_text);
// [1656]  Return el 
return _el;
// End Sub
};

// [1659] Sub CreateRouterView As VueHTML 
_B.createrouterview=function() {
var _el;
// [1660]  Dim el As VueHTML 
_el= new banano_bananovuematerial_vuehtml();
// [1661]  el.Initialize( {888} , {889} ) 
_el.initialize("","router-view");
// [1662]  Return el 
return _el;
// End Sub
};

// [1665] Sub AuditTrail(oldM As Map, newM As Map) As Map 
_B.audittrail=function(_oldm,_newm) {
var _df,_k,_v,_nv,_ov;
// [1666]  Dim df As Map = CreateMap() 
_df={};
// [1667]  For Each k As String In oldM.Keys 
var _kKeys = Object.keys(_oldm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1668]  Dim v As Object = oldM.Get(k) 
_v=_oldm[_k];
// [1669]  If newM.ContainsKey(k) Then 
if ((_k in _newm)) {
// [1670]  Dim nv As Object = newM.Get(k) 
_nv=_newm[_k];
// [1671]  If v <> nv Then 
if (_v!=_nv) {
// [1672]  df.Put(k, nv) 
_df[_k]=_nv;
// [1673]  End If 
}
// [1674]  End If 
}
// [1675]  Next 
}
// [1676]  For Each k As String In newM.Keys 
var _kKeys = Object.keys(_newm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1677]  Dim v As Object = newM.Get(k) 
_v=_newm[_k];
// [1678]  If oldM.ContainsKey(k) Then 
if ((_k in _oldm)) {
// [1679]  Dim ov As Object = oldM.Get(k) 
_ov=_oldm[_k];
// [1680]  If v <> ov Then 
if (_v!=_ov) {
// [1681]  df.Put(k, v) 
_df[_k]=_v;
// [1682]  End If 
}
// [1683]  Else 
} else {
// [1684]  df.Put(k, v) 
_df[_k]=_v;
// [1685]  End If 
}
// [1686]  Next 
}
// [1687]  Return df 
return _df;
// End Sub
};

// [1690] Public Sub DateTimeNow() As String 
_B.datetimenow=function() {
var _lnow,_dt;
// [1691]  Dim lNow As Long 
_lnow=0;
// [1692]  Dim dt As String 
_dt="";
// [1693]  lNow = DateTime.Now 
_lnow=DateTime.Now();
// [1694]  DateTime.DateFormat = {890} 
DateTime.SetDateFormat("yyyy-MM-dd");
// [1695]  dt = DateTime.Date(lNow) 
_dt=DateTime.Date(_lnow);
// [1696]  Return dt 
return _dt;
// End Sub
};

// [1699] Public Sub DateNow() As String 
_B.datenow=function() {
var _lnow,_dt;
// [1700]  Dim lNow As Long 
_lnow=0;
// [1701]  Dim dt As String 
_dt="";
// [1702]  lNow = DateTime.Now 
_lnow=DateTime.Now();
// [1703]  DateTime.DateFormat = {891} 
DateTime.SetDateFormat("yyyy-MM-dd HH:mm");
// [1704]  dt = DateTime.Date(lNow) 
_dt=DateTime.Date(_lnow);
// [1705]  Return dt 
return _dt;
// End Sub
};

// [1709] Sub LongDateTimeToday() As String 
_B.longdatetimetoday=function() {
var _dt;
// [1710]  DateTime.DateFormat = {892} 
DateTime.SetDateFormat("yyyy-MM-dd HH:mm");
// [1711]  Dim dt As Long = DateTime.now 
_dt=DateTime.Now();
// [1712]  DateTime.DateFormat = {893} 
DateTime.SetDateFormat("dd/MM/yyyy, HH:mm");
// [1713]  Return DateTime.Date(dt) 
return DateTime.Date(_dt);
// End Sub
};

// [1716] Sub CopyMap(source As Map, keys As List) As Map 
_B.copymap=function(_source,_keys) {
var _nm,_k,_v;
// [1717]  Dim nm As Map = CreateMap() 
_nm={};
// [1718]  If keys.Get(0) = {894} Then 
if (_keys[0]=="*") {
// [1719]  For Each k As String In source.Keys 
var _kKeys = Object.keys(_source);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1720]  Dim v As Object = source.Get(k) 
_v=_source[_k];
// [1721]  nm.Put(k, v) 
_nm[_k]=_v;
// [1722]  Next 
}
// [1723]  Else 
} else {
// [1724]  For Each k As String In keys 
for (var _kindex=0;_kindex<_keys.length;_kindex++) {
_k=_keys[_kindex];
// [1725]  Dim v As Object = source.Get(k) 
_v=_source[_k];
// [1726]  nm.Put(k, v) 
_nm[_k]=_v;
// [1727]  Next 
}
// [1728]  End If 
}
// [1729]  Return nm 
return _nm;
// End Sub
};

// [1733] Sub Validate(rec As Map, required As Map) As Boolean 
_B.validate=function(_rec,_required) {
var _iv,_k,_v;
// [1734]  Dim iv As Int = 0 
_iv=0;
// [1735]  For Each k As String In required.Keys 
var _kKeys = Object.keys(_required);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1736]  If rec.ContainsKey(k) Then 
if ((_k in _rec)) {
// [1737]  Dim v As String = rec.GetDefault(k, {895} ) 
_v=(_rec[_k] || "");
// [1738]  v = CStr(v) 
_v=_B.cstr(_v,_B);
// [1739]  v = v.trim 
_v=_v.trim();
// [1740]  If v = {896} Then 
if (_v=="") {
// [1741]  Log( {897} & k) 
console.log("Validate: "+_k);
// [1742]  iv = iv + 1 
_iv=_iv+1;
// [1743]  ShowError(k) 
_B.showerror(_k,_B);
// [1744]  Else 
} else {
// [1745]  HideError(k) 
_B.hideerror(_k,_B);
// [1746]  End If 
}
// [1747]  End If 
}
// [1748]  Next 
}
// [1749]  If iv = 0 Then 
if (_iv==0) {
// [1750]  Return True 
return true;
// [1751]  Else 
} else {
// [1752]  Return False 
return false;
// [1753]  End If 
}
// End Sub
};

// [1757] Sub ShowError(elID As String) 
_B.showerror=function(_elid) {
// [1758]  SetStateSingle( {13} , True) 
_B.setstatesingle("" + _elid + "error",true,_B);
// End Sub
};

// [1761] Sub HideError(elID As String) 
_B.hideerror=function(_elid) {
// [1762]  SetStateSingle( {14} , False) 
_B.setstatesingle("" + _elid + "error",false,_B);
// End Sub
};

// [1765] Sub GetFileParentPath(Path As String) As String 
_B.getfileparentpath=function(_path) {
var _path1,_l;
// [1766]  Dim Path1 As String 
_path1="";
// [1767]  Dim L As Int 
_l=0;
// [1768]  If Path = {898} Then 
if (_path=="/") {
// [1769]  Return {899} 
return "/";
// [1770]  End If 
}
// [1771]  L = Path.LastIndexOf( {900} ) 
_l=_path.lastIndexOf("/");
// [1772]  If L = Path.Length - 1 Then 
if (_l==_path.length-1) {
// [1774]  Path1 = Path.SubString2(0,L) 
_path1=_path.substring(0,_l);
// [1775]  Else 
} else {
// [1776]  Path1 = Path 
_path1=_path;
// [1777]  End If 
}
// [1778]  L = Path.LastIndexOf( {901} ) 
_l=_path.lastIndexOf("/");
// [1779]  If L = 0 Then 
if (_l==0) {
// [1780]  L = 1 
_l=1;
// [1781]  End If 
}
// [1782]  Return Path1.SubString2(0,L) 
return _path1.substring(0,_l);
// End Sub
};

// [1785] Sub GetFileExt(FullPath As String) As String 
_B.getfileext=function(_fullpath) {
// [1786]  Return FullPath.SubString(FullPath.LastIndexOf( {902} )+1) 
return _fullpath.substring(_fullpath.lastIndexOf(".")+1);
// End Sub
};

// [1789] Sub SetPrefix(prefix As String, target As Map) As Map 
_B.setprefix=function(_prefix,_target) {
var _nm,_mk,_mv,_mk1;
// [1790]  Dim nm As Map = CreateMap() 
_nm={};
// [1791]  For Each mk As String In target.Keys 
var _mkKeys = Object.keys(_target);
for (var _mkindex=0;_mkindex<_mkKeys.length;_mkindex++) {
_mk=_mkKeys[_mkindex];
// [1792]  Dim mv As Object = target.Get(mk) 
_mv=_target[_mk];
// [1793]  Dim mk1 As String = prefix & {903} & mk 
_mk1=_prefix+"_"+_mk;
// [1794]  nm.Put(mk1,mv) 
_nm[_mk1]=_mv;
// [1795]  Next 
}
// [1796]  Return nm 
return _nm;
// End Sub
};

// [1800] Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [1801]  If o = BANAno.UNDEFINED Then o = {904} 
if (_o=='undefined') {_o="";}
// [1802]  Return {905} & o 
return ""+_o;
// End Sub
};

// [1806] Sub FixRecords(recs As List, trimThese As List, numThese As List, boolThese As List, dateThese As List, dblThese As List) 
_B.fixrecords=function(_recs,_trimthese,_numthese,_boolthese,_datethese,_dblthese) {
var _rtot,_rcnt,_rec,_nrec,_k,_v;
// [1807]  Dim rTot As Int = recs.Size - 1 
_rtot=_recs.length-1;
// [1808]  Dim rCnt As Int 
_rcnt=0;
// [1809]  For rCnt = 0 To rTot 
for (_rcnt=0;_rcnt<=_rtot;_rcnt++) {
// [1810]  Dim rec As Map = recs.Get(rCnt) 
_rec=_recs[_rcnt];
// [1812]  Dim nrec As Map = CreateMap() 
_nrec={};
// [1813]  For Each k As String In rec.keys 
var _kKeys = Object.keys(_rec);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1814]  Dim v As Object = rec.Get(k) 
_v=_rec[_k];
// [1815]  k = k.ToLowerCase 
_k=_k.toLowerCase();
// [1816]  nrec.Put(k, v) 
_nrec[_k]=_v;
// [1817]  Next 
}
// [1818]  If dateThese <> Null Then MakeDate(nrec,dateThese) 
if (_datethese!=null) {_B.makedate(_nrec,_datethese,_B);}
// [1819]  If trimThese <> Null Then MakeTrim(nrec,trimThese) 
if (_trimthese!=null) {_B.maketrim(_nrec,_trimthese,_B);}
// [1820]  If numThese <> Null Then MakeInteger(nrec, numThese) 
if (_numthese!=null) {_B.makeinteger(_nrec,_numthese,_B);}
// [1821]  If dblThese <> Null Then MakeDouble(nrec, dblThese) 
if (_dblthese!=null) {_B.makedouble(_nrec,_dblthese,_B);}
// [1822]  If boolThese <> Null Then MakeBoolean(nrec, boolThese) 
if (_boolthese!=null) {_B.makeboolean(_nrec,_boolthese,_B);}
// [1823]  recs.Set(rCnt, nrec) 
_recs[_rcnt]=_nrec;
// [1824]  Next 
}
// End Sub
};

// [1827] Sub MakeInteger(m As Map, xkeys As List) 
_B.makeinteger=function(_m,_xkeys) {
var _k,_v;
// [1828]  For Each k As String In xkeys 
for (var _kindex=0;_kindex<_xkeys.length;_kindex++) {
_k=_xkeys[_kindex];
// [1829]  If m.ContainsKey(k) Then 
if ((_k in _m)) {
// [1830]  Dim v As String = m.GetDefault(k, {906} ) 
_v=(_m[_k] || "");
// [1831]  v = CStr(v) 
_v=_B.cstr(_v,_B);
// [1832]  v = v.trim 
_v=_v.trim();
// [1833]  If v = {907} Then v = {908} 
if (_v=="") {_v="0";}
// [1834]  v = BANAno.parseInt(v) 
_v=parseInt(_v);
// [1835]  m.Put(k, v) 
_m[_k]=_v;
// [1836]  End If 
}
// [1837]  Next 
}
// End Sub
};

// [1840] Sub MakeDouble(m As Map, xkeys As List) 
_B.makedouble=function(_m,_xkeys) {
var _k,_v;
// [1841]  For Each k As String In xkeys 
for (var _kindex=0;_kindex<_xkeys.length;_kindex++) {
_k=_xkeys[_kindex];
// [1842]  If m.ContainsKey(k) Then 
if ((_k in _m)) {
// [1843]  Dim v As String = m.GetDefault(k, {909} ) 
_v=(_m[_k] || "");
// [1844]  v = CStr(v) 
_v=_B.cstr(_v,_B);
// [1845]  v = v.trim 
_v=_v.trim();
// [1846]  If v = {910} Then v = {911} 
if (_v=="") {_v="0";}
// [1847]  v = BANAno.parseFloat(v) 
_v=parseFloat(_v);
// [1848]  m.Put(k, v) 
_m[_k]=_v;
// [1849]  End If 
}
// [1850]  Next 
}
// End Sub
};

// [1853] Sub MakeBoolean(m As Map, xkeys As List) 
_B.makeboolean=function(_m,_xkeys) {
var _k,_v;
// [1854]  For Each k As String In xkeys 
for (var _kindex=0;_kindex<_xkeys.length;_kindex++) {
_k=_xkeys[_kindex];
// [1855]  If m.ContainsKey(k) Then 
if ((_k in _m)) {
// [1856]  Dim v As String = m.GetDefault(k, {912} ) 
_v=(_m[_k] || "0");
// [1857]  v = CStr(v) 
_v=_B.cstr(_v,_B);
// [1858]  v = v.trim 
_v=_v.trim();
// [1859]  Select Case v 
switch ("" + _v) {
// [1860]  Case {913} , {914} , {915} , {916} ,False,0 
case "" + "":
case "" + "0":
case "" + "false":
case "" + "False":
case "" + false:
case "" + 0:
// [1861]  m.Put(k, False) 
_m[_k]=false;
// [1862]  Case {917} , {918} , {919} ,True,1 
break;
case "" + "1":
case "" + "true":
case "" + "True":
case "" + true:
case "" + 1:
// [1863]  m.Put(k, True) 
_m[_k]=true;
// [1864]  End Select 
break;
}
// [1865]  End If 
}
// [1866]  Next 
}
// End Sub
};

// [1869] Sub GetRequiredState(k As String) As Boolean 
_B.getrequiredstate=function(_k) {
var _diskey;
// [1870]  Dim disKey As String = {15} 
_diskey="" + _k + "required";
// [1871]  Return GetState(disKey,False) 
return _B.getstate(_diskey,false,_B);
// End Sub
};

// [1874] Sub SetRequiredState(k As String, v As Boolean) 
_B.setrequiredstate=function(_k,_v) {
var _diskey;
// [1875]  Dim disKey As String = {16} 
_diskey="" + _k + "required";
// [1876]  SetStateSingle(disKey, v) 
_B.setstatesingle(_diskey,_v,_B);
// End Sub
};

// [1880] Sub MakeTrim(m As Map, xkeys As List) 
_B.maketrim=function(_m,_xkeys) {
var _k,_v;
// [1881]  For Each k As String In xkeys 
for (var _kindex=0;_kindex<_xkeys.length;_kindex++) {
_k=_xkeys[_kindex];
// [1882]  If m.ContainsKey(k) Then 
if ((_k in _m)) {
// [1883]  Dim v As String = m.GetDefault(k, {920} ) 
_v=(_m[_k] || "");
// [1884]  v = CStr(v) 
_v=_B.cstr(_v,_B);
// [1885]  v = v.trim 
_v=_v.trim();
// [1886]  m.Put(k, v) 
_m[_k]=_v;
// [1887]  End If 
}
// [1888]  Next 
}
// End Sub
};

// [1891] Sub MakeLowerCase(m As Map) As Map 
_B.makelowercase=function(_m) {
var _nm,_k,_v;
// [1892]  Dim nm As Map = CreateMap() 
_nm={};
// [1893]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1894]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [1895]  k = k.tolowercase 
_k=_k.toLowerCase();
// [1896]  nm.Put(k, v) 
_nm[_k]=_v;
// [1897]  Next 
}
// [1898]  Return nm 
return _nm;
// End Sub
};

// [1901] Sub MakeDate(m As Map, xkeys As List) 
_B.makedate=function(_m,_xkeys) {
var _k,_v;
// [1902]  For Each k As String In xkeys 
for (var _kindex=0;_kindex<_xkeys.length;_kindex++) {
_k=_xkeys[_kindex];
// [1903]  If m.ContainsKey(k) Then 
if ((_k in _m)) {
// [1904]  Dim v As String = m.GetDefault(k, {921} ) 
_v=(_m[_k] || "");
// [1905]  v = CStr(v) 
_v=_B.cstr(_v,_B);
// [1906]  v = v.trim 
_v=_v.trim();
// [1907]  v = MvField(v,1, {922} ) 
_v=_B.mvfield(_v,1," ",_B);
// [1908]  m.Put(k, v) 
_m[_k]=_v;
// [1909]  End If 
}
// [1910]  Next 
}
// End Sub
};

// [1915] Sub GetIDFromEvent(e As BANanoEvent) As String 
_B.getidfromevent=function(_e) {
var _cureve,_id;
// [1916]  Dim curEve As BANanoElement = BANAno.ToElement(e.OtherField( {923} )) 
_cureve=u(_e["currentTarget"]);
// [1917]  Dim id As String = curEve.GetField( {924} ).Result 
_id=_cureve.nodes[0]["id"];
// [1918]  Return id 
return _id;
// End Sub
};

// [1922] Sub GetKeyFromEvent(e As BANanoEvent) As String 
_B.getkeyfromevent=function(_e) {
var _cureve,_id;
// [1923]  Dim curEve As BANanoElement = BANAno.ToElement(e.OtherField( {925} )) 
_cureve=u(_e["currentTarget"]);
// [1924]  Dim id As String = curEve.GetField( {926} ).Result 
_id=_cureve.nodes[0]["key"];
// [1925]  Return id 
return _id;
// End Sub
};

// [1928] Sub GetEventTargetProperty(e As BANanoEvent, prop As String) As String 
_B.geteventtargetproperty=function(_e,_prop) {
var _sid;
// [1929]  Dim sid As String = e.OtherField( {927} ).GetField(prop).Result 
_sid=_e["target"][_prop];
// [1930]  Return sid 
return _sid;
// End Sub
};

// [1933] Sub CallComputed(methodName As String) As Object 
_B.callcomputed=function(_methodname) {
// [1934]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1935]  Return BOVue.GetField(methodName) 
return _B._bovue[_methodname];
// End Sub
};

// [1938] Sub CallMethod(methodName As String) 
_B.callmethod=function(_methodname) {
// [1939]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1940]  BOVue.RunMethod(methodName, Null) 
_B._bovue[_methodname]();
// End Sub
};

// [1943] Sub RunMethod(methodName As String, params As Object) As BANanoObject 
_B.runmethod=function(_methodname,_params) {
// [1944]  Return BOVue.RunMethod(methodName, params) 
return _B._bovue[_methodname](_params);
// End Sub
};

// [1947] Sub SetStateTrue(k As String) As BANanoVue 
_B.setstatetrue=function(_k) {
// [1948]  SetStateSingle(k,True) 
_B.setstatesingle(_k,true,_B);
// [1949]  Return Me 
return _B;
// End Sub
};

// [1952] Sub SetStateFalse(k As String) As BANanoVue 
_B.setstatefalse=function(_k) {
// [1953]  SetStateSingle(k,False) 
_B.setstatesingle(_k,false,_B);
// [1954]  Return Me 
return _B;
// End Sub
};

// [1957] Sub SetStateIncrement(k As String) As BANanoVue 
_B.setstateincrement=function(_k) {
var _oldv;
// [1958]  Dim oldV As String = GetState(k, {928} ) 
_oldv=_B.getstate(_k,"0",_B);
// [1959]  oldV = BANAno.parseInt(oldV) + 1 
_oldv=parseInt(_oldv)+1;
// [1960]  SetStateSingle(k, oldV) 
_B.setstatesingle(_k,_oldv,_B);
// [1961]  Return Me 
return _B;
// End Sub
};

// [1964] Sub SetStateDecrement(k As String) As BANanoVue 
_B.setstatedecrement=function(_k) {
var _oldv;
// [1965]  Dim oldV As String = GetState(k, {929} ) 
_oldv=_B.getstate(_k,"0",_B);
// [1966]  oldV = BANAno.parseInt(oldV) - 1 
_oldv=parseInt(_oldv)-1;
// [1967]  SetStateSingle(k, oldV) 
_B.setstatesingle(_k,_oldv,_B);
// [1968]  Return Me 
return _B;
// End Sub
};

// [1973] Sub SetStateSingle(k As String, v As Object) As BANanoVue 
_B.setstatesingle=function(_k,_v) {
var _opt;
// [1974]  Dim opt As Map = CreateMap() 
_opt={};
// [1975]  opt.Put(k, v) 
_opt[_k]=_v;
// [1976]  SetState(opt) 
_B.setstate(_opt,_B);
// [1977]  Return Me 
return _B;
// End Sub
};

// [1980] Sub ToggleState(stateName As String) As BANanoVue 
_B.togglestate=function(_statename) {
var _bcurrent;
// [1981]  Dim bcurrent As Boolean = GetState(stateName,False) 
_bcurrent=_B.getstate(_statename,false,_B);
// [1982]  bcurrent = Not(bcurrent) 
_bcurrent=!(_bcurrent);
// [1983]  SetStateSingle(stateName, bcurrent) 
_B.setstatesingle(_statename,_bcurrent,_B);
// [1984]  Return Me 
return _B;
// End Sub
};

// [1987] Sub ToggleNamedState(stateName As String, state1 As String, state2 As String) As BANanoVue 
_B.togglenamedstate=function(_statename,_state1,_state2) {
var _bcurrent,_opt;
// [1988]  Dim bcurrent As String = GetState(stateName, {930} ) 
_bcurrent=_B.getstate(_statename,"",_B);
// [1989]  If bcurrent.EqualsIgnoreCase(state1) Then 
if (_bcurrent.equalsIgnoreCase(_state1)) {
// [1990]  Dim opt As Map = CreateMap() 
_opt={};
// [1991]  opt.Put(stateName, state2) 
_opt[_statename]=_state2;
// [1992]  SetState(opt) 
_B.setstate(_opt,_B);
// [1993]  Else 
} else {
// [1994]  Dim opt As Map = CreateMap() 
_opt={};
// [1995]  opt.Put(stateName, state1) 
_opt[_statename]=_state1;
// [1996]  SetState(opt) 
_B.setstate(_opt,_B);
// [1997]  End If 
}
// [1998]  Return Me 
return _B;
// End Sub
};

// [2002] Sub StrParse(Delim As String, InputString As String) As List 
_B.strparse=function(_delim,_inputstring) {
var _outlist,_commaloc,_leftside,_rightside;
// [2003]  Dim OutList As List 
_outlist=[];
// [2004]  Dim CommaLoc As Int 
_commaloc=0;
// [2005]  OutList.Initialize 
_outlist.length=0;
// [2006]  OutList.clear 
_outlist.length=0;
// [2007]  CommaLoc=InputString.IndexOf(Delim) 
_commaloc=_inputstring.indexOf(_delim);
// [2008]  Do While CommaLoc >-1 
while (_commaloc>-1) {
// [2009]  Dim LeftSide As String 
_leftside="";
// [2010]  LeftSide= InputString.SubString2(0,CommaLoc) 
_leftside=_inputstring.substring(0,_commaloc);
// [2011]  Dim RightSide As String 
_rightside="";
// [2012]  RightSide= InputString.SubString(CommaLoc+1) 
_rightside=_inputstring.substring(_commaloc+1);
// [2013]  OutList.Add(LeftSide) 
_outlist.push(_leftside);
// [2014]  InputString=RightSide 
_inputstring=_rightside;
// [2015]  CommaLoc=InputString.IndexOf(Delim) 
_commaloc=_inputstring.indexOf(_delim);
// [2016]  Loop 
}
// [2017]  OutList.Add(InputString) 
_outlist.push(_inputstring);
// [2018]  Return OutList 
return _outlist;
// End Sub
};

// [2022] Sub MvField(sValue As String, iPosition As Int, Delimiter As String) As String 
_B.mvfield=function(_svalue,_iposition,_delimiter) {
var _xpos,_mvalues,_tvalues,_sb,_startcnt;
// [2023]  If sValue.Length = 0 Then Return {931} 
if (_svalue.length==0) { return "";}
// [2024]  Dim xPos As Int = sValue.IndexOf(Delimiter) 
_xpos=_svalue.indexOf(_delimiter);
// [2025]  If xPos = -1 Then Return sValue 
if (_xpos==-1) { return _svalue;}
// [2026]  Dim mValues As List = StrParse(Delimiter,sValue) 
_mvalues=_B.strparse(_delimiter,_svalue,_B);
// [2027]  Dim tValues As Int 
_tvalues=0;
// [2028]  tValues = mValues.size -1 
_tvalues=_mvalues.length-1;
// [2029]  Select Case iPosition 
switch ("" + _iposition) {
// [2030]  Case -1 
case "" + -1:
// [2031]  Return mValues.get(tValues) 
return _mvalues[_tvalues];
// [2032]  Case -2 
case "" + -2:
// [2033]  Return mValues.get(tValues - 1) 
return _mvalues[_tvalues-1];
// [2034]  Case -3 
case "" + -3:
// [2035]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2036]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2037]  Dim startcnt As Int 
_startcnt=0;
// [2038]  sb.Append(mValues.Get(1)) 
_sb.append(_mvalues[1]);
// [2039]  For startcnt = 2 To tValues 
for (_startcnt=2;_startcnt<=_tvalues;_startcnt++) {
// [2040]  sb.Append(Delimiter) 
_sb.append(_delimiter);
// [2041]  sb.Append(mValues.get(startcnt)) 
_sb.append(_mvalues[_startcnt]);
// [2042]  Next 
}
// [2043]  Return sb.tostring 
return _sb.toString();
// [2044]  Case Else 
default:
// [2045]  iPosition = iPosition - 1 
_iposition=_iposition-1;
// [2046]  If iPosition <= -1 Then 
if (_iposition<=-1) {
// [2047]  Return mValues.get(tValues) 
return _mvalues[_tvalues];
// [2048]  End If 
}
// [2049]  If iPosition > tValues Then 
if (_iposition>_tvalues) {
// [2050]  Return {932} 
return "";
// [2051]  End If 
}
// [2052]  Return mValues.get(iPosition) 
return _mvalues[_iposition];
// [2053]  End Select 
}
// End Sub
};

// [2058] Sub RandListValue(ListX As List) As Object 
_B.randlistvalue=function(_listx) {
// [2059]  ShuffleList(ListX) 
_B.shufflelist(_listx,_B);
// [2060]  Return ListX.Get(Rnd(0, ListX.Size -1)) 
return _listx[(Math.floor(Math.random() * (_listx.length-1 - 0) + 0))];
// End Sub
};

// [2064] Sub RamoveFromList(listX As List, item As String) 
_B.ramovefromlist=function(_listx,_item) {
var _li;
// [2065]  Dim li As Int = listX.IndexOf(item) 
_li=_listx.indexOf(_item);
// [2066]  If li >= 0 Then listX.RemoveAt(li) 
if (_li>=0) {_listx.splice(_li,1);}
// End Sub
};

// [2069] Sub ShuffleList(pl As List) As List 
_B.shufflelist=function(_pl) {
var _i,_j,_k;
// [2070]  For i = pl.Size - 1 To 0 Step -1 
for (_i=_pl.length-1;_i>=0;_i-=1) {
// [2071]  Dim j As Int 
_j=0;
// [2072]  Dim k As Object 
_k={};
// [2073]  j = Rnd(0, i + 1) 
_j=(Math.floor(Math.random() * (_i+1 - 0) + 0));
// [2074]  k = pl.Get(j) 
_k=_pl[_j];
// [2075]  pl.Set(j,pl.Get(i)) 
_pl[_j]=_pl[_i];
// [2076]  pl.Set(i,k) 
_pl[_i]=_k;
// [2077]  Next 
}
// [2078]  Return pl 
return _pl;
// End Sub
};

// [2083] Sub StateExists(stateName As String) As Boolean 
_B.stateexists=function(_statename) {
// [2084]  stateName = stateName.tolowercase 
_statename=_statename.toLowerCase();
// [2085]  Return data.ContainsKey(stateName) 
return (_statename in _B._data);
// End Sub
};

// [2089] Sub SetFontFamily(ff As Object) 
_B.setfontfamily=function(_ff) {
// [2090]  body.SetStyle(BANAno.ToJson(CreateMap( {933} : ff))) 
_B._body.css(JSON.parse(JSON.stringify({"font-family":_ff})));
// End Sub
};

// [2094] Sub SetCoverImage(imgURL As String) 
_B.setcoverimage=function(_imgurl) {
var _opt,_sjson;
// [2095]  Dim opt As Map = CreateMap() 
_opt={};
// [2096]  If imgURL = {934} Then 
if (_imgurl=="none") {
// [2097]  opt.Put( {935} , {936} ) 
_opt["background-image"]="none";
// [2098]  Else 
} else {
// [2105]  opt.Put( {946} , {18} ) 
_opt["background"]="url('" + _imgurl + "')";
// [2106]  opt.Put( {947} , {948} ) 
_opt["position"]="absolute";
// [2107]  opt.Put( {949} , {950} ) 
_opt["height"]="100%";
// [2108]  opt.Put( {951} , {952} ) 
_opt["width"]="100%";
// [2109]  opt.Put( {953} , {954} ) 
_opt["top"]="0";
// [2110]  opt.Put( {955} , {956} ) 
_opt["bottom"]="0";
// [2111]  opt.Put( {957} , {958} ) 
_opt["right"]="0";
// [2112]  opt.Put( {959} , {960} ) 
_opt["left"]="0";
// [2113]  opt.Put( {961} , {962} ) 
_opt["z-index"]="0";
// [2114]  End If 
}
// [2115]  Dim sjson As String = BANAno.ToJson(opt) 
_sjson=JSON.stringify(_opt);
// [2116]  body.SetStyle(sjson) 
_B._body.css(JSON.parse(_sjson));
// End Sub
};

// [2120] Sub SetTemplate(tmp As String) 
_B.settemplate=function(_tmp) {
// [2121]  Template.SetText(tmp) 
_B._template.settext(_tmp);
// End Sub
};

// [2125] Sub Use(bo As BANanoObject) 
_B.use=function(_bo) {
// [2126]  BOVue.RunMethod( {963} , bo) 
_B._bovue["use"](_bo);
// End Sub
};

// [2130] Sub Use1(bo As BANanoObject, opt As Map) 
_B.use1=function(_bo,_opt) {
// [2131]  BOVue.RunMethod( {964} , Array(bo, opt)) 
_B._bovue["use"](_bo,_opt);
// End Sub
};

// [2146] Sub UX() 
_B.ux=function() {
var _tmp,_ropt,_router,_dkey,_rkey;
// [2147]  Dim tmp As String = Template.tostring 
_tmp=_B._template.tostring();
// [2148]  GetTemplate = tmp 
_B._gettemplate=_tmp;
// [2149]  If routes.Size > 0 Then 
if (_B._routes.length>0) {
// [2150]  Dim ropt As Map = CreateMap() 
_ropt={};
// [2151]  ropt.Put( {968} , {969} ) 
_ropt["mode"]="history";
// [2152]  ropt.Put( {970} , routes) 
_ropt["routes"]=_B._routes;
// [2153]  Dim router As BANanoObject 
_router=null;
// [2154]  router.Initialize2( {971} , Array(ropt)) 
_router=new VueRouter(_ropt);
// [2155]  Options.Put( {972} , router) 
_B._options["router"]=_router;
// [2156]  End If 
}
// [2157]  Options.Put( {973} , {974} ) 
_B._options["el"]="#app";
// [2158]  If data.Size > 0 Then Options.put( {975} , data) 
if (Object.keys(_B._data).length>0) {_B._options["data"]=_B._data;}
// [2159]  If methods.Size > 0 Then Options.Put( {976} , methods) 
if (Object.keys(_B._methods).length>0) {_B._options["methods"]=_B._methods;}
// [2160]  If computed.Size > 0 Then Options.Put( {977} , computed) 
if (Object.keys(_B._computed).length>0) {_B._options["computed"]=_B._computed;}
// [2161]  If watches.Size > 0 Then Options.Put( {978} , watches) 
if (Object.keys(_B._watches).length>0) {_B._options["watch"]=_B._watches;}
// [2162]  If components.Size > 0 Then Options.Put( {979} , components) 
if (Object.keys(_B._components).length>0) {_B._options["components"]=_B._components;}
// [2163]  If updated <> Null Then Options.Put( {980} , updated) 
if (_B._updated!=null) {_B._options["updated"]=_B._updated;}
// [2164]  If destroyed <> Null Then Options.Put( {981} , destroyed) 
if (_B._destroyed!=null) {_B._options["destroyed"]=_B._destroyed;}
// [2165]  If mounted <> Null Then Options.Put( {982} , mounted) 
if (_B._mounted!=null) {_B._options["mounted"]=_B._mounted;}
// [2166]  If beforeCreate <> Null Then Options.Put( {983} , beforeCreate) 
if (_B._beforecreate!=null) {_B._options["beforeCreate"]=_B._beforecreate;}
// [2167]  If created <> Null Then Options.Put( {984} , created) 
if (_B._created!=null) {_B._options["created"]=_B._created;}
// [2168]  If beforeMount <> Null Then Options.Put( {985} , beforeMount) 
if (_B._beforemount!=null) {_B._options["beforeMount"]=_B._beforemount;}
// [2169]  If beforeUpdate <> Null Then Options.Put( {986} , beforeUpdate) 
if (_B._beforeupdate!=null) {_B._options["beforeUpdate"]=_B._beforeupdate;}
// [2170]  If activated <> Null Then Options.Put( {987} , activated) 
if (_B._activated!=null) {_B._options["activated"]=_B._activated;}
// [2171]  If deactivated <> Null Then Options.Put( {988} , deactivated) 
if (_B._deactivated!=null) {_B._options["deactivated"]=_B._deactivated;}
// [2172]  If beforeDestroy <> Null Then Options.Put( {989} , beforeDestroy) 
if (_B._beforedestroy!=null) {_B._options["beforeDestroy"]=_B._beforedestroy;}
// [2173]  Options.Put( {990} , tmp) 
_B._options["template"]=_tmp;
// [2174]  BOVue.Initialize2( {991} , Options) 
_B._bovue=new Vue(_B._options);
// [2176]  Dim dKey As String = {992} 
_dkey="$data";
// [2177]  data = BOVue.GetField(dKey).Result 
_B._data=_B._bovue[_dkey];
// [2179]  Dim rKey As String = {993} 
_rkey="$refs";
// [2180]  refs = BOVue.GetField(rKey).result 
_B._refs=_B._bovue[_rkey];
// End Sub
};

// [2183] Sub ForceUpdate 
_B.forceupdate=function() {
var _fu,_dkey,_rkey;
// [2184]  Dim fu As String = {994} 
_fu="$forceUpdate";
// [2185]  BOVue.RunMethod(fu, Null) 
_B._bovue[_fu]();
// [2187]  Dim dKey As String = {995} 
_dkey="$data";
// [2188]  data = BOVue.GetField(dKey).Result 
_B._data=_B._bovue[_dkey];
// [2190]  Dim rKey As String = {996} 
_rkey="$refs";
// [2191]  refs = BOVue.GetField(rKey) 
_B._refs=_B._bovue[_rkey];
// End Sub
};

// [2195] Sub SetMounted(module As Object, methodName As String) As BANanoVue 
_B.setmounted=function(_module,_methodname) {
// [2196]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2197]  mounted = BANAno.CallBack(module, methodName, Null) 
_B._mounted=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2198]  Return Me 
return _B;
// End Sub
};

// [2203] Sub SetDestroyed(module As Object, methodName As String) As BANanoVue 
_B.setdestroyed=function(_module,_methodname) {
// [2204]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2205]  destroyed = BANAno.CallBack(module, methodName, Null) 
_B._destroyed=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2206]  Return Me 
return _B;
// End Sub
};

// [2211] Sub SetActivated(module As Object, methodName As String) As BANanoVue 
_B.setactivated=function(_module,_methodname) {
// [2212]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2213]  activated = BANAno.CallBack(module, methodName, Null) 
_B._activated=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2214]  Return Me 
return _B;
// End Sub
};

// [2219] Sub SetDeActivated(module As Object, methodName As String) As BANanoVue 
_B.setdeactivated=function(_module,_methodname) {
// [2220]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2221]  deactivated = BANAno.CallBack(module, methodName, Null) 
_B._deactivated=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2222]  Return Me 
return _B;
// End Sub
};

// [2227] Sub SetUpdated(module As Object, methodName As String) As BANanoVue 
_B.setupdated=function(_module,_methodname) {
// [2228]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2229]  updated = BANAno.CallBack(module, methodName, Null) 
_B._updated=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2230]  Return Me 
return _B;
// End Sub
};

// [2234] Sub SetBeforeMount(module As Object, methodName As String) As BANanoVue 
_B.setbeforemount=function(_module,_methodname) {
// [2235]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2236]  beforeMount = BANAno.CallBack(module, methodName, Null) 
_B._beforemount=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2237]  Return Me 
return _B;
// End Sub
};

// [2241] Sub SetBeforeUpdate(module As Object, methodName As String) As BANanoVue 
_B.setbeforeupdate=function(_module,_methodname) {
// [2242]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2243]  beforeMount = BANAno.CallBack(module, methodName, Null) 
_B._beforemount=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2244]  Return Me 
return _B;
// End Sub
};

// [2248] Sub SetBeforeDestroy(module As Object, methodName As String) As BANanoVue 
_B.setbeforedestroy=function(_module,_methodname) {
// [2249]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2250]  beforeDestroy = BANAno.CallBack(module, methodName, Null) 
_B._beforedestroy=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2251]  Return Me 
return _B;
// End Sub
};

// [2256] Sub SetBeforeCreate(module As Object, methodName As String) As BANanoVue 
_B.setbeforecreate=function(_module,_methodname) {
// [2257]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2258]  beforeCreate = BANAno.CallBack(module, methodName, Null) 
_B._beforecreate=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2259]  Return Me 
return _B;
// End Sub
};

// [2264] Sub SetCreated(module As Object, methodName As String) As BANanoVue 
_B.setcreated=function(_module,_methodname) {
// [2265]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2266]  created = BANAno.CallBack(module, methodName, Null) 
_B._created=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2267]  Return Me 
return _B;
// End Sub
};

// [2271] Sub SetMethod(module As Object, methodName As String) As BANanoVue 
_B.setmethod=function(_module,_methodname) {
var _e,_cb;
// [2272]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2273]  If SubExists(module, methodName) Then 
if ((typeof _module[(_methodname).toLowerCase()]==="function")) {
// [2274]  Dim e As BANanoEvent 
_e=null;
// [2275]  Dim cb As BANanoObject = BANAno.CallBack(module, methodName, Array(e)) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [2276]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [2277]  End If 
}
// [2278]  Return Me 
return _B;
// End Sub
};

// [2281] Sub SetCallBack(methodName As String, cb As BANanoObject) 
_B.setcallback=function(_methodname,_cb) {
// [2282]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2283]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// End Sub
};

// [2287] Sub SetComputed(k As String, module As Object, methodName As String) As BANanoVue 
_B.setcomputed=function(_k,_module,_methodname) {
var _e,_cb;
// [2288]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2289]  If SubExists(module, methodName) Then 
if ((typeof _module[(_methodname).toLowerCase()]==="function")) {
// [2290]  k = k.tolowercase 
_k=_k.toLowerCase();
// [2291]  If data.ContainsKey(k) Then 
if ((_k in _B._data)) {
// [2292]  SetStateSingle(k, Null) 
_B.setstatesingle(_k,null,_B);
// [2293]  End If 
}
// [2294]  Dim e As BANanoEvent 
_e=null;
// [2295]  Dim cb As BANanoObject = BANAno.CallBack(module, methodName, Array(e)) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [2296]  computed.Put(k, cb) 
_B._computed[_k]=_cb;
// [2297]  End If 
}
// [2298]  Return Me 
return _B;
// End Sub
};

// [2301] Sub SetNextTick(module As Object, methodName As String) As BANanoVue 
_B.setnexttick=function(_module,_methodname) {
var _cb;
// [2302]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [2303]  Dim cb As BANanoObject = BANAno.CallBack(module, methodName, Null) 
_cb=function() {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_B)};};
// [2304]  BOVue.RunMethod( {997} , cb) 
_B._bovue["nextTick"](_cb);
// [2305]  Return Me 
return _B;
// End Sub
};

// [2309] Sub SetWatch(k As String, bImmediate As Boolean, bDeep As Boolean, module As Object, methodName As String) As BANanoVue 
_B.setwatch=function(_k,_bimmediate,_bdeep,_module,_methodname) {
var _newval,_cb,_deepit;
// [2310]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [2311]  If SubExists(module, methodName) Then 
if ((typeof _module[(_methodname).toLowerCase()]==="function")) {
// [2312]  k = k.tolowercase 
_k=_k.toLowerCase();
// [2313]  If data.ContainsKey(k) Then 
if ((_k in _B._data)) {
// [2314]  SetStateSingle(k, Null) 
_B.setstatesingle(_k,null,_B);
// [2315]  End If 
}
// [2316]  Dim newVal As Object 
_newval={};
// [2317]  Dim cb As BANanoObject = BANAno.CallBack(module, methodName, Array(newVal)) 
_cb=function(_newval) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_newval,_B)};};
// [2318]  Dim deepit As Map = CreateMap() 
_deepit={};
// [2319]  deepit.Put( {998} , methodName) 
_deepit["handler"]=_methodname;
// [2320]  deepit.Put( {999} , bDeep) 
_deepit["deep"]=_bdeep;
// [2321]  deepit.Put( {1000} , bImmediate) 
_deepit["immediate"]=_bimmediate;
// [2322]  watches.Put(k, deepit) 
_B._watches[_k]=_deepit;
// [2323]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [2324]  End If 
}
// [2325]  Return Me 
return _B;
// End Sub
};

// [2329] Sub SetStateMap(mapKey As String, mapValues As Map) As BANanoVue 
_B.setstatemap=function(_mapkey,_mapvalues) {
var _opt;
// [2330]  Dim opt As Map = CreateMap() 
_opt={};
// [2331]  opt.Put(mapKey, mapValues) 
_opt[_mapkey]=_mapvalues;
// [2332]  SetState(opt) 
_B.setstate(_opt,_B);
// [2333]  Return Me 
return _B;
// End Sub
};

// [2337] Sub SetStateList(mapKey As String, mapValues As List) As BANanoVue 
_B.setstatelist=function(_mapkey,_mapvalues) {
var _opt;
// [2338]  Dim opt As Map = CreateMap() 
_opt={};
// [2339]  opt.Put(mapKey, mapValues) 
_opt[_mapkey]=_mapvalues;
// [2340]  SetState(opt) 
_B.setstate(_opt,_B);
// [2341]  Return Me 
return _B;
// End Sub
};

// [2344] Sub SetStateListValues(mapValues As List) As BANanoVue 
_B.setstatelistvalues=function(_mapvalues) {
var _lstvalue,_opt;
// [2345]  For Each lstValue As String In mapValues 
for (var _lstvalueindex=0;_lstvalueindex<_mapvalues.length;_lstvalueindex++) {
_lstvalue=_mapvalues[_lstvalueindex];
// [2346]  Dim opt As Map = CreateMap() 
_opt={};
// [2347]  opt.Put(lstValue, {1001} ) 
_opt[_lstvalue]="";
// [2348]  SetState(opt) 
_B.setstate(_opt,_B);
// [2349]  Next 
}
// [2350]  Return Me 
return _B;
// End Sub
};

// [2354] Sub SetState(m As Map) As BANanoVue 
_B.setstate=function(_m) {
var _k,_v;
// [2355]  Try 
try {
// [2356]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [2357]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [2358]  k = k.tolowercase 
_k=_k.toLowerCase();
// [2359]  data.Put(k, v) 
_B._data[_k]=_v;
// [2360]  Next 
}
// [2361]  Catch 
} catch(err) {
// [2362]  Log(LastException) 
console.log(err);
// [2363]  End Try 
}
// [2364]  Return Me 
return _B;
// End Sub
};

// [2368] Sub HasState(k As String) As Boolean 
_B.hasstate=function(_k) {
// [2369]  Return data.ContainsKey(k) 
return (_k in _B._data);
// End Sub
};

// [2372] Sub GetStates(lst As List) As Map 
_B.getstates=function(_lst) {
var _sm,_lstrec,_state;
// [2373]  Dim sm As Map = CreateMap() 
_sm={};
// [2374]  For Each lstrec As String In lst 
for (var _lstrecindex=0;_lstrecindex<_lst.length;_lstrecindex++) {
_lstrec=_lst[_lstrecindex];
// [2375]  lstrec = lstrec.tolowercase 
_lstrec=_lstrec.toLowerCase();
// [2376]  Dim state As Object = GetState(lstrec, Null) 
_state=_B.getstate(_lstrec,null,_B);
// [2377]  sm.Put(lstrec, state) 
_sm[_lstrec]=_state;
// [2378]  Next 
}
// [2379]  Return sm 
return _sm;
// End Sub
};

// [2396] Sub GetState(k As String, v As Object) As Object 
_B.getstate=function(_k,_v) {
var _out;
// [2397]  k = k.tolowercase 
_k=_k.toLowerCase();
// [2398]  If data.ContainsKey(k) Then 
if ((_k in _B._data)) {
// [2399]  Dim out As Object = data.GetDefault(k,v) 
_out=(_B._data[_k] || _v);
// [2400]  Return out 
return _out;
// [2401]  Else 
} else {
// [2402]  Log( {1003} & k) 
console.log("GetState: First set the v-model for "+_k);
// [2403]  Return {1004} 
return "";
// [2404]  End If 
}
// End Sub
};

// [2407] Sub CreateTag(id As String, tag As String) As VMElement 
_B.createtag=function(_id,_tag) {
var _el;
// [2408]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2409]  el.Initialize(Me,id).SetTag(tag) 
_el.initialize(_B,_id).settag(_tag);
// [2410]  Return el 
return _el;
// End Sub
};

// [2413] Sub CreateDiv(id As String) As VMElement 
_B.creatediv=function(_id) {
var _el;
// [2414]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2415]  el.Initialize(Me,id).SetTag( {1005} ) 
_el.initialize(_B,_id).settag("div");
// [2416]  Return el 
return _el;
// End Sub
};

// [2419] Sub CreateSPAN(id As String) As VMElement 
_B.createspan=function(_id) {
var _el;
// [2420]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2421]  el.Initialize(Me,id).SetTag( {1006} ) 
_el.initialize(_B,_id).settag("span");
// [2422]  Return el 
return _el;
// End Sub
};

// [2425] Sub CreateUL(id As String) As VMElement 
_B.createul=function(_id) {
var _el;
// [2426]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2427]  el.Initialize(Me,id).SetTag( {1007} ) 
_el.initialize(_B,_id).settag("ul");
// [2428]  Return el 
return _el;
// End Sub
};

// [2431] Sub CreateLI(id As String) As VMElement 
_B.createli=function(_id) {
var _el;
// [2432]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2433]  el.Initialize(Me,id).SetTag( {1008} ) 
_el.initialize(_B,_id).settag("li");
// [2434]  Return el 
return _el;
// End Sub
};

// [2438] Sub CreateOL(id As String) As VMElement 
_B.createol=function(_id) {
var _el;
// [2439]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2440]  el.Initialize(Me,id).SetTag( {1009} ) 
_el.initialize(_B,_id).settag("ol");
// [2441]  Return el 
return _el;
// End Sub
};

// [2445] Sub CreateP(id As String) As VMElement 
_B.createp=function(_id) {
var _el;
// [2446]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2447]  el.Initialize(Me, id).SetTag( {1010} ) 
_el.initialize(_B,_id).settag("p");
// [2448]  Return el 
return _el;
// End Sub
};

// [2452] Sub CreateCSS As VMCSS 
_B.createcss=function() {
var _el;
// [2453]  Dim el As VMCSS 
_el= new banano_bananovuematerial_vmcss();
// [2454]  el.Initialize 
_el.initialize();
// [2455]  Return el 
return _el;
// End Sub
};

// [2458] Sub CreateKeepAlive(sid As String) As VMElement 
_B.createkeepalive=function(_sid) {
var _el;
// [2459]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2460]  el.Initialize(Me,sid).SetTag( {1011} ) 
_el.initialize(_B,_sid).settag("keep-alive");
// [2461]  Return el 
return _el;
// End Sub
};

// [2465] Sub CreateComponent(id As String) As VMElement 
_B.createcomponent=function(_id) {
var _el;
// [2466]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2467]  el.Initialize(Me, id).SetTag( {1012} ) 
_el.initialize(_B,_id).settag("component");
// [2468]  Return el 
return _el;
// End Sub
};

// [2471] Sub CreateIMG(img As String) As VMElement 
_B.createimg=function(_img) {
var _el;
// [2472]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2473]  el.Initialize(Me, img).SetTag( {1013} ) 
_el.initialize(_B,_img).settag("img");
// [2474]  Return el 
return _el;
// End Sub
};

// [2477] Sub CreateH1(id As String) As VMElement 
_B.createh1=function(_id) {
var _el;
// [2478]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2479]  el.Initialize(Me, id).SetTag( {1014} ) 
_el.initialize(_B,_id).settag("h1");
// [2480]  Return el 
return _el;
// End Sub
};

// [2483] Sub CreateH2(id As String) As VMElement 
_B.createh2=function(_id) {
var _el;
// [2484]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2485]  el.Initialize(Me, id).SetTag( {1015} ) 
_el.initialize(_B,_id).settag("h2");
// [2486]  Return el 
return _el;
// End Sub
};

// [2489] Sub CreateH3(id As String) As VMElement 
_B.createh3=function(_id) {
var _el;
// [2490]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2491]  el.Initialize(Me, id).SetTag( {1016} ) 
_el.initialize(_B,_id).settag("h3");
// [2492]  Return el 
return _el;
// End Sub
};

// [2495] Sub CreateH4(id As String) As VMElement 
_B.createh4=function(_id) {
var _el;
// [2496]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2497]  el.Initialize(Me, id).SetTag( {1017} ) 
_el.initialize(_B,_id).settag("h4");
// [2498]  Return el 
return _el;
// End Sub
};

// [2501] Sub CreateH5(id As String) As VMElement 
_B.createh5=function(_id) {
var _el;
// [2502]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2503]  el.Initialize(Me, id).SetTag( {1018} ) 
_el.initialize(_B,_id).settag("h5");
// [2504]  Return el 
return _el;
// End Sub
};

// [2507] Sub CreateH6(id As String) As VMElement 
_B.createh6=function(_id) {
var _el;
// [2508]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [2509]  el.Initialize(Me, id).SetTag( {1019} ) 
_el.initialize(_B,_id).settag("h6");
// [2510]  Return el 
return _el;
// End Sub
};

// [2514] public Sub AfterTodayRG(dVariance As Long) As String 
_B.aftertodayrg=function(_dvariance) {
// [2515]  If dVariance <= 0 Then 
if (_dvariance<=0) {
// [2516]  Return {1020} 
return "./assets/green.png";
// [2517]  else if dVariance > 0 Then 
} else if (_dvariance>0) {
// [2518]  Return {1021} 
return "./assets/red.png";
// [2519]  Else 
} else {
// [2520]  Return {1022} 
return "./assets/gray.png";
// [2521]  End If 
}
// End Sub
};

// [2525] Public Sub ProgressRAG(dVariance As Double) As String 
_B.progressrag=function(_dvariance) {
// [2526]  If dVariance < 0 Then 
if (_dvariance<0) {
// [2527]  Return {1023} 
return "./assets/red.png";
// [2528]  else if dVariance > 0 Then 
} else if (_dvariance>0) {
// [2529]  Return {1024} 
return "./assets/green.png";
// [2530]  else if dVariance = 0 Then 
} else if (_dvariance==0) {
// [2531]  Return {1025} 
return "./assets/orange.png";
// [2532]  Else 
} else {
// [2533]  Return {1026} 
return "./assets/gray.png";
// [2534]  End If 
}
// End Sub
};

// [2538] Public Sub ExpectedRAG(dValue As Double) As String 
_B.expectedrag=function(_dvalue) {
// [2539]  If dValue = 0 Then 
if (_dvalue==0) {
// [2540]  Return {1027} 
return "./assets/orange.png";
// [2541]  else if dValue > 0 Then 
} else if (_dvalue>0) {
// [2542]  Return {1028} 
return "./assets/red.png";
// [2543]  else if dValue < 0 Then 
} else if (_dvalue<0) {
// [2544]  Return {1029} 
return "./assets/green.png";
// [2545]  Else 
} else {
// [2546]  Return {1030} 
return "./assets/red.png";
// [2547]  End If 
}
// End Sub
};

// [2550] Public Sub ExpenditureRAG(dVariance As Double) As String 
_B.expenditurerag=function(_dvariance) {
// [2551]  If dVariance > 0 Then 
if (_dvariance>0) {
// [2552]  Return {1031} 
return "./assets/green.png";
// [2553]  else if dVariance < 0 Then 
} else if (_dvariance<0) {
// [2554]  Return {1032} 
return "./assets/red.png";
// [2555]  else if dVariance = 0 Then 
} else if (_dvariance==0) {
// [2556]  Return {1033} 
return "./assets/orange.png";
// [2557]  Else 
} else {
// [2558]  Return {1034} 
return "./assets/gray.png";
// [2559]  End If 
}
// End Sub
};

// [2562] Public Sub PriorityRAG(dValue As Int) As String 
_B.priorityrag=function(_dvalue) {
// [2563]  Select Case dValue 
switch ("" + _dvalue) {
// [2564]  Case 0 
case "" + 0:
// [2565]  Return {1035} 
return "./assets/green.png";
// [2566]  Case 1 
case "" + 1:
// [2567]  Return {1036} 
return "./assets/orange.png";
// [2568]  Case 2 
case "" + 2:
// [2569]  Return {1037} 
return "./assets/red.png";
// [2570]  Case Else 
default:
// [2571]  Return {1038} 
return "./assets/gray.png";
// [2572]  End Select 
}
// End Sub
};

// [2575] Public Sub RAG(dValue As Int) As String 
_B.rag=function(_dvalue) {
// [2576]  Select Case dValue 
switch ("" + _dvalue) {
// [2577]  Case 0 
case "" + 0:
// [2578]  Return {1039} 
return "./assets/red.png";
// [2579]  Case 1 
case "" + 1:
// [2580]  Return {1040} 
return "./assets/orange.png";
// [2581]  Case 2 
case "" + 2:
// [2582]  Return {1041} 
return "./assets/green.png";
// [2583]  Case Else 
default:
// [2584]  Return {1042} 
return "./assets/gray.png";
// [2585]  End Select 
}
// End Sub
};

// [2588] Public Sub GAR(dValue As Int) As String 
_B.gar=function(_dvalue) {
// [2589]  Select Case dValue 
switch ("" + _dvalue) {
// [2590]  Case 0 
case "" + 0:
// [2591]  Return {1043} 
return "./assets/green.png";
// [2592]  Case 1 
case "" + 1:
// [2593]  Return {1044} 
return "./assets/orange.png";
// [2594]  Case 2 
case "" + 2:
// [2595]  Return {1045} 
return "./assets/red.png";
// [2596]  Case Else 
default:
// [2597]  Return {1046} 
return "./assets/gray.png";
// [2598]  End Select 
}
// End Sub
};

// [2601] Public Sub StatusRAG(dValue As Int) As String 
_B.statusrag=function(_dvalue) {
// [2602]  Select Case dValue 
switch ("" + _dvalue) {
// [2603]  Case 0 
case "" + 0:
// [2604]  Return {1047} 
return "./assets/red.png";
// [2605]  Case 1 
case "" + 1:
// [2606]  Return {1048} 
return "./assets/orange.png";
// [2607]  Case 2 
case "" + 2:
// [2608]  Return {1049} 
return "./assets/green.png";
// [2609]  Case Else 
default:
// [2610]  Return {1050} 
return "./assets/gray.png";
// [2611]  End Select 
}
// End Sub
};

// [2614] Public Sub FaceRAG(dValue As Int) As String 
_B.facerag=function(_dvalue) {
// [2615]  Select Case dValue 
switch ("" + _dvalue) {
// [2616]  Case 0 
case "" + 0:
// [2617]  Return {1051} 
return "./assets/sadface.png";
// [2618]  Case 1 
case "" + 1:
// [2619]  Return {1052} 
return "./assets/neutralface.png";
// [2620]  Case 2 
case "" + 2:
// [2621]  Return {1053} 
return "./assets/happyface.png";
// [2622]  Case Else 
default:
// [2623]  Return {1054} 
return "./assets/sadface.png";
// [2624]  End Select 
}
// End Sub
};

// [2627] Public Sub FaceRG(dValue As Int) As String 
_B.facerg=function(_dvalue) {
// [2628]  Select Case dValue 
switch ("" + _dvalue) {
// [2629]  Case 0 
case "" + 0:
// [2630]  Return {1055} 
return "./assets/sadface.png";
// [2631]  Case 1 
case "" + 1:
// [2632]  Return {1056} 
return "./assets/happyface.png";
// [2633]  Case Else 
default:
// [2634]  Return {1057} 
return "./assets/sadface.png";
// [2635]  End Select 
}
// End Sub
};

// [2638] Public Sub FaceRG1(dValue As Int) As String 
_B.facerg1=function(_dvalue) {
// [2639]  Select Case dValue 
switch ("" + _dvalue) {
// [2640]  Case 1 
case "" + 1:
// [2641]  Return {1058} 
return "./assets/sadface.png";
// [2642]  Case 0 
case "" + 0:
// [2643]  Return {1059} 
return "./assets/happyface.png";
// [2644]  Case Else 
default:
// [2645]  Return {1060} 
return "./assets/sadface.png";
// [2646]  End Select 
}
// End Sub
};

// [2649] Public Sub FaceDone(dValue As Int) As String 
_B.facedone=function(_dvalue) {
// [2650]  Select Case dValue 
switch ("" + _dvalue) {
// [2651]  Case 100 
case "" + 100:
// [2652]  Return {1061} 
return "./assets/happyface.png";
// [2653]  Case Else 
default:
// [2654]  Return {1062} 
return "./assets/sadface.png";
// [2655]  End Select 
}
// End Sub
};

// [2658] Public Sub ProgressStatus(dValue As Int) As Int 
_B.progressstatus=function(_dvalue) {
// [2659]  Select Case dValue 
switch ("" + _dvalue) {
// [2660]  Case 100 
case "" + 100:
// [2661]  Return 1 
return 1;
// [2662]  Case Else 
default:
// [2663]  Return 0 
return 0;
// [2664]  End Select 
}
// End Sub
};

// [2667] Public Sub StatusRG(dValue As Int) As String 
_B.statusrg=function(_dvalue) {
// [2668]  Select Case dValue 
switch ("" + _dvalue) {
// [2669]  Case 0 
case "" + 0:
// [2670]  Return {1063} 
return "./assets/red.png";
// [2671]  Case 1 
case "" + 1:
// [2672]  Return {1064} 
return "./assets/green.png";
// [2673]  Case Else 
default:
// [2674]  Return {1065} 
return "./assets/red.png";
// [2675]  End Select 
}
// End Sub
};

}
 
function hexToRgb(hexCode) { 
    var patt = /^#([\da-fA-F]{2})([\da-fA-F]{2})([\da-fA-F]{2})$/; 
    var matches = patt.exec(hexCode); 
    var rgb = "rgb(" + parseInt(matches[1], 16) + "," + parseInt(matches[2], 16) + "," + parseInt(matches[3], 16) + ")"; 
    return rgb; 
} 
 
function hexToRgba(hexCode, opacity) { 
    var patt = /^#([\da-fA-F]{2})([\da-fA-F]{2})([\da-fA-F]{2})$/; 
    var matches = patt.exec(hexCode); 
    var rgb = "rgba(" + parseInt(matches[1], 16) + "," + parseInt(matches[2], 16) + "," + parseInt(matches[3], 16) + "," + opacity + ")"; 
    return rgb; 
} 

/* =========================== PDFColumns  =========================== */
function banano_bananovuematerial_pdfcolumns() {
var _B=this;
_B._columnsint=[];

_B._columngap=0;

_B._cols={};

_B._style= new banano_bananovuematerial_pdfstyle();

// [10] Public Sub Initialize As PDFColumns 
_B.initialize=function() {
// [11]  columnsInt.Initialize 
_B._columnsint.length=0;
// [12]  columnGap = 10 
_B._columngap=10;
// [13]  cols.Initialize 
_B._cols={};
// [14]  style.Initialize 
_B._style.initialize();
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub SetAbsolutePosition(x As Int, y As Int) As PDFColumns 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [20]  Dim opt As Map = CreateMap() 
_opt={};
// [21]  opt.Put( {0} , x) 
_opt["x"]=_x;
// [22]  opt.Put( {1} , y) 
_opt["y"]=_y;
// [23]  cols.Put( {2} , opt) 
_B._cols["absolutePosition"]=_opt;
// [24]  Return Me 
return _B;
// End Sub
};

// [28] Sub AddList(lst As PDFList) As PDFColumns 
_B.addlist=function(_lst) {
// [29]  columnsInt.Add(lst.Content) 
_B._columnsint.push(_lst.getcontent());
// [30]  Return Me 
return _B;
// End Sub
};

// [34] Sub AddStack(stack As PDFStack) As PDFColumns 
_B.addstack=function(_stack) {
// [35]  columnsInt.Add(stack.Content) 
_B._columnsint.push(_stack.getcontent());
// [36]  Return Me 
return _B;
// End Sub
};

// [40] Sub AddText(text As PDFText) As PDFColumns 
_B.addtext=function(_text) {
// [41]  columnsInt.Add(text.Content) 
_B._columnsint.push(_text.getcontent());
// [42]  Return Me 
return _B;
// End Sub
};

// [46] Sub AddColumns(colsx As PDFColumns) As PDFColumns 
_B.addcolumns=function(_colsx) {
// [47]  columnsInt.Add(colsx.Content) 
_B._columnsint.push(_colsx.getcontent());
// [48]  Return Me 
return _B;
// End Sub
};

// [52] Sub AddString(txt As String) As PDFColumns 
_B.addstring=function(_txt) {
// [53]  columnsInt.Add(txt) 
_B._columnsint.push(_txt);
// [54]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetPageBreakBefore As PDFColumns 
_B.setpagebreakbefore=function() {
// [59]  cols.Put( {3} , {4} ) 
_B._cols["pageBreak"]="before";
// [60]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetPageBreakAfter As PDFColumns 
_B.setpagebreakafter=function() {
// [65]  cols.Put( {5} , {6} ) 
_B._cols["pageBreak"]="after";
// [66]  Return Me 
return _B;
// End Sub
};

// [70] Sub getContent As Map 
_B.getcontent=function() {
// [71]  If columnsInt.Size > 0 Then 
if (_B._columnsint.length>0) {
// [72]  cols.Put( {7} , columnGap) 
_B._cols["columnGap"]=_B._columngap;
// [73]  cols.Put( {8} , columnsInt) 
_B._cols["columns"]=_B._columnsint;
// [74]  End If 
}
// [75]  style.Include(cols) 
_B._style.include(_B._cols);
// [76]  Return cols 
return _B._cols;
// End Sub
};

}
/* =========================== PDFFooter  =========================== */
function banano_bananovuematerial_pdffooter() {
var _B=this;
_B._leftpart= new banano_bananovuematerial_pdftext();

_B._rightpart= new banano_bananovuematerial_pdftext();

_B._cols=[];

_B._ftr={};

_B._style= new banano_bananovuematerial_pdfstyle();

// [10] Public Sub Initialize 
_B.initialize=function() {
// [11]  cols.Initialize 
_B._cols.length=0;
// [12]  LeftPart.Initialize 
_B._leftpart.initialize();
// [13]  RightPart.Initialize 
_B._rightpart.initialize();
// [14]  ftr.Initialize 
_B._ftr={};
// [15]  style.Initialize 
_B._style.initialize();
// End Sub
};

// [19] Sub getContent As Map 
_B.getcontent=function() {
// [20]  cols.Add(LeftPart.Content) 
_B._cols.push(_B._leftpart.getcontent());
// [21]  cols.Add(RightPart.Content) 
_B._cols.push(_B._rightpart.getcontent());
// [22]  ftr.Put( {0} , cols) 
_B._ftr["columns"]=_B._cols;
// [23]  style.Include(ftr) 
_B._style.include(_B._ftr);
// [24]  Return ftr 
return _B._ftr;
// End Sub
};

}
/* =========================== PDFImage  =========================== */
function banano_bananovuematerial_pdfimage() {
var _B=this;
_B._options={};

_B._image="";

_B._width=0;

_B._height=0;

_B._pagebreakafter=false;

_B._pagebreakbefore=false;

_B._pageorientation="";

_B._link="";

// [15] Public Sub Initialize As PDFImage 
_B.initialize=function() {
// [16]  options.Initialize 
_B._options={};
// [17]  image = Null 
_B._image=null;
// [18]  width = Null 
_B._width=null;
// [19]  height = Null 
_B._height=null;
// [20]  pageBreakAfter = Null 
_B._pagebreakafter=null;
// [21]  pageBreakBefore = Null 
_B._pagebreakbefore=null;
// [22]  pageOrientation = Null 
_B._pageorientation=null;
// [23]  link = Null 
_B._link=null;
// [24]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetLink(slink As String) As PDFImage 
_B.setlink=function(_slink) {
// [28]  If slink = {0} Then Return Me 
if (_slink=="") { return _B;}
// [29]  link = slink 
_B._link=_slink;
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetPageOrientation(spageOrientation As String) As PDFImage 
_B.setpageorientation=function(_spageorientation) {
// [34]  If spageOrientation = {1} Then Return Me 
if (_spageorientation=="") { return _B;}
// [35]  pageOrientation = spageOrientation 
_B._pageorientation=_spageorientation;
// [36]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetWidth(w As Int) As PDFImage 
_B.setwidth=function(_w) {
// [41]  If w = 0 Then Return Me 
if (_w==0) { return _B;}
// [42]  width = w 
_B._width=_w;
// [43]  Return Me 
return _B;
// End Sub
};

// [47] Sub SetHeight(h As Int) As PDFImage 
_B.setheight=function(_h) {
// [48]  If h = 0 Then Return Me 
if (_h==0) { return _B;}
// [49]  height = h 
_B._height=_h;
// [50]  Return Me 
return _B;
// End Sub
};

// [54] Sub SetImage(imgKey As String) As PDFImage 
_B.setimage=function(_imgkey) {
// [55]  If imgKey = {2} Then Return Me 
if (_imgkey=="") { return _B;}
// [56]  image = imgKey 
_B._image=_imgkey;
// [57]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetOpacity(opacity As Double) As PDFImage 
_B.setopacity=function(_opacity) {
// [62]  If opacity > 0 Then Return Me 
if (_opacity>0) { return _B;}
// [63]  options.Put( {3} , opacity) 
_B._options["opacity"]=_opacity;
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetAbsolutePosition(x As Int, y As Int) As PDFImage 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [69]  If x > 0 And y > 0 Then 
if (_x>0 && _y>0) {
// [70]  Dim opt As Map = CreateMap() 
_opt={};
// [71]  opt.Put( {4} , x) 
_opt["x"]=_x;
// [72]  opt.Put( {5} , y) 
_opt["y"]=_y;
// [73]  options.Put( {6} , opt) 
_B._options["absolutePosition"]=_opt;
// [74]  End If 
}
// [75]  Return Me 
return _B;
// End Sub
};

// [79] Sub SetFit(w As Int, h As Int) As PDFImage 
_B.setfit=function(_w,_h) {
var _lst;
// [80]  If w > 0 And h > 0 Then 
if (_w>0 && _h>0) {
// [81]  Dim lst As List 
_lst=[];
// [82]  lst.Initialize 
_lst.length=0;
// [83]  lst.Add(w) 
_lst.push(_w);
// [84]  lst.Add(h) 
_lst.push(_h);
// [85]  options.Put( {7} , lst) 
_B._options["fit"]=_lst;
// [86]  End If 
}
// [87]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetPageBreakBefore As PDFImage 
_B.setpagebreakbefore=function() {
// [92]  options.Put( {8} , {9} ) 
_B._options["pageBreak"]="before";
// [93]  Return Me 
return _B;
// End Sub
};

// [97] Sub SetPageBreakAfter As PDFImage 
_B.setpagebreakafter=function() {
// [98]  options.Put( {10} , {11} ) 
_B._options["pageBreak"]="after";
// [99]  Return Me 
return _B;
// End Sub
};

// [103] Sub getContent As Map 
_B.getcontent=function() {
// [104]  If image <> Null Then options.Put( {12} , image) 
if (_B._image!=null) {_B._options["image"]=_B._image;}
// [105]  If width <> Null Then options.Put( {13} , width) 
if (_B._width!=null) {_B._options["width"]=_B._width;}
// [106]  If height <> Null Then options.Put( {14} , height) 
if (_B._height!=null) {_B._options["height"]=_B._height;}
// [107]  If pageBreakAfter <> Null Then options.Put( {15} , {16} ) 
if (_B._pagebreakafter!=null) {_B._options["pageBreak"]="after";}
// [108]  If pageBreakBefore <> Null Then options.Put( {17} , {18} ) 
if (_B._pagebreakbefore!=null) {_B._options["pageBreak"]="before";}
// [109]  If link <> Null Then options.Put( {19} , link) 
if (_B._link!=null) {_B._options["link"]=_B._link;}
// [110]  Return options 
return _B._options;
// End Sub
};

// [115] Sub SetMargin(l As Int, t As Int, r As Int, b As Int) As PDFImage 
_B.setmargin=function(_l,_t,_r,_b) {
var _margin;
// [116]  If l = BANano.UNDEFINED Then l = 0 
if (_l=='undefined') {_l=0;}
// [117]  If t = BANano.UNDEFINED Then t = 0 
if (_t=='undefined') {_t=0;}
// [118]  If r = BANano.UNDEFINED Then r = 0 
if (_r=='undefined') {_r=0;}
// [119]  If b = BANano.UNDEFINED Then b = 0 
if (_b=='undefined') {_b=0;}
// [120]  Dim margin As List 
_margin=[];
// [121]  margin.Initialize 
_margin.length=0;
// [122]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [123]  options.Put( {20} , margin) 
_B._options["margin"]=_margin;
// [124]  Return Me 
return _B;
// End Sub
};

}
/* =========================== PDFList  =========================== */
function banano_bananovuematerial_pdflist() {
var _B=this;
_B._items=[];

_B._listx={};

_B._ltype="";

_B._reversed=false;

_B._start=0;

_B._color="";

_B._markercolor="";

_B._separator="";

_B._liststyle= new banano_bananovuematerial_liststyleobj();

_B._style="";

_B._pageorientation="";

// [20] Public Sub Initialize(listType As String) As PDFList 
_B.initialize=function(_listtype) {
// [21]  items.Initialize 
_B._items.length=0;
// [22]  listX.Initialize 
_B._listx={};
// [23]  lType = listType 
_B._ltype=_listtype;
// [24]  reversed = Null 
_B._reversed=null;
// [25]  start = Null 
_B._start=null;
// [26]  color = Null 
_B._color=null;
// [27]  markerColor = Null 
_B._markercolor=null;
// [28]  separator = Null 
_B._separator=null;
// [29]  ListStyle.Initialize 
_B._liststyle.initialize();
// [30]  ListStyle.square = {0} 
_B._liststyle._square="square";
// [31]  ListStyle.circle = {1} 
_B._liststyle._circle="circle";
// [32]  ListStyle.lowerAlpha = {2} 
_B._liststyle._loweralpha="lower-alpha";
// [33]  ListStyle.upperAlpha = {3} 
_B._liststyle._upperalpha="upper-alpha";
// [34]  ListStyle.upperRoman = {4} 
_B._liststyle._upperroman="upper-roman";
// [35]  ListStyle.lowerRoman = {5} 
_B._liststyle._lowerroman="lower-roman";
// [36]  ListStyle.none = {6} 
_B._liststyle._none="none";
// [37]  pageOrientation = Null 
_B._pageorientation=null;
// [38]  Style = Null 
_B._style=null;
// [39]  Return Me 
return _B;
// End Sub
};

// [42] Sub SetType(typeOfList As String) As PDFList 
_B.settype=function(_typeoflist) {
// [43]  If typeOfList = {7} Then Return Me 
if (_typeoflist=="") { return _B;}
// [44]  Style = typeOfList 
_B._style=_typeoflist;
// [45]  Return Me 
return _B;
// End Sub
};

// [49] Sub AddText(txt As PDFText) As PDFList 
_B.addtext=function(_txt) {
// [50]  items.Add(txt.Content) 
_B._items.push(_txt.getcontent());
// [51]  Return Me 
return _B;
// End Sub
};

// [54] Sub AddString(str As String) As PDFList 
_B.addstring=function(_str) {
// [55]  items.Add(str) 
_B._items.push(_str);
// [56]  Return Me 
return _B;
// End Sub
};

// [60] Sub AddItems(lst As List) 
_B.additems=function(_lst) {
var _item;
// [61]  For Each item As Object In lst 
for (var _itemindex=0;_itemindex<_lst.length;_itemindex++) {
_item=_lst[_itemindex];
// [62]  items.Add(item) 
_B._items.push(_item);
// [63]  Next 
}
// End Sub
};

// [68] Sub SetPageBreakBefore As PDFList 
_B.setpagebreakbefore=function() {
// [69]  listX.Put( {8} , {9} ) 
_B._listx["pageBreak"]="before";
// [70]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetPageBreakAfter As PDFList 
_B.setpagebreakafter=function() {
// [75]  listX.Put( {10} , {11} ) 
_B._listx["pageBreak"]="after";
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub getContent As Map 
_B.getcontent=function() {
// [81]  If reversed <> Null Then listX.Put( {12} , reversed) 
if (_B._reversed!=null) {_B._listx["reversed"]=_B._reversed;}
// [82]  If start <> Null Then listX.Put( {13} , start) 
if (_B._start!=null) {_B._listx["start"]=_B._start;}
// [83]  If Style <> Null Then listX.Put( {14} , Style) 
if (_B._style!=null) {_B._listx["type"]=_B._style;}
// [84]  If color <> Null Then listX.Put( {15} , color) 
if (_B._color!=null) {_B._listx["color"]=_B._color;}
// [85]  If markerColor <> Null Then listX.Put( {16} , markerColor) 
if (_B._markercolor!=null) {_B._listx["markerColor"]=_B._markercolor;}
// [86]  If separator <> Null Then listX.Put( {17} , separator) 
if (_B._separator!=null) {_B._listx["separator"]=_B._separator;}
// [87]  listX.Put(lType, items) 
_B._listx[_B._ltype]=_B._items;
// [88]  Return listX 
return _B._listx;
// End Sub
};

// [92] Sub SetPageOrientation(spageOrientation As String) As PDFList 
_B.setpageorientation=function(_spageorientation) {
// [93]  If spageOrientation = {18} Then Return Me 
if (_spageorientation=="") { return _B;}
// [94]  pageOrientation = spageOrientation 
_B._pageorientation=_spageorientation;
// [95]  Return Me 
return _B;
// End Sub
};

// [99] Sub SetAbsolutePosition(x As Int, y As Int) As PDFList 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [100]  Dim opt As Map = CreateMap() 
_opt={};
// [101]  opt.Put( {19} , x) 
_opt["x"]=_x;
// [102]  opt.Put( {20} , y) 
_opt["y"]=_y;
// [103]  listX.Put( {21} , opt) 
_B._listx["absolutePosition"]=_opt;
// [104]  Return Me 
return _B;
// End Sub
};

// [109] Sub SetMargin(l As Int, t As Int, r As Int, b As Int) As PDFList 
_B.setmargin=function(_l,_t,_r,_b) {
var _margin;
// [110]  If l = BANano.UNDEFINED Then l = 0 
if (_l=='undefined') {_l=0;}
// [111]  If t = BANano.UNDEFINED Then t = 0 
if (_t=='undefined') {_t=0;}
// [112]  If r = BANano.UNDEFINED Then r = 0 
if (_r=='undefined') {_r=0;}
// [113]  If b = BANano.UNDEFINED Then b = 0 
if (_b=='undefined') {_b=0;}
// [114]  Dim margin As List 
_margin=[];
// [115]  margin.Initialize 
_margin.length=0;
// [116]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [117]  listX.Put( {22} , margin) 
_B._listx["margin"]=_margin;
// [118]  Return Me 
return _B;
// End Sub
};

}
/* =========================== PDFMaker  =========================== */
function banano_bananovuematerial_pdfmaker() {
var _B=this;
_B._styles={};

_B._docdefinition={};

_B._content=[];

_B._defaultstyle= new banano_bananovuematerial_pdfstyle();

_B._pdf=null;

_B._pagesize="";

_B._pageorientation="";

_B._title="";

_B._author="";

_B._subject="";

_B._keywords="";

_B._creator="";

_B._producer="";

_B._info={};

_B._compress=false;

_B._security= new banano_bananovuematerial_pdfsecurity();

_B._parentid="";

_B._fname="";

_B._blobs={};

_B._numfiles=0;

_B._files={};

_B._images={};

_B._filekeys={};

_B._action="";

_B._eventhandler={};

_B._eventmethod="";

_B._mjson="";

_B._mjsonpretty="";

// [35] Public Sub Initialize As PDFMaker 
_B.initialize=function() {
// [36]  BANano.DependsOnAsset( {0} ) 
;
// [37]  BANano.DependsOnAsset( {1} ) 
;
// [38]  BANano.DependsOnAsset( {2} ) 
;
// [41]  pdf.Initialize( {4} ) 
_B._pdf=pdfMake;
// [42]  Blobs.Initialize 
_B._blobs={};
// [43]  styles.Initialize 
_B._styles={};
// [44]  docDefinition.Initialize 
_B._docdefinition={};
// [45]  content.Initialize 
_B._content.length=0;
// [46]  defaultStyle.Initialize 
_B._defaultstyle.initialize();
// [47]  defaultStyle.name = {5} 
_B._defaultstyle._name="defaultStyle";
// [48]  pageSize = Null 
_B._pagesize=null;
// [49]  pageOrientation = Null 
_B._pageorientation=null;
// [50]  title = Null 
_B._title=null;
// [51]  author = Null 
_B._author=null;
// [52]  subject = Null 
_B._subject=null;
// [53]  keywords = Null 
_B._keywords=null;
// [54]  creator = Null 
_B._creator=null;
// [55]  producer = Null 
_B._producer=null;
// [56]  info.Initialize 
_B._info={};
// [57]  compress = Null 
_B._compress=null;
// [58]  security.Initialize 
_B._security.initialize();
// [59]  files.Initialize 
_B._files={};
// [60]  images.Initialize 
_B._images={};
// [61]  fileKeys.Initialize 
_B._filekeys={};
// [62]  mJSON = {6} 
_B._mjson="";
// [63]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetDocumentProperties(docprops As Map) 
_B.setdocumentproperties=function(_docprops) {
// [69]  SetAuthor(docprops.Get( {8} )) 
_B.setauthor(_docprops["author"],_B);
// [70]  SetTitle(docprops.Get( {9} )) 
_B.settitle(_docprops["title"],_B);
// [71]  SetSubject(docprops.Get( {10} )) 
_B.setsubject(_docprops["subject"],_B);
// [72]  SetKeywords(docprops.Get( {11} )) 
_B.setkeywords(_docprops["keywords"],_B);
// [73]  SetCreator(docprops.Get( {12} )) 
_B.setcreator(_docprops["creator"],_B);
// [74]  SetProducer(docprops.Get( {13} )) 
_B.setproducer(_docprops["producer"],_B);
// [75]  SetCompress(docprops.Get( {14} )) 
_B.setcompress(_docprops["compress"],_B);
// [76]  security.Set( {15} , docprops.Get( {16} )) 
_B._security.set("userPassword",_docprops["userPassword"]);
// [77]  security.Set( {17} , docprops.Get( {18} )) 
_B._security.set("ownerPassword",_docprops["ownerPassword"]);
// [78]  security.Set( {19} , docprops.Get( {20} )) 
_B._security.set("modifying",_docprops["modifying"]);
// [79]  security.Set( {21} , docprops.Get( {22} )) 
_B._security.set("copying",_docprops["copying"]);
// [80]  security.Set( {23} , docprops.Get( {24} )) 
_B._security.set("annotating",_docprops["annotating"]);
// [81]  security.Set( {25} , docprops.Get( {26} )) 
_B._security.set("fillingForms",_docprops["fillingForms"]);
// [82]  security.Set( {27} , docprops.Get( {28} )) 
_B._security.set("contentAccessibility",_docprops["contentAccessibility"]);
// [83]  security.Set( {29} , docprops.Get( {30} )) 
_B._security.set("documentAssembly",_docprops["documentAssembly"]);
// [84]  security.Set( {31} , docprops.Get( {32} )) 
_B._security.set("printing",_docprops["printing"]);
// [85]  SetPageSize(docprops.Get( {33} )) 
_B.setpagesize(_docprops["pageSize"],_B);
// End Sub
};

// [90] Sub SetProgressCallback(module As Object, methodName As String, params As List) As PDFMaker 
_B.setprogresscallback=function(_module,_methodname,_params) {
var _cb;
// [91]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, params) 
_cb=function(_params) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_params,_B)};};
// [92]  docDefinition.Put( {34} , cb) 
_B._docdefinition["progressCallback"]=_cb;
// [93]  Return Me 
return _B;
// End Sub
};

// [97] Sub SetDefaultStyle(ds As Map) 
_B.setdefaultstyle=function(_ds) {
// [99]  If ds.IsInitialized Then 
if (true) {
// [100]  ds.Put( {36} , {37} ) 
_ds["name"]="defaultStyle";
// [101]  defaultStyle = GetStyle(ds) 
_B._defaultstyle=_B.getstyle(_ds,_B);
// [102]  End If 
}
// End Sub
};

// [105] Sub SetStyles(allStyles As Map) 
_B.setstyles=function(_allstyles) {
var _sk,_sv,_ts;
// [107]  For Each sk As String In allStyles.Keys 
var _skKeys = Object.keys(_allstyles);
for (var _skindex=0;_skindex<_skKeys.length;_skindex++) {
_sk=_skKeys[_skindex];
// [108]  Dim sv As Map = allStyles.Get(sk) 
_sv=_allstyles[_sk];
// [109]  Dim ts As PDFStyle = GetStyle(sv) 
_ts=_B.getstyle(_sv,_B);
// [110]  AddStyle(ts) 
_B.addstyle(_ts,_B);
// [111]  Next 
}
// End Sub
};

// [115] Sub GetStyle(rec As Map) As PDFStyle 
_B.getstyle=function(_rec) {
var _name,_bold,_italics,_alignment,_fontsize,_marginleft,_margintop,_marginright,_marginbottom,_noborder,_borderleft,_bordertop,_borderright,_borderbottom,_width,_height,_color,_fillcolor,_background,_opacity,_angle,_columngap,_decoration,_decorationstyle,_decorationcolor,_applymargins,_applyborders,_st;
// [117]  Dim name As String = rec.Get( {40} ) 
_name=_rec["name"];
// [118]  Dim bold As Boolean = rec.get( {41} ) 
_bold=_rec["bold"];
// [119]  Dim italics As Boolean = rec.Get( {42} ) 
_italics=_rec["italics"];
// [120]  Dim alignment As String = rec.Get( {43} ) 
_alignment=_rec["alignment"];
// [121]  Dim fontSize As Int = rec.Get( {44} ) 
_fontsize=_rec["fontSize"];
// [122]  Dim marginleft As Int = rec.Get( {45} ) 
_marginleft=_rec["marginleft"];
// [123]  Dim margintop As Int = rec.Get( {46} ) 
_margintop=_rec["margintop"];
// [124]  Dim marginright As Int = rec.Get( {47} ) 
_marginright=_rec["marginright"];
// [125]  Dim marginbottom As Int = rec.Get( {48} ) 
_marginbottom=_rec["marginbottom"];
// [126]  Dim noborder As Boolean = rec.Get( {49} ) 
_noborder=_rec["noborder"];
// [127]  Dim borderleft As Boolean = rec.get( {50} ) 
_borderleft=_rec["borderleft"];
// [128]  Dim bordertop As Boolean = rec.get( {51} ) 
_bordertop=_rec["bordertop"];
// [129]  Dim borderright As Boolean = rec.get( {52} ) 
_borderright=_rec["borderright"];
// [130]  Dim borderbottom As Boolean = rec.get( {53} ) 
_borderbottom=_rec["borderbottom"];
// [131]  Dim width As Int = rec.Get( {54} ) 
_width=_rec["width"];
// [132]  Dim height As Int = rec.get( {55} ) 
_height=_rec["height"];
// [133]  Dim color As String = rec.Get( {56} ) 
_color=_rec["color"];
// [134]  Dim fillColor As String = rec.get( {57} ) 
_fillcolor=_rec["fillColor"];
// [135]  Dim background As String = rec.Get( {58} ) 
_background=_rec["background"];
// [136]  Dim opacity As Double = rec.Get( {59} ) 
_opacity=_rec["opacity"];
// [137]  Dim angle As Int = rec.get( {60} ) 
_angle=_rec["angle"];
// [138]  Dim columnGap As Int = rec.get( {61} ) 
_columngap=_rec["columnGap"];
// [139]  Dim decoration As String = rec.Get( {62} ) 
_decoration=_rec["decoration"];
// [140]  If decoration = {63} Then decoration = {64} 
if (_decoration=="none") {_decoration="";}
// [141]  Dim decorationStyle As String = rec.Get( {65} ) 
_decorationstyle=_rec["decorationStyle"];
// [142]  If decorationStyle = {66} Then decorationStyle = {67} 
if (_decorationstyle=="none") {_decorationstyle="";}
// [143]  Dim decorationColor As String = rec.Get( {68} ) 
_decorationcolor=_rec["decorationColor"];
// [144]  Dim applymargins As Boolean = rec.Get( {69} ) 
_applymargins=_rec["applymargins"];
// [145]  Dim applyborders As Boolean = rec.Get( {70} ) 
_applyborders=_rec["applyborders"];
// [147]  Dim st As PDFStyle 
_st= new banano_bananovuematerial_pdfstyle();
// [148]  st.Initialize 
_st.initialize();
// [149]  st.SetName(name) 
_st.setname(_name);
// [150]  st.SetBold(bold) 
_st.setbold(_bold);
// [151]  st.SetItalics(italics) 
_st.setitalics(_italics);
// [152]  Select Case alignment 
switch ("" + _alignment) {
// [153]  Case {71} 
case "" + "alignmentRight":
// [154]  st.alignmentRight = True 
_st._alignmentright=true;
// [155]  Case {72} 
break;
case "" + "alignmentCenter":
// [156]  st.alignmentCenter = True 
_st._alignmentcenter=true;
// [157]  Case {73} 
break;
case "" + "alignmentJustify":
// [158]  st.alignmentJustify = True 
_st._alignmentjustify=true;
// [159]  End Select 
break;
}
// [160]  st.SetFontSize(fontSize) 
_st.setfontsize(_fontsize);
// [161]  If applymargins Then 
if (_applymargins) {
// [162]  st.SetMargin(marginleft, margintop, marginright, marginbottom) 
_st.setmargin(_marginleft,_margintop,_marginright,_marginbottom);
// [163]  End If 
}
// [164]  If noborder Then 
if (_noborder) {
// [165]  st.NoBorder 
_st.noborder();
// [166]  Else 
} else {
// [167]  If applyborders Then 
if (_applyborders) {
// [168]  st.SetBorder(borderleft, bordertop, borderright, borderbottom) 
_st.setborder(_borderleft,_bordertop,_borderright,_borderbottom);
// [169]  End If 
}
// [170]  End If 
}
// [171]  st.SetWidth(width) 
_st.setwidth(_width);
// [172]  st.setheight(height) 
_st.setheight(_height);
// [173]  st.SetColor(color) 
_st.setcolor(_color);
// [174]  st.SetFillColor(fillColor) 
_st.setfillcolor(_fillcolor);
// [175]  st.setbackground(background) 
_st.setbackground(_background);
// [176]  st.SetOpacity(opacity) 
_st.setopacity(_opacity);
// [177]  st.SetAngle(angle) 
_st.setangle(_angle);
// [178]  st.SetColumnGap(columnGap) 
_st.setcolumngap(_columngap);
// [179]  Return st 
return _st;
// End Sub
};

// [183] Sub SetProducer(sproducer As String) As PDFMaker 
_B.setproducer=function(_sproducer) {
// [185]  If sproducer = {75} Then Return Me 
if (_sproducer=="") { return _B;}
// [186]  producer = sproducer 
_B._producer=_sproducer;
// [187]  Return Me 
return _B;
// End Sub
};

// [190] Sub SetCompress(bcompress As Boolean) As PDFMaker 
_B.setcompress=function(_bcompress) {
// [192]  compress = bcompress 
_B._compress=_bcompress;
// [193]  Return Me 
return _B;
// End Sub
};

// [196] Sub SetCreator(screator As String) As PDFMaker 
_B.setcreator=function(_screator) {
// [198]  If screator = {78} Then Return Me 
if (_screator=="") { return _B;}
// [199]  creator = screator 
_B._creator=_screator;
// [200]  Return Me 
return _B;
// End Sub
};

// [203] Sub SetKeywords(skeywords As String) As PDFMaker 
_B.setkeywords=function(_skeywords) {
// [205]  If skeywords = {80} Then Return Me 
if (_skeywords=="") { return _B;}
// [206]  keywords = skeywords 
_B._keywords=_skeywords;
// [207]  Return Me 
return _B;
// End Sub
};

// [210] Sub SetSubject(ssubject As String) As PDFMaker 
_B.setsubject=function(_ssubject) {
// [212]  If ssubject = {82} Then Return Me 
if (_ssubject=="") { return _B;}
// [213]  subject = ssubject 
_B._subject=_ssubject;
// [214]  Return Me 
return _B;
// End Sub
};

// [217] Sub SetAuthor(sauthor As String) As PDFMaker 
_B.setauthor=function(_sauthor) {
// [219]  If sauthor = {84} Then Return Me 
if (_sauthor=="") { return _B;}
// [220]  author = sauthor 
_B._author=_sauthor;
// [221]  Return Me 
return _B;
// End Sub
};

// [224] Sub SetTitle(stitle As String) As PDFMaker 
_B.settitle=function(_stitle) {
// [226]  If stitle = {86} Then Return Me 
if (_stitle=="") { return _B;}
// [227]  title = stitle 
_B._title=_stitle;
// [228]  Return Me 
return _B;
// End Sub
};

// [231] Sub SetPageSize(spageSize As String) As PDFMaker 
_B.setpagesize=function(_spagesize) {
// [233]  If spageSize = {88} Then Return Me 
if (_spagesize=="") { return _B;}
// [234]  pageSize = spageSize 
_B._pagesize=_spagesize;
// [235]  Return Me 
return _B;
// End Sub
};

// [238] Sub SetPageOrientation(spageOrientation As String) As PDFMaker 
_B.setpageorientation=function(_spageorientation) {
// [240]  If spageOrientation = {90} Then Return Me 
if (_spageorientation=="") { return _B;}
// [241]  pageOrientation = spageOrientation 
_B._pageorientation=_spageorientation;
// [242]  Return Me 
return _B;
// End Sub
};

// [246] Sub Preload(key As String, url As String) As PDFMaker 
_B.preload=function(_key,_url) {
// [248]  files.Put(key, url) 
_B._files[_key]=_url;
// [249]  fileKeys.Put(url, key) 
_B._filekeys[_url]=_key;
// [251]  NumFiles = files.size 
_B._numfiles=Object.keys(_B._files).length;
// [252]  Return Me 
return _B;
// End Sub
};

// [256] Sub AddToC(toc As PDFToC) As PDFMaker 
_B.addtoc=function(_toc) {
// [258]  content.Add(toc.Content) 
_B._content.push(_toc.getcontent());
// [259]  Return Me 
return _B;
// End Sub
};

// [263] Sub CreateToC As PDFToC 
_B.createtoc=function() {
var _toc;
// [265]  Dim toc As PDFToC 
_toc= new banano_bananovuematerial_pdftoc();
// [266]  toc.Initialize 
_toc.initialize();
// [267]  Return toc 
return _toc;
// End Sub
};

// [271] Sub SetPageMargins(l As Int, t As Int, r As Int, b As Int) As PDFMaker 
_B.setpagemargins=function(_l,_t,_r,_b) {
var _margin;
// [273]  Dim margin As List 
_margin=[];
// [274]  margin.Initialize 
_margin.length=0;
// [275]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [276]  docDefinition.Put( {95} , margin) 
_B._docdefinition["pageMargins"]=_margin;
// [277]  Return Me 
return _B;
// End Sub
};

// [281] Sub CreateRow As PDFRow 
_B.createrow=function() {
var _row;
// [283]  Dim row As PDFRow 
_row= new banano_bananovuematerial_pdfrow();
// [284]  row.Initialize 
_row.initialize();
// [285]  Return row 
return _row;
// End Sub
};

// [289] Sub CreateTable As PDFTable 
_B.createtable=function() {
var _tbl;
// [291]  Dim tbl As PDFTable 
_tbl= new banano_bananovuematerial_pdftable();
// [292]  tbl.Initialize 
_tbl.initialize();
// [293]  Return tbl 
return _tbl;
// End Sub
};

// [297] Sub CreateImage(imgKey As String) As PDFImage 
_B.createimage=function(_imgkey) {
var _img;
// [299]  Dim img As PDFImage 
_img= new banano_bananovuematerial_pdfimage();
// [300]  img.Initialize 
_img.initialize();
// [301]  img.SetImage(imgKey) 
_img.setimage(_imgkey);
// [302]  Return img 
return _img;
// End Sub
};

// [306] Sub AddImage(img As PDFImage) As PDFMaker 
_B.addimage=function(_img) {
// [308]  content.Add(img.Content) 
_B._content.push(_img.getcontent());
// [309]  Return Me 
return _B;
// End Sub
};

// [313] Sub AddTable(tbl As PDFTable) As PDFMaker 
_B.addtable=function(_tbl) {
// [315]  content.Add(tbl.Content) 
_B._content.push(_tbl.getcontent());
// [316]  Return Me 
return _B;
// End Sub
};

// [319] Sub SetWaterMark(wm As PDFText) As PDFMaker 
_B.setwatermark=function(_wm) {
// [321]  docDefinition.Put( {102} , wm.Content) 
_B._docdefinition["watermark"]=_wm.getcontent();
// [322]  Return Me 
return _B;
// End Sub
};

// [326] Sub SetBackground(wm As PDFText) As PDFMaker 
_B.setbackground=function(_wm) {
// [328]  docDefinition.Put( {104} , wm.Content) 
_B._docdefinition["background"]=_wm.getcontent();
// [329]  Return Me 
return _B;
// End Sub
};

// [333] Sub SetHeader(hdr As PDFText) As PDFMaker 
_B.setheader=function(_hdr) {
// [335]  docDefinition.Put( {106} , hdr.content) 
_B._docdefinition["header"]=_hdr.getcontent();
// [336]  Return Me 
return _B;
// End Sub
};

// [340] Sub AddColumns(cols As PDFColumns) As PDFMaker 
_B.addcolumns=function(_cols) {
// [342]  content.Add(cols.content) 
_B._content.push(_cols.getcontent());
// [343]  Return Me 
return _B;
// End Sub
};

// [347] Sub AddFooter(ftr As PDFFooter) As PDFMaker 
_B.addfooter=function(_ftr) {
// [349]  docDefinition.Put( {109} , ftr.content) 
_B._docdefinition["footer"]=_ftr.getcontent();
// [350]  Return Me 
return _B;
// End Sub
};

// [354] Sub AddStack(stack As PDFStack) As PDFMaker 
_B.addstack=function(_stack) {
// [356]  content.Add(stack.Content) 
_B._content.push(_stack.getcontent());
// [357]  Return Me 
return _B;
// End Sub
};

// [361] Sub AddQRCode(qrCode As PDFQRCode) As PDFMaker 
_B.addqrcode=function(_qrcode) {
// [363]  content.Add(qrCode.Content) 
_B._content.push(_qrcode.getcontent());
// [364]  Return Me 
return _B;
// End Sub
};

// [368] Sub AddParagraphs(stack As PDFParagraphs) As PDFMaker 
_B.addparagraphs=function(_stack) {
// [370]  content.Add(stack.Content) 
_B._content.push(_stack.getcontent());
// [371]  Return Me 
return _B;
// End Sub
};

// [375] Sub AddString(txt As String) As PDFMaker 
_B.addstring=function(_txt) {
// [377]  content.Add(txt) 
_B._content.push(_txt);
// [378]  Return Me 
return _B;
// End Sub
};

// [382] Sub CreateQRCode As PDFQRCode 
_B.createqrcode=function() {
var _qrcode;
// [384]  Dim qrcode As PDFQRCode 
_qrcode= new banano_bananovuematerial_pdfqrcode();
// [385]  qrcode.Initialize 
_qrcode.initialize();
// [386]  Return qrcode 
return _qrcode;
// End Sub
};

// [390] Sub CreateStack As PDFStack 
_B.createstack=function() {
var _stack;
// [392]  Dim stack As PDFStack 
_stack= new banano_bananovuematerial_pdfstack();
// [393]  stack.Initialize 
_stack.initialize();
// [394]  Return stack 
return _stack;
// End Sub
};

// [398] Sub CreateParagraphs As PDFParagraphs 
_B.createparagraphs=function() {
var _stack;
// [400]  Dim stack As PDFParagraphs 
_stack= new banano_bananovuematerial_pdfparagraphs();
// [401]  stack.Initialize 
_stack.initialize();
// [402]  Return stack 
return _stack;
// End Sub
};

// [406] Sub CreateFooter As PDFFooter 
_B.createfooter=function() {
var _ftr;
// [408]  Dim ftr As PDFFooter 
_ftr= new banano_bananovuematerial_pdffooter();
// [409]  ftr.Initialize 
_ftr.initialize();
// [410]  Return ftr 
return _ftr;
// End Sub
};

// [414] Sub CreateList(typeOf As String) As PDFList 
_B.createlist=function(_typeof) {
var _lstof;
// [416]  Dim lstOf As PDFList 
_lstof= new banano_bananovuematerial_pdflist();
// [417]  lstOf.Initialize(typeOf) 
_lstof.initialize(_typeof);
// [418]  Return lstOf 
return _lstof;
// End Sub
};

// [422] Sub AddList(lstOf As PDFList) As PDFMaker 
_B.addlist=function(_lstof) {
// [424]  content.Add(lstOf.Content) 
_B._content.push(_lstof.getcontent());
// [425]  Return Me 
return _B;
// End Sub
};

// [429] Sub CreateColumns As PDFColumns 
_B.createcolumns=function() {
var _col;
// [431]  Dim col As PDFColumns 
_col= new banano_bananovuematerial_pdfcolumns();
// [432]  col.Initialize 
_col.initialize();
// [433]  Return col 
return _col;
// End Sub
};

// [437] Sub CreateStyle(name As String) As PDFStyle 
_B.createstyle=function(_name) {
var _style;
// [439]  Dim Style As PDFStyle 
_style= new banano_bananovuematerial_pdfstyle();
// [440]  Style.Initialize 
_style.initialize();
// [441]  Style.name = name 
_style._name=_name;
// [442]  Return Style 
return _style;
// End Sub
};

// [446] Sub CreateStyleOnly As PDFStyle 
_B.createstyleonly=function() {
var _stl;
// [448]  Dim stl As PDFStyle 
_stl= new banano_bananovuematerial_pdfstyle();
// [449]  stl.Initialize 
_stl.initialize();
// [450]  Return stl 
return _stl;
// End Sub
};

// [454] Sub CreateText(txt As String) As PDFText 
_B.createtext=function(_txt) {
var _cnt;
// [456]  Dim cnt As PDFText 
_cnt= new banano_bananovuematerial_pdftext();
// [457]  cnt.Initialize 
_cnt.initialize();
// [458]  cnt.Append(txt) 
_cnt.append(_txt);
// [459]  Return cnt 
return _cnt;
// End Sub
};

// [463] Sub AddStyle(style As PDFStyle) 
_B.addstyle=function(_style) {
var _name,_stylecontent;
// [465]  Dim name As String = style.name 
_name=_style._name;
// [466]  Dim stylecontent As Map = style.content 
_stylecontent=_style.getcontent();
// [467]  styles.Put(name, stylecontent) 
_B._styles[_name]=_stylecontent;
// End Sub
};

// [471] Sub AddText(currentContent As PDFText) 
_B.addtext=function(_currentcontent) {
var _text;
// [473]  Dim text As Map = currentContent.Content 
_text=_currentcontent.getcontent();
// [474]  content.Add(text) 
_B._content.push(_text);
// End Sub
};

// [478] Sub getJSON As String 
_B.getjson=function() {
// [480]  Return mJSON 
return _B._mjson;
// End Sub
};

// [483] Sub getJSONPretty As String 
_B.getjsonpretty=function() {
// [484]  Return mJSONPretty 
return _B._mjsonpretty;
// End Sub
};

// [488] Sub Download(fileName As String) 
_B.download=function(_filename) {
// [490]  fName = fileName 
_B._fname=_filename;
// [491]  action = {128} 
_B._action="download";
// [492]  Build 
_B.build(_B);
// End Sub
};

// [496] private Sub Build 
_B.build=function() {
var _k,_v;
// [498]  If pageSize <> Null Then docDefinition.Put( {130} , pageSize) 
if (_B._pagesize!=null) {_B._docdefinition["pageSize"]=_B._pagesize;}
// [499]  If pageOrientation <> Null Then docDefinition.Put( {131} , pageOrientation) 
if (_B._pageorientation!=null) {_B._docdefinition["pageOrientation"]=_B._pageorientation;}
// [500]  docDefinition.Put( {132} , content) 
_B._docdefinition["content"]=_B._content;
// [501]  docDefinition.Put( {133} , styles) 
_B._docdefinition["styles"]=_B._styles;
// [502]  If title <> Null Then info.Put( {134} , title) 
if (_B._title!=null) {_B._info["Title"]=_B._title;}
// [503]  If author <> Null Then info.Put( {135} , author) 
if (_B._author!=null) {_B._info["Author"]=_B._author;}
// [504]  If subject <> Null Then info.Put( {136} , subject) 
if (_B._subject!=null) {_B._info["Subject"]=_B._subject;}
// [505]  If keywords <> Null Then info.Put( {137} , keywords) 
if (_B._keywords!=null) {_B._info["Keywords"]=_B._keywords;}
// [506]  If creator <> Null Then info.Put( {138} , creator) 
if (_B._creator!=null) {_B._info["Creator"]=_B._creator;}
// [507]  If producer <> Null Then info.Put( {139} , producer) 
if (_B._producer!=null) {_B._info["Producer"]=_B._producer;}
// [508]  If info.Size > 0 Then docDefinition.Put( {140} , info) 
if (Object.keys(_B._info).length>0) {_B._docdefinition["info"]=_B._info;}
// [509]  If compress <> Null Then docDefinition.Put( {141} , compress) 
if (_B._compress!=null) {_B._docdefinition["compress"]=_B._compress;}
// [510]  If security.userPassword <> Null Then docDefinition.Put( {142} , security.userPassword) 
if (_B._security._userpassword!=null) {_B._docdefinition["userPassword"]=_B._security._userpassword;}
// [511]  If security.ownerPassword <> Null Then docDefinition.Put( {143} , security.ownerPassword) 
if (_B._security._ownerpassword!=null) {_B._docdefinition["ownerPassword"]=_B._security._ownerpassword;}
// [512]  docDefinition.Put( {144} , security.content) 
_B._docdefinition["permissions"]=_B._security.getcontent();
// [513]  docDefinition.Put( {145} , defaultStyle.content) 
_B._docdefinition["defaultStyle"]=_B._defaultstyle.getcontent();
// [514]  If files.Size > 0 Then 
if (Object.keys(_B._files).length>0) {
// [515]  For Each k As String In files.Keys 
var _kKeys = Object.keys(_B._files);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [517]  Dim v As String = files.Get(k) 
_v=_B._files[_k];
// [518]  GetFileFromServer(v) 
_B.getfilefromserver(_v,_B);
// [519]  Next 
}
// [520]  Else 
} else {
// [521]  FilesAreReady 
_B.filesareready(_B);
// [522]  End If 
}
// End Sub
};

// [526] Sub Print 
_B.print=function() {
// [528]  action = {147} 
_B._action="print";
// [529]  Build 
_B.build(_B);
// End Sub
};

// [533] Sub Open 
_B.open=function() {
// [535]  action = {149} 
_B._action="open";
// [536]  Build 
_B.build(_B);
// End Sub
};

// [541] private Sub GetFileFromServer(FileName As String) 
_B.getfilefromserver=function(_filename) {
var _response,_blob,_fetch1,_filereader,_event,_target,_dataurl;
// [543]  Dim Response As BANanoFetchResponse 
_response={};
// [544]  Dim Blob As BANanoObject 
_blob=null;
// [547]  Dim fetch1 As BANanoFetch 
_fetch1={};
// [548]  fetch1.Initialize(FileName, Null) 
_fetch1=fetch(_filename);
// [549]  fetch1.Then(Response) 
_fetch1.then(function(_response) {
// [551]  fetch1.Return(Response.Blob) 
return _response.blob();
// [552]  fetch1.Then(Blob) 
}).then(function(_blob) {
// [555]  Dim FileReader As BANanoObject 
_filereader=null;
// [556]  FileReader.Initialize2( {151} , Null) 
_filereader=new FileReader();
// [557]  Dim event As BANanoEvent 
_event=null;
// [559]  FileReader.AddEventListenerOpen( {152} , Array(event)) 
_filereader.onload=function(_event) {
// [561]  Dim Target As BANanoObject = event.OtherField( {153} ) 
_target=_event["target"];
// [562]  Dim DataUrl As String = Target.GetField( {154} ).Result 
_dataurl=_target["result"];
// [564]  Blobs.Put(FileName, DataUrl) 
_B._blobs[_filename]=_dataurl;
// [566]  If Blobs.Size = NumFiles Then 
if (Object.keys(_B._blobs).length==_B._numfiles) {
// [567]  FilesAreReady 
_B.filesareready(_B);
// [568]  End If 
}
// [570]  FileReader.CloseEventListener 
};
// [572]  FileReader.RunMethod( {155} , Blob) 
_filereader["readAsDataURL"](_blob);
// [573]  fetch1.End ' always end a fetch with this! 
});
// End Sub
};

// [577] private Sub forReading(data As Object) 
_B.forreading=function(_data) {
// [579]  BANano.CallSub(eventHandler, eventMethod, data) 
(function() {if (typeof _B._eventhandler[(_B._eventmethod).toLowerCase()]==="function") {var CSr = _B._eventhandler[(_B._eventmethod).toLowerCase()](_data,_B);if(CSr!=null) {return CSr}}})();
// End Sub
};

// [583] private Sub forUpload(data As Object) 
_B.forupload=function(_data) {
var _formdata;
// [585]  Dim formData As BANanoObject 
_formdata=null;
// [586]  formData.Initialize2( {158} ,Null) 
_formdata=new FormData();
// [587]  formData.RunMethod( {159} , Array( {160} , data, fName)) 
_formdata["append"]("upload",_data,_B._fname);
// [588]  BANano.CallSub(eventHandler, eventMethod, formData) 
(function() {if (typeof _B._eventhandler[(_B._eventmethod).toLowerCase()]==="function") {var CSr = _B._eventhandler[(_B._eventmethod).toLowerCase()](_formdata,_B);if(CSr!=null) {return CSr}}})();
// End Sub
};

// [592] private Sub FilesAreReady() 
_B.filesareready=function() {
var _k,_v,_dataurl,_data,_res,_prom;
// [593]  Try 
try {
// [595]  If files.Size > 0 Then 
if (Object.keys(_B._files).length>0) {
// [597]  For Each k As String In Blobs.Keys 
var _kKeys = Object.keys(_B._blobs);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [599]  Dim v As String = fileKeys.Get(k) 
_v=_B._filekeys[_k];
// [600]  Dim DataUrl As String = Blobs.Get(k) 
_dataurl=_B._blobs[_k];
// [601]  images.Put(v, DataUrl) 
_B._images[_v]=_dataurl;
// [602]  Next 
}
// [603]  If images.Size > 0 Then docDefinition.Put( {162} , images) 
if (Object.keys(_B._images).length>0) {_B._docdefinition["images"]=_B._images;}
// [604]  End If 
}
// [606]  mJSON = BANano.ToJson(docDefinition) 
_B._mjson=JSON.stringify(_B._docdefinition);
// [607]  mJSONPretty = BANano.RunJavascriptMethod( {163} , Array(docDefinition, Null, 4)) 
_B._mjsonpretty=BANanoExec("JSON.stringify", window, _B._docdefinition,null,4);
// [609]  Dim data As Object 
_data={};
// [610]  Dim res As BANanoObject 
_res=null;
// [611]  Dim prom As BANanoPromise 
_prom=null;
// [612]  Select Case action 
switch ("" + _B._action) {
// [613]  Case {164} 
case "" + "download":
// [614]  pdf.RunMethod( {165} , docDefinition).RunMethod( {166} , fName) 
_B._pdf["createPdf"](_B._docdefinition)["download"](_B._fname);
// [615]  Case {167} 
break;
case "" + "print":
// [616]  pdf.RunMethod( {168} , docDefinition).RunMethod( {169} , Null) 
_B._pdf["createPdf"](_B._docdefinition)["print"]();
// [617]  Case {170} 
break;
case "" + "open":
// [618]  pdf.RunMethod( {171} , docDefinition).RunMethod( {172} , Null) 
_B._pdf["createPdf"](_B._docdefinition)["open"]();
// [619]  Case {173} 
break;
case "" + "upload":
// [620]  res = pdf.RunMethod( {174} , docDefinition) 
_res=_B._pdf["createPdf"](_B._docdefinition);
// [621]  prom = res.RunMethod( {175} , data) 
_prom=_res["getBlob"](_data);
// [622]  prom.Then(data) 
_prom.then(function(_data) {
// [623]  BANano.CallSub(Me, {176} , data) 
(function() {if (typeof _B[("forUpload").toLowerCase()]==="function") {var CSr = _B[("forUpload").toLowerCase()](_data,_B);if(CSr!=null) {return CSr}}})();
// [624]  prom.End 
});
// [625]  Case {177} , {178} , {179} , {180} 
break;
case "" + "getDataUrl":
case "" + "getBlob":
case "" + "getBuffer":
case "" + "getBase64":
// [626]  res = pdf.RunMethod( {181} , docDefinition) 
_res=_B._pdf["createPdf"](_B._docdefinition);
// [627]  prom = res.RunMethod(action, data) 
_prom=_res[_B._action](_data);
// [628]  prom.Then(data) 
_prom.then(function(_data) {
// [629]  BANano.CallSub(Me, {182} , data) 
(function() {if (typeof _B[("forReading").toLowerCase()]==="function") {var CSr = _B[("forReading").toLowerCase()](_data,_B);if(CSr!=null) {return CSr}}})();
// [630]  prom.End 
});
// [631]  End Select 
break;
}
// [632]  Catch 
} catch(err) {
// [633]  Log(LastException) 
console.log(err);
// [634]  End Try 
}
// End Sub
};

// [639] Sub GetDataURL(module As Object, methodName As String) 
_B.getdataurl=function(_module,_methodname) {
// [641]  eventHandler = module 
_B._eventhandler=_module;
// [642]  eventMethod = methodName.tolowercase 
_B._eventmethod=_methodname.toLowerCase();
// [643]  action = {184} 
_B._action="getDataUrl";
// [644]  Build 
_B.build(_B);
// End Sub
};

// [648] Sub GetBlob(module As Object, methodName As String) 
_B.getblob=function(_module,_methodname) {
// [650]  eventHandler = module 
_B._eventhandler=_module;
// [651]  eventMethod = methodName.tolowercase 
_B._eventmethod=_methodname.toLowerCase();
// [652]  action = {186} 
_B._action="getBlob";
// [653]  Build 
_B.build(_B);
// End Sub
};

// [657] Sub GetBuffer(module As Object, methodName As String) 
_B.getbuffer=function(_module,_methodname) {
// [659]  eventHandler = module 
_B._eventhandler=_module;
// [660]  eventMethod = methodName.tolowercase 
_B._eventmethod=_methodname.toLowerCase();
// [661]  action = {188} 
_B._action="getBuffer";
// [662]  Build 
_B.build(_B);
// End Sub
};

// [666] Sub GetBase64(module As Object, methodName As String) 
_B.getbase64=function(_module,_methodname) {
// [668]  eventHandler = module 
_B._eventhandler=_module;
// [669]  eventMethod = methodName.tolowercase 
_B._eventmethod=_methodname.toLowerCase();
// [670]  action = {190} 
_B._action="getBase64";
// [671]  Build 
_B.build(_B);
// End Sub
};

// [675] Sub Upload(module As Object, methodName As String, fileName As String) 
_B.upload=function(_module,_methodname,_filename) {
// [676]  Log( {191} ) 
console.log("PDFMaker.Upload");
// [677]  eventHandler = module 
_B._eventhandler=_module;
// [678]  eventMethod = methodName.tolowercase 
_B._eventmethod=_methodname.toLowerCase();
// [679]  fName = fileName 
_B._fname=_filename;
// [680]  action = {192} 
_B._action="upload";
// [681]  Build 
_B.build(_B);
// End Sub
};

// [685] Sub GetFormData(data As Object, fileName As String) As BANanoObject 
_B.getformdata=function(_data,_filename) {
var _formdata;
// [687]  Dim formData As BANanoObject 
_formdata=null;
// [688]  formData.Initialize2( {194} ,Null) 
_formdata=new FormData();
// [689]  formData.RunMethod( {195} , Array( {196} , data, fileName)) 
_formdata["append"]("upload",_data,_filename);
// [690]  Return formData 
return _formdata;
// End Sub
};

// [693] Sub PageSizes As Map 
_B.pagesizes=function() {
var _ps,_m,_stritem;
// [694]  Dim ps As List 
_ps=[];
// [695]  ps.Initialize 
_ps.length=0;
// [696]  ps.Add( {197} ) 
_ps.push("4A0");
// [697]  ps.Add( {198} ) 
_ps.push("2A0");
// [698]  ps.Add( {199} ) 
_ps.push("A0");
// [699]  ps.Add( {200} ) 
_ps.push("A1");
// [700]  ps.Add( {201} ) 
_ps.push("A2");
// [701]  ps.Add( {202} ) 
_ps.push("A3");
// [702]  ps.Add( {203} ) 
_ps.push("A4");
// [703]  ps.Add( {204} ) 
_ps.push("A5");
// [704]  ps.Add( {205} ) 
_ps.push("A6");
// [705]  ps.Add( {206} ) 
_ps.push("A7");
// [706]  ps.Add( {207} ) 
_ps.push("A8");
// [707]  ps.Add( {208} ) 
_ps.push("A9");
// [708]  ps.Add( {209} ) 
_ps.push("A10");
// [709]  ps.Add( {210} ) 
_ps.push("B0");
// [710]  ps.Add( {211} ) 
_ps.push("B1");
// [711]  ps.Add( {212} ) 
_ps.push("B2");
// [712]  ps.Add( {213} ) 
_ps.push("B3");
// [713]  ps.Add( {214} ) 
_ps.push("B4");
// [714]  ps.Add( {215} ) 
_ps.push("B5");
// [715]  ps.Add( {216} ) 
_ps.push("B6");
// [716]  ps.Add( {217} ) 
_ps.push("B7");
// [717]  ps.Add( {218} ) 
_ps.push("B8");
// [718]  ps.Add( {219} ) 
_ps.push("B9");
// [719]  ps.Add( {220} ) 
_ps.push("B10");
// [720]  ps.Add( {221} ) 
_ps.push("C0");
// [721]  ps.Add( {222} ) 
_ps.push("C1");
// [722]  ps.Add( {223} ) 
_ps.push("C2");
// [723]  ps.Add( {224} ) 
_ps.push("C3");
// [724]  ps.Add( {225} ) 
_ps.push("C4");
// [725]  ps.Add( {226} ) 
_ps.push("C5");
// [726]  ps.Add( {227} ) 
_ps.push("C6");
// [727]  ps.Add( {228} ) 
_ps.push("C7");
// [728]  ps.Add( {229} ) 
_ps.push("C8");
// [729]  ps.Add( {230} ) 
_ps.push("C9");
// [730]  ps.Add( {231} ) 
_ps.push("C10");
// [731]  ps.Add( {232} ) 
_ps.push("RA0");
// [732]  ps.Add( {233} ) 
_ps.push("RA1");
// [733]  ps.Add( {234} ) 
_ps.push("RA2");
// [734]  ps.Add( {235} ) 
_ps.push("RA3");
// [735]  ps.Add( {236} ) 
_ps.push("RA4");
// [736]  ps.Add( {237} ) 
_ps.push("SRA0");
// [737]  ps.Add( {238} ) 
_ps.push("SRA1");
// [738]  ps.Add( {239} ) 
_ps.push("SRA2");
// [739]  ps.Add( {240} ) 
_ps.push("SRA3");
// [740]  ps.Add( {241} ) 
_ps.push("SRA4");
// [741]  ps.Add( {242} ) 
_ps.push("EXECUTIVE");
// [742]  ps.Add( {243} ) 
_ps.push("FOLIO");
// [743]  ps.Add( {244} ) 
_ps.push("LEGAL");
// [744]  ps.Add( {245} ) 
_ps.push("LETTER");
// [745]  ps.Add( {246} ) 
_ps.push("TABLOID");
// [747]  Dim m As Map = CreateMap() 
_m={};
// [748]  For Each strItem As String In ps 
for (var _stritemindex=0;_stritemindex<_ps.length;_stritemindex++) {
_stritem=_ps[_stritemindex];
// [749]  m.Put(strItem, strItem) 
_m[_stritem]=_stritem;
// [750]  Next 
}
// [751]  Return m 
return _m;
// End Sub
};

}
/* =========================== PDFParagraphs  =========================== */
function banano_bananovuematerial_pdfparagraphs() {
var _B=this;
_B._contentint={};

_B._contents=[];

_B._style= new banano_bananovuematerial_pdfstyle();

// [9] Public Sub Initialize As PDFParagraphs 
_B.initialize=function() {
// [10]  contentInt.Initialize 
_B._contentint={};
// [11]  contents.Initialize 
_B._contents.length=0;
// [12]  style.Initialize 
_B._style.initialize();
// [13]  Return Me 
return _B;
// End Sub
};

// [17] Sub SetAbsolutePosition(x As Int, y As Int) As PDFParagraphs 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [18]  Dim opt As Map = CreateMap() 
_opt={};
// [19]  opt.Put( {0} , x) 
_opt["x"]=_x;
// [20]  opt.Put( {1} , y) 
_opt["y"]=_y;
// [21]  contentInt.Put( {2} , opt) 
_B._contentint["absolutePosition"]=_opt;
// [22]  Return Me 
return _B;
// End Sub
};

// [26] Sub AddText(txt As PDFText) As PDFParagraphs 
_B.addtext=function(_txt) {
// [27]  contents.Add(txt.Content) 
_B._contents.push(_txt.getcontent());
// [28]  Return Me 
return _B;
// End Sub
};

// [32] Sub AddString(txt As String) As PDFParagraphs 
_B.addstring=function(_txt) {
// [33]  contents.Add(txt) 
_B._contents.push(_txt);
// [34]  Return Me 
return _B;
// End Sub
};

// [39] Sub SetPageBreakBefore As PDFParagraphs 
_B.setpagebreakbefore=function() {
// [40]  contentInt.Put( {3} , {4} ) 
_B._contentint["pageBreak"]="before";
// [41]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetPageBreakAfter As PDFParagraphs 
_B.setpagebreakafter=function() {
// [46]  contentInt.Put( {5} , {6} ) 
_B._contentint["pageBreak"]="after";
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub getContent As Map 
_B.getcontent=function() {
// [52]  contentInt.Put( {7} , contents) 
_B._contentint["text"]=_B._contents;
// [53]  style.Include(contentInt) 
_B._style.include(_B._contentint);
// [54]  Return contentInt 
return _B._contentint;
// End Sub
};

}
/* =========================== PDFQRCode  =========================== */
function banano_bananovuematerial_pdfqrcode() {
var _B=this;
_B._options={};

_B._qr="";

_B._foreground="";

_B._background="";

_B._fit="";

_B._modenumeric=false;

_B._modealphanumeric=false;

_B._modeoctet=false;

_B._ecclevell=false;

_B._ecclevelm=false;

_B._ecclevelq=false;

_B._ecclevelh=false;

_B._pageorientation="";

// [22] Public Sub Initialize As PDFQRCode 
_B.initialize=function() {
// [23]  options.Initialize 
_B._options={};
// [24]  qr = Null 
_B._qr=null;
// [25]  foreground = Null 
_B._foreground=null;
// [26]  background = Null 
_B._background=null;
// [27]  pageOrientation = Null 
_B._pageorientation=null;
// [28]  fit = Null 
_B._fit=null;
// [30]  modeNumeric = False 
_B._modenumeric=false;
// [31]  modeAlphanumeric = False 
_B._modealphanumeric=false;
// [32]  modeOctet = False 
_B._modeoctet=false;
// [34]  Return Me 
return _B;
// End Sub
};

// [38] Sub SetPageOrientation(spageOrientation As String) As PDFQRCode 
_B.setpageorientation=function(_spageorientation) {
// [39]  If spageOrientation = {0} Then Return Me 
if (_spageorientation=="") { return _B;}
// [40]  pageOrientation = spageOrientation 
_B._pageorientation=_spageorientation;
// [41]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetAbsolutePosition(x As Int, y As Int) As PDFQRCode 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [46]  Dim opt As Map = CreateMap() 
_opt={};
// [47]  opt.Put( {1} , x) 
_opt["x"]=_x;
// [48]  opt.Put( {2} , y) 
_opt["y"]=_y;
// [49]  options.Put( {3} , opt) 
_B._options["absolutePosition"]=_opt;
// [50]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetPageBreakBefore As PDFQRCode 
_B.setpagebreakbefore=function() {
// [56]  options.Put( {4} , {5} ) 
_B._options["pageBreak"]="before";
// [57]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetPageBreakAfter As PDFQRCode 
_B.setpagebreakafter=function() {
// [62]  options.Put( {6} , {7} ) 
_B._options["pageBreak"]="after";
// [63]  Return Me 
return _B;
// End Sub
};

// [67] Sub getContent As Map 
_B.getcontent=function() {
// [68]  If qr <> Null Then options.Put( {8} , qr) 
if (_B._qr!=null) {_B._options["qr"]=_B._qr;}
// [69]  If foreground <> Null Then options.Put( {9} , foreground) 
if (_B._foreground!=null) {_B._options["foreground"]=_B._foreground;}
// [70]  If background <> Null Then options.Put( {10} , background) 
if (_B._background!=null) {_B._options["background"]=_B._background;}
// [71]  If pageOrientation <> Null Then options.Put( {11} , pageOrientation) 
if (_B._pageorientation!=null) {_B._options["pageOrientation"]=_B._pageorientation;}
// [72]  If fit <> Null Then options.Put( {12} , fit) 
if (_B._fit!=null) {_B._options["fit"]=_B._fit;}
// [75]  If modeNumeric Then options.Put( {15} , {16} ) 
if (_B._modenumeric) {_B._options["mode"]="numeric";}
// [76]  If modeAlphanumeric Then options.Put( {17} , {18} ) 
if (_B._modealphanumeric) {_B._options["mode"]="alphanumeric";}
// [77]  If modeOctet Then options.Put( {19} , {20} ) 
if (_B._modeoctet) {_B._options["mode"]="octet";}
// [78]  If eccLevelL Then options.Put( {21} , {22} ) 
if (_B._ecclevell) {_B._options["eccLevel"]="L";}
// [79]  If eccLevelM Then options.Put( {23} , {24} ) 
if (_B._ecclevelm) {_B._options["eccLevel"]="M";}
// [80]  If eccLevelQ Then options.Put( {25} , {26} ) 
if (_B._ecclevelq) {_B._options["eccLevel"]="Q";}
// [81]  If eccLevelH Then options.Put( {27} , {28} ) 
if (_B._ecclevelh) {_B._options["eccLevel"]="H";}
// [82]  Return options 
return _B._options;
// End Sub
};

// [86] Sub SetMargin(l As Int, t As Int, r As Int, b As Int) As PDFQRCode 
_B.setmargin=function(_l,_t,_r,_b) {
var _margin;
// [87]  If l = BANano.UNDEFINED Then l = 0 
if (_l=='undefined') {_l=0;}
// [88]  If t = BANano.UNDEFINED Then t = 0 
if (_t=='undefined') {_t=0;}
// [89]  If r = BANano.UNDEFINED Then r = 0 
if (_r=='undefined') {_r=0;}
// [90]  If b = BANano.UNDEFINED Then b = 0 
if (_b=='undefined') {_b=0;}
// [91]  Dim margin As List 
_margin=[];
// [92]  margin.Initialize 
_margin.length=0;
// [93]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [94]  options.Put( {29} , margin) 
_B._options["margin"]=_margin;
// [95]  Return Me 
return _B;
// End Sub
};

}
/* =========================== PDFRow  =========================== */
function banano_bananovuematerial_pdfrow() {
var _B=this;
_B._row=[];

// [7] Public Sub Initialize As PDFRow 
_B.initialize=function() {
// [8]  row.Initialize 
_B._row.length=0;
// [9]  Return Me 
return _B;
// End Sub
};

// [13] Sub AddImage(img As PDFImage) As PDFRow 
_B.addimage=function(_img) {
// [14]  row.Add(img.Content) 
_B._row.push(_img.getcontent());
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub AddEmpty As PDFRow 
_B.addempty=function() {
// [20]  row.Add(CreateMap()) 
_B._row.push({});
// [21]  Return Me 
return _B;
// End Sub
};

// [25] Sub AddList(lst As PDFList) As PDFRow 
_B.addlist=function(_lst) {
// [26]  row.Add(lst.Content) 
_B._row.push(_lst.getcontent());
// [27]  Return Me 
return _B;
// End Sub
};

// [31] Sub AddText(txt As PDFText) As PDFRow 
_B.addtext=function(_txt) {
// [32]  row.Add(txt.Content) 
_B._row.push(_txt.getcontent());
// [33]  Return Me 
return _B;
// End Sub
};

// [37] Sub AddTable(tbl As PDFTable) As PDFRow 
_B.addtable=function(_tbl) {
// [38]  row.Add(tbl.Content) 
_B._row.push(_tbl.getcontent());
// [39]  Return Me 
return _B;
// End Sub
};

// [43] Sub AddString(txt As String) As PDFRow 
_B.addstring=function(_txt) {
// [44]  row.Add(txt) 
_B._row.push(_txt);
// [45]  Return Me 
return _B;
// End Sub
};

// [49] Sub getContent As List 
_B.getcontent=function() {
// [50]  Return row 
return _B._row;
// End Sub
};

}
/* =========================== PDFSecurity  =========================== */
function banano_bananovuematerial_pdfsecurity() {
var _B=this;
_B._userpassword="";

_B._ownerpassword="";

_B._printinghr=false;

_B._printinglr=false;

_B._modifying=false;

_B._copying=false;

_B._annotating=false;

_B._fillingforms=false;

_B._contentaccessibility=false;

_B._documentassembly=false;

_B._permissions={};

// [16] Public Sub Initialize 
_B.initialize=function() {
// [17]  permissions.Initialize 
_B._permissions={};
// [18]  printingHR = True 
_B._printinghr=true;
// [19]  printingLR = False 
_B._printinglr=false;
// [20]  copying = True 
_B._copying=true;
// [21]  annotating = True 
_B._annotating=true;
// [22]  fillingForms = True 
_B._fillingforms=true;
// [23]  contentAccessibility = True 
_B._contentaccessibility=true;
// [24]  documentAssembly = True 
_B._documentassembly=true;
// [25]  userPassword = Null 
_B._userpassword=null;
// [26]  ownerPassword = Null 
_B._ownerpassword=null;
// End Sub
};

// [29] Sub Set(fldName As String, fldValue As Object) 
_B.set=function(_fldname,_fldvalue) {
// [30]  Select Case fldName 
switch ("" + _fldname) {
// [31]  Case {0} 
case "" + "ownerPassword":
// [32]  ownerPassword = fldValue 
_B._ownerpassword=_fldvalue;
// [33]  Case {1} 
break;
case "" + "userPassword":
// [34]  userPassword = fldValue 
_B._userpassword=_fldvalue;
// [35]  Case {2} 
break;
case "" + "modifying":
// [36]  modifying = fldValue 
_B._modifying=_fldvalue;
// [37]  Case {3} 
break;
case "" + "copying":
// [38]  copying = fldValue 
_B._copying=_fldvalue;
// [39]  Case {4} 
break;
case "" + "annotating":
// [40]  annotating = fldValue 
_B._annotating=_fldvalue;
// [41]  Case {5} 
break;
case "" + "fillingForms":
// [42]  fillingForms = fldValue 
_B._fillingforms=_fldvalue;
// [43]  Case {6} 
break;
case "" + "contentAccessibility":
// [44]  contentAccessibility = fldValue 
_B._contentaccessibility=_fldvalue;
// [45]  Case {7} 
break;
case "" + "documentAssembly":
// [46]  documentAssembly = fldValue 
_B._documentassembly=_fldvalue;
// [47]  Case {8} 
break;
case "" + "userPassword":
// [48]  userPassword = fldValue 
_B._userpassword=_fldvalue;
// [49]  Case {9} 
break;
case "" + "ownerPassword":
// [50]  ownerPassword = fldValue 
_B._ownerpassword=_fldvalue;
// [51]  Case {10} 
break;
case "" + "printing":
// [52]  If fldValue = {11} Then printingHR = True 
if (_fldvalue=="highResolution") {_B._printinghr=true;}
// [53]  If fldValue = {12} Then printingLR = True 
if (_fldvalue=="lowResolution") {_B._printinglr=true;}
// [54]  End Select 
break;
}
// End Sub
};

// [57] Sub getContent As Map 
_B.getcontent=function() {
// [58]  If printingHR Then permissions.Put( {13} , {14} ) 
if (_B._printinghr) {_B._permissions["printing"]="highResolution";}
// [59]  If printingLR Then permissions.Put( {15} , {16} ) 
if (_B._printinglr) {_B._permissions["printing"]="lowResolution";}
// [60]  permissions.Put( {17} , modifying) 
_B._permissions["modifying"]=_B._modifying;
// [61]  permissions.Put( {18} , copying) 
_B._permissions["copying"]=_B._copying;
// [62]  permissions.Put( {19} , annotating) 
_B._permissions["annotating"]=_B._annotating;
// [63]  permissions.Put( {20} , fillingForms) 
_B._permissions["fillingForms"]=_B._fillingforms;
// [64]  permissions.Put( {21} , contentAccessibility) 
_B._permissions["contentAccessibility"]=_B._contentaccessibility;
// [65]  permissions.Put( {22} , documentAssembly) 
_B._permissions["documentAssembly"]=_B._documentassembly;
// [66]  Return permissions 
return _B._permissions;
// End Sub
};

}
/* =========================== PDFStack  =========================== */
function banano_bananovuematerial_pdfstack() {
var _B=this;
_B._contentint={};

_B._contents=[];

_B._style= new banano_bananovuematerial_pdfstyle();

// [9] Public Sub Initialize As PDFStack 
_B.initialize=function() {
// [10]  contentInt.Initialize 
_B._contentint={};
// [11]  contents.Initialize 
_B._contents.length=0;
// [12]  style.Initialize 
_B._style.initialize();
// [13]  Return Me 
return _B;
// End Sub
};

// [17] Sub AddList(lst As PDFList) As PDFStack 
_B.addlist=function(_lst) {
// [18]  contents.Add(lst.Content) 
_B._contents.push(_lst.getcontent());
// [19]  Return Me 
return _B;
// End Sub
};

// [23] Sub SetAbsolutePosition(x As Int, y As Int) As PDFStack 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [24]  Dim opt As Map = CreateMap() 
_opt={};
// [25]  opt.Put( {0} , x) 
_opt["x"]=_x;
// [26]  opt.Put( {1} , y) 
_opt["y"]=_y;
// [27]  contentInt.Put( {2} , opt) 
_B._contentint["absolutePosition"]=_opt;
// [28]  Return Me 
return _B;
// End Sub
};

// [33] Sub AddText(txt As PDFText) As PDFStack 
_B.addtext=function(_txt) {
// [34]  contents.Add(txt.Content) 
_B._contents.push(_txt.getcontent());
// [35]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetPageBreakBefore As PDFStack 
_B.setpagebreakbefore=function() {
// [41]  contentInt.Put( {3} , {4} ) 
_B._contentint["pageBreak"]="before";
// [42]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetPageBreakAfter As PDFStack 
_B.setpagebreakafter=function() {
// [47]  contentInt.Put( {5} , {6} ) 
_B._contentint["pageBreak"]="after";
// [48]  Return Me 
return _B;
// End Sub
};

// [52] Sub AddString(txt As String) As PDFStack 
_B.addstring=function(_txt) {
// [53]  contents.Add(txt) 
_B._contents.push(_txt);
// [54]  Return Me 
return _B;
// End Sub
};

// [58] Sub getContent As Map 
_B.getcontent=function() {
// [59]  contentInt.Put( {7} , contents) 
_B._contentint["stack"]=_B._contents;
// [60]  style.Include(contentInt) 
_B._style.include(_B._contentint);
// [61]  Return contentInt 
return _B._contentint;
// End Sub
};

}
/* =========================== PDFStyle  =========================== */
function banano_bananovuematerial_pdfstyle() {
var _B=this;
_B._fontsize=0;

_B._bold=false;

_B._italics=false;

_B._alignmentright=false;

_B._alignmentcenter=false;

_B._alignmentjustify=false;

_B._color="";

_B._name="";

_B._width="";

_B._height="";

_B._opacity=0;

_B._angle=0;

_B._m={};

_B._styles=[];

_B._columngap=0;

_B._fillcolor="";

_B._background="";

// [24] Public Sub Initialize As PDFStyle 
_B.initialize=function() {
// [25]  m.Initialize 
_B._m={};
// [26]  name = Null 
_B._name=null;
// [27]  fillColor = Null 
_B._fillcolor=null;
// [28]  background = Null 
_B._background=null;
// [29]  fontSize = Null 
_B._fontsize=null;
// [30]  bold = Null 
_B._bold=null;
// [31]  italics = Null 
_B._italics=null;
// [32]  alignmentRight = Null 
_B._alignmentright=null;
// [33]  alignmentCenter = Null 
_B._alignmentcenter=null;
// [34]  alignmentJustify = Null 
_B._alignmentjustify=null;
// [35]  color = Null 
_B._color=null;
// [36]  width = Null 
_B._width=null;
// [37]  opacity = Null 
_B._opacity=null;
// [38]  angle = Null 
_B._angle=null;
// [39]  styles.Initialize 
_B._styles.length=0;
// [40]  columnGap = Null 
_B._columngap=null;
// [41]  height = Null 
_B._height=null;
// [42]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetColumnGap(icolumnGap As Int) As PDFStyle 
_B.setcolumngap=function(_icolumngap) {
// [47]  If icolumnGap = 0 Then Return Me 
if (_icolumngap==0) { return _B;}
// [48]  columnGap = icolumnGap 
_B._columngap=_icolumngap;
// [49]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetAngle(dangle As Double) As PDFStyle 
_B.setangle=function(_dangle) {
// [54]  If dangle = 0 Then Return Me 
if (_dangle==0) { return _B;}
// [55]  angle = dangle 
_B._angle=_dangle;
// [56]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetOpacity(o As Double) As PDFStyle 
_B.setopacity=function(_o) {
// [61]  If o = 0 Then Return Me 
if (_o==0) { return _B;}
// [62]  opacity = o 
_B._opacity=_o;
// [63]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetWidth(w As Int) As PDFStyle 
_B.setwidth=function(_w) {
// [68]  If w = 0 Then Return Me 
if (_w==0) { return _B;}
// [69]  width = w 
_B._width=_w;
// [70]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetHeight(h As Int) As PDFStyle 
_B.setheight=function(_h) {
// [75]  If h = 0 Then Return Me 
if (_h==0) { return _B;}
// [76]  height = h 
_B._height=_h;
// [77]  Return Me 
return _B;
// End Sub
};

// [81] Sub SetColor(scolor As String) As PDFStyle 
_B.setcolor=function(_scolor) {
// [82]  If scolor = {0} Then Return Me 
if (_scolor=="") { return _B;}
// [83]  color = scolor 
_B._color=_scolor;
// [84]  Return Me 
return _B;
// End Sub
};

// [88] Sub SetBackground(sbackground As String) As PDFStyle 
_B.setbackground=function(_sbackground) {
// [89]  If sbackground = {1} Then Return Me 
if (_sbackground=="") { return _B;}
// [90]  background = sbackground 
_B._background=_sbackground;
// [91]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetAlignment(alignment As String) As PDFStyle 
_B.setalignment=function(_alignment) {
// [97]  If alignment = {2} Then Return Me 
if (_alignment=="") { return _B;}
// [98]  m.Put( {3} , alignment) 
_B._m["alignment"]=_alignment;
// [99]  Return Me 
return _B;
// End Sub
};

// [103] Sub SetName(sname As String) As PDFStyle 
_B.setname=function(_sname) {
// [104]  If sname = {4} Then Return Me 
if (_sname=="") { return _B;}
// [105]  name = sname 
_B._name=_sname;
// [106]  Return Me 
return _B;
// End Sub
};

// [111] Sub SetItalics(b As Boolean) As PDFStyle 
_B.setitalics=function(_b) {
// [112]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [113]  italics = b 
_B._italics=_b;
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetBold(b As Boolean) As PDFStyle 
_B.setbold=function(_b) {
// [119]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [120]  bold = b 
_B._bold=_b;
// [121]  Return Me 
return _B;
// End Sub
};

// [125] Sub SetFontSize(ifontSize As Int) As PDFStyle 
_B.setfontsize=function(_ifontsize) {
// [126]  If ifontSize = 0 Then Return Me 
if (_ifontsize==0) { return _B;}
// [127]  fontSize = ifontSize 
_B._fontsize=_ifontsize;
// [128]  Return Me 
return _B;
// End Sub
};

// [133] Sub AddStyle(styleName As String) As PDFStyle 
_B.addstyle=function(_stylename) {
// [134]  styles.Add(styleName) 
_B._styles.push(_stylename);
// [135]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetMargin(l As Int, t As Int, r As Int, b As Int) As PDFStyle 
_B.setmargin=function(_l,_t,_r,_b) {
var _margin;
// [140]  If l = BANano.UNDEFINED Then l = 0 
if (_l=='undefined') {_l=0;}
// [141]  If t = BANano.UNDEFINED Then t = 0 
if (_t=='undefined') {_t=0;}
// [142]  If r = BANano.UNDEFINED Then r = 0 
if (_r=='undefined') {_r=0;}
// [143]  If b = BANano.UNDEFINED Then b = 0 
if (_b=='undefined') {_b=0;}
// [144]  Dim margin As List 
_margin=[];
// [145]  margin.Initialize 
_margin.length=0;
// [146]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [147]  m.Put( {5} , margin) 
_B._m["margin"]=_margin;
// [148]  Return Me 
return _B;
// End Sub
};

// [152] Sub NoBorder As PDFStyle 
_B.noborder=function() {
// [153]  m.Put( {6} , BANano.UNDEFINED) 
_B._m["border"]='undefined';
// [154]  Return Me 
return _B;
// End Sub
};

// [158] Sub SetBorder(l As Boolean, t As Boolean, r As Boolean, b As Boolean) As PDFStyle 
_B.setborder=function(_l,_t,_r,_b) {
var _margin;
// [159]  If l = BANano.UNDEFINED Then l = 0 
if (_l=='undefined') {_l=0;}
// [160]  If t = BANano.UNDEFINED Then t = 0 
if (_t=='undefined') {_t=0;}
// [161]  If r = BANano.UNDEFINED Then r = 0 
if (_r=='undefined') {_r=0;}
// [162]  If b = BANano.UNDEFINED Then b = 0 
if (_b=='undefined') {_b=0;}
// [163]  Dim margin As List 
_margin=[];
// [164]  margin.Initialize 
_margin.length=0;
// [165]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [166]  m.Put( {7} , margin) 
_B._m["border"]=_margin;
// [167]  Return Me 
return _B;
// End Sub
};

// [171] Sub SetFillColor(fc As String) As PDFStyle 
_B.setfillcolor=function(_fc) {
// [172]  If fc = {8} Then Return Me 
if (_fc=="") { return _B;}
// [173]  fillColor = fc 
_B._fillcolor=_fc;
// [174]  Return Me 
return _B;
// End Sub
};

// [179] Sub getContent As Map 
_B.getcontent=function() {
// [180]  If fontSize <> Null Then m.put( {9} , fontSize) 
if (_B._fontsize!=null) {_B._m["fontSize"]=_B._fontsize;}
// [181]  If bold <> Null Then m.Put( {10} , bold) 
if (_B._bold!=null) {_B._m["bold"]=_B._bold;}
// [182]  If italics <> Null Then m.Put( {11} , italics) 
if (_B._italics!=null) {_B._m["italics"]=_B._italics;}
// [183]  If alignmentRight <> Null Then m.Put( {12} , {13} ) 
if (_B._alignmentright!=null) {_B._m["alignment"]="right";}
// [184]  If alignmentCenter <> Null Then m.Put( {14} , {15} ) 
if (_B._alignmentcenter!=null) {_B._m["alignment"]="center";}
// [185]  If alignmentJustify <> Null Then m.Put( {16} , {17} ) 
if (_B._alignmentjustify!=null) {_B._m["alignment"]="justify";}
// [186]  If color <> Null Then m.Put( {18} , color) 
if (_B._color!=null) {_B._m["color"]=_B._color;}
// [187]  If opacity <> Null Then m.Put( {19} , opacity) 
if (_B._opacity!=null) {_B._m["opacity"]=_B._opacity;}
// [188]  If angle <> Null Then m.Put( {20} , angle) 
if (_B._angle!=null) {_B._m["angle"]=_B._angle;}
// [189]  If width <> Null Then m.Put( {21} , width) 
if (_B._width!=null) {_B._m["width"]=_B._width;}
// [190]  If height <> Null Then m.Put( {22} , height) 
if (_B._height!=null) {_B._m["height"]=_B._height;}
// [191]  If columnGap <> Null Then m.Put( {23} , columnGap) 
if (_B._columngap!=null) {_B._m["columnGap"]=_B._columngap;}
// [192]  If fillColor <> Null Then m.Put( {24} , fillColor) 
if (_B._fillcolor!=null) {_B._m["fillColor"]=_B._fillcolor;}
// [193]  If background <> Null Then m.Put( {25} , background) 
if (_B._background!=null) {_B._m["background"]=_B._background;}
// [194]  If styles.Size > 0 Then 
if (_B._styles.length>0) {
// [195]  m.Put( {26} , styles) 
_B._m["style"]=_B._styles;
// [196]  End If 
}
// [197]  Return m 
return _B._m;
// End Sub
};

// [201] Sub Include(target As Map) 
_B.include=function(_target) {
var _source,_k,_v;
// [202]  Dim source As Map = getContent 
_source=_B.getcontent(_B);
// [203]  For Each k As String In source.Keys 
var _kKeys = Object.keys(_source);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [204]  Dim v As Object = source.Get(k) 
_v=_source[_k];
// [205]  target.Put(k, v) 
_target[_k]=_v;
// [206]  Next 
}
// End Sub
};

}
/* =========================== PDFTable  =========================== */
function banano_bananovuematerial_pdftable() {
var _B=this;
_B._options={};

_B._layout="";

_B._lighthorizontallines=false;

_B._noborders=false;

_B._headerlineonly=false;

_B._headerrows=0;

_B._table={};

_B._widths=[];

_B._heights=[];

_B._hdr=[];

_B._body=[];

_B._rows=[];

_B._style= new banano_bananovuematerial_pdfstyle();

_B._pageorientation="";

// [20] Public Sub Initialize As PDFTable 
_B.initialize=function() {
// [21]  options.Initialize 
_B._options={};
// [22]  lightHorizontalLines = Null 
_B._lighthorizontallines=null;
// [23]  headerLineOnly = Null 
_B._headerlineonly=null;
// [24]  noBorders = Null 
_B._noborders=null;
// [25]  headerRows = Null 
_B._headerrows=null;
// [26]  pageOrientation = {0} 
_B._pageorientation="";
// [27]  table.Initialize 
_B._table={};
// [28]  widths.Initialize 
_B._widths.length=0;
// [29]  hdr.Initialize 
_B._hdr.length=0;
// [30]  body.Initialize 
_B._body.length=0;
// [31]  rows.Initialize 
_B._rows.length=0;
// [32]  style.Initialize 
_B._style.initialize();
// [33]  Return Me 
return _B;
// End Sub
};

// [36] Sub SetHeaderRows(iheaderRows As Int) As PDFTable 
_B.setheaderrows=function(_iheaderrows) {
// [37]  If iheaderRows = 0 Then Return Me 
if (_iheaderrows==0) { return _B;}
// [38]  headerRows = iheaderRows 
_B._headerrows=_iheaderrows;
// [39]  Return Me 
return _B;
// End Sub
};

// [43] Sub SetAbsolutePosition(x As Int, y As Int) As PDFTable 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [44]  Dim opt As Map = CreateMap() 
_opt={};
// [45]  opt.Put( {1} , x) 
_opt["x"]=_x;
// [46]  opt.Put( {2} , y) 
_opt["y"]=_y;
// [47]  options.Put( {3} , opt) 
_B._options["absolutePosition"]=_opt;
// [48]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetWidths(w As List) As PDFTable 
_B.setwidths=function(_w) {
var _k;
// [54]  For Each k As String In w 
for (var _kindex=0;_kindex<_w.length;_kindex++) {
_k=_w[_kindex];
// [55]  widths.Add(k) 
_B._widths.push(_k);
// [56]  Next 
}
// [57]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetHeights(h As List) As PDFTable 
_B.setheights=function(_h) {
var _k;
// [62]  For Each k As String In h 
for (var _kindex=0;_kindex<_h.length;_kindex++) {
_k=_h[_kindex];
// [63]  heights.Add(k) 
_B._heights.push(_k);
// [64]  Next 
}
// [65]  Return Me 
return _B;
// End Sub
};

// [69] Sub SetColumnNames(names As List) As PDFTable 
_B.setcolumnnames=function(_names) {
var _k;
// [70]  For Each k As String In names 
for (var _kindex=0;_kindex<_names.length;_kindex++) {
_k=_names[_kindex];
// [71]  hdr.Add(k) 
_B._hdr.push(_k);
// [72]  Next 
}
// [73]  Return Me 
return _B;
// End Sub
};

// [77] Sub AddColumn(colName As String, colWidth As Object, colHeight As Object) As PDFTable 
_B.addcolumn=function(_colname,_colwidth,_colheight) {
// [78]  hdr.Add(colName) 
_B._hdr.push(_colname);
// [79]  If colWidth <> Null Then widths.Add(colWidth) 
if (_colwidth!=null) {_B._widths.push(_colwidth);}
// [80]  If colHeight <> Null Then heights.Add(colHeight) 
if (_colheight!=null) {_B._heights.push(_colheight);}
// [81]  Return Me 
return _B;
// End Sub
};

// [85] Sub AddRow(rowData As List) As PDFTable 
_B.addrow=function(_rowdata) {
// [86]  rows.Add(rowData) 
_B._rows.push(_rowdata);
// [87]  Return Me 
return _B;
// End Sub
};

// [91] Sub AddRow1(row As PDFRow) As PDFTable 
_B.addrow1=function(_row) {
// [92]  rows.Add(row.Content) 
_B._rows.push(_row.getcontent());
// [93]  Return Me 
return _B;
// End Sub
};

// [97] Sub AddRowTexts(rowData As List) As PDFTable 
_B.addrowtexts=function(_rowdata) {
var _trow,_txt;
// [98]  Dim trow As PDFRow 
_trow= new banano_bananovuematerial_pdfrow();
// [99]  trow.Initialize 
_trow.initialize();
// [100]  For Each txt As PDFText In rowData 
for (var _txtindex=0;_txtindex<_rowdata.length;_txtindex++) {
_txt=_rowdata[_txtindex];
// [101]  trow.AddText(txt) 
_trow.addtext(_txt);
// [102]  Next 
}
// [103]  AddRow1(trow) 
_B.addrow1(_trow,_B);
// [104]  Return Me 
return _B;
// End Sub
};

// [108] Sub SetPageBreakBefore As PDFTable 
_B.setpagebreakbefore=function() {
// [109]  options.Put( {4} , {5} ) 
_B._options["pageBreak"]="before";
// [110]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetPageBreakAfter As PDFTable 
_B.setpagebreakafter=function() {
// [115]  options.Put( {6} , {7} ) 
_B._options["pageBreak"]="after";
// [116]  Return Me 
return _B;
// End Sub
};

// [119] Sub SetID(sid As String) As PDFTable 
_B.setid=function(_sid) {
// [120]  options.Put( {8} , sid) 
_B._options["id"]=_sid;
// [121]  Return Me 
return _B;
// End Sub
};

// [125] Sub SetPageOrientation(spageOrientation As String) As PDFTable 
_B.setpageorientation=function(_spageorientation) {
// [126]  If spageOrientation = {9} Then Return Me 
if (_spageorientation=="") { return _B;}
// [127]  pageOrientation = spageOrientation 
_B._pageorientation=_spageorientation;
// [128]  Return Me 
return _B;
// End Sub
};

// [133] Sub getContent As Map 
_B.getcontent=function() {
var _lst;
// [134]  If lightHorizontalLines <> Null Then options.Put( {10} , {11} ) 
if (_B._lighthorizontallines!=null) {_B._options["layout"]="lightHorizontalLines";}
// [135]  If noBorders <> Null Then options.Put( {12} , {13} ) 
if (_B._noborders!=null) {_B._options["layout"]="noBorders";}
// [136]  If headerLineOnly <> Null Then options.Put( {14} , {15} ) 
if (_B._headerlineonly!=null) {_B._options["layout"]="headerLineOnly";}
// [138]  If headerRows <> Null Then table.Put( {16} , headerRows) 
if (_B._headerrows!=null) {_B._table["headerRows"]=_B._headerrows;}
// [139]  If widths.Size > 0 Then table.Put( {17} , widths) 
if (_B._widths.length>0) {_B._table["widths"]=_B._widths;}
// [140]  If heights.Size > 0 Then table.Put( {18} , heights) 
if (_B._heights.length>0) {_B._table["heights"]=_B._heights;}
// [142]  If hdr.Size > 0 Then body.Add(hdr) 
if (_B._hdr.length>0) {_B._body.push(_B._hdr);}
// [143]  For Each lst As List In rows 
for (var _lstindex=0;_lstindex<_B._rows.length;_lstindex++) {
_lst=_B._rows[_lstindex];
// [144]  body.Add(lst) 
_B._body.push(_lst);
// [145]  Next 
}
// [146]  table.Put( {19} , body) 
_B._table["body"]=_B._body;
// [147]  options.Put( {20} , table) 
_B._options["table"]=_B._table;
// [148]  style.Include(options) 
_B._style.include(_B._options);
// [149]  Return options 
return _B._options;
// End Sub
};

}
/* =========================== PDFText  =========================== */
function banano_bananovuematerial_pdftext() {
var _B=this;
_B._contentint={};

_B._textint=new StringBuilder();

_B._link="";

_B._linktopage=0;

_B._tocitem=false;

_B._pageorientation="";

_B._pagebreakbefore=false;

_B._pagebreakafter=false;

_B._style= new banano_bananovuematerial_pdfstyle();

_B._colspan=0;

_B._rowspan=0;

_B._linktodestination="";

_B._id="";

_B._listtype="";

_B._pagereference="";

_B._textreference="";

_B._preserveleadingspaces=false;

_B._tabindex="";

_B._decoration="";

_B._decorationstyle="";

_B._decorationcolor="";

_B._counter=0;

// [28] Sub SetTabIndex(stabindex As String) As PDFText 
_B.settabindex=function(_stabindex) {
// [29]  If stabindex = {0} Then Return Me 
if (_stabindex=="") { return _B;}
// [30]  tabindex = stabindex 
_B._tabindex=_stabindex;
// [31]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetID(sid As String) As PDFText 
_B.setid=function(_sid) {
// [35]  If sid = {1} Then Return Me 
if (_sid=="") { return _B;}
// [36]  id = sid 
_B._id=_sid;
// [37]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetTextReference(stextReference As String) As PDFText 
_B.settextreference=function(_stextreference) {
// [41]  If stextReference = {2} Then Return Me 
if (_stextreference=="") { return _B;}
// [42]  textReference = stextReference 
_B._textreference=_stextreference;
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetPageReference(spageReference As String) As PDFText 
_B.setpagereference=function(_spagereference) {
// [47]  If spageReference = {3} Then Return Me 
if (_spagereference=="") { return _B;}
// [48]  pageReference = spageReference 
_B._pagereference=_spagereference;
// [49]  Return Me 
return _B;
// End Sub
};

// [52] Sub SetLinkToDestination(slinkToDestination As String) As PDFText 
_B.setlinktodestination=function(_slinktodestination) {
// [53]  If slinkToDestination = {4} Then Return Me 
if (_slinktodestination=="") { return _B;}
// [54]  linkToDestination = slinkToDestination 
_B._linktodestination=_slinktodestination;
// [55]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetLinkToPage(slinkToPage As String) As PDFText 
_B.setlinktopage=function(_slinktopage) {
// [59]  If slinkToPage = {5} Then Return Me 
if (_slinktopage=="") { return _B;}
// [60]  linkToPage = slinkToPage 
_B._linktopage=_slinktopage;
// [61]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetLink(slink As String) As PDFText 
_B.setlink=function(_slink) {
// [65]  If slink = {6} Then Return Me 
if (_slink=="") { return _B;}
// [66]  link = slink 
_B._link=_slink;
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetListType(slisttype As String) As PDFText 
_B.setlisttype=function(_slisttype) {
// [71]  If slisttype = {7} Then Return Me 
if (_slisttype=="") { return _B;}
// [72]  listType = slisttype 
_B._listtype=_slisttype;
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub SetPageOrientation(spageOrientation As String) As PDFText 
_B.setpageorientation=function(_spageorientation) {
// [77]  If spageOrientation = {8} Then Return Me 
if (_spageorientation=="") { return _B;}
// [78]  pageOrientation = spageOrientation 
_B._pageorientation=_spageorientation;
// [79]  Return Me 
return _B;
// End Sub
};

// [83] Public Sub Initialize As PDFText 
_B.initialize=function() {
// [84]  contentInt.Initialize 
_B._contentint={};
// [85]  textInt.Initialize 
_B._textint.init();
_B._textint.isinitialized=true;
// [86]  style.Initialize 
_B._style.initialize();
// [87]  counter = Null 
_B._counter=null;
// [88]  link = Null 
_B._link=null;
// [89]  listType = Null 
_B._listtype=null;
// [90]  linkToPage = Null 
_B._linktopage=null;
// [91]  tocItem = Null 
_B._tocitem=null;
// [92]  pageBreakBefore = Null 
_B._pagebreakbefore=null;
// [93]  pageBreakAfter = Null 
_B._pagebreakafter=null;
// [94]  pageOrientation = Null 
_B._pageorientation=null;
// [95]  colSpan = Null 
_B._colspan=null;
// [96]  rowSpan = Null 
_B._rowspan=null;
// [97]  linkToDestination = Null 
_B._linktodestination=null;
// [98]  listType = Null 
_B._listtype=null;
// [99]  id = Null 
_B._id=null;
// [100]  pageReference = Null 
_B._pagereference=null;
// [101]  textReference = Null 
_B._textreference=null;
// [102]  preserveLeadingSpaces = Null 
_B._preserveleadingspaces=null;
// [103]  tabindex = Null 
_B._tabindex=null;
// [104]  decoration = Null 
_B._decoration=null;
// [105]  decorationStyle = Null 
_B._decorationstyle=null;
// [106]  decorationColor = Null 
_B._decorationcolor=null;
// [107]  Return Me 
return _B;
// End Sub
};

// [112] Sub SetDecoration(dec As String) As PDFText 
_B.setdecoration=function(_dec) {
// [113]  If dec = {9} Then Return Me 
if (_dec=="") { return _B;}
// [114]  decoration = dec 
_B._decoration=_dec;
// [115]  Return Me 
return _B;
// End Sub
};

// [120] Sub SetDecorationStyle(sdecorationStyle As String) As PDFText 
_B.setdecorationstyle=function(_sdecorationstyle) {
// [121]  If sdecorationStyle = {10} Then Return Me 
if (_sdecorationstyle=="") { return _B;}
// [122]  decorationStyle = sdecorationStyle 
_B._decorationstyle=_sdecorationstyle;
// [123]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetDecorationColor(sdecorationColor As String) As PDFText 
_B.setdecorationcolor=function(_sdecorationcolor) {
// [127]  If sdecorationColor = {11} Then Return Me 
if (_sdecorationcolor=="") { return _B;}
// [128]  decorationColor = sdecorationColor 
_B._decorationcolor=_sdecorationcolor;
// [129]  Return Me 
return _B;
// End Sub
};

// [133] Sub SetTocNumberStyle(ts As PDFStyle) As PDFText 
_B.settocnumberstyle=function(_ts) {
// [134]  contentInt.Put( {12} , ts) 
_B._contentint["tocNumberStyle"]=_ts;
// [135]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetTocStyle(ts As PDFStyle) As PDFText 
_B.settocstyle=function(_ts) {
// [140]  contentInt.Put( {13} , ts) 
_B._contentint["tocStyle"]=_ts;
// [141]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetTocMargin(l As Int, t As Int, r As Int, b As Int) As PDFText 
_B.settocmargin=function(_l,_t,_r,_b) {
var _margin;
// [146]  Dim margin As List 
_margin=[];
// [147]  margin.Initialize 
_margin.length=0;
// [148]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [149]  contentInt.Put( {14} , margin) 
_B._contentint["tocMargin"]=_margin;
// [150]  Return Me 
return _B;
// End Sub
};

// [154] Sub SetTocItem(ti As Boolean) As PDFText 
_B.settocitem=function(_ti) {
// [155]  If ti = False Then Return Me 
if (_ti==false) { return _B;}
// [156]  tocItem = ti 
_B._tocitem=_ti;
// [157]  Return Me 
return _B;
// End Sub
};

// [161] Sub SetAbsolutePosition(x As Int, y As Int) As PDFText 
_B.setabsoluteposition=function(_x,_y) {
var _opt;
// [162]  Dim opt As Map = CreateMap() 
_opt={};
// [163]  opt.Put( {15} , x) 
_opt["x"]=_x;
// [164]  opt.Put( {16} , y) 
_opt["y"]=_y;
// [165]  contentInt.Put( {17} , opt) 
_B._contentint["absolutePosition"]=_opt;
// [166]  Return Me 
return _B;
// End Sub
};

// [170] Sub SetBorderColor(l As String, t As String, r As String, b As String) As PDFText 
_B.setbordercolor=function(_l,_t,_r,_b) {
var _margin;
// [171]  Dim margin As List 
_margin=[];
// [172]  margin.Initialize 
_margin.length=0;
// [173]  margin.AddAll(Array(l,t,r,b)) 
_margin.splice(_margin.length,0,...[_l,_t,_r,_b]);
// [174]  contentInt.Put( {18} , margin) 
_B._contentint["borderColor"]=_margin;
// [175]  Return Me 
return _B;
// End Sub
};

// [179] Sub SetBorder(l As Boolean, t As Boolean, r As Boolean, b As Boolean) As PDFText 
_B.setborder=function(_l,_t,_r,_b) {
// [180]  style.SetBorder(l,t,r,b) 
_B._style.setborder(_l,_t,_r,_b);
// [181]  Return Me 
return _B;
// End Sub
};

// [185] Sub NoBorder As PDFText 
_B.noborder=function() {
// [186]  style.noborder 
_B._style.noborder();
// [187]  Return Me 
return _B;
// End Sub
};

// [191] Sub SetRelativePosition(x As Int, y As Int) As PDFText 
_B.setrelativeposition=function(_x,_y) {
var _opt;
// [192]  Dim opt As Map = CreateMap() 
_opt={};
// [193]  opt.Put( {19} , x) 
_opt["x"]=_x;
// [194]  opt.Put( {20} , y) 
_opt["y"]=_y;
// [195]  contentInt.Put( {21} , opt) 
_B._contentint["relativePosition"]=_opt;
// [196]  Return Me 
return _B;
// End Sub
};

// [200] Sub SetFillColor(fc As Object) As PDFText 
_B.setfillcolor=function(_fc) {
// [201]  style.fillColor = fc 
_B._style._fillcolor=_fc;
// [202]  Return Me 
return _B;
// End Sub
};

// [206] Sub SetAlignmentCenter As PDFText 
_B.setalignmentcenter=function() {
// [207]  style.alignmentCenter = True 
_B._style._alignmentcenter=true;
// [208]  Return Me 
return _B;
// End Sub
};

// [212] Sub SetAlignmentRight As PDFText 
_B.setalignmentright=function() {
// [213]  style.alignmentRight = True 
_B._style._alignmentright=true;
// [214]  Return Me 
return _B;
// End Sub
};

// [218] Sub SetAlignmentJustify As PDFText 
_B.setalignmentjustify=function() {
// [219]  style.alignmentJustify = True 
_B._style._alignmentjustify=true;
// [220]  Return Me 
return _B;
// End Sub
};

// [224] Sub SetRowSpan(rs As Int) As PDFText 
_B.setrowspan=function(_rs) {
// [225]  If rs = 0 Then Return Me 
if (_rs==0) { return _B;}
// [226]  rowSpan = rs 
_B._rowspan=_rs;
// [227]  Return Me 
return _B;
// End Sub
};

// [231] Sub SetColSpan(cs As Int) As PDFText 
_B.setcolspan=function(_cs) {
// [232]  If cs = 0 Then Return Me 
if (_cs==0) { return _B;}
// [233]  colSpan = cs 
_B._colspan=_cs;
// [234]  Return Me 
return _B;
// End Sub
};

// [238] Sub SetStyle(styleName As String) As PDFText 
_B.setstyle=function(_stylename) {
// [239]  If styleName = {22} Then Return Me 
if (_stylename=="") { return _B;}
// [240]  style.AddStyle(styleName) 
_B._style.addstyle(_stylename);
// [241]  Return Me 
return _B;
// End Sub
};

// [245] Sub SetWidth(sWidth As String) As PDFText 
_B.setwidth=function(_swidth) {
// [246]  style.width = sWidth 
_B._style._width=_swidth;
// [247]  Return Me 
return _B;
// End Sub
};

// [251] Sub SetHeight(sHeight As String) As PDFText 
_B.setheight=function(_sheight) {
// [252]  style.height = sHeight 
_B._style._height=_sheight;
// [253]  Return Me 
return _B;
// End Sub
};

// [256] Sub SetBold(b As Boolean) As PDFText 
_B.setbold=function(_b) {
// [257]  style.bold = b 
_B._style._bold=_b;
// [258]  Return Me 
return _B;
// End Sub
};

// [261] Sub SetItalics(b As Boolean) As PDFText 
_B.setitalics=function(_b) {
// [262]  style.italics = b 
_B._style._italics=_b;
// [263]  Return Me 
return _B;
// End Sub
};

// [266] Sub SetFontSize(fs As Int) As PDFText 
_B.setfontsize=function(_fs) {
// [267]  style.fontSize = fs 
_B._style._fontsize=_fs;
// [268]  Return Me 
return _B;
// End Sub
};

// [271] Sub SetColor(colour As String) As PDFText 
_B.setcolor=function(_colour) {
// [272]  style.color = colour 
_B._style._color=_colour;
// [273]  Return Me 
return _B;
// End Sub
};

// [277] Sub Append(txt As String) As PDFText 
_B.append=function(_txt) {
// [278]  textInt.Append(txt) 
_B._textint.append(_txt);
// [279]  Return Me 
return _B;
// End Sub
};

// [283] Sub AppendLine(txt As String) As PDFText 
_B.appendline=function(_txt) {
// [284]  textInt.Append(txt) 
_B._textint.append(_txt);
// [285]  textInt.Append(CRLF) 
_B._textint.append("\n");
// [286]  Return Me 
return _B;
// End Sub
};

// [290] Sub SetPageBreakBefore As PDFText 
_B.setpagebreakbefore=function() {
// [291]  contentInt.Put( {23} , {24} ) 
_B._contentint["pageBreak"]="before";
// [292]  Return Me 
return _B;
// End Sub
};

// [296] Sub SetPageBreakAfter As PDFText 
_B.setpagebreakafter=function() {
// [297]  contentInt.Put( {25} , {26} ) 
_B._contentint["pageBreak"]="after";
// [298]  Return Me 
return _B;
// End Sub
};

// [302] Sub getContent As Map 
_B.getcontent=function() {
var _outcome;
// [303]  Dim outcome As String = textInt.tostring 
_outcome=_B._textint.toString();
// [304]  contentInt.Put( {27} , outcome) 
_B._contentint["text"]=_outcome;
// [305]  If counter <> Null Then contentInt.Put( {28} , counter) 
if (_B._counter!=null) {_B._contentint["counter"]=_B._counter;}
// [306]  If linkToPage <> Null Then contentInt.Put( {29} , linkToPage) 
if (_B._linktopage!=null) {_B._contentint["linkToPage"]=_B._linktopage;}
// [307]  If link <> Null Then contentInt.Put( {30} , link) 
if (_B._link!=null) {_B._contentint["link"]=_B._link;}
// [308]  If tocItem <> Null Then contentInt.Put( {31} , tocItem) 
if (_B._tocitem!=null) {_B._contentint["tocItem"]=_B._tocitem;}
// [309]  If pageOrientation <> Null Then contentInt.Put( {32} , pageOrientation) 
if (_B._pageorientation!=null) {_B._contentint["pageOrientation"]=_B._pageorientation;}
// [310]  If pageBreakBefore Then contentInt.Put( {33} , {34} ) 
if (_B._pagebreakbefore) {_B._contentint["pageBreak"]="before";}
// [311]  If pageBreakAfter Then contentInt.Put( {35} , {36} ) 
if (_B._pagebreakafter) {_B._contentint["pageBreak"]="after";}
// [312]  If colSpan <> Null Then contentInt.Put( {37} , colSpan) 
if (_B._colspan!=null) {_B._contentint["colSpan"]=_B._colspan;}
// [313]  If rowSpan <> Null Then contentInt.Put( {38} , rowSpan) 
if (_B._rowspan!=null) {_B._contentint["rowSpan"]=_B._rowspan;}
// [314]  If linkToDestination <> Null Then contentInt.Put( {39} , linkToDestination) 
if (_B._linktodestination!=null) {_B._contentint["linkToDestination"]=_B._linktodestination;}
// [315]  If id <> Null Then contentInt.Put( {40} , id) 
if (_B._id!=null) {_B._contentint["id"]=_B._id;}
// [316]  If listType <> Null Then contentInt.Put( {41} , listType) 
if (_B._listtype!=null) {_B._contentint["listType"]=_B._listtype;}
// [317]  If pageReference <> Null Then contentInt.Put( {42} , pageReference) 
if (_B._pagereference!=null) {_B._contentint["pageReference"]=_B._pagereference;}
// [318]  If textReference <> Null Then contentInt.Put( {43} , textReference) 
if (_B._textreference!=null) {_B._contentint["textReference"]=_B._textreference;}
// [319]  If preserveLeadingSpaces <> Null Then contentInt.Put( {44} , preserveLeadingSpaces) 
if (_B._preserveleadingspaces!=null) {_B._contentint["preserveLeadingSpaces"]=_B._preserveleadingspaces;}
// [320]  If decoration <> Null Then contentInt.Put( {45} , decoration) 
if (_B._decoration!=null) {_B._contentint["decoration"]=_B._decoration;}
// [321]  If decorationStyle <> Null Then contentInt.Put( {46} , decorationStyle) 
if (_B._decorationstyle!=null) {_B._contentint["decorationStyle"]=_B._decorationstyle;}
// [322]  If decorationColor <> Null Then contentInt.Put( {47} , decorationColor) 
if (_B._decorationcolor!=null) {_B._contentint["decorationColor"]=_B._decorationcolor;}
// [323]  style.Include(contentInt) 
_B._style.include(_B._contentint);
// [324]  Return contentInt 
return _B._contentint;
// End Sub
};

// [328] Sub SetMargin(l As Int, t As Int, r As Int, b As Int) As PDFText 
_B.setmargin=function(_l,_t,_r,_b) {
// [329]  style.SetMargin(l,t,r,b) 
_B._style.setmargin(_l,_t,_r,_b);
// [330]  Return Me 
return _B;
// End Sub
};

// [334] Sub SetAngle(dangle As Double) As PDFText 
_B.setangle=function(_dangle) {
// [335]  style.angle = dangle 
_B._style._angle=_dangle;
// [336]  Return Me 
return _B;
// End Sub
};

// [340] Sub SetOpacity(o As Double) As PDFText 
_B.setopacity=function(_o) {
// [341]  style.opacity = o 
_B._style._opacity=_o;
// [342]  Return Me 
return _B;
// End Sub
};

}
/* =========================== PDFToC  =========================== */
function banano_bananovuematerial_pdftoc() {
var _B=this;
_B._options={};

_B._toc={};

// [8] Public Sub Initialize As PDFToC 
_B.initialize=function() {
// [9]  options.Initialize 
_B._options={};
// [10]  toc.Initialize 
_B._toc={};
// [11]  Return Me 
return _B;
// End Sub
};

// [15] Sub SetTitle(text As PDFText) As PDFToC 
_B.settitle=function(_text) {
// [16]  options.Put( {0} , text.Content) 
_B._options["title"]=_text.getcontent();
// [17]  Return Me 
return _B;
// End Sub
};

// [21] Sub SetNumberStyle(style As PDFStyle) As PDFToC 
_B.setnumberstyle=function(_style) {
// [22]  options.Put( {1} , style.Content) 
_B._options["numberStyle"]=_style.getcontent();
// [23]  Return Me 
return _B;
// End Sub
};

// [27] Sub getContent As Map 
_B.getcontent=function() {
// [28]  toc.Put( {2} , options) 
_B._toc["toc"]=_B._options;
// [29]  Return toc 
return _B._toc;
// End Sub
};

}
/* =========================== PDFView  =========================== */
function banano_bananovuematerial_pdfview() {
var _B=this;
_B._jq=null;

_B._options={};

_B._href="";

_B._id="";

// [12] Public Sub Initialize(elementID As String) As PDFView 
_B.initialize=function(_elementid) {
// [14]  JQ.Initialize( {1} ) 
_B._jq=$;
// [15]  options.Initialize 
_B._options={};
// [16]  href = {2} 
_B._href="";
// [17]  id = elementID.tolowercase 
_B._id=_elementid.toLowerCase();
// [18]  SetWidth( {3} ) 
_B.setwidth("100%",_B);
// [19]  SetHeight( {4} ) 
_B.setheight("80vh",_B);
// [20]  Return Me 
return _B;
// End Sub
};

// [25] Sub SetWidth(w As String) As PDFView 
_B.setwidth=function(_w) {
// [26]  options.Put( {5} , w) 
_B._options["width"]=_w;
// [27]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetHeight(h As String) As PDFView 
_B.setheight=function(_h) {
// [32]  options.Put( {6} , h) 
_B._options["height"]=_h;
// [33]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetHREF(shref As String) As PDFView 
_B.sethref=function(_shref) {
// [38]  href = shref 
_B._href=_shref;
// [39]  Return Me 
return _B;
// End Sub
};

// [43] Sub Refresh 
_B.refresh=function() {
var _ikey;
// [44]  Dim iKey As String = {0} 
_ikey="#" + _B._id + "";
// [45]  BANano.GetElement(iKey).SetAttr( {7} , href).AddClass( {8} ) 
u(_ikey).attr("href",_B._href).addClass("media");
// [46]  JQ.Selector(iKey).RunMethod( {9} , options) 
_B._jq(_ikey)["media"](_B._options);
// End Sub
};

}
/* =========================== VMAlert  =========================== */
function banano_bananovuematerial_vmalert() {
var _B=this;
_B._alert= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._bactive=false;

_B._module={};

_B._bstatic=false;

// [12] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMAlert 
_B.initialize=function(_v,_sid,_eventhandler) {
// [13]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [14]  vue = v 
_B._vue=_v;
// [15]  Alert.Initialize(vue, ID).SetTag( {1} ) 
_B._alert.initialize(_B._vue,_B._id).settag("md-dialog-alert");
// [16]  bActive = False 
_B._bactive=false;
// [17]  If ID <> {2} Then 
if (_B._id!="") {
// [18]  SetActiveSync(ID) 
_B.setactivesync(_B._id,_B);
// [19]  End If 
}
// [20]  module = eventHandler 
_B._module=_eventhandler;
// [21]  bStatic = False 
_B._bstatic=false;
// [22]  Return Me 
return _B;
// End Sub
};

// [25] Sub SetStatic(b As Boolean) As VMAlert 
_B.setstatic=function(_b) {
// [26]  bStatic = b 
_B._bstatic=_b;
// [27]  Return Me 
return _B;
// End Sub
};

// [30] Sub Hide 
_B.hide=function() {
var _opt;
// [31]  Dim opt As Map = CreateMap() 
_opt={};
// [32]  opt.Put(ID, False) 
_opt[_B._id]=false;
// [33]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [36] Sub Show 
_B.show=function() {
var _opt;
// [37]  Dim opt As Map = CreateMap() 
_opt={};
// [38]  opt.Put(ID, True) 
_opt[_B._id]=true;
// [39]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [43] Sub AddClass(c As String) As VMAlert 
_B.addclass=function(_c) {
// [44]  Alert.AddClass(c) 
_B._alert.addclass(_c);
// [45]  Return Me 
return _B;
// End Sub
};

// [49] Sub SetAttr(attr As Map) As VMAlert 
_B.setattr=function(_attr) {
// [50]  Alert.SetAttr(attr) 
_B._alert.setattr(_attr);
// [51]  Return Me 
return _B;
// End Sub
};

// [54] private Sub SetActiveSync(a As Object) As VMAlert 
_B.setactivesync=function(_a) {
// [55]  Alert.SetActiveSync(a) 
_B._alert.setactivesync(_a);
// [56]  bActive = True 
_B._bactive=true;
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetContent(c As String) As VMAlert 
_B.setcontent=function(_c) {
// [61]  If bStatic Then 
if (_B._bstatic) {
// [62]  Alert.SetAttr(CreateMap( {3} : c)) 
_B._alert.setattr({"md-content":_c});
// [63]  Return Me 
return _B;
// [64]  End If 
}
// [65]  vue.SetState(CreateMap( {4} :c)) 
_B._vue.setstate({"alertmessage":_c});
// [66]  Alert.SetAttr(CreateMap( {5} : {6} )) 
_B._alert.setattr({":md-content":"alertmessage"});
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetConfirmText(t As String) As VMAlert 
_B.setconfirmtext=function(_t) {
// [71]  If bStatic Then 
if (_B._bstatic) {
// [72]  Alert.SetAttr(CreateMap( {7} :t)) 
_B._alert.setattr({"md-confirm-text":_t});
// [73]  Return Me 
return _B;
// [74]  End If 
}
// [75]  vue.SetState(CreateMap( {8} :t)) 
_B._vue.setstate({"confirmtext":_t});
// [76]  Alert.SetAttr(CreateMap( {9} : {10} )) 
_B._alert.setattr({":md-confirm-text":"confirmtext"});
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetTitle(t As String) As VMAlert 
_B.settitle=function(_t) {
// [81]  If bStatic Then 
if (_B._bstatic) {
// [82]  Alert.SetAttr(CreateMap( {11} :t)) 
_B._alert.setattr({"md-title":_t});
// [83]  Return Me 
return _B;
// [84]  End If 
}
// [85]  vue.SetState(CreateMap( {12} :t)) 
_B._vue.setstate({"alerttitle":_t});
// [86]  Alert.SetAttr(CreateMap( {13} : {14} )) 
_B._alert.setattr({":md-title":"alerttitle"});
// [87]  Return Me 
return _B;
// End Sub
};

// [91] Sub ToString As String 
_B.tostring=function() {
// [92]  If bActive = False Then 
if (_B._bactive==false) {
// [93]  Log( {0} ) 
console.log("VMAlert.SetActiveSync: '" + _B._id + "' has not been activated!");
// [94]  End If 
}
// [95]  Return Alert.tostring 
return _B._alert.tostring();
// End Sub
};

// [98] Sub Render 
_B.render=function() {
// [99]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [102] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [103]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMAutoComplete  =========================== */
function banano_bananovuematerial_vmautocomplete() {
var _B=this;
_B._autocomplete= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hashelp=false;

_B._haserror=false;

_B._ht= new banano_bananovuematerial_vmelement();

_B._et= new banano_bananovuematerial_vmelement();

_B._module={};

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._haslabel=false;

// [18] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMAutoComplete 
_B.initialize=function(_v,_sid,_eventhandler) {
var _st;
// [19]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [20]  AutoComplete.Initialize(v, ID).SetTag( {6} ) 
_B._autocomplete.initialize(_v,_B._id).settag("md-autocomplete");
// [21]  lbl.Initialize(vue, {0} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "lbl");
// [22]  vue = v 
_B._vue=_v;
// [23]  module = eventHandler 
_B._module=_eventhandler;
// [24]  hasHelp = False 
_B._hashelp=false;
// [25]  hasError = False 
_B._haserror=false;
// [26]  SetOnClosed 
_B.setonclosed(_B);
// [27]  SetOnOpened 
_B.setonopened(_B);
// [28]  SetOnSelected 
_B.setonselected(_B);
// [29]  Dim st As Object 
_st={};
// [30]  SetOnChanged(st) 
_B.setonchanged(_st,_B);
// [32]  HasLabel = False 
_B._haslabel=false;
// [33]  lbl.RemoveAttr( {7} ) 
_B._lbl.removeattr(":required");
// [34]  lbl.RemoveAttr( {8} ) 
_B._lbl.removeattr(":disabled");
// [35]  lbl.RemoveAttr( {9} ) 
_B._lbl.removeattr("v-show");
// [36]  Return Me 
return _B;
// End Sub
};

// [39] Sub SetTabIndex(ti As String) As VMAutoComplete 
_B.settabindex=function(_ti) {
// [40]  AutoComplete.SetTabIndex(ti) 
_B._autocomplete.settabindex(_ti);
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub ToString As String 
_B.tostring=function() {
// [45]  If HasLabel Then lbl.Pop(AutoComplete) 
if (_B._haslabel) {_B._lbl.pop(_B._autocomplete);}
// [46]  If hasHelp Then 
if (_B._hashelp) {
// [47]  ht.Pop(AutoComplete) 
_B._ht.pop(_B._autocomplete);
// [48]  End If 
}
// [49]  If hasError Then 
if (_B._haserror) {
// [50]  et.Pop(AutoComplete) 
_B._et.pop(_B._autocomplete);
// [51]  End If 
}
// [52]  Return AutoComplete.tostring 
return _B._autocomplete.tostring();
// End Sub
};

// [55] Sub SetVModel(k As String) As VMAutoComplete 
_B.setvmodel=function(_k) {
// [56]  k = k.ToLowerCase 
_k=_k.toLowerCase();
// [57]  AutoComplete.SetVModel(k) 
_B._autocomplete.setvmodel(_k);
// [58]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetLabel(l As Object) As VMAutoComplete 
_B.setlabel=function(_l) {
// [62]  lbl.SetText(l) 
_B._lbl.settext(_l);
// [63]  HasLabel = True 
_B._haslabel=true;
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetVIf(vif As Object) As VMAutoComplete 
_B.setvif=function(_vif) {
// [68]  AutoComplete.SetVIf(vif) 
_B._autocomplete.setvif(_vif);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetVShow(vif As Object) As VMAutoComplete 
_B.setvshow=function(_vif) {
// [73]  AutoComplete.SetVShow(vif) 
_B._autocomplete.setvshow(_vif);
// [74]  Return Me 
return _B;
// End Sub
};

// [78] Sub Render 
_B.render=function() {
// [79]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [83] Sub AddChild(child As VMElement) As VMAutoComplete 
_B.addchild=function(_child) {
var _childhtml;
// [84]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [85]  AutoComplete.SetText(childHTML) 
_B._autocomplete.settext(_childhtml);
// [86]  Return Me 
return _B;
// End Sub
};

// [90] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [91]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [95] Sub AddClass(c As String) As VMAutoComplete 
_B.addclass=function(_c) {
// [96]  AutoComplete.AddClass(c) 
_B._autocomplete.addclass(_c);
// [97]  Return Me 
return _B;
// End Sub
};

// [101] Sub SetAttr(attr As Map) As VMAutoComplete 
_B.setattr=function(_attr) {
// [102]  AutoComplete.SetAttr(attr) 
_B._autocomplete.setattr(_attr);
// [103]  Return Me 
return _B;
// End Sub
};

// [107] Sub SetStyle(sm As Map) As VMAutoComplete 
_B.setstyle=function(_sm) {
// [108]  AutoComplete.SetStyle(sm) 
_B._autocomplete.setstyle(_sm);
// [109]  Return Me 
return _B;
// End Sub
};

// [112] Sub SetStyleSingle(prop As String, sval As Object) As VMAutoComplete 
_B.setstylesingle=function(_prop,_sval) {
// [113]  AutoComplete.SetStyleSingle(prop, sval) 
_B._autocomplete.setstylesingle(_prop,_sval);
// [114]  Return Me 
return _B;
// End Sub
};

// [117] Sub SetAttrSingle(prop As String, sval As Object) As VMAutoComplete 
_B.setattrsingle=function(_prop,_sval) {
// [118]  AutoComplete.SetAttrSingle(prop, sval) 
_B._autocomplete.setattrsingle(_prop,_sval);
// [119]  Return Me 
return _B;
// End Sub
};

// [123] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [124]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [125]  AddChild(childx) 
_B.addchild(_childx,_B);
// [126]  Next 
}
// End Sub
};

// [130] Sub SetPadding(p As Object) As VMAutoComplete 
_B.setpadding=function(_p) {
// [131]  AutoComplete.SetPaddingAll(p) 
_B._autocomplete.setpaddingall(_p);
// [132]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetOptions(sourceList As List) As VMAutoComplete 
_B.setoptions=function(_sourcelist) {
var _pp;
// [136]  Dim pp As String = {1} 
_pp="" + _B._id + "source";
// [137]  vue.SetStateSingle(pp, sourceList) 
_B._vue.setstatesingle(_pp,_sourcelist);
// [138]  SetAttr(CreateMap( {10} : pp)) 
_B.setattr({":md-options":_pp},_B);
// [139]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetHelperText(t As String) As VMAutoComplete 
_B.sethelpertext=function(_t) {
// [143]  If t = {11} Then Return Me 
if (_t=="") { return _B;}
// [144]  hasHelp = True 
_B._hashelp=true;
// [145]  ht = AutoComplete.SetHelperText(t) 
_B._ht=_B._autocomplete.sethelpertext(_t);
// [146]  Return Me 
return _B;
// End Sub
};

// [149] Sub SetErrorText(txt As String) As VMAutoComplete 
_B.seterrortext=function(_txt) {
// [150]  If txt = {12} Then Return Me 
if (_txt=="") { return _B;}
// [151]  hasError = True 
_B._haserror=true;
// [152]  et = AutoComplete.SetErrorText(txt) 
_B._et=_B._autocomplete.seterrortext(_txt);
// [153]  Return Me 
return _B;
// End Sub
};

// [157] Sub SetInputName(varInputName As String) As VMAutoComplete 
_B.setinputname=function(_varinputname) {
// [158]  SetAttr(CreateMap( {13} : varInputName)) 
_B.setattr({"md-input-name":_varinputname},_B);
// [159]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetInputId(varInputId As String) As VMAutoComplete 
_B.setinputid=function(_varinputid) {
// [164]  SetAttr(CreateMap( {14} : varInputId)) 
_B.setattr({"md-input-id":_varinputid},_B);
// [165]  Return Me 
return _B;
// End Sub
};

// [169] Sub SetInputMaxLength(varInputMaxLength As Int) As VMAutoComplete 
_B.setinputmaxlength=function(_varinputmaxlength) {
// [170]  SetAttr(CreateMap( {15} : varInputMaxLength)) 
_B.setattr({"md-input-max-length":_varinputmaxlength},_B);
// [171]  Return Me 
return _B;
// End Sub
};

// [175] Sub SetInputPlaceholder(varInputPlaceholder As Object) As VMAutoComplete 
_B.setinputplaceholder=function(_varinputplaceholder) {
// [176]  SetAttr(CreateMap( {16} : varInputPlaceholder)) 
_B.setattr({"md-input-placeholder":_varinputplaceholder},_B);
// [177]  Return Me 
return _B;
// End Sub
};

// [181] Sub SetDense(varDense As Boolean) As VMAutoComplete 
_B.setdense=function(_vardense) {
// [182]  SetAttr(CreateMap( {17} : varDense)) 
_B.setattr({":md-dense":_vardense},_B);
// [183]  Return Me 
return _B;
// End Sub
};

// [187] Sub SetLayout(varLayout As Object) As VMAutoComplete 
_B.setlayout=function(_varlayout) {
// [188]  SetAttr(CreateMap( {18} : varLayout)) 
_B.setattr({"md-layout":_varlayout},_B);
// [189]  Return Me 
return _B;
// End Sub
};

// [193] Sub SetLayoutFloating(b As Boolean) As VMAutoComplete 'ignore 
_B.setlayoutfloating=function(_b) {
// [194]  SetAttr(CreateMap( {19} : {20} )) 
_B.setattr({"md-layout":"floating"},_B);
// [195]  Return Me 
return _B;
// End Sub
};

// [199] Sub SetLayoutBox(b As Boolean) As VMAutoComplete 'ignore 
_B.setlayoutbox=function(_b) {
// [200]  SetAttr(CreateMap( {21} : {22} )) 
_B.setattr({"md-layout":"box"},_B);
// [201]  Return Me 
return _B;
// End Sub
};

// [205] Sub SetOpenOnFocus(varOpenOnFocus As Boolean) As VMAutoComplete 
_B.setopenonfocus=function(_varopenonfocus) {
// [206]  SetAttr(CreateMap( {23} : varOpenOnFocus)) 
_B.setattr({":md-open-on-focus":_varopenonfocus},_B);
// [207]  Return Me 
return _B;
// End Sub
};

// [211] Sub SetName(varName As String) As VMAutoComplete 
_B.setname=function(_varname) {
// [212]  varName = varName.tolowercase 
_varname=_varname.toLowerCase();
// [213]  AutoComplete.SetName(varName, False) 
_B._autocomplete.setname(_varname,false);
// [214]  Return Me 
return _B;
// End Sub
};

// [218] Sub SetRequired(varRequired As Boolean) As VMAutoComplete 
_B.setrequired=function(_varrequired) {
// [219]  AutoComplete.SetRequired(varRequired) 
_B._autocomplete.setrequired(_varrequired);
// [220]  Return Me 
return _B;
// End Sub
};

// [223] Sub SetDisabled(b As Boolean) As VMAutoComplete 
_B.setdisabled=function(_b) {
// [224]  AutoComplete.SetDisabled(b) 
_B._autocomplete.setdisabled(_b);
// [225]  Return Me 
return _B;
// End Sub
};

// [229] private Sub SetOnChanged(searchTerm As Object) As VMAutoComplete 
_B.setonchanged=function() {
var _searchterm,_methodname,_cb;
// [230]  Dim methodName As String = {2} 
_methodname="" + _B._id + "_changed";
// [231]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [232]  Dim searchTerm As Object 
_searchterm={};
// [233]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(searchTerm)) 
_cb=function(_searchterm) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_searchterm,_B)};};
// [234]  SetAttr(CreateMap( {24} : methodName)) 
_B.setattr({"v-on:md-changed":_methodname},_B);
// [236]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [237]  Return Me 
return _B;
// End Sub
};

// [241] private Sub SetOnSelected As VMAutoComplete 
_B.setonselected=function() {
var _methodname,_sval,_cb;
// [242]  Dim methodName As String = {3} 
_methodname="" + _B._id + "_selected";
// [243]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [244]  Dim sval As Object 
_sval={};
// [245]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(sval)) 
_cb=function(_sval) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_sval,_B)};};
// [246]  SetAttr(CreateMap( {25} : methodName)) 
_B.setattr({"v-on:md-selected":_methodname},_B);
// [248]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [249]  Return Me 
return _B;
// End Sub
};

// [253] private Sub SetOnOpened As VMAutoComplete 
_B.setonopened=function() {
var _methodname,_e,_cb;
// [254]  Dim methodName As String = {4} 
_methodname="" + _B._id + "_opened";
// [255]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [256]  Dim e As BANanoEvent 
_e=null;
// [257]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(e)) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [258]  SetAttr(CreateMap( {26} : methodName)) 
_B.setattr({"v-on:md-opened":_methodname},_B);
// [260]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [261]  Return Me 
return _B;
// End Sub
};

// [265] private Sub SetOnClosed As VMAutoComplete 
_B.setonclosed=function() {
var _methodname,_e,_cb;
// [266]  Dim methodName As String = {5} 
_methodname="" + _B._id + "_opened";
// [267]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [268]  Dim e As BANanoEvent 
_e=null;
// [269]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(e)) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [270]  SetAttr(CreateMap( {27} : methodName)) 
_B.setattr({"v-on:md-closed":_methodname},_B);
// [272]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [273]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMAvatar  =========================== */
function banano_bananovuematerial_vmavatar() {
var _B=this;
_B._avatar= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._img= new banano_bananovuematerial_vmelement();

_B._hasimage=false;

_B._hasbadge=false;

_B._badge= new banano_bananovuematerial_vmbadge();

_B._module={};

// [13] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMAvatar 
_B.initialize=function(_v,_sid,_eventhandler) {
// [14]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [15]  vue = v 
_B._vue=_v;
// [16]  module = eventHandler 
_B._module=_eventhandler;
// [17]  Avatar.Initialize(vue, ID).SetTag( {6} ) 
_B._avatar.initialize(_B._vue,_B._id).settag("md-avatar");
// [18]  img.Initialize(vue, {0} ).SetTag( {7} ) 
_B._img.initialize(_B._vue,"" + _B._id + "img").settag("img");
// [19]  hasImage = False 
_B._hasimage=false;
// [20]  hasBadge = False 
_B._hasbadge=false;
// [21]  badge.Initialize(vue, {1} ) 
_B._badge.initialize(_B._vue,"" + _B._id + "badge");
// [22]  Return Me 
return _B;
// End Sub
};

// [25] Sub SetBadgeContent(counted As Int) As VMAvatar 
_B.setbadgecontent=function(_counted) {
// [26]  badge.SetContent(counted) 
_B._badge.setcontent(_counted);
// [27]  hasBadge = True 
_B._hasbadge=true;
// [28]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetBadgePrimary As VMAvatar 
_B.setbadgeprimary=function() {
// [32]  badge.SetPrimary(True) 
_B._badge.setprimary(true);
// [33]  hasBadge = True 
_B._hasbadge=true;
// [34]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetBadgeAccent As VMAvatar 
_B.setbadgeaccent=function() {
// [38]  badge.SetAccent(True) 
_B._badge.setaccent(true);
// [39]  hasBadge = True 
_B._hasbadge=true;
// [40]  Return Me 
return _B;
// End Sub
};

// [43] Sub SetBadgeOnTop As VMAvatar 
_B.setbadgeontop=function() {
// [44]  badge.SetPositionTop(True) 
_B._badge.setpositiontop(true);
// [45]  hasBadge = True 
_B._hasbadge=true;
// [46]  Return Me 
return _B;
// End Sub
};

// [49] Sub SetBadgeOnBottom As VMAvatar 
_B.setbadgeonbottom=function() {
// [50]  badge.SetPositionBottom(True) 
_B._badge.setpositionbottom(true);
// [51]  hasBadge = True 
_B._hasbadge=true;
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetBadgeDense As VMAvatar 
_B.setbadgedense=function() {
// [56]  badge.SetDense(True) 
_B._badge.setdense(true);
// [57]  hasBadge = True 
_B._hasbadge=true;
// [58]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetBadgeSquare As VMAvatar 
_B.setbadgesquare=function() {
// [62]  badge.SetSquare(True) 
_B._badge.setsquare(true);
// [63]  hasBadge = True 
_B._hasbadge=true;
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetDisabled(b As Boolean) As VMAvatar 
_B.setdisabled=function(_b) {
// [68]  Avatar.SetDisabled(b) 
_B._avatar.setdisabled(_b);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetVShow(vif As String) As VMAvatar 
_B.setvshow=function(_vif) {
// [73]  If vif = {8} Then Return Me 
if (_vif=="") { return _B;}
// [74]  Avatar.SetVShow(vif) 
_B._avatar.setvshow(_vif);
// [75]  Return Me 
return _B;
// End Sub
};

// [78] Sub SetMenuTrigger(b As Boolean) As VMAvatar 
_B.setmenutrigger=function(_b) {
// [79]  Avatar.SetAttr(CreateMap( {9} : b)) 
_B._avatar.setattr({":md-menu-trigger":_b});
// [80]  Return Me 
return _B;
// End Sub
};

// [84] Sub SetText(t As String) As VMAvatar 
_B.settext=function(_t) {
// [85]  Avatar.SetText(t) 
_B._avatar.settext(_t);
// [86]  Return Me 
return _B;
// End Sub
};

// [89] Sub SetTextRipple(t As String) As VMAvatar 
_B.settextripple=function(_t) {
var _el;
// [90]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [91]  el.Initialize(vue, {2} ).SetTag( {10} ).SetText(t) 
_el.initialize(_B._vue,"" + _B._id + "txt").settag("md-ripple").settext(_t);
// [92]  el.Pop(Avatar) 
_el.pop(_B._avatar);
// [93]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetPrimary(b As Boolean) As VMAvatar 
_B.setprimary=function(_b) {
// [97]  If b Then Avatar.AddClass( {11} ) 
if (_b) {_B._avatar.addclass("md-primary");}
// [98]  Return Me 
return _B;
// End Sub
};

// [101] Sub SetAccent(b As Boolean) As VMAvatar 
_B.setaccent=function(_b) {
// [102]  If b Then Avatar.AddClass( {12} ) 
if (_b) {_B._avatar.addclass("md-accent");}
// [103]  Return Me 
return _B;
// End Sub
};

// [106] Sub SetID(sid As String) As VMAvatar 
_B.setid=function(_sid) {
// [107]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [108]  Return Me 
return _B;
// End Sub
};

// [111] Sub SetElevation(e As Int) As VMAvatar 
_B.setelevation=function(_e) {
// [112]  Avatar.SetElevation(e) 
_B._avatar.setelevation(_e);
// [113]  Return Me 
return _B;
// End Sub
};

// [117] Sub SetToolTip(tt As String) As VMAvatar 
_B.settooltip=function(_tt) {
var _el;
// [118]  If tt = {13} Then Return Me 
if (_tt=="") { return _B;}
// [119]  Dim el As VMTooltip 
_el= new banano_bananovuematerial_vmtooltip();
// [120]  el.Initialize(vue, {3} ).SetText(tt) 
_el.initialize(_B._vue,"" + _B._id + "tlt").settext(_tt);
// [121]  el.Pop(Avatar) 
_el.pop(_B._avatar);
// [122]  Return Me 
return _B;
// End Sub
};

// [126] Sub AddClass(c As String) As VMAvatar 
_B.addclass=function(_c) {
// [127]  Avatar.AddClass(c) 
_B._avatar.addclass(_c);
// [128]  Return Me 
return _B;
// End Sub
};

// [131] Sub SetSmall(b As Boolean) As VMAvatar 
_B.setsmall=function(_b) {
// [132]  If b Then Avatar.AddClass( {14} ) 
if (_b) {_B._avatar.addclass("md-small");}
// [133]  Return Me 
return _B;
// End Sub
};

// [136] Sub SetIcon(icn As String) As VMAvatar 
_B.seticon=function(_icn) {
var _icon;
// [137]  If icn = {15} Then Return Me 
if (_icn=="") { return _B;}
// [138]  SetAvatarIcon(True) 
_B.setavataricon(true,_B);
// [139]  Dim icon As VMIcon 
_icon= new banano_bananovuematerial_vmicon();
// [140]  icon.Initialize(vue, {4} ).SetText(icn) 
_icon.initialize(_B._vue,"" + _B._id + "icn").settext(_icn);
// [141]  icon.pop(Avatar) 
_icon.pop(_B._avatar);
// [142]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetAvatarIcon(b As Boolean) As VMAvatar 
_B.setavataricon=function(_b) {
// [146]  If b Then Avatar.AddClass( {16} ) 
if (_b) {_B._avatar.addclass("md-avatar-icon");}
// [147]  Return Me 
return _B;
// End Sub
};

// [150] Sub SetLarge(b As Boolean) As VMAvatar 
_B.setlarge=function(_b) {
// [151]  If b Then Avatar.AddClass( {17} ) 
if (_b) {_B._avatar.addclass("md-large");}
// [152]  Return Me 
return _B;
// End Sub
};

// [156] Sub SetAttr(attr As Map) As VMAvatar 
_B.setattr=function(_attr) {
// [157]  Avatar.SetAttr(attr) 
_B._avatar.setattr(_attr);
// [158]  Return Me 
return _B;
// End Sub
};

// [161] Sub SetAlt(a As String) As VMAvatar 
_B.setalt=function(_a) {
// [162]  img.SetAlt(a) 
_B._img.setalt(_a);
// [163]  Return Me 
return _B;
// End Sub
};

// [166] Sub SetValue(imgURL As String) As VMAvatar 
_B.setvalue=function(_imgurl) {
var _lkey;
// [167]  If ID = {18} Then 
if (_B._id=="") {
// [168]  Log( {19} ) 
console.log("VMAvatar.SetValue: You need to set the ID of the image.");
// [169]  End If 
}
// [170]  Dim lkey As String = {5} 
_lkey="" + _B._id + "url";
// [171]  img.SetSRC(lkey,True) 
_B._img.setsrc(_lkey,true);
// [172]  vue.SetStateSingle(lkey, imgURL) 
_B._vue.setstatesingle(_lkey,_imgurl);
// [173]  hasImage = True 
_B._hasimage=true;
// [174]  Return Me 
return _B;
// End Sub
};

// [177] Sub ToString As String 
_B.tostring=function() {
var _strbtn;
// [178]  If hasImage Then img.Pop(Avatar) 
if (_B._hasimage) {_B._img.pop(_B._avatar);}
// [180]  If hasBadge Then 
if (_B._hasbadge) {
// [181]  Dim strBTN As String = Avatar.ToString 
_strbtn=_B._avatar.tostring();
// [182]  badge.SetText(strBTN) 
_B._badge.settext(_strbtn);
// [183]  Return badge.tostring 
return _B._badge.tostring();
// [184]  Else 
} else {
// [185]  Return Avatar.tostring 
return _B._avatar.tostring();
// [186]  End If 
}
// End Sub
};

// [189] Sub Render 
_B.render=function() {
// [190]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [193] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [194]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [197] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [198]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMBadge  =========================== */
function banano_bananovuematerial_vmbadge() {
var _B=this;
_B._badge= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._badvalue="";

// [11] Public Sub Initialize(v As BANanoVue, sid As String) As VMBadge 
_B.initialize=function(_v,_sid) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  Badge.Initialize(v, ID) 
_B._badge.initialize(_v,_B._id);
// [14]  Badge.SetTag( {1} ) 
_B._badge.settag("md-badge");
// [15]  vue = v 
_B._vue=_v;
// [16]  badValue = {0} 
_B._badvalue="" + _B._id + "value";
// [17]  If ID <> {2} Then 
if (_B._id!="") {
// [18]  vue.SetStateSingle(badValue, {3} ) 
_B._vue.setstatesingle(_B._badvalue,"0");
// [19]  SetAttr(CreateMap( {4} : badValue)) 
_B.setattr({"v-bind:md-content":_B._badvalue},_B);
// [20]  End If 
}
// [21]  Return Me 
return _B;
// End Sub
};

// [24] Sub SetDisabled(b As Boolean) As VMBadge 
_B.setdisabled=function(_b) {
// [25]  Badge.SetDisabled(b) 
_B._badge.setdisabled(_b);
// [26]  Return Me 
return _B;
// End Sub
};

// [29] Sub SetVShow(vif As String) As VMBadge 
_B.setvshow=function(_vif) {
// [30]  If vif = {5} Then Return Me 
if (_vif=="") { return _B;}
// [31]  Badge.SetVShow(vif) 
_B._badge.setvshow(_vif);
// [32]  Return Me 
return _B;
// End Sub
};

// [35] Sub SetButton(btn As VMButton) As VMBadge 
_B.setbutton=function(_btn) {
// [36]  btn.Pop(Badge) 
_btn.pop(_B._badge);
// [37]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetAvatar(avtr As VMAvatar) As VMBadge 
_B.setavatar=function(_avtr) {
// [41]  avtr.Pop(Badge) 
_avtr.pop(_B._badge);
// [42]  Return Me 
return _B;
// End Sub
};

// [46] Sub ToString As String 
_B.tostring=function() {
// [47]  Return Badge.ToString 
return _B._badge.tostring();
// End Sub
};

// [50] Sub SetPrimary(b As Boolean) As VMBadge 
_B.setprimary=function(_b) {
// [51]  If b Then Badge.SetPrimary(True) 
if (_b) {_B._badge.setprimary(true);}
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetAccent(b As Boolean) As VMBadge 
_B.setaccent=function(_b) {
// [56]  If b Then Badge.SetAccent(True) 
if (_b) {_B._badge.setaccent(true);}
// [57]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetVModel(k As String) As VMBadge 
_B.setvmodel=function(_k) {
// [62]  Badge.SetVModel(k) 
_B._badge.setvmodel(_k);
// [63]  Return Me 
return _B;
// End Sub
};

// [67] Sub Render 
_B.render=function() {
// [68]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [72] Sub SetText(t As Object) As VMBadge 
_B.settext=function(_t) {
// [73]  Badge.SetText(t) 
_B._badge.settext(_t);
// [74]  Return Me 
return _B;
// End Sub
};

// [78] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [79]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [83] Sub AddClass(c As String) As VMBadge 
_B.addclass=function(_c) {
// [84]  Badge.AddClass(c) 
_B._badge.addclass(_c);
// [85]  Return Me 
return _B;
// End Sub
};

// [89] Sub SetAttr(attr As Map) As VMBadge 
_B.setattr=function(_attr) {
// [90]  Badge.SetAttr(attr) 
_B._badge.setattr(_attr);
// [91]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetStyle(sm As Map) As VMBadge 
_B.setstyle=function(_sm) {
// [96]  Badge.SetStyle(sm) 
_B._badge.setstyle(_sm);
// [97]  Return Me 
return _B;
// End Sub
};

// [101] Sub AddChild(child As VMElement) As VMBadge 
_B.addchild=function(_child) {
var _childhtml;
// [102]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [103]  Badge.SetText(childHTML) 
_B._badge.settext(_childhtml);
// [104]  Return Me 
return _B;
// End Sub
};

// [108] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [109]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [110]  AddChild(childx) 
_B.addchild(_childx,_B);
// [111]  Next 
}
// End Sub
};

// [115] Sub SetPadding(p As Object) As VMBadge 
_B.setpadding=function(_p) {
// [116]  Badge.SetPaddingAll(p) 
_B._badge.setpaddingall(_p);
// [117]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetContent(varContent As Int) As VMBadge 
_B.setcontent=function(_varcontent) {
// [122]  vue.SetStateSingle(badValue,varContent) 
_B._vue.setstatesingle(_B._badvalue,_varcontent);
// [123]  Return Me 
return _B;
// End Sub
};

// [127] Sub SetPosition(varPosition As Object) As VMBadge 
_B.setposition=function(_varposition) {
// [128]  SetAttr(CreateMap( {6} : varPosition)) 
_B.setattr({"md-position":_varposition},_B);
// [129]  Return Me 
return _B;
// End Sub
};

// [133] Sub SetPositionTop(b As Boolean) As VMBadge 'ignore 
_B.setpositiontop=function(_b) {
// [134]  SetAttr(CreateMap( {7} : {8} )) 
_B.setattr({"md-position":"top"},_B);
// [135]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetPositionBottom(b As Boolean) As VMBadge 'ignore 
_B.setpositionbottom=function(_b) {
// [140]  SetAttr(CreateMap( {9} : {10} )) 
_B.setattr({"md-position":"bottom"},_B);
// [141]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetDense(varDense As Boolean) As VMBadge 
_B.setdense=function(_vardense) {
// [146]  If varDense Then SetAttr(CreateMap( {11} : varDense)) 
if (_vardense) {_B.setattr({":md-dense":_vardense},_B);}
// [147]  Return Me 
return _B;
// End Sub
};

// [151] Sub SetSquare(b As Boolean) As VMBadge 'ignore 
_B.setsquare=function(_b) {
// [152]  If b = True Then AddClass( {12} ) 
if (_b==true) {_B.addclass("md-square",_B);}
// [153]  Return Me 
return _B;
// End Sub
};

// [156] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [157]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMBottomBar  =========================== */
function banano_bananovuematerial_vmbottombar() {
var _B=this;
_B._bottombar= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, EventHandler As Object) As VMBottomBar 
_B.initialize=function(_v,_sid,_eventhandler) {
var _sval;
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  BottomBar.Initialize(v, ID) 
_B._bottombar.initialize(_v,_B._id);
// [14]  BottomBar.SetTag( {3} ) 
_B._bottombar.settag("md-bottom-bar");
// [15]  module = EventHandler 
_B._module=_eventhandler;
// [16]  vue = v 
_B._vue=_v;
// [17]  Dim sval As String 
_sval="";
// [18]  SetOnChanged(sval) 
_B.setonchanged(_sval,_B);
// [19]  Return Me 
return _B;
// End Sub
};

// [22] Sub CreateItem(sid As String) As VMBottomBarItem 
_B.createitem=function(_sid) {
var _el;
// [23]  Dim el As VMBottomBarItem 
_el= new banano_bananovuematerial_vmbottombaritem();
// [24]  el.Initialize(vue, sid, module) 
_el.initialize(_B._vue,_sid,_B._module);
// [25]  Return el 
return _el;
// End Sub
};

// [28] Sub AddItem(iID As String, iLabel As String, iIcon As String, badge As String) 
_B.additem=function(_iid,_ilabel,_iicon,_badge) {
var _item;
// [29]  Dim item As VMBottomBarItem 
_item= new banano_bananovuematerial_vmbottombaritem();
// [30]  item.Initialize(vue, iID, module) 
_item.initialize(_B._vue,_iid,_B._module);
// [31]  If badge = {4} Then 
if (_badge=="") {
// [32]  item.SetLabel(iLabel) 
_item.setlabel(_ilabel);
// [33]  item.SetIcon(iIcon) 
_item.seticon(_iicon);
// [34]  Else 
} else {
// [35]  item.SetIcon1(iIcon) 
_item.seticon1(_iicon);
// [36]  item.SetLabel1(iLabel) 
_item.setlabel1(_ilabel);
// [37]  item.SetBadge(badge) 
_item.setbadge(_badge);
// [38]  End If 
}
// [39]  item.Pop(BottomBar) 
_item.pop(_B._bottombar);
// End Sub
};

// [42] private Sub SetOnChanged(activeItem As String) As VMBottomBar 
_B.setonchanged=function(_activeitem) {
var _methodname,_cb;
// [43]  Dim MethodName As String = {0} 
_methodname="" + _B._id + "_changed";
// [44]  If SubExists(module, MethodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [45]  Dim cb As BANanoObject = BANano.CallBack(module, MethodName, Array(activeItem)) 
_cb=function(_activeitem) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_activeitem,_B)};};
// [46]  SetAttr(CreateMap( {5} : MethodName)) 
_B.setattr({"@md-changed":_methodname},_B);
// [48]  vue.SetCallBack(MethodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [49]  Return Me 
return _B;
// End Sub
};

// [53] Sub ToString As String 
_B.tostring=function() {
// [54]  Return BottomBar.ToString 
return _B._bottombar.tostring();
// End Sub
};

// [57] Sub SetVModel(k As String) As VMBottomBar 
_B.setvmodel=function(_k) {
// [58]  BottomBar.SetVModel(k) 
_B._bottombar.setvmodel(_k);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetVIf(vif As Object) As VMBottomBar 
_B.setvif=function(_vif) {
// [63]  BottomBar.SetVIf(vif) 
_B._bottombar.setvif(_vif);
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetVShow(vif As Object) As VMBottomBar 
_B.setvshow=function(_vif) {
// [68]  BottomBar.SetVShow(vif) 
_B._bottombar.setvshow(_vif);
// [69]  Return Me 
return _B;
// End Sub
};

// [73] Sub Render 
_B.render=function() {
// [74]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [78] Sub AddChild(child As VMElement) As VMBottomBar 
_B.addchild=function(_child) {
var _childhtml;
// [79]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [80]  BottomBar.SetText(childHTML) 
_B._bottombar.settext(_childhtml);
// [81]  Return Me 
return _B;
// End Sub
};

// [85] Sub SetText(t As Object) As VMBottomBar 
_B.settext=function(_t) {
// [86]  BottomBar.SetText(t) 
_B._bottombar.settext(_t);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetPrimary(b As Boolean) As VMBottomBar 
_B.setprimary=function(_b) {
// [91]  BottomBar.SetPrimary(True) 
_B._bottombar.setprimary(true);
// [92]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetAccent(b As Boolean) As VMBottomBar 
_B.setaccent=function(_b) {
// [96]  BottomBar.SetAccent(True) 
_B._bottombar.setaccent(true);
// [97]  Return Me 
return _B;
// End Sub
};

// [101] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [102]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [106] Sub AddClass(c As String) As VMBottomBar 
_B.addclass=function(_c) {
// [107]  BottomBar.AddClass(c) 
_B._bottombar.addclass(_c);
// [108]  Return Me 
return _B;
// End Sub
};

// [112] Sub SetAttr(attr As Map) As VMBottomBar 
_B.setattr=function(_attr) {
// [113]  BottomBar.SetAttr(attr) 
_B._bottombar.setattr(_attr);
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetStyle(sm As Map) As VMBottomBar 
_B.setstyle=function(_sm) {
// [119]  BottomBar.SetStyle(sm) 
_B._bottombar.setstyle(_sm);
// [120]  Return Me 
return _B;
// End Sub
};

// [124] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [125]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [126]  AddChild(childx) 
_B.addchild(_childx,_B);
// [127]  Next 
}
// End Sub
};

// [131] Sub SetPadding(p As Object) As VMBottomBar 
_B.setpadding=function(_p) {
// [132]  BottomBar.SetPaddingAll(p) 
_B._bottombar.setpaddingall(_p);
// [133]  Return Me 
return _B;
// End Sub
};

// [137] Sub SetType(varType As Object) As VMBottomBar 
_B.settype=function(_vartype) {
var _pp;
// [138]  Dim pp As String = {1} 
_pp="" + _B._id + "type";
// [139]  vue.SetStateSingle(pp, varType) 
_B._vue.setstatesingle(_pp,_vartype);
// [140]  SetAttr(CreateMap( {6} : pp)) 
_B.setattr({":md-type":_pp},_B);
// [141]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetTypeFixed(b As Boolean) As VMBottomBar 'ignore 
_B.settypefixed=function(_b) {
// [146]  SetType( {7} ) 
_B.settype("fixed",_B);
// [147]  Return Me 
return _B;
// End Sub
};

// [151] Sub SetTypeShift(b As Boolean) As VMBottomBar 'ignore 
_B.settypeshift=function(_b) {
// [152]  SetType( {8} ) 
_B.settype("shift",_B);
// [153]  Return Me 
return _B;
// End Sub
};

// [157] Sub SetActiveItem(varActiveItem As Object) As VMBottomBar 
_B.setactiveitem=function(_varactiveitem) {
var _pp;
// [158]  Dim pp As String = {2} 
_pp="" + _B._id + "activeitem";
// [159]  vue.SetStateSingle(pp, varActiveItem) 
_B._vue.setstatesingle(_pp,_varactiveitem);
// [160]  SetAttr(CreateMap( {9} : pp)) 
_B.setattr({":md-active-item":_pp},_B);
// [161]  Return Me 
return _B;
// End Sub
};

// [165] Sub SetSyncRoute(varSyncRoute As Boolean) As VMBottomBar 
_B.setsyncroute=function(_varsyncroute) {
// [166]  SetAttr(CreateMap( {10} : varSyncRoute)) 
_B.setattr({":md-sync-route":_varsyncroute},_B);
// [167]  Return Me 
return _B;
// End Sub
};

// [171] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [172]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMBottomBarItem  =========================== */
function banano_bananovuematerial_vmbottombaritem() {
var _B=this;
_B._bottombaritem= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMBottomBarItem 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  BottomBarItem.Initialize(v, ID) 
_B._bottombaritem.initialize(_v,_B._id);
// [14]  BottomBarItem.SetTag( {11} ) 
_B._bottombaritem.settag("md-bottom-bar-item");
// [15]  module = eventHandler 
_B._module=_eventhandler;
// [16]  vue = v 
_B._vue=_v;
// [17]  BottomBarItem.SetOnClick(module, {0} ) 
_B._bottombaritem.setonclick(_B._module,"" + _B._id + "_click");
// [18]  Return Me 
return _B;
// End Sub
};

// [21] Sub SetExact(b As Boolean) As VMBottomBarItem 
_B.setexact=function(_b) {
// [22]  BottomBarItem.SetExact(b) 
_B._bottombaritem.setexact(_b);
// [23]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetSVG(src As String) As VMBottomBarItem 
_B.setsvg=function(_src) {
var _icon;
// [28]  Dim icon As VMIcon 
_icon= new banano_bananovuematerial_vmicon();
// [29]  icon.Initialize(vue, {1} ).SetBottomBarIcon(True).SetSrc(src) 
_icon.initialize(_B._vue,"" + _B._id + "svg").setbottombaricon(true).setsrc(_src);
// [30]  icon.Pop(BottomBarItem) 
_icon.pop(_B._bottombaritem);
// [31]  Return Me 
return _B;
// End Sub
};

// [35] Sub SetIcon1(icn As String) As VMBottomBarItem 
_B.seticon1=function(_icn) {
var _icon;
// [36]  If icn = {12} Then Return Me 
if (_icn=="") { return _B;}
// [37]  Dim icon As VMIcon 
_icon= new banano_bananovuematerial_vmicon();
// [38]  icon.Initialize(vue, {2} ).SetBottomBarIcon(True).SetText(icn) 
_icon.initialize(_B._vue,"" + _B._id + "icon").setbottombaricon(true).settext(_icn);
// [39]  icon.Pop(BottomBarItem) 
_icon.pop(_B._bottombaritem);
// [40]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetLabel1(label As String) As VMBottomBarItem 
_B.setlabel1=function(_label) {
var _pp,_span;
// [45]  Dim pp As String = {3} 
_pp="" + _B._id + "label";
// [46]  vue.SetStateSingle(pp, label) 
_B._vue.setstatesingle(_pp,_label);
// [47]  Dim span As VMElement 
_span= new banano_bananovuematerial_vmelement();
// [48]  span.Initialize(vue, {4} ).SetTag( {13} ).AddClass( {14} ).SetText( {5} ) 
_span.initialize(_B._vue,"" + _B._id + "label").settag("span").addclass("md-bottom-bar-label").settext("{{ " + _pp + " }}");
// [49]  span.Pop(BottomBarItem) 
_span.pop(_B._bottombaritem);
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetBadge(badge As String) As VMBottomBarItem 
_B.setbadge=function(_badge) {
var _badgecontent,_i;
// [54]  Dim badgeContent As String = {6} 
_badgecontent="" + _B._id + "badgevalue";
// [55]  vue.SetStateSingle(badgeContent, badge) 
_B._vue.setstatesingle(_badgecontent,_badge);
// [56]  Dim i As VMElement 
_i= new banano_bananovuematerial_vmelement();
// [57]  i.Initialize(vue, {7} ).SetTag( {15} ).AddClass( {16} ).SetText( {8} ) 
_i.initialize(_B._vue,"" + _B._id + "badge").settag("i").addclass("bottomitembadge").settext("{{ " + _badgecontent + " }}");
// [58]  i.Pop(BottomBarItem) 
_i.pop(_B._bottombaritem);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetTo(t As String) As VMBottomBarItem 
_B.setto=function(_t) {
// [63]  BottomBarItem.SetTo(t) 
_B._bottombaritem.setto(_t);
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub ToString As String 
_B.tostring=function() {
// [69]  Return BottomBarItem.ToString 
return _B._bottombaritem.tostring();
// End Sub
};

// [72] Sub SetVIf(vif As Object) As VMBottomBarItem 
_B.setvif=function(_vif) {
// [73]  BottomBarItem.SetVIf(vif) 
_B._bottombaritem.setvif(_vif);
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SetVShow(vif As Object) As VMBottomBarItem 
_B.setvshow=function(_vif) {
// [78]  BottomBarItem.SetVShow(vif) 
_B._bottombaritem.setvshow(_vif);
// [79]  Return Me 
return _B;
// End Sub
};

// [83] Sub Render 
_B.render=function() {
// [84]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [88] Sub AddChild(child As VMElement) As VMBottomBarItem 
_B.addchild=function(_child) {
var _childhtml;
// [89]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [90]  BottomBarItem.SetText(childHTML) 
_B._bottombaritem.settext(_childhtml);
// [91]  Return Me 
return _B;
// End Sub
};

// [94] Sub SetPrimary(b As Boolean) As VMBottomBarItem 
_B.setprimary=function(_b) {
// [95]  BottomBarItem.SetPrimary(True) 
_B._bottombaritem.setprimary(true);
// [96]  Return Me 
return _B;
// End Sub
};

// [99] Sub SetAccent(b As Boolean) As VMBottomBarItem 
_B.setaccent=function(_b) {
// [100]  BottomBarItem.SetAccent(True) 
_B._bottombaritem.setaccent(true);
// [101]  Return Me 
return _B;
// End Sub
};

// [105] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [106]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [110] Sub AddClass(c As String) As VMBottomBarItem 
_B.addclass=function(_c) {
// [111]  BottomBarItem.AddClass(c) 
_B._bottombaritem.addclass(_c);
// [112]  Return Me 
return _B;
// End Sub
};

// [116] Sub SetAttr(attr As Map) As VMBottomBarItem 
_B.setattr=function(_attr) {
// [117]  BottomBarItem.SetAttr(attr) 
_B._bottombaritem.setattr(_attr);
// [118]  Return Me 
return _B;
// End Sub
};

// [122] Sub SetStyle(sm As Map) As VMBottomBarItem 
_B.setstyle=function(_sm) {
// [123]  BottomBarItem.SetStyle(sm) 
_B._bottombaritem.setstyle(_sm);
// [124]  Return Me 
return _B;
// End Sub
};

// [128] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [129]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [130]  AddChild(childx) 
_B.addchild(_childx,_B);
// [131]  Next 
}
// End Sub
};

// [135] Sub SetPadding(p As Object) As VMBottomBarItem 
_B.setpadding=function(_p) {
// [136]  BottomBarItem.SetPaddingAll(p) 
_B._bottombaritem.setpaddingall(_p);
// [137]  Return Me 
return _B;
// End Sub
};

// [141] Sub SetId(varId As Object) As VMBottomBarItem 
_B.setid=function(_varid) {
// [142]  SetAttr(CreateMap( {17} : varId)) 
_B.setattr({"id":_varid},_B);
// [143]  Return Me 
return _B;
// End Sub
};

// [147] Sub SetLabel(varLabel As String) As VMBottomBarItem 
_B.setlabel=function(_varlabel) {
var _pp;
// [148]  Dim pp As String = {9} 
_pp="" + _B._id + "label";
// [149]  vue.SetStateSingle(pp, varLabel) 
_B._vue.setstatesingle(_pp,_varlabel);
// [150]  SetAttr(CreateMap( {18} : pp)) 
_B.setattr({":md-label":_pp},_B);
// [151]  Return Me 
return _B;
// End Sub
};

// [155] Sub SetIcon(varIcon As Object) As VMBottomBarItem 
_B.seticon=function(_varicon) {
var _pp;
// [156]  Dim pp As String = {10} 
_pp="" + _B._id + "icon";
// [157]  vue.SetStateSingle(pp, varIcon) 
_B._vue.setstatesingle(_pp,_varicon);
// [158]  SetAttr(CreateMap( {19} : pp)) 
_B.setattr({":md-icon":_pp},_B);
// [159]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetDisabled(varDisabled As Boolean) As VMBottomBarItem 
_B.setdisabled=function(_vardisabled) {
// [164]  BottomBarItem.SetDisabled(varDisabled) 
_B._bottombaritem.setdisabled(_vardisabled);
// [165]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMButton  =========================== */
function banano_bananovuematerial_vmbutton() {
var _B=this;
_B._button= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hasbadge=false;

_B._badge= new banano_bananovuematerial_vmbadge();

// [10] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMButton 
_B.initialize=function(_v,_sid,_eventhandler) {
// [11]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [12]  vue = v 
_B._vue=_v;
// [13]  Button.Initialize(vue, ID).SetTag( {5} ) 
_B._button.initialize(_B._vue,_B._id).settag("md-button");
// [14]  If ID <> {6} Then 
if (_B._id!="") {
// [15]  hasBadge = False 
_B._hasbadge=false;
// [16]  badge.Initialize(vue, {0} ) 
_B._badge.initialize(_B._vue,"" + _B._id + "badge");
// [17]  End If 
}
// [18]  Button.SetOnClick(eventHandler, {1} ) 
_B._button.setonclick(_eventhandler,"" + _B._id + "_click");
// [19]  Return Me 
return _B;
// End Sub
};

// [22] public Sub RemoveAttr(sName As String) As VMButton 
_B.removeattr=function(_sname) {
// [23]  Button.RemoveAttr(sName) 
_B._button.removeattr(_sname);
// [24]  Return Me 
return _B;
// End Sub
};

// [27] Sub Hide 
_B.hide=function() {
// [28]  Button.hide 
_B._button.hide();
// End Sub
};

// [31] Sub Show 
_B.show=function() {
// [32]  Button.show 
_B._button.show();
// End Sub
};

// [36] Sub SetFabFixed(b As Boolean) As VMButton 
_B.setfabfixed=function(_b) {
// [37]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [38]  Button.AddClass( {7} ) 
_B._button.addclass("md-fixed");
// [39]  Return Me 
return _B;
// End Sub
};

// [42] Sub SetFab(b As Boolean) As VMButton 
_B.setfab=function(_b) {
// [43]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [44]  Button.AddClass( {8} ) 
_B._button.addclass("md-fab");
// [45]  Return Me 
return _B;
// End Sub
};

// [48] Sub SetFabPosition(pos As String) As VMButton 
_B.setfabposition=function(_pos) {
// [49]  If pos = {9} Then Return Me 
if (_pos=="") { return _B;}
// [50]  Button.AddClass(pos) 
_B._button.addclass(_pos);
// [51]  Return Me 
return _B;
// End Sub
};

// [54] Sub SetFabPositionTopRight As VMButton 
_B.setfabpositiontopright=function() {
// [55]  SetFabPosition( {10} ) 
_B.setfabposition("md-fab-top-right",_B);
// [56]  Return Me 
return _B;
// End Sub
};

// [59] Sub SetFabPositionTopCenter As VMButton 
_B.setfabpositiontopcenter=function() {
// [60]  SetFabPosition( {11} ) 
_B.setfabposition("md-fab-top-center",_B);
// [61]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetFabPositionTopLeft As VMButton 
_B.setfabpositiontopleft=function() {
// [65]  SetFabPosition( {12} ) 
_B.setfabposition("md-fab-top-left",_B);
// [66]  Return Me 
return _B;
// End Sub
};

// [69] Sub SetFabPositionBottomRight As VMButton 
_B.setfabpositionbottomright=function() {
// [70]  SetFabPosition( {13} ) 
_B.setfabposition("md-fab-bottom-right",_B);
// [71]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetFabPositionBottomCenter As VMButton 
_B.setfabpositionbottomcenter=function() {
// [75]  SetFabPosition( {14} ) 
_B.setfabposition("md-fab-bottom-center",_B);
// [76]  Return Me 
return _B;
// End Sub
};

// [79] Sub SetFabPositionBottomLeft As VMButton 
_B.setfabpositionbottomleft=function() {
// [80]  SetFabPosition( {15} ) 
_B.setfabposition("md-fab-bottom-left",_B);
// [81]  Return Me 
return _B;
// End Sub
};

// [85] Sub SetOnClick(targetModule As Object) As VMButton 
_B.setonclick=function(_targetmodule) {
// [86]  Button.SetOnClick(targetModule, {2} ) 
_B._button.setonclick(_targetmodule,"" + _B._id + "_click");
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetBadgeContent(counted As Int) As VMButton 
_B.setbadgecontent=function(_counted) {
// [91]  badge.SetContent(counted) 
_B._badge.setcontent(_counted);
// [92]  hasBadge = True 
_B._hasbadge=true;
// [93]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetBadgePrimary As VMButton 
_B.setbadgeprimary=function() {
// [97]  badge.SetPrimary(True) 
_B._badge.setprimary(true);
// [98]  hasBadge = True 
_B._hasbadge=true;
// [99]  Return Me 
return _B;
// End Sub
};

// [102] Sub SetBadgeAccent As VMButton 
_B.setbadgeaccent=function() {
// [103]  badge.SetAccent(True) 
_B._badge.setaccent(true);
// [104]  hasBadge = True 
_B._hasbadge=true;
// [105]  Return Me 
return _B;
// End Sub
};

// [108] Sub SetBadgeOnTop As VMButton 
_B.setbadgeontop=function() {
// [109]  badge.SetPositionTop(True) 
_B._badge.setpositiontop(true);
// [110]  hasBadge = True 
_B._hasbadge=true;
// [111]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetBadgeOnBottom As VMButton 
_B.setbadgeonbottom=function() {
// [115]  badge.SetPositionBottom(True) 
_B._badge.setpositionbottom(true);
// [116]  hasBadge = True 
_B._hasbadge=true;
// [117]  Return Me 
return _B;
// End Sub
};

// [120] Sub SetBadgeDense As VMButton 
_B.setbadgedense=function() {
// [121]  badge.SetDense(True) 
_B._badge.setdense(true);
// [122]  hasBadge = True 
_B._hasbadge=true;
// [123]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetBadgeSquare As VMButton 
_B.setbadgesquare=function() {
// [127]  badge.SetSquare(True) 
_B._badge.setsquare(true);
// [128]  hasBadge = True 
_B._hasbadge=true;
// [129]  Return Me 
return _B;
// End Sub
};

// [133] Sub SetTabIndex(ti As String) As VMButton 
_B.settabindex=function(_ti) {
// [134]  If ti = {16} Then Return Me 
if (_ti=="") { return _B;}
// [135]  Button.SetTabIndex(ti) 
_B._button.settabindex(_ti);
// [136]  Return Me 
return _B;
// End Sub
};

// [140] Sub SetStyle(sm As Map) As VMButton 
_B.setstyle=function(_sm) {
// [141]  Button.SetStyle(sm) 
_B._button.setstyle(_sm);
// [142]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetVIf(vif As String) As VMButton 
_B.setvif=function(_vif) {
// [146]  Button.SetVIf(vif) 
_B._button.setvif(_vif);
// [147]  Return Me 
return _B;
// End Sub
};

// [150] Sub SetID(iID As String, bind As Boolean) As VMButton 
_B.setid=function(_iid,_bind) {
// [151]  Button.SetID(iID,bind) 
_B._button.setid(_iid,_bind);
// [152]  Return Me 
return _B;
// End Sub
};

// [155] Sub SetName(nam As String, bind As Boolean) As VMButton 
_B.setname=function(_nam,_bind) {
// [156]  Button.SetName(nam, bind) 
_B._button.setname(_nam,_bind);
// [157]  Return Me 
return _B;
// End Sub
};

// [160] Sub SetKey(k As String, bind As Boolean) As VMButton 
_B.setkey=function(_k,_bind) {
// [161]  Button.SetKey(k, bind) 
_B._button.setkey(_k,_bind);
// [162]  Return Me 
return _B;
// End Sub
};

// [166] Sub SetMenuTrigger(b As Boolean) As VMButton 
_B.setmenutrigger=function(_b) {
// [167]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [168]  Button.SetAttr(CreateMap( {17} : True)) 
_B._button.setattr({"md-menu-trigger":true});
// [169]  Return Me 
return _B;
// End Sub
};

// [172] Sub SetVShow(vif As String) As VMButton 
_B.setvshow=function(_vif) {
// [173]  Button.SetVShow(vif) 
_B._button.setvshow(_vif);
// [174]  Return Me 
return _B;
// End Sub
};

// [178] Sub AddClass(c As String) As VMButton 
_B.addclass=function(_c) {
// [179]  Button.AddClass(c) 
_B._button.addclass(_c);
// [180]  Return Me 
return _B;
// End Sub
};

// [184] Sub SetAttr(attr As Map) As VMButton 
_B.setattr=function(_attr) {
// [185]  Button.SetAttr(attr) 
_B._button.setattr(_attr);
// [186]  Return Me 
return _B;
// End Sub
};

// [189] Sub SetDisabled(b As Boolean) As VMButton 
_B.setdisabled=function(_b) {
// [190]  Button.SetDisabled(b) 
_B._button.setdisabled(_b);
// [191]  Return Me 
return _B;
// End Sub
};

// [194] Sub SetListAction(b As Boolean) As VMButton 
_B.setlistaction=function(_b) {
// [195]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [196]  Button.SetListAction(True) 
_B._button.setlistaction(true);
// [197]  Return Me 
return _B;
// End Sub
};

// [200] Sub SetDense(b As Boolean) As VMButton 
_B.setdense=function(_b) {
// [201]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [202]  Button.SetDense(b) 
_B._button.setdense(_b);
// [203]  Return Me 
return _B;
// End Sub
};

// [206] Sub SetRaised(b As Boolean) As VMButton 
_B.setraised=function(_b) {
// [207]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [208]  Button.AddClass( {18} ) 
_B._button.addclass("md-raised");
// [209]  Return Me 
return _B;
// End Sub
};

// [212] Sub SetRipple(b As Boolean) As VMButton 
_B.setripple=function(_b) {
// [213]  Button.SetRipple(b) 
_B._button.setripple(_b);
// [214]  Return Me 
return _B;
// End Sub
};

// [217] Sub SetPrimary(b As Boolean) As VMButton 
_B.setprimary=function(_b) {
// [218]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [219]  Button.SetPrimary(b) 
_B._button.setprimary(_b);
// [220]  Return Me 
return _B;
// End Sub
};

// [223] Sub SetAccent(b As Boolean) As VMButton 
_B.setaccent=function(_b) {
// [224]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [225]  Button.SetAccent(b) 
_B._button.setaccent(_b);
// [226]  Return Me 
return _B;
// End Sub
};

// [229] Sub SetTo(t As String, bind As Boolean) As VMButton 
_B.setto=function(_t,_bind) {
// [230]  If t = {19} Then Return Me 
if (_t=="") { return _B;}
// [231]  If bind = True Then 
if (_bind==true) {
// [232]  t= t.tolowercase 
_t=_t.toLowerCase();
// [233]  SetAttr(CreateMap( {20} :t)) 
_B.setattr({":to":_t},_B);
// [234]  Else 
} else {
// [235]  Button.SetTo(t) 
_B._button.setto(_t);
// [236]  End If 
}
// [237]  Return Me 
return _B;
// End Sub
};

// [240] Sub SetHREF(h As String, bind As Boolean) As VMButton 
_B.sethref=function(_h,_bind) {
// [241]  If h = {21} Then Return Me 
if (_h=="") { return _B;}
// [242]  If bind = True Then 
if (_bind==true) {
// [243]  h = h.tolowercase 
_h=_h.toLowerCase();
// [244]  SetAttr(CreateMap( {22} :h)) 
_B.setattr({":href":_h},_B);
// [245]  Else 
} else {
// [246]  Button.sethref(h) 
_B._button.sethref(_h);
// [247]  End If 
}
// [248]  Return Me 
return _B;
// End Sub
};

// [251] Sub SetIconButton(b As Boolean) As VMButton 
_B.seticonbutton=function(_b) {
// [252]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [253]  Button.AddClass( {23} ) 
_B._button.addclass("md-icon-button");
// [254]  Return Me 
return _B;
// End Sub
};

// [257] Sub SetMini(b As Boolean) As VMButton 
_B.setmini=function(_b) {
// [258]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [259]  Button.AddClass( {24} ) 
_B._button.addclass("md-mini");
// [260]  Return Me 
return _B;
// End Sub
};

// [263] Sub SetPlain(b As Boolean) As VMButton 
_B.setplain=function(_b) {
// [264]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [265]  Button.AddClass( {25} ) 
_B._button.addclass("md-plain");
// [266]  Return Me 
return _B;
// End Sub
};

// [269] Sub SetIcon(icn As String) As VMButton 
_B.seticon=function(_icn) {
var _icon;
// [270]  If icn = {26} Then Return Me 
if (_icn=="") { return _B;}
// [271]  Dim icon As VMElement 
_icon= new banano_bananovuematerial_vmelement();
// [272]  icon.Initialize(vue, {3} ).SetTagIcon(True).SetText(icn) 
_icon.initialize(_B._vue,"" + _B._id + "icn").settagicon(true).settext(_icn);
// [273]  icon.Pop(Button) 
_icon.pop(_B._button);
// [274]  Return Me 
return _B;
// End Sub
};

// [277] Sub SetToolTip(tt As String) As VMButton 
_B.settooltip=function(_tt) {
var _el;
// [278]  If tt = {27} Then Return Me 
if (_tt=="") { return _B;}
// [279]  Dim el As VMTooltip 
_el= new banano_bananovuematerial_vmtooltip();
// [280]  el.Initialize(vue, {4} ).SetText(tt) 
_el.initialize(_B._vue,"" + _B._id + "tlt").settext(_tt);
// [281]  el.Pop(Button) 
_el.pop(_B._button);
// [282]  Return Me 
return _B;
// End Sub
};

// [285] Sub SetText(t As String) As VMButton 
_B.settext=function(_t) {
// [286]  If t = {28} Then Return Me 
if (_t=="") { return _B;}
// [287]  Button.SetText(t) 
_B._button.settext(_t);
// [288]  Return Me 
return _B;
// End Sub
};

// [291] Sub ToString As String 
_B.tostring=function() {
var _strbtn;
// [292]  If hasBadge Then 
if (_B._hasbadge) {
// [293]  Dim strBTN As String = Button.ToString 
_strbtn=_B._button.tostring();
// [294]  badge.SetText(strBTN) 
_B._badge.settext(_strbtn);
// [295]  Return badge.tostring 
return _B._badge.tostring();
// [296]  Else 
} else {
// [297]  Return Button.tostring 
return _B._button.tostring();
// [298]  End If 
}
// End Sub
};

// [301] Sub Render 
_B.render=function() {
// [302]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [305] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [306]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [310] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [311]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMCard  =========================== */
function banano_bananovuematerial_vmcard() {
var _B=this;
_B._card= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._header= new banano_bananovuematerial_vmelement();

_B._content= new banano_bananovuematerial_vmelement();

_B._actions= new banano_bananovuematerial_vmcardactions();

_B._headertext= new banano_bananovuematerial_vmelement();

_B._media= new banano_bananovuematerial_vmcardmedia();

_B._monside=false;

_B._avatar= new banano_bananovuematerial_vmavatar();

_B._module={};

// [18] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMCard 
_B.initialize=function(_v,_sid,_eventhandler) {
// [19]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [20]  Card.Initialize(v, ID) 
_B._card.initialize(_v,_B._id);
// [21]  Card.SetTag( {9} ) 
_B._card.settag("md-card");
// [22]  vue = v 
_B._vue=_v;
// [23]  module = eventHandler 
_B._module=_eventhandler;
// [24]  Header.Initialize(vue, {0} ).SetTag( {10} ) 
_B._header.initialize(_B._vue,"" + _B._id + "ch").settag("md-card-header");
// [25]  Content.Initialize(vue, {1} ).SetTag( {11} ) 
_B._content.initialize(_B._vue,"" + _B._id + "cc").settag("md-card-content");
// [26]  Actions.Initialize(vue, {2} ) 
_B._actions.initialize(_B._vue,"" + _B._id + "actions");
// [27]  HeaderText.Initialize(vue, {3} ).SetTag( {12} ) 
_B._headertext.initialize(_B._vue,"" + _B._id + "cht").settag("md-card-header-text");
// [28]  Media.Initialize(vue, {4} ) 
_B._media.initialize(_B._vue,"" + _B._id + "media");
// [29]  monside = False 
_B._monside=false;
// [30]  Avatar.Initialize(vue, {5} ,module) 
_B._avatar.initialize(_B._vue,"" + _B._id + "avatar",_B._module);
// [31]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetAvatar(imgURL As String, imgAlt As String) As VMCard 
_B.setavatar=function(_imgurl,_imgalt) {
// [35]  Avatar.SetValue(imgURL) 
_B._avatar.setvalue(_imgurl);
// [36]  Avatar.SetAlt(imgAlt) 
_B._avatar.setalt(_imgalt);
// [37]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetMediaOnSide(b As Boolean) As VMCard 
_B.setmediaonside=function(_b) {
// [41]  monside = b 
_B._monside=_b;
// [42]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetPrimary(b As Boolean) As VMCard 
_B.setprimary=function(_b) {
// [46]  Card.SetPrimary(True) 
_B._card.setprimary(true);
// [47]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetAccent(b As Boolean) As VMCard 
_B.setaccent=function(_b) {
// [51]  Card.SetAccent(True) 
_B._card.setaccent(true);
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetMediaBig(b As Boolean) As VMCard 
_B.setmediabig=function(_b) {
// [56]  Media.SetBig(b) 
_B._media.setbig(_b);
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetMediaMedium(b As Boolean) As VMCard 
_B.setmediamedium=function(_b) {
// [61]  Media.SetMedium(b) 
_B._media.setmedium(_b);
// [62]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetTitle(t As String) As VMCard 
_B.settitle=function(_t) {
var _title;
// [66]  Dim title As VMElement 
_title= new banano_bananovuematerial_vmelement();
// [67]  title.Initialize(vue, {6} ).SetTag( {13} ).SetTitle(True).SetText(t) 
_title.initialize(_B._vue,"" + _B._id + "title").settag("div").settitle(true).settext(_t);
// [68]  title.Pop(HeaderText) 
_title.pop(_B._headertext);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetImage(imgURL As String, alt As String) As VMCard 
_B.setimage=function(_imgurl,_alt) {
var _img;
// [73]  Dim img As VMImage 
_img= new banano_bananovuematerial_vmimage();
// [74]  img.Initialize(vue, {7} ,module).SetValue(imgURL,True) 
_img.initialize(_B._vue,"" + _B._id + "image",_B._module).setvalue(_imgurl,true);
// [75]  img.SetAlt(alt) 
_img.setalt(_alt);
// [76]  img.Pop(Media.CardMedia) 
_img.pop(_B._media._cardmedia);
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetSubHeading(t As String) As VMCard 
_B.setsubheading=function(_t) {
var _title;
// [81]  Dim title As VMElement 
_title= new banano_bananovuematerial_vmelement();
// [82]  title.Initialize(vue, {8} ).SetTag( {14} ).SetSubHead(True).SetText(t) 
_title.initialize(_B._vue,"" + _B._id + "subheading").settag("div").setsubhead(true).settext(_t);
// [83]  title.Pop(HeaderText) 
_title.pop(_B._headertext);
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub AddAction(btnID As String, btnText As String) As VMCard 
_B.addaction=function(_btnid,_btntext) {
var _btn;
// [88]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [89]  btn.Initialize(vue,btnID, module).SetText(btnText) 
_btn.initialize(_B._vue,_btnid,_B._module).settext(_btntext);
// [90]  btn.Pop(Actions.CardActions) 
_btn.pop(_B._actions._cardactions);
// [91]  Return Me 
return _B;
// End Sub
};

// [94] Sub SetContent(c As String) As VMCard 
_B.setcontent=function(_c) {
// [95]  Content.SetText(c) 
_B._content.settext(_c);
// [96]  Return Me 
return _B;
// End Sub
};

// [100] Sub ToString As String 
_B.tostring=function() {
// [102]  HeaderText.Pop(Header) 
_B._headertext.pop(_B._header);
// [103]  If monside Then 
if (_B._monside) {
// [104]  Media.Pop(Header) 
_B._media.pop(_B._header);
// [105]  Else 
} else {
// [106]  Media.Pop(Card) 
_B._media.pop(_B._card);
// [107]  End If 
}
// [108]  Header.Pop(Card) 
_B._header.pop(_B._card);
// [109]  Content.Pop(Card) 
_B._content.pop(_B._card);
// [110]  Actions.Pop(Card) 
_B._actions.pop(_B._card);
// [111]  Return Card.ToString 
return _B._card.tostring();
// End Sub
};

// [114] Sub SetVModel(k As String) As VMCard 
_B.setvmodel=function(_k) {
// [115]  Card.SetVModel(k) 
_B._card.setvmodel(_k);
// [116]  Return Me 
return _B;
// End Sub
};

// [119] Sub SetVIf(vif As Object) As VMCard 
_B.setvif=function(_vif) {
// [120]  Card.SetVIf(vif) 
_B._card.setvif(_vif);
// [121]  Return Me 
return _B;
// End Sub
};

// [124] Sub SetVShow(vif As Object) As VMCard 
_B.setvshow=function(_vif) {
// [125]  Card.SetVShow(vif) 
_B._card.setvshow(_vif);
// [126]  Return Me 
return _B;
// End Sub
};

// [130] Sub Render 
_B.render=function() {
// [131]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [135] Sub AddChild(child As VMElement) As VMCard 
_B.addchild=function(_child) {
var _childhtml;
// [136]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [137]  Card.SetText(childHTML) 
_B._card.settext(_childhtml);
// [138]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetText(t As Object) As VMCard 
_B.settext=function(_t) {
// [143]  Card.SetText(t) 
_B._card.settext(_t);
// [144]  Return Me 
return _B;
// End Sub
};

// [148] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [149]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [153] Sub AddClass(c As String) As VMCard 
_B.addclass=function(_c) {
// [154]  Card.AddClass(c) 
_B._card.addclass(_c);
// [155]  Return Me 
return _B;
// End Sub
};

// [159] Sub SetAttr(attr As Map) As VMCard 
_B.setattr=function(_attr) {
// [160]  Card.SetAttr(attr) 
_B._card.setattr(_attr);
// [161]  Return Me 
return _B;
// End Sub
};

// [165] Sub SetStyle(sm As Map) As VMCard 
_B.setstyle=function(_sm) {
// [166]  Card.SetStyle(sm) 
_B._card.setstyle(_sm);
// [167]  Return Me 
return _B;
// End Sub
};

// [171] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [172]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [173]  AddChild(childx) 
_B.addchild(_childx,_B);
// [174]  Next 
}
// End Sub
};

// [178] Sub SetPadding(p As Object) As VMCard 
_B.setpadding=function(_p) {
// [179]  Card.SetPaddingAll(p) 
_B._card.setpaddingall(_p);
// [180]  Return Me 
return _B;
// End Sub
};

// [184] Sub SetWithHover(varWith As Boolean) As VMCard 
_B.setwithhover=function(_varwith) {
// [185]  SetAttr(CreateMap( {15} : varWith)) 
_B.setattr({":md-with-hover":_varwith},_B);
// [186]  Return Me 
return _B;
// End Sub
};

// [190] Sub SetTheme(varTheme As Object) As VMCard 
_B.settheme=function(_vartheme) {
// [191]  SetAttr(CreateMap( {16} : varTheme)) 
_B.setattr({"md-theme":_vartheme},_B);
// [192]  Return Me 
return _B;
// End Sub
};

// [196] Sub SetThemePrimary(b As Boolean) As VMCard 'ignore 
_B.setthemeprimary=function(_b) {
// [197]  AddClass( {17} ) 
_B.addclass("md-primary",_B);
// [198]  Return Me 
return _B;
// End Sub
};

// [202] Sub SetThemeAccent(b As Boolean) As VMCard 'ignore 
_B.setthemeaccent=function(_b) {
// [203]  AddClass( {18} ) 
_B.addclass("md-accent",_B);
// [204]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMCardActions  =========================== */
function banano_bananovuematerial_vmcardactions() {
var _B=this;
_B._cardactions= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMCardActions 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  CardActions.Initialize(v, ID) 
_B._cardactions.initialize(_v,_B._id);
// [13]  CardActions.SetTag( {0} ) 
_B._cardactions.settag("md-card-actions");
// [14]  vue = v 
_B._vue=_v;
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub ToString As String 
_B.tostring=function() {
// [20]  Return CardActions.ToString 
return _B._cardactions.tostring();
// End Sub
};

// [23] Sub SetVModel(k As String) As VMCardActions 
_B.setvmodel=function(_k) {
// [24]  CardActions.SetVModel(k) 
_B._cardactions.setvmodel(_k);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetVIf(vif As Object) As VMCardActions 
_B.setvif=function(_vif) {
// [29]  CardActions.SetVIf(vif) 
_B._cardactions.setvif(_vif);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetVShow(vif As Object) As VMCardActions 
_B.setvshow=function(_vif) {
// [34]  CardActions.SetVShow(vif) 
_B._cardactions.setvshow(_vif);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub Render 
_B.render=function() {
// [40]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [44] Sub AddChild(child As VMElement) As VMCardActions 
_B.addchild=function(_child) {
var _childhtml;
// [45]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [46]  CardActions.SetText(childHTML) 
_B._cardactions.settext(_childhtml);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetText(t As Object) As VMCardActions 
_B.settext=function(_t) {
// [52]  CardActions.SetText(t) 
_B._cardactions.settext(_t);
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [58]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [62] Sub AddClass(c As String) As VMCardActions 
_B.addclass=function(_c) {
// [63]  CardActions.AddClass(c) 
_B._cardactions.addclass(_c);
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetAttr(attr As Map) As VMCardActions 
_B.setattr=function(_attr) {
// [69]  CardActions.SetAttr(attr) 
_B._cardactions.setattr(_attr);
// [70]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetStyle(sm As Map) As VMCardActions 
_B.setstyle=function(_sm) {
// [75]  CardActions.SetStyle(sm) 
_B._cardactions.setstyle(_sm);
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [81]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [82]  AddChild(childx) 
_B.addchild(_childx,_B);
// [83]  Next 
}
// End Sub
};

// [87] Sub SetPadding(p As Object) As VMCardActions 
_B.setpadding=function(_p) {
// [88]  CardActions.SetPaddingAll(p) 
_B._cardactions.setpaddingall(_p);
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetAlignment(varAlignment As Object) As VMCardActions 
_B.setalignment=function(_varalignment) {
// [94]  SetAttr(CreateMap( {1} : varAlignment)) 
_B.setattr({"md-alignment":_varalignment},_B);
// [95]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMCardArea  =========================== */
function banano_bananovuematerial_vmcardarea() {
var _B=this;
_B._cardarea= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMCardArea 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  CardArea.Initialize(v, ID) 
_B._cardarea.initialize(_v,_B._id);
// [13]  CardArea.SetTag( {0} ) 
_B._cardarea.settag("md-card-area");
// [14]  vue = v 
_B._vue=_v;
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub ToString As String 
_B.tostring=function() {
// [20]  Return CardArea.ToString 
return _B._cardarea.tostring();
// End Sub
};

// [23] Sub SetVModel(k As String) As VMCardArea 
_B.setvmodel=function(_k) {
// [24]  CardArea.SetVModel(k) 
_B._cardarea.setvmodel(_k);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetVIf(vif As Object) As VMCardArea 
_B.setvif=function(_vif) {
// [29]  CardArea.SetVIf(vif) 
_B._cardarea.setvif(_vif);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetVShow(vif As Object) As VMCardArea 
_B.setvshow=function(_vif) {
// [34]  CardArea.SetVShow(vif) 
_B._cardarea.setvshow(_vif);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub Render 
_B.render=function() {
// [40]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [44] Sub AddChild(child As VMElement) As VMCardArea 
_B.addchild=function(_child) {
var _childhtml;
// [45]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [46]  CardArea.SetText(childHTML) 
_B._cardarea.settext(_childhtml);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetText(t As Object) As VMCardArea 
_B.settext=function(_t) {
// [52]  CardArea.SetText(t) 
_B._cardarea.settext(_t);
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [58]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [62] Sub AddClass(c As String) As VMCardArea 
_B.addclass=function(_c) {
// [63]  CardArea.AddClass(c) 
_B._cardarea.addclass(_c);
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetAttr(attr As Map) As VMCardArea 
_B.setattr=function(_attr) {
// [69]  CardArea.SetAttr(attr) 
_B._cardarea.setattr(_attr);
// [70]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetStyle(sm As Map) As VMCardArea 
_B.setstyle=function(_sm) {
// [75]  CardArea.SetStyle(sm) 
_B._cardarea.setstyle(_sm);
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [81]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [82]  AddChild(childx) 
_B.addchild(_childx,_B);
// [83]  Next 
}
// End Sub
};

// [87] Sub SetPadding(p As Object) As VMCardArea 
_B.setpadding=function(_p) {
// [88]  CardArea.SetPaddingAll(p) 
_B._cardarea.setpaddingall(_p);
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetInset(varInset As Boolean) As VMCardArea 
_B.setinset=function(_varinset) {
// [94]  SetAttr(CreateMap( {1} : varInset)) 
_B.setattr({":md-inset":_varinset},_B);
// [95]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMCardMedia  =========================== */
function banano_bananovuematerial_vmcardmedia() {
var _B=this;
_B._cardmedia= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMCardMedia 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  CardMedia.Initialize(v, ID) 
_B._cardmedia.initialize(_v,_B._id);
// [13]  CardMedia.SetTag( {0} ) 
_B._cardmedia.settag("md-card-media");
// [14]  vue = v 
_B._vue=_v;
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub ToString As String 
_B.tostring=function() {
// [20]  Return CardMedia.ToString 
return _B._cardmedia.tostring();
// End Sub
};

// [23] Sub SetVModel(k As String) As VMCardMedia 
_B.setvmodel=function(_k) {
// [24]  CardMedia.SetVModel(k) 
_B._cardmedia.setvmodel(_k);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetVIf(vif As Object) As VMCardMedia 
_B.setvif=function(_vif) {
// [29]  CardMedia.SetVIf(vif) 
_B._cardmedia.setvif(_vif);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetVShow(vif As Object) As VMCardMedia 
_B.setvshow=function(_vif) {
// [34]  CardMedia.SetVShow(vif) 
_B._cardmedia.setvshow(_vif);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub Render 
_B.render=function() {
// [40]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [44] Sub AddChild(child As VMElement) As VMCardMedia 
_B.addchild=function(_child) {
var _childhtml;
// [45]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [46]  CardMedia.SetText(childHTML) 
_B._cardmedia.settext(_childhtml);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetText(t As Object) As VMCardMedia 
_B.settext=function(_t) {
// [52]  CardMedia.SetText(t) 
_B._cardmedia.settext(_t);
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [58]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [62] Sub AddClass(c As String) As VMCardMedia 
_B.addclass=function(_c) {
// [63]  CardMedia.AddClass(c) 
_B._cardmedia.addclass(_c);
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetAttr(attr As Map) As VMCardMedia 
_B.setattr=function(_attr) {
// [69]  CardMedia.SetAttr(attr) 
_B._cardmedia.setattr(_attr);
// [70]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetStyle(sm As Map) As VMCardMedia 
_B.setstyle=function(_sm) {
// [75]  CardMedia.SetStyle(sm) 
_B._cardmedia.setstyle(_sm);
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [81]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [82]  AddChild(childx) 
_B.addchild(_childx,_B);
// [83]  Next 
}
// End Sub
};

// [87] Sub SetPadding(p As Object) As VMCardMedia 
_B.setpadding=function(_p) {
// [88]  CardMedia.SetPaddingAll(p) 
_B._cardmedia.setpaddingall(_p);
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetRatio(varRatio As Object) As VMCardMedia 
_B.setratio=function(_varratio) {
// [94]  SetAttr(CreateMap( {1} : varRatio)) 
_B.setattr({"md-ratio":_varratio},_B);
// [95]  Return Me 
return _B;
// End Sub
};

// [99] Sub SetMedium(varMedium As Boolean) As VMCardMedia 
_B.setmedium=function(_varmedium) {
// [100]  SetAttr(CreateMap( {2} : varMedium)) 
_B.setattr({":md-medium":_varmedium},_B);
// [101]  Return Me 
return _B;
// End Sub
};

// [105] Sub SetBig(varBig As Boolean) As VMCardMedia 
_B.setbig=function(_varbig) {
// [106]  SetAttr(CreateMap( {3} : varBig)) 
_B.setattr({":md-big":_varbig},_B);
// [107]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMChartKick  =========================== */
function banano_bananovuematerial_vmchartkick() {
var _B=this;
_B._chartkick= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

_B._series={};

_B._data={};

_B._colors=[];

_B._coptions="";

_B._xaxes= new banano_bananovuematerial_xaxestype();

_B._yaxes= new banano_bananovuematerial_xaxestype();

_B._overwriteoptions=false;

_B._title= new banano_bananovuematerial_titletype();

// [25] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMChartKick 
_B.initialize=function(_v,_sid,_eventhandler) {
// [26]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [27]  vue = v 
_B._vue=_v;
// [28]  ChartKick.Initialize(vue, ID) 
_B._chartkick.initialize(_B._vue,_B._id);
// [29]  module = eventHandler 
_B._module=_eventhandler;
// [30]  SetStyleSingle( {7} , {8} ) 
_B.setstylesingle("width","100%",_B);
// [31]  ChartKick.RemoveAttr( {9} ) 
_B._chartkick.removeattr(":required");
// [32]  coptions = {0} 
_B._coptions="" + _B._id + "options";
// [33]  SetDownload 
_B.setdownload(_B);
// [34]  SetAttrSingle( {10} , coptions) 
_B.setattrsingle(":library",_B._coptions,_B);
// [36]  Title.Initialize 
_B._title.initialize();
// [37]  Title.display = True 
_B._title._display=true;
// [38]  Title.position = {11} 
_B._title._position="top";
// [39]  Title.text = {12} 
_B._title._text="";
// [41]  OverwriteOptions = False 
_B._overwriteoptions=false;
// [42]  Reset 
_B.reset(_B);
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub Reset 
_B.reset=function() {
var _sl;
// [47]  series.Initialize 
_B._series={};
// [48]  data.Initialize 
_B._data={};
// [49]  colors.Initialize 
_B._colors.length=0;
// [50]  Dim sl As List 
_sl=[];
// [51]  sl.Initialize 
_sl.length=0;
// [52]  data.Put( {13} ,sl) 
_B._data["a"]=_sl;
// [53]  xAxes.Initialize 
_B._xaxes.initialize();
// [54]  xAxes.ticks.Initialize 
_B._xaxes._ticks.initialize();
// [55]  xAxes.gridLines.Initialize 
_B._xaxes._gridlines.initialize();
// [56]  xAxes.display = True 
_B._xaxes._display=true;
// [57]  xAxes.ticks.autoSkip = Null 
_B._xaxes._ticks._autoskip=null;
// [58]  xAxes.ticks.maxRotation = Null 
_B._xaxes._ticks._maxrotation=null;
// [59]  xAxes.ticks.minRotation = Null 
_B._xaxes._ticks._minrotation=null;
// [60]  xAxes.ticks.MinValue = Null 
_B._xaxes._ticks._minvalue=null;
// [61]  xAxes.ticks.MaxValue = Null 
_B._xaxes._ticks._maxvalue=null;
// [62]  xAxes.ticks.stepSize = Null 
_B._xaxes._ticks._stepsize=null;
// [63]  xAxes.ticks.beginAtZero = Null 
_B._xaxes._ticks._beginatzero=null;
// [65]  xAxes.gridLines.display = True 
_B._xaxes._gridlines._display=true;
// [66]  xAxes.gridLines.circular = False 
_B._xaxes._gridlines._circular=false;
// [67]  xAxes.gridLines.lineWidth = 1 
_B._xaxes._gridlines._linewidth=1;
// [68]  xAxes.gridLines.drawBorder = True 
_B._xaxes._gridlines._drawborder=true;
// [69]  xAxes.gridLines.drawOnChartArea = True 
_B._xaxes._gridlines._drawonchartarea=true;
// [70]  xAxes.gridLines.drawTicks = True 
_B._xaxes._gridlines._drawticks=true;
// [71]  xAxes.gridLines.tickMarkLength = 10 
_B._xaxes._gridlines._tickmarklength=10;
// [72]  xAxes.gridLines.zeroLineWidth = 1 
_B._xaxes._gridlines._zerolinewidth=1;
// [73]  xAxes.gridLines.offsetGridLines = False 
_B._xaxes._gridlines._offsetgridlines=false;
// [75]  yAxes.Initialize 
_B._yaxes.initialize();
// [76]  yAxes.ticks.Initialize 
_B._yaxes._ticks.initialize();
// [77]  yAxes.gridLines.Initialize 
_B._yaxes._gridlines.initialize();
// [78]  yAxes.display = True 
_B._yaxes._display=true;
// [79]  yAxes.ticks.autoSkip = Null 
_B._yaxes._ticks._autoskip=null;
// [80]  yAxes.ticks.maxRotation = Null 
_B._yaxes._ticks._maxrotation=null;
// [81]  yAxes.ticks.minRotation = Null 
_B._yaxes._ticks._minrotation=null;
// [82]  yAxes.ticks.MinValue = Null 
_B._yaxes._ticks._minvalue=null;
// [83]  yAxes.ticks.MaxValue = Null 
_B._yaxes._ticks._maxvalue=null;
// [84]  yAxes.ticks.stepSize = Null 
_B._yaxes._ticks._stepsize=null;
// [85]  yAxes.ticks.beginAtZero = Null 
_B._yaxes._ticks._beginatzero=null;
// [86]  yAxes.gridLines.display = True 
_B._yaxes._gridlines._display=true;
// [87]  yAxes.gridLines.circular = False 
_B._yaxes._gridlines._circular=false;
// [88]  yAxes.gridLines.lineWidth = 1 
_B._yaxes._gridlines._linewidth=1;
// [89]  yAxes.gridLines.drawBorder = True 
_B._yaxes._gridlines._drawborder=true;
// [90]  yAxes.gridLines.drawOnChartArea = True 
_B._yaxes._gridlines._drawonchartarea=true;
// [91]  yAxes.gridLines.drawTicks = True 
_B._yaxes._gridlines._drawticks=true;
// [92]  yAxes.gridLines.tickMarkLength = 10 
_B._yaxes._gridlines._tickmarklength=10;
// [93]  yAxes.gridLines.zeroLineWidth = 1 
_B._yaxes._gridlines._zerolinewidth=1;
// [94]  yAxes.gridLines.offsetGridLines = False 
_B._yaxes._gridlines._offsetgridlines=false;
// End Sub
};

// [98] Sub SetTitle(txt As String) As VMChartKick 
_B.settitle=function(_txt) {
// [99]  Title.text = txt 
_B._title._text=_txt;
// [100]  Return Me 
return _B;
// End Sub
};

// [103] private Sub BuildOptions 
_B.buildoptions=function() {
var _chartoptions,_scales,_xlist,_xticks,_xsis,_xgrid,_ylist,_ysis,_yticks,_ygrid,_titobj;
// [104]  Dim chartOptions As Map = CreateMap() 
_chartoptions={};
// [105]  Dim scales As Map = CreateMap() 
_scales={};
// [107]  Dim xList As List 
_xlist=[];
// [108]  Dim xticks As Map = CreateMap() 
_xticks={};
// [109]  Dim xsis As Map = CreateMap() 
_xsis={};
// [110]  Dim xgrid As Map = CreateMap() 
_xgrid={};
// [112]  xList.Initialize 
_xlist.length=0;
// [113]  If xAxes.ticks.autoSkip <> Null Then xticks.Put( {14} , xAxes.ticks.autoSkip) 
if (_B._xaxes._ticks._autoskip!=null) {_xticks["autoSkip"]=_B._xaxes._ticks._autoskip;}
// [114]  If xAxes.ticks.maxRotation <> Null Then xticks.Put( {15} , xAxes.ticks.maxRotation) 
if (_B._xaxes._ticks._maxrotation!=null) {_xticks["maxRotation"]=_B._xaxes._ticks._maxrotation;}
// [115]  If xAxes.ticks.minRotation <> Null Then xticks.Put( {16} , xAxes.ticks.minRotation) 
if (_B._xaxes._ticks._minrotation!=null) {_xticks["minRotation"]=_B._xaxes._ticks._minrotation;}
// [116]  If xAxes.ticks.MinValue <> Null Then xticks.Put( {17} , xAxes.ticks.MinValue) 
if (_B._xaxes._ticks._minvalue!=null) {_xticks["min"]=_B._xaxes._ticks._minvalue;}
// [117]  If xAxes.ticks.MaxValue <> Null Then xticks.Put( {18} , xAxes.ticks.MaxValue) 
if (_B._xaxes._ticks._maxvalue!=null) {_xticks["max"]=_B._xaxes._ticks._maxvalue;}
// [118]  If xAxes.ticks.stepSize <> Null Then xticks.Put( {19} , xAxes.ticks.stepSize) 
if (_B._xaxes._ticks._stepsize!=null) {_xticks["stepSize"]=_B._xaxes._ticks._stepsize;}
// [119]  If xAxes.ticks.beginAtZero <> Null Then xticks.Put( {20} , xAxes.ticks.beginAtZero) 
if (_B._xaxes._ticks._beginatzero!=null) {_xticks["beginAtZero"]=_B._xaxes._ticks._beginatzero;}
// [121]  xgrid.Put( {21} , xAxes.gridLines.display) 
_xgrid["display"]=_B._xaxes._gridlines._display;
// [122]  xgrid.Put( {22} ,xAxes.gridLines.circular) 
_xgrid["circular"]=_B._xaxes._gridlines._circular;
// [123]  xgrid.Put( {23} ,xAxes.gridLines.lineWidth) 
_xgrid["lineWidth"]=_B._xaxes._gridlines._linewidth;
// [124]  xgrid.Put( {24} ,xAxes.gridLines.drawBorder) 
_xgrid["drawBorder"]=_B._xaxes._gridlines._drawborder;
// [125]  xgrid.Put( {25} ,xAxes.gridLines.drawOnChartArea) 
_xgrid["drawOnChartArea"]=_B._xaxes._gridlines._drawonchartarea;
// [126]  xgrid.Put( {26} ,xAxes.gridLines.drawTicks) 
_xgrid["drawTicks"]=_B._xaxes._gridlines._drawticks;
// [127]  xgrid.Put( {27} ,xAxes.gridLines.tickMarkLength) 
_xgrid["tickMarkLength"]=_B._xaxes._gridlines._tickmarklength;
// [128]  xgrid.Put( {28} ,xAxes.gridLines.zeroLineWidth) 
_xgrid["zeroLineWidth"]=_B._xaxes._gridlines._zerolinewidth;
// [129]  xgrid.Put( {29} ,xAxes.gridLines.offsetGridLines) 
_xgrid["offsetGridLines"]=_B._xaxes._gridlines._offsetgridlines;
// [132]  xsis.Put( {30} , xAxes.display) 
_xsis["display"]=_B._xaxes._display;
// [133]  If xticks.Size > 0 Then xsis.Put( {31} , xticks) 
if (Object.keys(_xticks).length>0) {_xsis["ticks"]=_xticks;}
// [134]  If xgrid.Size > 0 Then xsis.Put( {32} , xgrid) 
if (Object.keys(_xgrid).length>0) {_xsis["gridLines"]=_xgrid;}
// [135]  xList.Add(xsis) 
_xlist.push(_xsis);
// [136]  scales.Put( {33} , xList) 
_scales["xAxes"]=_xlist;
// [138]  Dim yList As List 
_ylist=[];
// [139]  Dim ysis As Map = CreateMap() 
_ysis={};
// [140]  Dim yticks As Map = CreateMap() 
_yticks={};
// [141]  Dim ygrid As Map = CreateMap() 
_ygrid={};
// [143]  yList.Initialize 
_ylist.length=0;
// [144]  If yAxes.ticks.autoSkip <> Null Then yticks.Put( {34} , yAxes.ticks.autoSkip) 
if (_B._yaxes._ticks._autoskip!=null) {_yticks["autoSkip"]=_B._yaxes._ticks._autoskip;}
// [145]  If yAxes.ticks.maxRotation <> Null Then yticks.Put( {35} , yAxes.ticks.maxRotation) 
if (_B._yaxes._ticks._maxrotation!=null) {_yticks["maxRotation"]=_B._yaxes._ticks._maxrotation;}
// [146]  If yAxes.ticks.minRotation <> Null Then yticks.Put( {36} , yAxes.ticks.minRotation) 
if (_B._yaxes._ticks._minrotation!=null) {_yticks["minRotation"]=_B._yaxes._ticks._minrotation;}
// [147]  If yAxes.ticks.MinValue <> Null Then yticks.Put( {37} , yAxes.ticks.MinValue) 
if (_B._yaxes._ticks._minvalue!=null) {_yticks["min"]=_B._yaxes._ticks._minvalue;}
// [148]  If yAxes.ticks.MaxValue <> Null Then yticks.Put( {38} , yAxes.ticks.MaxValue) 
if (_B._yaxes._ticks._maxvalue!=null) {_yticks["max"]=_B._yaxes._ticks._maxvalue;}
// [149]  If yAxes.ticks.stepSize <> Null Then yticks.Put( {39} , yAxes.ticks.stepSize) 
if (_B._yaxes._ticks._stepsize!=null) {_yticks["stepSize"]=_B._yaxes._ticks._stepsize;}
// [150]  If yAxes.ticks.beginAtZero <> Null Then yticks.Put( {40} , yAxes.ticks.beginAtZero) 
if (_B._yaxes._ticks._beginatzero!=null) {_yticks["beginAtZero"]=_B._yaxes._ticks._beginatzero;}
// [152]  ygrid.Put( {41} , yAxes.gridLines.display) 
_ygrid["display"]=_B._yaxes._gridlines._display;
// [153]  ygrid.Put( {42} ,yAxes.gridLines.circular) 
_ygrid["circular"]=_B._yaxes._gridlines._circular;
// [154]  ygrid.Put( {43} ,yAxes.gridLines.lineWidth) 
_ygrid["lineWidth"]=_B._yaxes._gridlines._linewidth;
// [155]  ygrid.Put( {44} ,yAxes.gridLines.drawBorder) 
_ygrid["drawBorder"]=_B._yaxes._gridlines._drawborder;
// [156]  ygrid.Put( {45} ,yAxes.gridLines.drawOnChartArea) 
_ygrid["drawOnChartArea"]=_B._yaxes._gridlines._drawonchartarea;
// [157]  ygrid.Put( {46} ,yAxes.gridLines.drawTicks) 
_ygrid["drawTicks"]=_B._yaxes._gridlines._drawticks;
// [158]  ygrid.Put( {47} ,yAxes.gridLines.tickMarkLength) 
_ygrid["tickMarkLength"]=_B._yaxes._gridlines._tickmarklength;
// [159]  ygrid.Put( {48} ,yAxes.gridLines.zeroLineWidth) 
_ygrid["zeroLineWidth"]=_B._yaxes._gridlines._zerolinewidth;
// [160]  ygrid.Put( {49} ,yAxes.gridLines.offsetGridLines) 
_ygrid["offsetGridLines"]=_B._yaxes._gridlines._offsetgridlines;
// [162]  ysis.Put( {50} , yAxes.display) 
_ysis["display"]=_B._yaxes._display;
// [163]  If yticks.Size > 0 Then ysis.Put( {51} , yticks) 
if (Object.keys(_yticks).length>0) {_ysis["ticks"]=_yticks;}
// [164]  If ygrid.Size > 0 Then ysis.Put( {52} , ygrid) 
if (Object.keys(_ygrid).length>0) {_ysis["gridLines"]=_ygrid;}
// [165]  yList.Add(ysis) 
_ylist.push(_ysis);
// [166]  scales.Put( {53} , yList) 
_scales["yAxes"]=_ylist;
// [168]  If OverwriteOptions = True Then chartOptions.Put( {54} , scales) 
if (_B._overwriteoptions==true) {_chartoptions["scales"]=_scales;}
// [170]  Dim titObj As Map = CreateMap() 
_titobj={};
// [171]  titObj.Put( {55} , Title.display) 
_titobj["display"]=_B._title._display;
// [172]  titObj.Put( {56} , Title.text) 
_titobj["text"]=_B._title._text;
// [173]  chartOptions.Put( {57} , titObj) 
_chartoptions["title"]=_titobj;
// [175]  vue.SetStateSingle(coptions, chartOptions) 
_B._vue.setstatesingle(_B._coptions,_chartoptions);
// End Sub
};

// [179] Sub AddSeries(seriesCaption As String, seriesColor As String, seriesCurve As Boolean, seriesData As Map) As VMChartKick 
_B.addseries=function(_seriescaption,_seriescolor,_seriescurve,_seriesdata) {
var _obj,_xcolor;
// [180]  Dim obj As Map = CreateMap() 
_obj={};
// [181]  obj.Put( {58} , seriesCaption) 
_obj["name"]=_seriescaption;
// [182]  obj.Put( {59} , seriesData) 
_obj["data"]=_seriesdata;
// [183]  obj.Put( {60} , seriesCurve) 
_obj["curve"]=_seriescurve;
// [184]  obj.Put( {61} , seriesCaption) 
_obj["label"]=_seriescaption;
// [185]  If seriesColor <> {62} Then 
if (_seriescolor!="") {
// [186]  Dim xColor As String = vue.GetColorHex(seriesColor) 
_xcolor=_B._vue.getcolorhex(_seriescolor);
// [187]  obj.Put( {63} , xColor) 
_obj["color"]=_xcolor;
// [188]  End If 
}
// [189]  series.Put(seriesCaption, obj) 
_B._series[_seriescaption]=_obj;
// [190]  Return Me 
return _B;
// End Sub
};

// [194] Sub AddXY(X As String, y As String) As VMChartKick 
_B.addxy=function(_x,_y) {
var _exdata,_cudata;
// [196]  Dim exdata As List = data.Get( {64} ) 
_exdata=_B._data["a"];
// [197]  Dim cudata As List 
_cudata=[];
// [198]  cudata.Initialize 
_cudata.length=0;
// [199]  cudata.Add(X) 
_cudata.push(_x);
// [200]  cudata.Add(y) 
_cudata.push(_y);
// [201]  exdata.Add(cudata) 
_exdata.push(_cudata);
// [202]  data.Put( {65} ,exdata) 
_B._data["a"]=_exdata;
// [203]  Return Me 
return _B;
// End Sub
};

// [207] Sub AddXYColor(X As String, y As String, color As String) As VMChartKick 
_B.addxycolor=function(_x,_y,_color) {
var _exdata,_cudata,_xcolor;
// [209]  Dim exdata As List = data.Get( {66} ) 
_exdata=_B._data["a"];
// [210]  Dim cudata As List 
_cudata=[];
// [211]  cudata.Initialize 
_cudata.length=0;
// [212]  cudata.Add(X) 
_cudata.push(_x);
// [213]  cudata.Add(y) 
_cudata.push(_y);
// [214]  exdata.Add(cudata) 
_exdata.push(_cudata);
// [215]  data.Put( {67} ,exdata) 
_B._data["a"]=_exdata;
// [216]  If color <> {68} Then 
if (_color!="") {
// [217]  Dim xColor As String = vue.GetColorHex(color) 
_xcolor=_B._vue.getcolorhex(_color);
// [218]  colors.Add(xColor) 
_B._colors.push(_xcolor);
// [219]  End If 
}
// [220]  Return Me 
return _B;
// End Sub
};

// [224] Sub AddXYMap(values As Map) As VMChartKick 
_B.addxymap=function(_values) {
var _strkey,_strval;
// [225]  For Each strKey As String In values.Keys 
var _strkeyKeys = Object.keys(_values);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [226]  Dim strVal As String = values.Get(strKey) 
_strval=_values[_strkey];
// [227]  AddXY(strKey,strVal) 
_B.addxy(_strkey,_strval,_B);
// [228]  Next 
}
// [229]  Return Me 
return _B;
// End Sub
};

// [233] Sub AddBubble(X As String, y As String, size As String) As VMChartKick 
_B.addbubble=function(_x,_y,_size) {
var _exdata,_cudata;
// [235]  Dim exdata As List = data.Get( {69} ) 
_exdata=_B._data["a"];
// [236]  Dim cudata As List 
_cudata=[];
// [237]  cudata.Initialize 
_cudata.length=0;
// [238]  cudata.Add(X) 
_cudata.push(_x);
// [239]  cudata.Add(y) 
_cudata.push(_y);
// [240]  cudata.Add(size) 
_cudata.push(_size);
// [241]  exdata.Add(cudata) 
_exdata.push(_cudata);
// [242]  data.Put( {70} ,exdata) 
_B._data["a"]=_exdata;
// [243]  Return Me 
return _B;
// End Sub
};

// [247] Sub SetStyle(sm As Map) As VMChartKick 
_B.setstyle=function(_sm) {
// [248]  ChartKick.SetStyle(sm) 
_B._chartkick.setstyle(_sm);
// [249]  Return Me 
return _B;
// End Sub
};

// [252] Sub SetStyleSingle(prop As String, val As String) As VMChartKick 
_B.setstylesingle=function(_prop,_val) {
var _stylex;
// [253]  Dim stylex As Map = CreateMap() 
_stylex={};
// [254]  stylex.Put(prop, val) 
_stylex[_prop]=_val;
// [255]  SetStyle(stylex) 
_B.setstyle(_stylex,_B);
// [256]  Return Me 
return _B;
// End Sub
};

// [259] private Sub SetData(chartData As String) As VMChartKick 
_B.setdata=function(_chartdata) {
// [260]  SetAttrSingle( {71} , chartData) 
_B.setattrsingle(":data",_chartdata,_B);
// [261]  Return Me 
return _B;
// End Sub
};

// [264] Sub SetMax(maxvalue As Int) As VMChartKick 
_B.setmax=function(_maxvalue) {
// [265]  SetAttrSingle( {72} , maxvalue) 
_B.setattrsingle(":max",_maxvalue,_B);
// [266]  Return Me 
return _B;
// End Sub
};

// [269] Sub SetMin(minvalue As Int) As VMChartKick 
_B.setmin=function(_minvalue) {
// [270]  SetAttrSingle( {73} , minvalue) 
_B.setattrsingle(":min",_minvalue,_B);
// [271]  Return Me 
return _B;
// End Sub
};

// [274] Sub SetXMax(maxvalue As Int) As VMChartKick 
_B.setxmax=function(_maxvalue) {
// [275]  SetAttrSingle( {74} , maxvalue) 
_B.setattrsingle("xmax",_maxvalue,_B);
// [276]  Return Me 
return _B;
// End Sub
};

// [279] Sub SetXMin(minvalue As Int) As VMChartKick 
_B.setxmin=function(_minvalue) {
// [280]  SetAttrSingle( {75} , minvalue) 
_B.setattrsingle("xmin",_minvalue,_B);
// [281]  Return Me 
return _B;
// End Sub
};

// [284] Sub SetLabel(seriesLabel As Int) As VMChartKick 
_B.setlabel=function(_serieslabel) {
// [285]  SetAttrSingle( {76} , seriesLabel) 
_B.setattrsingle("label",_serieslabel,_B);
// [286]  Return Me 
return _B;
// End Sub
};

// [289] private Sub SetColors(lcolors As String) As VMChartKick 
_B.setcolors=function(_lcolors) {
// [290]  SetAttrSingle( {77} , lcolors) 
_B.setattrsingle(":colors",_lcolors,_B);
// [291]  Return Me 
return _B;
// End Sub
};

// [294] Sub SetStacked As VMChartKick 
_B.setstacked=function() {
// [295]  SetAttrSingle( {78} , {79} ) 
_B.setattrsingle("stacked","true",_B);
// [296]  Return Me 
return _B;
// End Sub
};

// [299] Sub SetDescrete As VMChartKick 
_B.setdescrete=function() {
// [300]  SetAttrSingle( {80} , {81} ) 
_B.setattrsingle(":discrete","true",_B);
// [301]  Return Me 
return _B;
// End Sub
};

// [304] Sub SetCurve As VMChartKick 
_B.setcurve=function() {
// [305]  SetAttrSingle( {82} , {83} ) 
_B.setattrsingle(":curve","true",_B);
// [306]  Return Me 
return _B;
// End Sub
};

// [309] Sub SetLegendPositionBottom As VMChartKick 
_B.setlegendpositionbottom=function() {
// [310]  SetAttrSingle( {84} , {85} ) 
_B.setattrsingle("legend","bottom",_B);
// [311]  Return Me 
return _B;
// End Sub
};

// [314] Sub SetLegendPositionTop As VMChartKick 
_B.setlegendpositiontop=function() {
// [315]  SetAttrSingle( {86} , {87} ) 
_B.setattrsingle("legend","top",_B);
// [316]  Return Me 
return _B;
// End Sub
};

// [319] Sub SetLegendPositionRight As VMChartKick 
_B.setlegendpositionright=function() {
// [320]  SetAttrSingle( {88} , {89} ) 
_B.setattrsingle("legend","right",_B);
// [321]  Return Me 
return _B;
// End Sub
};

// [324] Sub SetDonut As VMChartKick 
_B.setdonut=function() {
// [325]  SetAttrSingle( {90} , {91} ) 
_B.setattrsingle(":donut","true",_B);
// [326]  xAxes.display = False 
_B._xaxes._display=false;
// [327]  yAxes.display = False 
_B._yaxes._display=false;
// [328]  Return Me 
return _B;
// End Sub
};

// [331] Sub SetPrefix(prefix As String) As VMChartKick 
_B.setprefix=function(_prefix) {
// [332]  SetAttrSingle( {92} , prefix) 
_B.setattrsingle("prefix",_prefix,_B);
// [333]  Return Me 
return _B;
// End Sub
};

// [336] Sub SetThousands(sthousands As String) As VMChartKick 
_B.setthousands=function(_sthousands) {
// [337]  SetAttrSingle( {93} , sthousands) 
_B.setattrsingle("thousands",_sthousands,_B);
// [338]  Return Me 
return _B;
// End Sub
};

// [341] Sub SetDecimal(sdecimal As String) As VMChartKick 
_B.setdecimal=function(_sdecimal) {
// [342]  SetAttrSingle( {94} , sdecimal) 
_B.setattrsingle("decimal",_sdecimal,_B);
// [343]  Return Me 
return _B;
// End Sub
};

// [346] Sub SetPrecision(sprecision As String) As VMChartKick 
_B.setprecision=function(_sprecision) {
// [347]  SetAttrSingle( {95} , sprecision) 
_B.setattrsingle(":precision",_sprecision,_B);
// [348]  Return Me 
return _B;
// End Sub
};

// [351] Sub SetRound(sround As String) As VMChartKick 
_B.setround=function(_sround) {
// [352]  SetAttrSingle( {96} ,sround) 
_B.setattrsingle(":round",_sround,_B);
// [353]  Return Me 
return _B;
// End Sub
};

// [356] Sub SetZeros As VMChartKick 
_B.setzeros=function() {
// [357]  SetAttrSingle( {97} , {98} ) 
_B.setattrsingle(":zeros","true",_B);
// [358]  Return Me 
return _B;
// End Sub
};

// [361] Sub SetBytes As VMChartKick 
_B.setbytes=function() {
// [362]  SetAttrSingle( {99} , {100} ) 
_B.setattrsingle(":bytes","true",_B);
// [363]  Return Me 
return _B;
// End Sub
};

// [366] Sub SetRefresh(irefresh As Int) As VMChartKick 
_B.setrefresh=function(_irefresh) {
// [367]  SetAttrSingle( {101} , irefresh) 
_B.setattrsingle(":refresh",_irefresh,_B);
// [368]  Return Me 
return _B;
// End Sub
};

// [371] Sub SetDownload As VMChartKick 
_B.setdownload=function() {
var _obj,_objjson;
// [372]  Dim obj As Map = CreateMap() 
_obj={};
// [373]  obj.Put( {102} , {103} ) 
_obj["background"]="#fff";
// [374]  Dim objJSON As String = BANano.ToJson(obj) 
_objjson=JSON.stringify(_obj);
// [375]  objJSON = objJSON.Replace(QUOTE, {104} ) 
_objjson=_objjson.split("\"").join("'");
// [376]  SetAttrSingle( {105} , objJSON) 
_B.setattrsingle(":download",_objjson,_B);
// [377]  Return Me 
return _B;
// End Sub
};

// [380] Sub SetSuffix(suffix As String) As VMChartKick 
_B.setsuffix=function(_suffix) {
// [381]  SetAttrSingle( {106} , suffix) 
_B.setattrsingle("suffix",_suffix,_B);
// [382]  Return Me 
return _B;
// End Sub
};

// [385] Sub SetWidth(w As String) As VMChartKick 
_B.setwidth=function(_w) {
// [386]  SetAttrSingle( {107} , vue.makepx(w)) 
_B.setattrsingle("width",_B._vue.makepx(_w),_B);
// [387]  Return Me 
return _B;
// End Sub
};

// [390] Sub SetHeight(h As String) As VMChartKick 
_B.setheight=function(_h) {
// [391]  SetAttrSingle( {108} , vue.MakePx(h)) 
_B.setattrsingle("height",_B._vue.makepx(_h),_B);
// [392]  Return Me 
return _B;
// End Sub
};

// [395] Sub SetXTitle(xtitle As String) As VMChartKick 
_B.setxtitle=function(_xtitle) {
// [396]  SetAttrSingle( {109} , xtitle) 
_B.setattrsingle("xtitle",_xtitle,_B);
// [397]  Return Me 
return _B;
// End Sub
};

// [400] Sub SetYTitle(ytitle As String) As VMChartKick 
_B.setytitle=function(_ytitle) {
// [401]  SetAttrSingle( {110} , ytitle) 
_B.setattrsingle("ytitle",_ytitle,_B);
// [402]  Return Me 
return _B;
// End Sub
};

// [406] Sub SetLineChart As VMChartKick 
_B.setlinechart=function() {
// [407]  ChartKick.SetTag( {111} ) 
_B._chartkick.settag("line-chart");
// [408]  Return Me 
return _B;
// End Sub
};

// [411] Sub SetPieChart As VMChartKick 
_B.setpiechart=function() {
// [412]  ChartKick.settag( {112} ) 
_B._chartkick.settag("pie-chart");
// [413]  xAxes.display = False 
_B._xaxes._display=false;
// [414]  yAxes.display = False 
_B._yaxes._display=false;
// [415]  Return Me 
return _B;
// End Sub
};

// [418] Sub SetBarChart As VMChartKick 
_B.setbarchart=function() {
// [419]  ChartKick.SetTag( {113} ) 
_B._chartkick.settag("bar-chart");
// [420]  Return Me 
return _B;
// End Sub
};

// [423] Sub SetColumnChart As VMChartKick 
_B.setcolumnchart=function() {
// [424]  ChartKick.SetTag( {114} ) 
_B._chartkick.settag("column-chart");
// [425]  Return Me 
return _B;
// End Sub
};

// [428] Sub SetAreaChart As VMChartKick 
_B.setareachart=function() {
// [429]  ChartKick.SetTag( {115} ) 
_B._chartkick.settag("area-chart");
// [430]  Return Me 
return _B;
// End Sub
};

// [433] Sub SetScatterChart As VMChartKick 
_B.setscatterchart=function() {
// [434]  ChartKick.SetTag( {116} ) 
_B._chartkick.settag("scatter-chart");
// [435]  Return Me 
return _B;
// End Sub
};

// [438] Sub SetVShow(vshow As String) As VMChartKick 
_B.setvshow=function(_vshow) {
// [439]  ChartKick.SetVShow(vshow) 
_B._chartkick.setvshow(_vshow);
// [440]  Return Me 
return _B;
// End Sub
};

// [443] Sub SetDisabled(b As Boolean) As VMChartKick 
_B.setdisabled=function(_b) {
// [444]  ChartKick.SetDisabled(b) 
_B._chartkick.setdisabled(_b);
// [445]  Return Me 
return _B;
// End Sub
};

// [449] Sub AddClass(c As String) As VMChartKick 
_B.addclass=function(_c) {
// [450]  ChartKick.AddClass(c) 
_B._chartkick.addclass(_c);
// [451]  Return Me 
return _B;
// End Sub
};

// [455] Sub SetAttr(attr As Map) As VMChartKick 
_B.setattr=function(_attr) {
// [456]  ChartKick.SetAttr(attr) 
_B._chartkick.setattr(_attr);
// [457]  Return Me 
return _B;
// End Sub
};

// [460] Sub SetAttrSingle(prop As String, val As Object) As VMChartKick 
_B.setattrsingle=function(_prop,_val) {
var _attr;
// [461]  Dim attr As Map = CreateMap() 
_attr={};
// [462]  attr.Put(prop, val) 
_attr[_prop]=_val;
// [463]  SetAttr(attr) 
_B.setattr(_attr,_B);
// [464]  Return Me 
return _B;
// End Sub
};

// [467] Sub ToString As String 
_B.tostring=function() {
var _serieslist,_serieskey,_k,_obj,_plotlist,_colorkey;
// [468]  BuildOptions 
_B.buildoptions(_B);
// [469]  If series.Size > 0 Then 
if (Object.keys(_B._series).length>0) {
// [470]  Dim seriesList As List 
_serieslist=[];
// [471]  seriesList.Initialize 
_serieslist.length=0;
// [472]  Dim seriesKey As String = {1} 
_serieskey="" + _B._id + "data";
// [473]  For Each k As String In series.Keys 
var _kKeys = Object.keys(_B._series);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [474]  Dim obj As Map = series.Get(k) 
_obj=_B._series[_k];
// [475]  seriesList.Add(obj) 
_serieslist.push(_obj);
// [476]  Next 
}
// [477]  vue.SetStateSingle(seriesKey, seriesList) 
_B._vue.setstatesingle(_serieskey,_serieslist);
// [478]  SetData(seriesKey) 
_B.setdata(_serieskey,_B);
// [479]  Else 
} else {
// [480]  Dim plotList As List = data.Get( {117} ) 
_plotlist=_B._data["a"];
// [481]  Dim seriesKey As String = {2} 
_serieskey="" + _B._id + "data";
// [482]  vue.SetStateSingle(seriesKey, plotList) 
_B._vue.setstatesingle(_serieskey,_plotlist);
// [483]  SetData(seriesKey) 
_B.setdata(_serieskey,_B);
// [484]  End If 
}
// [485]  If colors.Size > 0 Then 
if (_B._colors.length>0) {
// [486]  Dim colorKey As String = {3} 
_colorkey="" + _B._id + "color";
// [487]  vue.SetStateSingle(colorKey, colors) 
_B._vue.setstatesingle(_colorkey,_B._colors);
// [488]  SetColors(colorKey) 
_B.setcolors(_colorkey,_B);
// [489]  End If 
}
// [490]  Return ChartKick.tostring 
return _B._chartkick.tostring();
// End Sub
};

// [493] Sub Refresh 
_B.refresh=function() {
var _serieslist,_serieskey,_k,_obj,_plotlist,_colorkey;
// [494]  If series.Size > 0 Then 
if (Object.keys(_B._series).length>0) {
// [495]  Dim seriesList As List 
_serieslist=[];
// [496]  seriesList.Initialize 
_serieslist.length=0;
// [497]  Dim seriesKey As String = {4} 
_serieskey="" + _B._id + "data";
// [498]  For Each k As String In series.Keys 
var _kKeys = Object.keys(_B._series);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [499]  Dim obj As Map = series.Get(k) 
_obj=_B._series[_k];
// [500]  seriesList.Add(obj) 
_serieslist.push(_obj);
// [501]  Next 
}
// [502]  vue.SetStateSingle(seriesKey, seriesList) 
_B._vue.setstatesingle(_serieskey,_serieslist);
// [503]  SetData(seriesKey) 
_B.setdata(_serieskey,_B);
// [504]  Else 
} else {
// [505]  Dim plotList As List = data.Get( {118} ) 
_plotlist=_B._data["a"];
// [506]  Dim seriesKey As String = {5} 
_serieskey="" + _B._id + "data";
// [507]  vue.SetStateSingle(seriesKey, plotList) 
_B._vue.setstatesingle(_serieskey,_plotlist);
// [508]  SetData(seriesKey) 
_B.setdata(_serieskey,_B);
// [509]  End If 
}
// [510]  If colors.Size > 0 Then 
if (_B._colors.length>0) {
// [511]  Dim colorKey As String = {6} 
_colorkey="" + _B._id + "color";
// [512]  vue.SetStateSingle(colorKey, colors) 
_B._vue.setstatesingle(_colorkey,_B._colors);
// [513]  SetColors(colorKey) 
_B.setcolors(_colorkey,_B);
// [514]  End If 
}
// End Sub
};

// [517] Sub Render 
_B.render=function() {
// [518]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [521] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [522]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMCheckBox  =========================== */
function banano_bananovuematerial_vmcheckbox() {
var _B=this;
_B._checkbox= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._xmodel="";

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMCheckBox 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [13]  vue = v 
_B._vue=_v;
// [14]  CheckBox.Initialize(vue, ID).SetTag( {2} ) 
_B._checkbox.initialize(_B._vue,_B._id).settag("md-checkbox");
// [15]  module = eventHandler 
_B._module=_eventhandler;
// [16]  SetOnChange(ID) 
_B.setonchange(_B._id,_B);
// [17]  xmodel = {3} 
_B._xmodel="";
// [18]  Return Me 
return _B;
// End Sub
};

// [21] Sub SetTabIndex(ti As String) As VMCheckBox 
_B.settabindex=function(_ti) {
// [22]  CheckBox.SetTabIndex(ti) 
_B._checkbox.settabindex(_ti);
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetText(t As String) As VMCheckBox 
_B.settext=function(_t) {
// [27]  CheckBox.SetText(t) 
_B._checkbox.settext(_t);
// [28]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetVShow(vshow As String) As VMCheckBox 
_B.setvshow=function(_vshow) {
// [32]  CheckBox.SetVShow(vshow) 
_B._checkbox.setvshow(_vshow);
// [33]  Return Me 
return _B;
// End Sub
};

// [36] Sub SetPrimary(b As Boolean) As VMCheckBox 
_B.setprimary=function(_b) {
// [37]  CheckBox.SetPrimary(b) 
_B._checkbox.setprimary(_b);
// [38]  Return Me 
return _B;
// End Sub
};

// [41] Sub SetIndeterminate As VMCheckBox 
_B.setindeterminate=function() {
// [42]  If xmodel = {4} Then 
if (_B._xmodel=="") {
// [43]  Log( {0} ) 
console.log("VMCheckBox." + _B._id + " - you need to set the v-model first!");
// [44]  End If 
}
// [45]  vue.SetStateSingle(xmodel, True) 
_B._vue.setstatesingle(_B._xmodel,true);
// [46]  CheckBox.SetAttr(CreateMap( {5} :True)) 
_B._checkbox.setattr({"indeterminate":true});
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetName(varName As Object, bind As Boolean) As VMCheckBox 
_B.setname=function(_varname,_bind) {
// [52]  CheckBox.SetName(varName, bind) 
_B._checkbox.setname(_varname,_bind);
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub SetValue(varName As Object) As VMCheckBox 
_B.setvalue=function(_varname) {
// [58]  CheckBox.SetValue(varName, False) 
_B._checkbox.setvalue(_varname,false);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetDisabled(b As Boolean) As VMCheckBox 
_B.setdisabled=function(_b) {
// [63]  CheckBox.SetDisabled(b) 
_B._checkbox.setdisabled(_b);
// [64]  Return Me 
return _B;
// End Sub
};

// [69] Sub AddClass(c As String) As VMCheckBox 
_B.addclass=function(_c) {
// [70]  CheckBox.AddClass(c) 
_B._checkbox.addclass(_c);
// [71]  Return Me 
return _B;
// End Sub
};

// [75] Sub SetAttr(attr As Map) As VMCheckBox 
_B.setattr=function(_attr) {
// [76]  CheckBox.SetAttr(attr) 
_B._checkbox.setattr(_attr);
// [77]  Return Me 
return _B;
// End Sub
};

// [81] Sub SetOnChange(source As String) As VMCheckBox 
_B.setonchange=function(_source) {
var _methodname,_sval,_cb;
// [82]  source = source.tolowercase 
_source=_source.toLowerCase();
// [83]  Dim methodName As String = {1} 
_methodname="" + _source + "_change";
// [84]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [85]  Dim sval As String 
_sval="";
// [86]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(sval)) 
_cb=function(_sval) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_sval,_B)};};
// [87]  SetAttr(CreateMap( {6} : methodName)) 
_B.setattr({"v-on:change":_methodname},_B);
// [89]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [90]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetVModel(k As String) As VMCheckBox 
_B.setvmodel=function(_k) {
// [94]  xmodel = k 
_B._xmodel=_k;
// [95]  CheckBox.SetVModel(k) 
_B._checkbox.setvmodel(_k);
// [96]  vue.SetStateSingle(xmodel, Null) 
_B._vue.setstatesingle(_B._xmodel,null);
// [97]  Return Me 
return _B;
// End Sub
};

// [100] Sub ToString As String 
_B.tostring=function() {
// [101]  Return CheckBox.tostring 
return _B._checkbox.tostring();
// End Sub
};

// [104] Sub Render 
_B.render=function() {
// [105]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [108] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [109]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [114] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [115]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMCheckBoxGroup  =========================== */
function banano_bananovuematerial_vmcheckboxgroup() {
var _B=this;
_B._checkgroup= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._vmodel="";

_B._module={};

_B._designmode=false;

// [13] Public Sub Initialize(v As BANanoVue, sid As String, caption As String, eventHandler As Object) As VMCheckBoxGroup 
_B.initialize=function(_v,_sid,_caption,_eventhandler) {
// [14]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [15]  vue = v 
_B._vue=_v;
// [16]  module = eventHandler 
_B._module=_eventhandler;
// [17]  CheckGroup.Initialize(vue, ID).SetTag( {4} ) 
_B._checkgroup.initialize(_B._vue,_B._id).settag("div");
// [18]  lbl.Initialize(vue, {0} ).SetText( {1} ).SetCaption(True) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label").settext("" + _caption + "<br/>").setcaption(true);
// [19]  lbl.Pop(CheckGroup) 
_B._lbl.pop(_B._checkgroup);
// [20]  designMode = False 
_B._designmode=false;
// [21]  vmodel = {5} 
_B._vmodel="";
// [22]  Return Me 
return _B;
// End Sub
};

// [25] Sub SetDesignMode(b As Boolean) As VMCheckBoxGroup 
_B.setdesignmode=function(_b) {
// [26]  designMode = b 
_B._designmode=_b;
// [27]  Return Me 
return _B;
// End Sub
};

// [30] Sub SetValue(v As Object) As VMCheckBoxGroup 
_B.setvalue=function(_v) {
var _nl;
// [31]  If vmodel = {6} Then 
if (_B._vmodel=="") {
// [32]  Log( {2} ) 
console.log("VMCheckBoxGroup.SetValue: '" + _B._id + "' - the vModel has not been set!");
// [33]  End If 
}
// [34]  Dim nl As List 
_nl=[];
// [35]  nl.Initialize 
_nl.length=0;
// [36]  nl.Add(v) 
_nl.push(_v);
// [37]  vue.SetStateSingle(vmodel,nl) 
_B._vue.setstatesingle(_B._vmodel,_nl);
// [38]  Return Me 
return _B;
// End Sub
};

// [41] Sub SetTabIndex(ti As String) As VMCheckBoxGroup 
_B.settabindex=function(_ti) {
// [42]  CheckGroup.SetTabIndex(ti) 
_B._checkgroup.settabindex(_ti);
// [43]  Return Me 
return _B;
// End Sub
};

// [47] Sub AddClass(c As String) As VMCheckBoxGroup 
_B.addclass=function(_c) {
// [48]  CheckGroup.AddClass(c) 
_B._checkgroup.addclass(_c);
// [49]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetAttr(attr As Map) As VMCheckBoxGroup 
_B.setattr=function(_attr) {
// [54]  CheckGroup.SetAttr(attr) 
_B._checkgroup.setattr(_attr);
// [55]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetVModel(k As String) As VMCheckBoxGroup 
_B.setvmodel=function(_k) {
var _nl;
// [59]  vmodel = k.tolowercase 
_B._vmodel=_k.toLowerCase();
// [60]  Dim nl As List 
_nl=[];
// [61]  nl.Initialize 
_nl.length=0;
// [62]  vue.SetStateSingle(vmodel,nl) 
_B._vue.setstatesingle(_B._vmodel,_nl);
// [63]  Return Me 
return _B;
// End Sub
};

// [66] Sub AddItems(m As Map) As VMCheckBoxGroup 
_B.additems=function(_m) {
var _k,_v;
// [67]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [68]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [69]  AddItem(k, v) 
_B.additem(_k,_v,_B);
// [70]  Next 
}
// [71]  Return Me 
return _B;
// End Sub
};

// [74] Sub AddItem(k As String, v As String) As VMCheckBoxGroup 
_B.additem=function(_k,_v) {
var _el;
// [75]  If vmodel = {7} Then 
if (_B._vmodel=="") {
// [76]  Log( {3} ) 
console.log("VMCheckBoxGroup.AddItem: '" + _B._id + "' - the vModel has not been set!");
// [77]  End If 
}
// [78]  Dim el As VMCheckBox 
_el= new banano_bananovuematerial_vmcheckbox();
// [79]  el.Initialize(vue, k,module) 
_el.initialize(_B._vue,_k,_B._module);
// [80]  If designMode = False Then 
if (_B._designmode==false) {
// [81]  el.SetVModel(vmodel) 
_el.setvmodel(_B._vmodel);
// [82]  End If 
}
// [83]  el.SetText(v) 
_el.settext(_v);
// [84]  el.SetValue(k) 
_el.setvalue(_k);
// [85]  el.SetPrimary(True) 
_el.setprimary(true);
// [86]  el.SetOnChange(ID) 
_el.setonchange(_B._id);
// [87]  el.Pop(CheckGroup) 
_el.pop(_B._checkgroup);
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub ToString As String 
_B.tostring=function() {
// [92]  Return CheckGroup.tostring 
return _B._checkgroup.tostring();
// End Sub
};

// [95] Sub Render 
_B.render=function() {
// [96]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [99] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [100]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [103] Sub SetVIf(vif As String) As VMCheckBoxGroup 
_B.setvif=function(_vif) {
// [104]  If vif = {8} Then Return Me 
if (_vif=="") { return _B;}
// [105]  CheckGroup.SetVIf(vif) 
_B._checkgroup.setvif(_vif);
// [106]  Return Me 
return _B;
// End Sub
};

// [109] Sub SetVShow(vif As String) As VMCheckBoxGroup 
_B.setvshow=function(_vif) {
// [110]  If vif = {9} Then Return Me 
if (_vif=="") { return _B;}
// [111]  CheckGroup.SetVShow(vif) 
_B._checkgroup.setvshow(_vif);
// [112]  Return Me 
return _B;
// End Sub
};

// [116] Sub AddChild(child As VMElement) As VMCheckBoxGroup 
_B.addchild=function(_child) {
var _childhtml;
// [117]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [118]  CheckGroup.SetText(childHTML) 
_B._checkgroup.settext(_childhtml);
// [119]  Return Me 
return _B;
// End Sub
};

// [123] Sub SetStyle(sm As Map) As VMCheckBoxGroup 
_B.setstyle=function(_sm) {
// [124]  CheckGroup.SetStyle(sm) 
_B._checkgroup.setstyle(_sm);
// [125]  Return Me 
return _B;
// End Sub
};

// [129] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [130]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [131]  AddChild(childx) 
_B.addchild(_childx,_B);
// [132]  Next 
}
// End Sub
};

// [135] Sub SetDisabled(b As Boolean) As VMCheckBoxGroup 
_B.setdisabled=function(_b) {
// [136]  CheckGroup.SetDisabled(b) 
_B._checkgroup.setdisabled(_b);
// [137]  Return Me 
return _B;
// End Sub
};

// [142] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [143]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMChip  =========================== */
function banano_bananovuematerial_vmchip() {
var _B=this;
_B._chip= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMChip 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  Chip.Initialize(v, ID) 
_B._chip.initialize(_v,_B._id);
// [14]  Chip.SetTag( {12} ) 
_B._chip.settag("md-chip");
// [15]  vue = v 
_B._vue=_v;
// [16]  module = eventHandler 
_B._module=_eventhandler;
// [17]  Chip.SetOnClick(module, {0} ) 
_B._chip.setonclick(_B._module,"" + _B._id + "_click");
// [18]  SetOnDelete 
_B.setondelete(_B);
// [19]  Return Me 
return _B;
// End Sub
};

// [22] Sub SetLabel(labelText As String) As VMChip 
_B.setlabel=function(_labeltext) {
// [23]  If labelText = {13} Then Return Me 
if (_labeltext=="") { return _B;}
// [24]  Return Me 
return _B;
// End Sub
};

// [28] Sub ToString As String 
_B.tostring=function() {
// [29]  Return Chip.ToString 
return _B._chip.tostring();
// End Sub
};

// [32] Sub SetVModel(k As String) As VMChip 
_B.setvmodel=function(_k) {
// [33]  Chip.SetVModel(k) 
_B._chip.setvmodel(_k);
// [34]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetVIf(vif As Object) As VMChip 
_B.setvif=function(_vif) {
// [38]  Chip.SetVIf(vif) 
_B._chip.setvif(_vif);
// [39]  Return Me 
return _B;
// End Sub
};

// [42] Sub SetVShow(vif As Object) As VMChip 
_B.setvshow=function(_vif) {
// [43]  Chip.SetVShow(vif) 
_B._chip.setvshow(_vif);
// [44]  Return Me 
return _B;
// End Sub
};

// [48] Sub Render 
_B.render=function() {
// [49]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [53] Sub AddChild(child As VMElement) As VMChip 
_B.addchild=function(_child) {
var _childhtml;
// [54]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [55]  Chip.SetText(childHTML) 
_B._chip.settext(_childhtml);
// [56]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetText(t As String) As VMChip 
_B.settext=function(_t) {
// [61]  If t = {14} Then Return Me 
if (_t=="") { return _B;}
// [62]  Chip.SetText(t) 
_B._chip.settext(_t);
// [63]  Return Me 
return _B;
// End Sub
};

// [66] Sub SetPrimary(b As Boolean) As VMChip 
_B.setprimary=function(_b) {
// [67]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [68]  Chip.SetPrimary(True) 
_B._chip.setprimary(true);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetAccent(b As Boolean) As VMChip 
_B.setaccent=function(_b) {
// [73]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [74]  Chip.SetAccent(True) 
_B._chip.setaccent(true);
// [75]  Return Me 
return _B;
// End Sub
};

// [79] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [80]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [84] Sub AddClass(c As String) As VMChip 
_B.addclass=function(_c) {
// [85]  Chip.AddClass(c) 
_B._chip.addclass(_c);
// [86]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetAttr(attr As Map) As VMChip 
_B.setattr=function(_attr) {
// [91]  Chip.SetAttr(attr) 
_B._chip.setattr(_attr);
// [92]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetStyle(sm As Map) As VMChip 
_B.setstyle=function(_sm) {
// [97]  Chip.SetStyle(sm) 
_B._chip.setstyle(_sm);
// [98]  Return Me 
return _B;
// End Sub
};

// [102] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [103]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [104]  AddChild(childx) 
_B.addchild(_childx,_B);
// [105]  Next 
}
// End Sub
};

// [109] Sub SetPadding(p As Object) As VMChip 
_B.setpadding=function(_p) {
// [110]  Chip.SetPaddingAll(p) 
_B._chip.setpaddingall(_p);
// [111]  Return Me 
return _B;
// End Sub
};

// [115] Sub SetClickable(varClickable As Boolean) As VMChip 
_B.setclickable=function(_varclickable) {
// [116]  If varClickable = False Then Return Me 
if (_varclickable==false) { return _B;}
// [117]  SetAttr(CreateMap( {15} : varClickable)) 
_B.setattr({":md-clickable":_varclickable},_B);
// [118]  Return Me 
return _B;
// End Sub
};

// [122] Sub SetDeletable(varDeletable As Boolean) As VMChip 
_B.setdeletable=function(_vardeletable) {
// [123]  If varDeletable = False Then Return Me 
if (_vardeletable==false) { return _B;}
// [124]  SetAttr(CreateMap( {16} : varDeletable)) 
_B.setattr({":md-deletable":_vardeletable},_B);
// [125]  Return Me 
return _B;
// End Sub
};

// [128] Sub SetDisabled(b As Boolean) As VMChip 
_B.setdisabled=function(_b) {
// [129]  Chip.SetDisabled(b) 
_B._chip.setdisabled(_b);
// [130]  Return Me 
return _B;
// End Sub
};

// [135] private Sub SetOnDelete As VMChip 
_B.setondelete=function() {
var _methodname,_e,_cb;
// [136]  Dim methodName As String = {1} 
_methodname="" + _B._id + "_delete";
// [137]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [138]  Dim e As BANanoEvent 
_e=null;
// [139]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [140]  SetAttr(CreateMap( {17} : methodName)) 
_B.setattr({"v-on:md-delete":_methodname},_B);
// [142]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [143]  Return Me 
return _B;
// End Sub
};

// [146] Sub SetOptions(sourceName As String, options As Map, sourcefield As String, displayfield As String) As VMChip 
_B.setoptions=function(_sourcename,_options,_sourcefield,_displayfield) {
var _recs,_k,_v,_nrec,_krow,_drow;
// [147]  sourceName = sourceName.tolowercase 
_sourcename=_sourcename.toLowerCase();
// [148]  Dim recs As List 
_recs=[];
// [149]  recs.Initialize 
_recs.length=0;
// [150]  For Each k As String In options.Keys 
var _kKeys = Object.keys(_options);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [151]  Dim v As String = options.Get(k) 
_v=_options[_k];
// [152]  Dim nrec As Map = CreateMap() 
_nrec={};
// [153]  nrec.Put(sourcefield, k) 
_nrec[_sourcefield]=_k;
// [154]  nrec.Put(displayfield, v) 
_nrec[_displayfield]=_v;
// [155]  recs.Add(nrec) 
_recs.push(_nrec);
// [156]  Next 
}
// [158]  vue.SetStateSingle(sourceName, recs) 
_B._vue.setstatesingle(_sourcename,_recs);
// [159]  Dim kRow As String = {2} 
_krow="row." + _sourcefield + "";
// [160]  Dim dRow As String = {3} 
_drow="row." + _displayfield + "";
// [161]  Chip.clear 
_B._chip.clear();
// [162]  Chip.SetVFor( {18} , sourceName) 
_B._chip.setvfor("row",_sourcename);
// [163]  Chip.SetID( {4} ,True) 
_B._chip.setid("" + _krow + "",true);
// [164]  Chip.SetKey( {5} ,True) 
_B._chip.setkey("" + _krow + "",true);
// [165]  Chip.SetText( {6} ) 
_B._chip.settext("{{ " + _drow + " }}");
// [166]  Return Me 
return _B;
// End Sub
};

// [169] Sub SetKey(k As String) As VMChip 
_B.setkey=function(_k) {
// [170]  Chip.SetKey(k, False) 
_B._chip.setkey(_k,false);
// [171]  Return Me 
return _B;
// End Sub
};

// [175] Sub SetDataSource(sourceTable As String, sourceField As String, displayField As String) As VMChip 
_B.setdatasource=function(_sourcetable,_sourcefield,_displayfield) {
var _intsel,_krow,_drow;
// [176]  sourceTable = sourceTable.ToLowerCase 
_sourcetable=_sourcetable.toLowerCase();
// [177]  sourceField = sourceField.ToLowerCase 
_sourcefield=_sourcefield.toLowerCase();
// [178]  displayField = displayField.tolowercase 
_displayfield=_displayfield.toLowerCase();
// [180]  Dim intSel As Int = 0 
_intsel=0;
// [181]  If sourceTable <> {19} Then intSel = BANano.parseInt(intSel) + 1 
if (_sourcetable!="") {_intsel=parseInt(_intsel)+1;}
// [182]  If sourceField <> {20} Then intSel = BANano.parseInt(intSel) + 1 
if (_sourcefield!="") {_intsel=parseInt(_intsel)+1;}
// [183]  If displayField <> {21} Then intSel = BANano.parseInt(intSel) + 1 
if (_displayfield!="") {_intsel=parseInt(_intsel)+1;}
// [185]  If intSel = 3 Then 
if (_intsel==3) {
// [186]  Dim kRow As String = {7} 
_krow="row." + _sourcefield + "";
// [187]  Dim dRow As String = {8} 
_drow="row." + _displayfield + "";
// [188]  Chip.clear 
_B._chip.clear();
// [189]  Chip.SetVFor( {22} , sourceTable) 
_B._chip.setvfor("row",_sourcetable);
// [190]  Chip.SetID( {9} ,True) 
_B._chip.setid("" + _krow + "",true);
// [191]  Chip.SetKey( {10} ,True) 
_B._chip.setkey("" + _krow + "",true);
// [192]  Chip.SetText( {11} ) 
_B._chip.settext("{{ " + _drow + " }}");
// [193]  End If 
}
// [194]  Return Me 
return _B;
// End Sub
};

// [199] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [200]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMChips  =========================== */
function banano_bananovuematerial_vmchips() {
var _B=this;
_B._chips= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hashelp=false;

_B._ht= new banano_bananovuematerial_vmelement();

_B._et= new banano_bananovuematerial_vmelement();

_B._lbl= new banano_bananovuematerial_vmelement();

_B._haslabel=false;

_B._haserror=false;

_B._module={};

// [17] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMChips 
_B.initialize=function(_v,_sid,_eventhandler) {
var _ctext,_chint,_sval;
// [18]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [19]  Chips.Initialize(v, ID) 
_B._chips.initialize(_v,_B._id);
// [20]  Chips.SetTag( {3} ) 
_B._chips.settag("md-chips");
// [21]  lbl.Initialize(v, {4} ).SetTag( {5} ) 
_B._lbl.initialize(_v,"").settag("label");
// [22]  module = eventHandler 
_B._module=_eventhandler;
// [23]  vue = v 
_B._vue=_v;
// [24]  hasHelp = False 
_B._hashelp=false;
// [25]  hasLabel = False 
_B._haslabel=false;
// [26]  hasHelp = False 
_B._hashelp=false;
// [27]  hasError = False 
_B._haserror=false;
// [28]  Dim cText As String, chInt As Int 'ignore 
_ctext=0;
_ctext=0;
_chint=0;
// [29]  SetOnDelete(cText, chInt) 
_B.setondelete(_ctext,_chint,_B);
// [30]  SetOnClick(cText, chInt) 
_B.setonclick(_ctext,_chint,_B);
// [31]  Dim sval As String 
_sval="";
// [32]  SetOnInsert(sval) 
_B.setoninsert(_sval,_B);
// [33]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetHelperText(t As String) As VMChips 
_B.sethelpertext=function(_t) {
// [38]  If t = {6} Then Return Me 
if (_t=="") { return _B;}
// [39]  hasHelp = True 
_B._hashelp=true;
// [40]  ht = Chips.SetHelperText(t) 
_B._ht=_B._chips.sethelpertext(_t);
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetErrorText(txt As String) As VMChips 
_B.seterrortext=function(_txt) {
// [45]  If txt = {7} Then Return Me 
if (_txt=="") { return _B;}
// [46]  hasError = True 
_B._haserror=true;
// [47]  et = Chips.SetErrorText(txt) 
_B._et=_B._chips.seterrortext(_txt);
// [48]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetTabIndex(ti As String) As VMChips 
_B.settabindex=function(_ti) {
// [52]  If ti = {8} Then Return Me 
if (_ti=="") { return _B;}
// [53]  Chips.SetTabIndex(ti) 
_B._chips.settabindex(_ti);
// [54]  Return Me 
return _B;
// End Sub
};

// [59] Sub SetRequired(varRequired As Boolean) As VMChips 
_B.setrequired=function(_varrequired) {
// [60]  Chips.SetRequired(varRequired) 
_B._chips.setrequired(_varrequired);
// [61]  Return Me 
return _B;
// End Sub
};

// [65] Sub ToString As String 
_B.tostring=function() {
// [66]  If hasLabel Then 
if (_B._haslabel) {
// [67]  lbl.pop(Chips) 
_B._lbl.pop(_B._chips);
// [68]  End If 
}
// [69]  If hasHelp Then 
if (_B._hashelp) {
// [70]  ht.Pop(Chips) 
_B._ht.pop(_B._chips);
// [71]  End If 
}
// [72]  If hasError Then 
if (_B._haserror) {
// [73]  et.Pop(Chips) 
_B._et.pop(_B._chips);
// [74]  End If 
}
// [75]  Return Chips.ToString 
return _B._chips.tostring();
// End Sub
};

// [78] Sub SetOptions(vModel As String, options As List) As VMChips 
_B.setoptions=function(_vmodel,_options) {
// [79]  SetVModel(vModel) 
_B.setvmodel(_vmodel,_B);
// [80]  vue.SetStateSingle(vModel, options) 
_B._vue.setstatesingle(_vmodel,_options);
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub SetVModel(k As String) As VMChips 
_B.setvmodel=function(_k) {
// [85]  If k = {9} Then Return Me 
if (_k=="") { return _B;}
// [86]  Chips.SetVModel(k) 
_B._chips.setvmodel(_k);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetLabel(labelText As String) As VMChips 
_B.setlabel=function(_labeltext) {
// [91]  If labelText = {10} Then Return Me 
if (_labeltext=="") { return _B;}
// [92]  lbl.SetText(labelText) 
_B._lbl.settext(_labeltext);
// [93]  hasLabel = True 
_B._haslabel=true;
// [94]  Return Me 
return _B;
// End Sub
};

// [97] Sub SetVIf(vif As String) As VMChips 
_B.setvif=function(_vif) {
// [98]  If vif = {11} Then Return Me 
if (_vif=="") { return _B;}
// [99]  Chips.SetVIf(vif) 
_B._chips.setvif(_vif);
// [100]  Return Me 
return _B;
// End Sub
};

// [103] Sub SetVShow(vif As String) As VMChips 
_B.setvshow=function(_vif) {
// [104]  If vif = {12} Then Return Me 
if (_vif=="") { return _B;}
// [105]  Chips.SetVShow(vif) 
_B._chips.setvshow(_vif);
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub Render 
_B.render=function() {
// [111]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [115] Sub AddChild(child As VMElement) As VMChips 
_B.addchild=function(_child) {
var _childhtml;
// [116]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [117]  Chips.SetText(childHTML) 
_B._chips.settext(_childhtml);
// [118]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetPrimary(b As Boolean) As VMChips 
_B.setprimary=function(_b) {
// [122]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [123]  Chips.SetPrimary(True) 
_B._chips.setprimary(true);
// [124]  Return Me 
return _B;
// End Sub
};

// [127] Sub SetAccent(b As Boolean) As VMChips 
_B.setaccent=function(_b) {
// [128]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [129]  Chips.SetAccent(True) 
_B._chips.setaccent(true);
// [130]  Return Me 
return _B;
// End Sub
};

// [134] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [135]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [139] Sub AddClass(c As String) As VMChips 
_B.addclass=function(_c) {
// [140]  Chips.AddClass(c) 
_B._chips.addclass(_c);
// [141]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetAttr(attr As Map) As VMChips 
_B.setattr=function(_attr) {
// [146]  Chips.SetAttr(attr) 
_B._chips.setattr(_attr);
// [147]  Return Me 
return _B;
// End Sub
};

// [151] Sub SetStyle(sm As Map) As VMChips 
_B.setstyle=function(_sm) {
// [152]  Chips.SetStyle(sm) 
_B._chips.setstyle(_sm);
// [153]  Return Me 
return _B;
// End Sub
};

// [157] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [158]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [159]  AddChild(childx) 
_B.addchild(_childx,_B);
// [160]  Next 
}
// End Sub
};

// [164] Sub SetPadding(p As String) As VMChips 
_B.setpadding=function(_p) {
// [165]  If p = {13} Then Return Me 
if (_p=="") { return _B;}
// [166]  Chips.SetPaddingAll(p) 
_B._chips.setpaddingall(_p);
// [167]  Return Me 
return _B;
// End Sub
};

// [171] Sub SetInputType(varInputType As String) As VMChips 
_B.setinputtype=function(_varinputtype) {
// [172]  If varInputType = {14} Then Return Me 
if (_varinputtype=="") { return _B;}
// [173]  SetAttr(CreateMap( {15} : varInputType)) 
_B.setattr({"md-input-type":_varinputtype},_B);
// [174]  Return Me 
return _B;
// End Sub
};

// [177] Sub SetText As VMChips 
_B.settext=function() {
// [178]  SetInputType( {16} ) 
_B.setinputtype("text",_B);
// [179]  Return Me 
return _B;
// End Sub
};

// [182] Sub SetPassword As VMChips 
_B.setpassword=function() {
// [183]  SetInputType( {17} ) 
_B.setinputtype("password",_B);
// [184]  Return Me 
return _B;
// End Sub
};

// [187] Sub SetSearch As VMChips 
_B.setsearch=function() {
// [188]  SetInputType( {18} ) 
_B.setinputtype("search",_B);
// [189]  Return Me 
return _B;
// End Sub
};

// [192] Sub SetEmail As VMChips 
_B.setemail=function() {
// [193]  SetInputType( {19} ) 
_B.setinputtype("email",_B);
// [194]  Return Me 
return _B;
// End Sub
};

// [197] Sub SetTel As VMChips 
_B.settel=function() {
// [198]  SetInputType( {20} ) 
_B.setinputtype("tel",_B);
// [199]  Return Me 
return _B;
// End Sub
};

// [202] Sub SetNumber As VMChips 
_B.setnumber=function() {
// [203]  SetInputType( {21} ) 
_B.setinputtype("number",_B);
// [204]  Return Me 
return _B;
// End Sub
};

// [207] Sub SetURL As VMChips 
_B.seturl=function() {
// [208]  SetInputType( {22} ) 
_B.setinputtype("url",_B);
// [209]  Return Me 
return _B;
// End Sub
};

// [213] Sub SetPlaceholder(varPlaceholder As String) As VMChips 
_B.setplaceholder=function(_varplaceholder) {
// [214]  If varPlaceholder = {23} Then Return Me 
if (_varplaceholder=="") { return _B;}
// [215]  SetAttr(CreateMap( {24} : varPlaceholder)) 
_B.setattr({"md-placeholder":_varplaceholder},_B);
// [216]  Return Me 
return _B;
// End Sub
};

// [220] Sub SetStatic(varStatic As Boolean) As VMChips 
_B.setstatic=function(_varstatic) {
// [221]  If varStatic = False Then Return Me 
if (_varstatic==false) { return _B;}
// [222]  SetAttr(CreateMap( {25} : varStatic)) 
_B.setattr({":md-static":_varstatic},_B);
// [223]  Return Me 
return _B;
// End Sub
};

// [227] Sub SetLimit(varLimit As String) As VMChips 
_B.setlimit=function(_varlimit) {
// [228]  If varLimit = {26} Then Return Me 
if (_varlimit=="") { return _B;}
// [229]  SetAttr(CreateMap( {27} : varLimit)) 
_B.setattr({":md-limit":_varlimit},_B);
// [230]  Return Me 
return _B;
// End Sub
};

// [234] Sub SetCheckDuplicated(varCheckDuplicated As Boolean) As VMChips 
_B.setcheckduplicated=function(_varcheckduplicated) {
// [235]  If varCheckDuplicated = False Then Return Me 
if (_varcheckduplicated==false) { return _B;}
// [236]  SetAttr(CreateMap( {28} : varCheckDuplicated)) 
_B.setattr({":md-check-duplicated":_varcheckduplicated},_B);
// [237]  Return Me 
return _B;
// End Sub
};

// [241] Sub SetFormat(varFormat As String, methodName As String) As VMChips 
_B.setformat=function(_varformat,_methodname) {
var _value,_cb;
// [242]  If varFormat = {29} Then Return Me 
if (_varformat=="") { return _B;}
// [243]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [244]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [245]  SetAttr(CreateMap( {30} : varFormat)) 
_B.setattr({":md-format":_varformat},_B);
// [246]  Dim value As String 
_value="";
// [247]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(value)) 
_cb=function(_value) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_value,_B)};};
// [248]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [249]  Return Me 
return _B;
// End Sub
};

// [252] Sub SetDisabled(b As Boolean) As VMChips 
_B.setdisabled=function(_b) {
// [253]  Chips.SetDisabled(b) 
_B._chips.setdisabled(_b);
// [254]  Return Me 
return _B;
// End Sub
};

// [259] private Sub SetOnDelete(text As String, index As Int) As VMChips 
_B.setondelete=function(_text,_index) {
var _methodname,_cb;
// [260]  Dim methodName As String = {0} 
_methodname="" + _B._id + "_delete";
// [261]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [262]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(text, index)) 
_cb=function(_text,_index) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_text,_index,_B)};};
// [263]  SetAttr(CreateMap( {31} : methodName)) 
_B.setattr({"v-on:md-delete":_methodname},_B);
// [265]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [266]  Return Me 
return _B;
// End Sub
};

// [270] private Sub SetOnClick(text As String, index As Int) As VMChips 
_B.setonclick=function(_text,_index) {
var _methodname,_cb;
// [271]  Dim methodName As String = {1} 
_methodname="" + _B._id + "_click";
// [272]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [273]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(text,index)) 
_cb=function(_text,_index) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_text,_index,_B)};};
// [274]  SetAttr(CreateMap( {32} : methodName)) 
_B.setattr({"v-on:md-click":_methodname},_B);
// [276]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [277]  Return Me 
return _B;
// End Sub
};

// [281] private Sub SetOnInsert(value As String) As VMChips 
_B.setoninsert=function(_value) {
var _methodname,_cb;
// [282]  Dim methodName As String = {2} 
_methodname="" + _B._id + "_insert";
// [283]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [284]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(value)) 
_cb=function(_value) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_value,_B)};};
// [285]  SetAttr(CreateMap( {33} : methodName)) 
_B.setattr({"v-on:md-insert":_methodname},_B);
// [287]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [288]  Return Me 
return _B;
// End Sub
};

// [293] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [294]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMCol  =========================== */
function banano_bananovuematerial_vmcol() {
var _B=this;
_B._col= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMCol 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  Col.Initialize(v, ID) 
_B._col.initialize(_v,_B._id);
// [13]  Col.SetTag( {0} ).AddClass( {1} ) 
_B._col.settag("div").addclass("md-layout-item");
// [14]  vue = v 
_B._vue=_v;
// [15]  Return Me 
return _B;
// End Sub
};

// [18] Sub AddElements(lst As List) As VMCol 
_B.addelements=function(_lst) {
// [19]  Col.AddElements(lst) 
_B._col.addelements(_lst);
// [20]  Return Me 
return _B;
// End Sub
};

// [23] Sub SetHidden(xsmall As Boolean, small As Boolean, medium As Boolean, large As Boolean, xlarge As Boolean) As VMCol 
_B.sethidden=function(_xsmall,_small,_medium,_large,_xlarge) {
// [24]  Col.SetHidden(xsmall, small, medium, large, xlarge) 
_B._col.sethidden(_xsmall,_small,_medium,_large,_xlarge);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetSizes(xsmall As Int, small As Int, medium As Int, large As Int, xlarge As Int) As VMCol 
_B.setsizes=function(_xsmall,_small,_medium,_large,_xlarge) {
// [29]  Col.SetSizes(xsmall, small, medium, large, xlarge) 
_B._col.setsizes(_xsmall,_small,_medium,_large,_xlarge);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetGutter(b As Boolean) As VMCol 
_B.setgutter=function(_b) {
// [34]  Col.SetGutter(True) 
_B._col.setgutter(true);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub ToString As String 
_B.tostring=function() {
// [40]  Return Col.ToString 
return _B._col.tostring();
// End Sub
};

// [43] Sub SetVModel(k As String) As VMCol 
_B.setvmodel=function(_k) {
// [44]  Col.SetVModel(k) 
_B._col.setvmodel(_k);
// [45]  Return Me 
return _B;
// End Sub
};

// [48] Sub SetVIf(vif As Object) As VMCol 
_B.setvif=function(_vif) {
// [49]  Col.SetVIf(vif) 
_B._col.setvif(_vif);
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetVShow(vif As Object) As VMCol 
_B.setvshow=function(_vif) {
// [54]  Col.SetVShow(vif) 
_B._col.setvshow(_vif);
// [55]  Return Me 
return _B;
// End Sub
};

// [59] Sub Render 
_B.render=function() {
// [60]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [64] Sub AddChild(child As VMElement) As VMCol 
_B.addchild=function(_child) {
var _childhtml;
// [65]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [66]  Col.SetText(childHTML) 
_B._col.settext(_childhtml);
// [67]  Return Me 
return _B;
// End Sub
};

// [71] Sub SetText(t As Object) As VMCol 
_B.settext=function(_t) {
// [72]  Col.SetText(t) 
_B._col.settext(_t);
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub SetPrimary(b As Boolean) As VMCol 
_B.setprimary=function(_b) {
// [77]  Col.SetPrimary(True) 
_B._col.setprimary(true);
// [78]  Return Me 
return _B;
// End Sub
};

// [81] Sub SetAccent(b As Boolean) As VMCol 
_B.setaccent=function(_b) {
// [82]  Col.SetAccent(True) 
_B._col.setaccent(true);
// [83]  Return Me 
return _B;
// End Sub
};

// [87] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [88]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [92] Sub AddClass(c As String) As VMCol 
_B.addclass=function(_c) {
// [93]  Col.AddClass(c) 
_B._col.addclass(_c);
// [94]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetAttr(attr As Map) As VMCol 
_B.setattr=function(_attr) {
// [99]  Col.SetAttr(attr) 
_B._col.setattr(_attr);
// [100]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetStyle(sm As Map) As VMCol 
_B.setstyle=function(_sm) {
// [105]  Col.SetStyle(sm) 
_B._col.setstyle(_sm);
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [111]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [112]  AddChild(childx) 
_B.addchild(_childx,_B);
// [113]  Next 
}
// End Sub
};

// [117] Sub SetPadding(p As Object) As VMCol 
_B.setpadding=function(_p) {
// [118]  Col.SetPaddingAll(p) 
_B._col.setpaddingall(_p);
// [119]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMConfirm  =========================== */
function banano_bananovuematerial_vmconfirm() {
var _B=this;
_B._confirm= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._bactive=false;

_B._module={};

_B._bstatic=false;

// [12] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMConfirm 
_B.initialize=function(_v,_sid,_eventhandler) {
// [13]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [14]  vue = v 
_B._vue=_v;
// [15]  Confirm.Initialize(vue, ID).SetTag( {3} ) 
_B._confirm.initialize(_B._vue,_B._id).settag("md-dialog-confirm");
// [16]  bActive = False 
_B._bactive=false;
// [17]  If ID <> {4} Then 
if (_B._id!="") {
// [18]  SetActiveSync(ID) 
_B.setactivesync(_B._id,_B);
// [19]  End If 
}
// [20]  module = eventHandler 
_B._module=_eventhandler;
// [21]  Confirm.SetOnConfirm(module, {0} ) 
_B._confirm.setonconfirm(_B._module,"" + _B._id + "_ok");
// [22]  Confirm.SetOnCancel(module, {1} ) 
_B._confirm.setoncancel(_B._module,"" + _B._id + "_cancel");
// [23]  bstatic = False 
_B._bstatic=false;
// [24]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetStatic(b As Boolean) As VMConfirm 
_B.setstatic=function(_b) {
// [28]  bstatic = b 
_B._bstatic=_b;
// [29]  Return Me 
return _B;
// End Sub
};

// [32] Sub Hide 
_B.hide=function() {
var _opt;
// [33]  Dim opt As Map = CreateMap() 
_opt={};
// [34]  opt.Put(ID, False) 
_opt[_B._id]=false;
// [35]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [38] Sub Show 
_B.show=function() {
var _opt;
// [39]  Dim opt As Map = CreateMap() 
_opt={};
// [40]  opt.Put(ID, True) 
_opt[_B._id]=true;
// [41]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [45] Sub AddClass(c As String) As VMConfirm 
_B.addclass=function(_c) {
// [46]  Confirm.AddClass(c) 
_B._confirm.addclass(_c);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetAttr(attr As Map) As VMConfirm 
_B.setattr=function(_attr) {
// [52]  Confirm.SetAttr(attr) 
_B._confirm.setattr(_attr);
// [53]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetCancelText(c As String) As VMConfirm 
_B.setcanceltext=function(_c) {
// [57]  If bstatic Then 
if (_B._bstatic) {
// [58]  Confirm.SetAttr(CreateMap( {5} : c)) 
_B._confirm.setattr({"md-cancel-text":_c});
// [59]  Return Me 
return _B;
// [60]  End If 
}
// [61]  vue.SetState(CreateMap( {6} :c)) 
_B._vue.setstate({"canceltext":_c});
// [62]  Confirm.SetAttr(CreateMap( {7} : {8} )) 
_B._confirm.setattr({":md-cancel-text":"canceltext"});
// [63]  Return Me 
return _B;
// End Sub
};

// [66] private Sub SetActiveSync(a As Object) As VMConfirm 
_B.setactivesync=function(_a) {
// [67]  Confirm.SetActiveSync(a) 
_B._confirm.setactivesync(_a);
// [68]  bActive = True 
_B._bactive=true;
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetContent(c As String) As VMConfirm 
_B.setcontent=function(_c) {
// [73]  If bstatic Then 
if (_B._bstatic) {
// [74]  Confirm.SetAttr(CreateMap( {9} : c)) 
_B._confirm.setattr({"md-content":_c});
// [75]  Return Me 
return _B;
// [76]  End If 
}
// [77]  vue.SetState(CreateMap( {10} :c)) 
_B._vue.setstate({"confirmmessage":_c});
// [78]  Confirm.SetAttr(CreateMap( {11} : {12} )) 
_B._confirm.setattr({":md-content":"confirmmessage"});
// [79]  Return Me 
return _B;
// End Sub
};

// [82] Sub SetConfirmText(t As String) As VMConfirm 
_B.setconfirmtext=function(_t) {
// [83]  If bstatic Then 
if (_B._bstatic) {
// [84]  Confirm.SetAttr(CreateMap( {13} :t)) 
_B._confirm.setattr({"md-confirm-text":_t});
// [85]  Return Me 
return _B;
// [86]  End If 
}
// [87]  vue.SetState(CreateMap( {14} :t)) 
_B._vue.setstate({"confirmtext":_t});
// [88]  Confirm.SetAttr(CreateMap( {15} : {16} )) 
_B._confirm.setattr({":md-confirm-text":"confirmtext"});
// [89]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetTitle(t As String) As VMConfirm 
_B.settitle=function(_t) {
// [93]  If bstatic Then 
if (_B._bstatic) {
// [94]  Confirm.SetAttr(CreateMap( {17} :t)) 
_B._confirm.setattr({"md-title":_t});
// [95]  Return Me 
return _B;
// [96]  End If 
}
// [97]  vue.SetState(CreateMap( {18} :t)) 
_B._vue.setstate({"confirmtitle":_t});
// [98]  Confirm.SetAttr(CreateMap( {19} : {20} )) 
_B._confirm.setattr({":md-title":"confirmtitle"});
// [99]  Return Me 
return _B;
// End Sub
};

// [103] Sub ToString As String 
_B.tostring=function() {
// [104]  If bActive = False Then 
if (_B._bactive==false) {
// [105]  Log( {2} ) 
console.log("VMConfirm.SetActiveSync: '" + _B._id + "' has not been activated!");
// [106]  End If 
}
// [107]  Return Confirm.tostring 
return _B._confirm.tostring();
// End Sub
};

// [110] Sub Render 
_B.render=function() {
// [111]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [114] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [115]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMContainer  =========================== */
function banano_bananovuematerial_vmcontainer() {
var _B=this;
_B._container= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._grid= new banano_bananovuematerial_vmgrid();

_B._module={};

_B._fields=[];

_B._controls=[];

_B._strings=[];

_B._integers=[];

_B._booleans=[];

_B._doubles=[];

_B._dates=[];

_B._defaults={};

_B._required={};

_B._mode="";

_B._totalrows=0;

_B._sortitm={};

_B._sortitl=[];

_B._rows={};

_B._cells={};

_B._visibility={};

_B._rowstyles={};

_B._designmode=false;

_B._hasinfobox=false;

_B._exclusions=[];

// [33] public Sub RemoveAttr(sName As String) As VMContainer 
_B.removeattr=function(_sname) {
// [34]  Container.RemoveAttr(sName) 
_B._container.removeattr(_sname);
// [35]  Return Me 
return _B;
// End Sub
};

// [38] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMContainer 
_B.initialize=function(_v,_sid,_eventhandler) {
// [39]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [40]  vue = v 
_B._vue=_v;
// [41]  module = eventHandler 
_B._module=_eventhandler;
// [42]  Container.Initialize(vue, ID).SetTag( {15} ) 
_B._container.initialize(_B._vue,_B._id).settag("div");
// [43]  Container.RemoveAttr( {16} ) 
_B._container.removeattr(":required");
// [44]  Grid.Initialize(vue, {0} ,module) 
_B._grid.initialize(_B._vue,"" + _B._id + "grid",_B._module);
// [45]  Grid.Grid.RemoveAttr( {17} ) 
_B._grid._grid.removeattr(":required");
// [47]  TotalRows = 0 
_B._totalrows=0;
// [48]  rowStyles.Initialize 
_B._rowstyles={};
// [49]  sortitM.Initialize 
_B._sortitm={};
// [50]  sortItL.Initialize 
_B._sortitl.length=0;
// [51]  rows.initialize 
_B._rows={};
// [52]  Fields.Initialize 
_B._fields.length=0;
// [53]  Controls.Initialize 
_B._controls.length=0;
// [54]  Strings.Initialize 
_B._strings.length=0;
// [55]  Integers.Initialize 
_B._integers.length=0;
// [56]  Booleans.Initialize 
_B._booleans.length=0;
// [57]  Defaults.Initialize 
_B._defaults={};
// [58]  Required.Initialize 
_B._required={};
// [59]  Doubles.Initialize 
_B._doubles.length=0;
// [60]  Dates.initialize 
_B._dates.length=0;
// [61]  cells.Initialize 
_B._cells={};
// [62]  visibility.Initialize 
_B._visibility={};
// [63]  Exclusions.Initialize 
_B._exclusions.length=0;
// [64]  Mode = {18} 
_B._mode="A";
// [65]  sortitM.Initialize 
_B._sortitm={};
// [66]  sortItL.Initialize 
_B._sortitl.length=0;
// [67]  DesignMode = False 
_B._designmode=false;
// [68]  HasInfoBox = False 
_B._hasinfobox=false;
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub AddExclusion(them As List) 
_B.addexclusion=function(_them) {
var _k;
// [73]  For Each k As String In them 
for (var _kindex=0;_kindex<_them.length;_kindex++) {
_k=_them[_kindex];
// [74]  Exclusions.Add(k) 
_B._exclusions.push(_k);
// [75]  Next 
}
// End Sub
};

// [79] Sub SetClass(rowPos As Int, colPos As Int, className As String) As VMContainer 
_B.setclass=function(_rowpos,_colpos,_classname) {
// [80]  Grid.SetClass(rowPos, colPos, className) 
_B._grid.setclass(_rowpos,_colpos,_classname);
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub SetBorderRC(rowPos As Int, colPos As Int, width As String, color As String, bstyle As String) As VMGrid 
_B.setborderrc=function(_rowpos,_colpos,_width,_color,_bstyle) {
// [85]  Grid.SetBorder(rowPos, colPos, width, color, bstyle) 
_B._grid.setborder(_rowpos,_colpos,_width,_color,_bstyle);
// [86]  Return Grid 
return _B._grid;
// End Sub
};

// [89] Sub SetMarginsRC(rowPos As Int, colPos As Int, mt As Object, mb As Object, ml As Object, mr As Object) As VMGrid 
_B.setmarginsrc=function(_rowpos,_colpos,_mt,_mb,_ml,_mr) {
// [90]  Grid.SetMargins(rowPos, colPos, mt, mb, ml, mr) 
_B._grid.setmargins(_rowpos,_colpos,_mt,_mb,_ml,_mr);
// [91]  Return Grid 
return _B._grid;
// End Sub
};

// [94] Sub SetPaddingRC(rowPos As Int, colPos As Int, pt As Object, pb As Object, pl As Object, pr As Object) As VMGrid 
_B.setpaddingrc=function(_rowpos,_colpos,_pt,_pb,_pl,_pr) {
// [95]  Grid.SetPadding(rowPos,colPos, pt,pb,pl,pr) 
_B._grid.setpadding(_rowpos,_colpos,_pt,_pb,_pl,_pr);
// [96]  Return Grid 
return _B._grid;
// End Sub
};

// [99] Sub SetNotSelectible As VMContainer 
_B.setnotselectible=function() {
// [100]  Container.SetNotSelectible 
_B._container.setnotselectible();
// [101]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetRef(varRef As String) As VMContainer 
_B.setref=function(_varref) {
// [105]  Container.SetRef(varRef) 
_B._container.setref(_varref);
// [106]  Return Me 
return _B;
// End Sub
};

// [109] Sub SetID(n As String, bind As Boolean) As VMContainer 
_B.setid=function(_n,_bind) {
// [110]  Container.SetID(n, bind) 
_B._container.setid(_n,_bind);
// [111]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetKey(k As Object, bind As Boolean) As VMContainer 
_B.setkey=function(_k,_bind) {
// [115]  Container.SetKey(k, bind) 
_B._container.setkey(_k,_bind);
// [116]  Return Me 
return _B;
// End Sub
};

// [119] Sub SetVIf(vif As String) As VMContainer 
_B.setvif=function(_vif) {
// [120]  Container.SetVIf(vif) 
_B._container.setvif(_vif);
// [121]  Return Me 
return _B;
// End Sub
};

// [124] Sub AddHR As VMContainer 
_B.addhr=function() {
// [125]  Container.addhr 
_B._container.addhr();
// [126]  Return Me 
return _B;
// End Sub
};

// [129] Sub AddBR As VMContainer 
_B.addbr=function() {
// [130]  Container.addbr 
_B._container.addbr();
// [131]  Return Me 
return _B;
// End Sub
};

// [134] Sub AddClass(c As String) As VMContainer 
_B.addclass=function(_c) {
// [135]  Container.AddClass(c) 
_B._container.addclass(_c);
// [136]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetColor(c As Object) As VMContainer 
_B.setcolor=function(_c) {
// [140]  Container.SetColor(c) 
_B._container.setcolor(_c);
// [141]  Return Me 
return _B;
// End Sub
};

// [144] Sub SetStyle(m As Map) As VMContainer 
_B.setstyle=function(_m) {
// [145]  Container.SetStyle(m) 
_B._container.setstyle(_m);
// [146]  Return Me 
return _B;
// End Sub
};

// [149] Sub SetBackgroundColor(p As Object) As VMContainer 
_B.setbackgroundcolor=function(_p) {
// [150]  Container.SetBackgroundColor(p) 
_B._container.setbackgroundcolor(_p);
// [151]  Return Me 
return _B;
// End Sub
};

// [154] Sub SetMarginAll(p As Object) As VMContainer 
_B.setmarginall=function(_p) {
// [155]  Container.setmarginall(p) 
_B._container.setmarginall(_p);
// [156]  Return Me 
return _B;
// End Sub
};

// [159] Sub SetPaddingAll(p As Object) As VMContainer 
_B.setpaddingall=function(_p) {
// [160]  Container.SetPaddingAll(p) 
_B._container.setpaddingall(_p);
// [161]  Return Me 
return _B;
// End Sub
};

// [164] Sub SetMaxWidth(mw As String) As VMContainer 
_B.setmaxwidth=function(_mw) {
// [165]  Container.SetMaxWidth(mw) 
_B._container.setmaxwidth(_mw);
// [166]  Return Me 
return _B;
// End Sub
};

// [169] Sub SetMaxHeight(mw As String) As VMContainer 
_B.setmaxheight=function(_mw) {
// [170]  Container.SetMaxHeight(mw) 
_B._container.setmaxheight(_mw);
// [171]  Return Me 
return _B;
// End Sub
};

// [174] Sub Enable 
_B.enable=function() {
// [175]  SetDisabled(True) 
_B.setdisabled(true,_B);
// End Sub
};

// [178] Sub Disable 
_B.disable=function() {
// [179]  SetDisabled(False) 
_B.setdisabled(false,_B);
// End Sub
};

// [182] Sub Hide 
_B.hide=function() {
// [183]  vue.SetStateSingle( {1} , False) 
_B._vue.setstatesingle("" + _B._id + "show",false);
// End Sub
};

// [186] Sub Show 
_B.show=function() {
// [187]  vue.SetStateSingle( {2} , True) 
_B._vue.setstatesingle("" + _B._id + "show",true);
// End Sub
};

// [190] Sub SetDisabled(b As Boolean) As VMContainer 
_B.setdisabled=function(_b) {
// [191]  vue.SetStateSingle( {3} ,b) 
_B._vue.setstatesingle("" + _B._id + "disabled",_b);
// [192]  Return Me 
return _B;
// End Sub
};

// [195] Sub SetScrollBar(b As Boolean) As VMContainer 
_B.setscrollbar=function(_b) {
// [196]  Container.SetScrollBar(b) 
_B._container.setscrollbar(_b);
// [197]  Return Me 
return _B;
// End Sub
};

// [200] Sub SetBackgroundImage(url As String) As VMContainer 
_B.setbackgroundimage=function(_url) {
// [201]  Container.SetBackgroundImage(url) 
_B._container.setbackgroundimage(_url);
// [202]  Return Me 
return _B;
// End Sub
};

// [205] Sub SetText(t As String) As VMContainer 
_B.settext=function(_t) {
// [206]  Container.SetText(t) 
_B._container.settext(_t);
// [207]  Return Me 
return _B;
// End Sub
};

// [210] Sub SetOnClick(methodName As String) As VMContainer 
_B.setonclick=function(_methodname) {
// [211]  Container.SetOnClick(module, methodName) 
_B._container.setonclick(_B._module,_methodname);
// [212]  Return Me 
return _B;
// End Sub
};

// [215] Sub SetOnClickRC(rowpos As Int, colpos As Int) As VMContainer 
_B.setonclickrc=function(_rowpos,_colpos) {
// [216]  Grid.setonclick(rowpos,colpos) 
_B._grid.setonclick(_rowpos,_colpos);
// [217]  Return Me 
return _B;
// End Sub
};

// [220] Sub AddRow(iRows As Int, sVisibility As String, sThemeName As String, sClassName As String) As VMGrid 
_B.addrow=function(_irows,_svisibility,_sthemename,_sclassname) {
// [221]  Grid.AddRow(iRows, sVisibility, sThemeName,sClassName) 
_B._grid.addrow(_irows,_svisibility,_sthemename,_sclassname);
// [222]  Return Grid 
return _B._grid;
// End Sub
};

// [225] Sub AddColumnsOSMPV(iColumns As String, iOffsetSmall As String, iOffsetMedium As String,iOffsetLarge As String, iOffsetXLarge As String, iSizeSmall As String,iSizeMedium As String, iSizeLarge As String, IsizeXLarge As String, iVisibility As String, sTheme As String) As VMGrid 
_B.addcolumnsosmpv=function(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_ivisibility,_stheme) {
// [228]  Grid.AddColumnsOSMPV(iColumns, iOffsetSmall, iOffsetMedium,iOffsetLarge, iOffsetXLarge, iSizeSmall,iSizeMedium, iSizeLarge, IsizeXLarge,iVisibility, sTheme) 
_B._grid.addcolumnsosmpv(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_ivisibility,_stheme);
// [229]  Return Grid 
return _B._grid;
// End Sub
};

// [232] Sub AddColumnOSMP(iColumns As Int, iOffsetSmall As String, iOffsetMedium As String, iOffsetLarge As String, iOffsetXLarge As String, iSizeSmall As String, iSizeMedium As String, iSizeLarge As String, iSizeXLarge As String, sThemeName As String, sVisibility As String, sClassName As String) As VMGrid 
_B.addcolumnosmp=function(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_sthemename,_svisibility,_sclassname) {
// [235]  Grid.AddColumnOSMP(iColumns, iOffsetSmall, iOffsetMedium, iOffsetLarge, iOffsetXLarge, iSizeSmall, iSizeMedium, iSizeLarge, iSizeXLarge, sThemeName, sVisibility, sClassName) 
_B._grid.addcolumnosmp(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_sthemename,_svisibility,_sclassname);
// [236]  Return Grid 
return _B._grid;
// End Sub
};

// [239] Sub AddComponent(rowPos As Int, colPos As Int, elHTML As String) 
_B.addcomponent=function(_rowpos,_colpos,_elhtml) {
// [240]  Grid.AddComponent(rowPos, colPos, elHTML) 
_B._grid.addcomponent(_rowpos,_colpos,_elhtml);
// End Sub
};

// [243] Sub SetStyleRC(rowPos As Int, colPos As Int, prop As String, value As String) As VMGrid 
_B.setstylerc=function(_rowpos,_colpos,_prop,_value) {
// [244]  Grid.setstyle(rowPos, colPos, prop, value) 
_B._grid.setstyle(_rowpos,_colpos,_prop,_value);
// [245]  Return Grid 
return _B._grid;
// End Sub
};

// [248] Sub AddRows(iRows As Int) As VMGrid 
_B.addrows=function(_irows) {
// [249]  Grid.AddRows(iRows) 
_B._grid.addrows(_irows);
// [250]  Return Grid 
return _B._grid;
// End Sub
};

// [253] Sub AddColumns3x4 As VMGrid 
_B.addcolumns3x4=function() {
// [254]  Grid.AddColumns3x4 
_B._grid.addcolumns3x4();
// [255]  Return Grid 
return _B._grid;
// End Sub
};

// [258] Sub AddColumns4x3 As VMGrid 
_B.addcolumns4x3=function() {
// [259]  Grid.AddColumns4x3 
_B._grid.addcolumns4x3();
// [260]  Return Grid 
return _B._grid;
// End Sub
};

// [263] Sub AddColumns2x6 As VMGrid 
_B.addcolumns2x6=function() {
// [264]  Grid.AddColumns2x6 
_B._grid.addcolumns2x6();
// [265]  Return Grid 
return _B._grid;
// End Sub
};

// [268] Sub AddColumns6x2 As VMGrid 
_B.addcolumns6x2=function() {
// [269]  AddColumns6x2 
_B.addcolumns6x2(_B);
// [270]  Return Grid 
return _B._grid;
// End Sub
};

// [273] Sub AddColumns12x1 As VMGrid 
_B.addcolumns12x1=function() {
// [274]  AddColumns12x1 
_B.addcolumns12x1(_B);
// [275]  Return Grid 
return _B._grid;
// End Sub
};

// [278] Sub AddColumns8p4 As VMGrid 
_B.addcolumns8p4=function() {
// [279]  Grid.AddColumns8p4 
_B._grid.addcolumns8p4();
// [280]  Return Grid 
return _B._grid;
// End Sub
};

// [283] Sub AddColumns4p8 As VMGrid 
_B.addcolumns4p8=function() {
// [284]  Grid.AddColumns4p8 
_B._grid.addcolumns4p8();
// [285]  Return Grid 
return _B._grid;
// End Sub
};

// [288] Sub AddColumns1p11 As VMGrid 
_B.addcolumns1p11=function() {
// [289]  Grid.AddColumns1p11 
_B._grid.addcolumns1p11();
// [290]  Return Grid 
return _B._grid;
// End Sub
};

// [293] Sub AddColumns11p1 As VMGrid 
_B.addcolumns11p1=function() {
// [294]  Grid.AddColumns11p1 
_B._grid.addcolumns11p1();
// [295]  Return Grid 
return _B._grid;
// End Sub
};

// [298] Sub AddColumns2p10 As VMGrid 
_B.addcolumns2p10=function() {
// [299]  Grid.AddColumns2p10 
_B._grid.addcolumns2p10();
// [300]  Return Grid 
return _B._grid;
// End Sub
};

// [303] Sub AddColumns10p2 As VMGrid 
_B.addcolumns10p2=function() {
// [304]  Grid.AddColumns10p2 
_B._grid.addcolumns10p2();
// [305]  Return Grid 
return _B._grid;
// End Sub
};

// [308] Sub AddColumns3p9 As VMGrid 
_B.addcolumns3p9=function() {
// [309]  Grid.AddColumns3p9 
_B._grid.addcolumns3p9();
// [310]  Return Grid 
return _B._grid;
// End Sub
};

// [313] Sub AddColumns9p3 As VMGrid 
_B.addcolumns9p3=function() {
// [314]  Grid.AddColumns9p3 
_B._grid.addcolumns9p3();
// [315]  Return Grid 
return _B._grid;
// End Sub
};

// [318] Sub AddColumns7p5 As VMGrid 
_B.addcolumns7p5=function() {
// [319]  Grid.AddColumns7p5 
_B._grid.addcolumns7p5();
// [320]  Return Grid 
return _B._grid;
// End Sub
};

// [323] Sub AddColumns5p7 As VMGrid 
_B.addcolumns5p7=function() {
// [324]  Grid.AddColumns5p7 
_B._grid.addcolumns5p7();
// [325]  Return Grid 
return _B._grid;
// End Sub
};

// [328] Sub AddColumns12 As VMGrid 
_B.addcolumns12=function() {
// [329]  Grid.AddColumns12 
_B._grid.addcolumns12();
// [330]  Return Grid 
return _B._grid;
// End Sub
};

// [333] Sub AddColumns(iColumns As Int, SizeSmall As String, SizeMedium As String, SizeLarge As String, SizeXLarge As String) As VMGrid 
_B.addcolumns=function(_icolumns,_sizesmall,_sizemedium,_sizelarge,_sizexlarge) {
// [334]  Grid.AddColumns(iColumns,SizeSmall, SizeMedium, SizeLarge, SizeXLarge) 
_B._grid.addcolumns(_icolumns,_sizesmall,_sizemedium,_sizelarge,_sizexlarge);
// [335]  Return Grid 
return _B._grid;
// End Sub
};

// [338] Sub SetOnDrop(methodName As String) As VMContainer 
_B.setondrop=function(_methodname) {
// [339]  Container.setondrop(module, methodName) 
_B._container.setondrop(_B._module,_methodname);
// [340]  Return Me 
return _B;
// End Sub
};

// [343] Sub SetOnMouseOut(methodName As String) As VMContainer 
_B.setonmouseout=function(_methodname) {
// [344]  Container.SetOnMouseOut(module, methodName) 
_B._container.setonmouseout(_B._module,_methodname);
// [345]  Return Me 
return _B;
// End Sub
};

// [348] Sub SetOnMouseOver(methodName As String) As VMContainer 
_B.setonmouseover=function(_methodname) {
// [349]  Container.SetOnMouseOver(module, methodName) 
_B._container.setonmouseover(_B._module,_methodname);
// [350]  Return Me 
return _B;
// End Sub
};

// [353] Sub SetPadding(pt As Object, pb As Object, pl As Object, pr As Object) As VMContainer 
_B.setpadding=function(_pt,_pb,_pl,_pr) {
// [354]  Container.SetPadding(pt,pb,pl, pr) 
_B._container.setpadding(_pt,_pb,_pl,_pr);
// [355]  Return Me 
return _B;
// End Sub
};

// [358] Sub SetMargins(mt As Object, mb As Object, ml As Object, mr As Object) As VMContainer 
_B.setmargins=function(_mt,_mb,_ml,_mr) {
// [359]  Container.SetMargins(mt, mb, ml, mr) 
_B._container.setmargins(_mt,_mb,_ml,_mr);
// [360]  Return Me 
return _B;
// End Sub
};

// [363] Sub SetElevation(e As Int) As VMContainer 
_B.setelevation=function(_e) {
// [364]  Container.SetElevation(e) 
_B._container.setelevation(_e);
// [365]  Return Me 
return _B;
// End Sub
};

// [369] Sub SetBorder(width As String, color As String, bstyle As String) As VMContainer 
_B.setborder=function(_width,_color,_bstyle) {
// [370]  Container.SetBorder(width, color, bstyle) 
_B._container.setborder(_width,_color,_bstyle);
// [371]  Return Me 
return _B;
// End Sub
};

// [375] Sub SetCursorMove As VMContainer 
_B.setcursormove=function() {
// [376]  Container.SetCursorMove 
_B._container.setcursormove();
// [377]  Return Me 
return _B;
// End Sub
};

// [380] Sub SetCursorPointer As VMContainer 
_B.setcursorpointer=function() {
// [381]  Container.SetCursorPointer 
_B._container.setcursorpointer();
// [382]  Return Me 
return _B;
// End Sub
};

// [385] Sub SetTextAlignCenter As VMContainer 
_B.settextaligncenter=function() {
// [386]  Container.SetTextAlignCenter 
_B._container.settextaligncenter();
// [387]  Return Me 
return _B;
// End Sub
};

// [390] Sub SetDraggable(b As Boolean) As VMContainer 
_B.setdraggable=function(_b) {
// [391]  Container.SetDraggable(b) 
_B._container.setdraggable(_b);
// [392]  Return Me 
return _B;
// End Sub
};

// [395] Sub SetDroppable(b As Boolean) As VMContainer 
_B.setdroppable=function(_b) {
// [396]  Container.SetDroppable(b) 
_B._container.setdroppable(_b);
// [397]  Return Me 
return _B;
// End Sub
};

// [401] Sub SetWidth(w As String) As VMContainer 
_B.setwidth=function(_w) {
// [402]  Container.SetWidth(w) 
_B._container.setwidth(_w);
// [403]  Return Me 
return _B;
// End Sub
};

// [406] Sub SetHeight(h As String) As VMContainer 
_B.setheight=function(_h) {
// [407]  Container.SetHeight(h) 
_B._container.setheight(_h);
// [408]  Return Me 
return _B;
// End Sub
};

// [411] Sub SetVShow(vshow As String) As VMContainer 
_B.setvshow=function(_vshow) {
// [412]  Container.SetVShow(vshow) 
_B._container.setvshow(_vshow);
// [413]  Return Me 
return _B;
// End Sub
};

// [418] Sub SetAttr(attr As Map) As VMContainer 
_B.setattr=function(_attr) {
// [419]  Container.SetAttr(attr) 
_B._container.setattr(_attr);
// [420]  Return Me 
return _B;
// End Sub
};

// [423] Sub ToString As String 
_B.tostring=function() {
// [424]  BuildControls 
_B.buildcontrols(_B);
// [425]  Grid.Pop(Container) 
_B._grid.pop(_B._container);
// [426]  Return Container.tostring 
return _B._container.tostring();
// End Sub
};

// [429] Sub Render 
_B.render=function() {
// [430]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [433] Sub Pop(p As VMContainer) 
_B.pop=function(_p) {
// [434]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [437] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [438]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

// [442] private Sub Prepare 
_B.prepare=function() {
var _k,_sk;
// [443]  For Each k As String In Dates 
for (var _kindex=0;_kindex<_B._dates.length;_kindex++) {
_k=_B._dates[_kindex];
// [444]  Dim sk As String = vue.GetState(k, {19} ) 
_sk=_B._vue.getstate(_k,"");
// [445]  sk = vue.Date2YYYYMMDD(sk) 
_sk=_B._vue.date2yyyymmdd(_sk);
// [446]  vue.SetStateSingle(k, sk) 
_B._vue.setstatesingle(_k,_sk);
// [447]  Next 
}
// End Sub
};

// [451] Sub GetData As Map 
_B.getdata=function() {
var _m;
// [452]  Prepare 
_B.prepare(_B);
// [453]  Dim m As Map = CreateMap() 
_m={};
// [454]  m = vue.GetStates(Fields) 
_m=_B._vue.getstates(_B._fields);
// [455]  m = LinkRecordTypes(m) 
_m=_B.linkrecordtypes(_m,_B);
// [456]  Return m 
return _m;
// End Sub
};

// [460] Sub Validate(rec As Map) As Boolean 
_B.validate=function(_rec) {
var _iv,_k,_v;
// [461]  Dim iv As Int = 0 
_iv=0;
// [462]  For Each k As String In Required.Keys 
var _kKeys = Object.keys(_B._required);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [463]  If rec.ContainsKey(k) Then 
if ((_k in _rec)) {
// [464]  Dim v As String = rec.GetDefault(k, {20} ) 
_v=(_rec[_k] || "");
// [465]  v = vue.CStr(v) 
_v=_B._vue.cstr(_v);
// [466]  v = v.trim 
_v=_v.trim();
// [467]  If v = {21} Then 
if (_v=="") {
// [468]  Log( {22} & k) 
console.log("Validate: "+_k);
// [469]  iv = iv + 1 
_iv=_iv+1;
// [470]  ShowError(k) 
_B.showerror(_k,_B);
// [471]  Else 
} else {
// [472]  HideError(k) 
_B.hideerror(_k,_B);
// [473]  End If 
}
// [474]  End If 
}
// [475]  Next 
}
// [476]  If iv = 0 Then 
if (_iv==0) {
// [477]  Return True 
return true;
// [478]  Else 
} else {
// [479]  Return False 
return false;
// [480]  End If 
}
// End Sub
};

// [483] Sub ShowError(elID As String) 
_B.showerror=function(_elid) {
// [484]  vue.SetStateSingle( {4} , True) 
_B._vue.setstatesingle("" + _elid + "error",true);
// End Sub
};

// [487] Sub HideError(elID As String) 
_B.hideerror=function(_elid) {
// [488]  vue.SetStateSingle( {5} , False) 
_B._vue.setstatesingle("" + _elid + "error",false);
// End Sub
};

// [491] private Sub CreateList(sid As String,eventHandler As Object) As VMList 
_B.createlist=function(_sid,_eventhandler) {
var _el;
// [492]  Dim el As VMList 
_el= new banano_bananovuematerial_vmlist();
// [493]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [494]  Return el 
return _el;
// End Sub
};

// [497] private Sub CreateListItem(sid As String, eventHandler As Object) As VMListItem 
_B.createlistitem=function(_sid,_eventhandler) {
var _el;
// [498]  Dim el As VMListItem 
_el= new banano_bananovuematerial_vmlistitem();
// [499]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [500]  Return el 
return _el;
// End Sub
};

// [503] private Sub CreateButton(sid As String, eventHandler As Object) As VMButton 
_B.createbutton=function(_sid,_eventhandler) {
var _el;
// [504]  Dim el As VMButton 
_el= new banano_bananovuematerial_vmbutton();
// [505]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [506]  Return el 
return _el;
// End Sub
};

// [509] private Sub CreateDatePicker(sid As String, eventHandler As Object) As VMDatePicker 
_B.createdatepicker=function(_sid,_eventhandler) {
var _el;
// [510]  Dim el As VMDatePicker 
_el= new banano_bananovuematerial_vmdatepicker();
// [511]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [512]  Return el 
return _el;
// End Sub
};

// [515] Sub CreateControl(sname As String) As VMInputControl 
_B.createcontrol=function(_sname) {
var _el;
// [516]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [517]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [518]  el.Initialize(sname) 
_el.initialize(_sname);
// [519]  Return el 
return _el;
// End Sub
};

// [522] Sub NewIconButton(sname As String) As VMInputControl 
_B.newiconbutton=function(_sname) {
var _el;
// [523]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [524]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [525]  el.Initialize(sname) 
_el.initialize(_sname);
// [526]  el.SetButton 
_el.setbutton();
// [527]  el.SetIconButton(True) 
_el.seticonbutton(true);
// [528]  Return el 
return _el;
// End Sub
};

// [532] Sub NewSwitch(sname As String, slabel As String, svalue As Object,bPrimary As Boolean, iTabIndex As Int) As VMInputControl 
_B.newswitch=function(_sname,_slabel,_svalue,_bprimary,_itabindex) {
var _el;
// [533]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [534]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [535]  el.Initialize(sname) 
_el.initialize(_sname);
// [536]  el.SetSwitch 
_el.setswitch();
// [537]  el.label = slabel 
_el._label=_slabel;
// [538]  el.Value = svalue 
_el._value=_svalue;
// [539]  el.IsPrimary = bPrimary 
_el._isprimary=_bprimary;
// [540]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [541]  Return el 
return _el;
// End Sub
};

// [544] Sub NewRadioGroup(sname As String, slabel As String, svalue As Object, options As Map, iTabIndex As Int) As VMInputControl 
_B.newradiogroup=function(_sname,_slabel,_svalue,_options,_itabindex) {
var _el;
// [545]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [546]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [547]  el.Initialize(sname) 
_el.initialize(_sname);
// [548]  el.SetRadioGroup 
_el.setradiogroup();
// [549]  el.label = slabel 
_el._label=_slabel;
// [550]  el.Value = svalue 
_el._value=_svalue;
// [551]  el.options = options 
_el._options=_options;
// [552]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [553]  Return el 
return _el;
// End Sub
};

// [556] Sub NewCheckBoxGroup(sname As String) As VMInputControl 
_B.newcheckboxgroup=function(_sname) {
var _el;
// [557]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [558]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [559]  el.Initialize(sname) 
_el.initialize(_sname);
// [560]  el.SetCheckBoxGroup 
_el.setcheckboxgroup();
// [561]  Return el 
return _el;
// End Sub
};

// [564] Sub NewCheckBox(sname As String, slabel As String, svalue As Object, bPrimary As Boolean, iTabIndex As Int) As VMInputControl 
_B.newcheckbox=function(_sname,_slabel,_svalue,_bprimary,_itabindex) {
var _el;
// [565]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [566]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [567]  el.Initialize(sname) 
_el.initialize(_sname);
// [568]  el.SetCheckBox 
_el.setcheckbox();
// [569]  el.Value = svalue 
_el._value=_svalue;
// [570]  el.label = slabel 
_el._label=_slabel;
// [571]  el.IsPrimary = bPrimary 
_el._isprimary=_bprimary;
// [572]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [573]  Return el 
return _el;
// End Sub
};

// [576] Sub NewDatePicker(sname As String, slabel As String, bRequired As Boolean, bImmediately As Boolean, bOpenOnFocus As Boolean, splaceholder As String, sHelperText As String, sErrorText As String, iTabIndex As Int) As VMInputControl 
_B.newdatepicker=function(_sname,_slabel,_brequired,_bimmediately,_bopenonfocus,_splaceholder,_shelpertext,_serrortext,_itabindex) {
var _el;
// [577]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [578]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [579]  el.Initialize(sname) 
_el.initialize(_sname);
// [580]  el.SetDatePicker 
_el.setdatepicker();
// [581]  el.label = slabel 
_el._label=_slabel;
// [582]  el.Required = bRequired 
_el._required=_brequired;
// [583]  el.clearable = True 
_el._clearable=true;
// [584]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [585]  el.helperText = sHelperText 
_el._helpertext=_shelpertext;
// [586]  el.errorText = sErrorText 
_el._errortext=_serrortext;
// [587]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [588]  el.immediately = bImmediately 
_el._immediately=_bimmediately;
// [589]  el.openonfocus = bOpenOnFocus 
_el._openonfocus=_bopenonfocus;
// [590]  Return el 
return _el;
// End Sub
};

// [593] Sub NewTimePicker(sname As String, slabel As String, bRequired As Boolean, splaceholder As String, shelpertext As String, serrortext As String, iTabIndex As Int) As VMInputControl 
_B.newtimepicker=function(_sname,_slabel,_brequired,_splaceholder,_shelpertext,_serrortext,_itabindex) {
var _el;
// [595]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [596]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [597]  el.Initialize(sname) 
_el.initialize(_sname);
// [598]  el.SetTimePicker 
_el.settimepicker();
// [599]  el.label = slabel 
_el._label=_slabel;
// [600]  el.clearable = True 
_el._clearable=true;
// [601]  el.Required = bRequired 
_el._required=_brequired;
// [602]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [603]  el.helperText = shelpertext 
_el._helpertext=_shelpertext;
// [604]  el.errorText = serrortext 
_el._errortext=_serrortext;
// [605]  el.defaultValue = {23} 
_el._defaultvalue="12:00";
// [606]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [607]  Return el 
return _el;
// End Sub
};

// [610] Sub NewChip(sname As String, sText As String, bClickable As Boolean, bDeletable As Boolean, sourceTable As String, sourceField As String, displayField As String) As VMInputControl 
_B.newchip=function(_sname,_stext,_bclickable,_bdeletable,_sourcetable,_sourcefield,_displayfield) {
var _el;
// [611]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [612]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [613]  el.Initialize(sname) 
_el.initialize(_sname);
// [614]  el.SetChip 
_el.setchip();
// [615]  el.Text = sText 
_el._text=_stext;
// [616]  el.Clickable = bClickable 
_el._clickable=_bclickable;
// [617]  el.Deletable = bDeletable 
_el._deletable=_bdeletable;
// [618]  If sourceTable <> Null Then el.sourceTable = sourceTable 
if (_sourcetable!=null) {_el._sourcetable=_sourcetable;}
// [619]  If sourceField <> Null Then el.sourceField =sourceField 
if (_sourcefield!=null) {_el._sourcefield=_sourcefield;}
// [620]  If displayField <> Null Then el.displayField = displayField 
if (_displayfield!=null) {_el._displayfield=_displayfield;}
// [621]  el.UseOptions = False 
_el._useoptions=false;
// [622]  el.UseDataSource = True 
_el._usedatasource=true;
// [623]  Return el 
return _el;
// End Sub
};

// [626] Sub NewChips(sname As String, slabel As String, splaceholder As String, bStatic As Boolean, bRequired As Boolean, sHelperText As String, sErrorText As String, iTabIndex As Int) As VMInputControl 
_B.newchips=function(_sname,_slabel,_splaceholder,_bstatic,_brequired,_shelpertext,_serrortext,_itabindex) {
var _el;
// [627]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [628]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [629]  el.Initialize(sname) 
_el.initialize(_sname);
// [630]  el.SetChips 
_el.setchips();
// [631]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [632]  el.Required = bRequired 
_el._required=_brequired;
// [633]  el.label = slabel 
_el._label=_slabel;
// [634]  el.Static = bStatic 
_el._static=_bstatic;
// [635]  el.CheckDuplicates = True 
_el._checkduplicates=true;
// [636]  el.helperText = sHelperText 
_el._helpertext=_shelpertext;
// [637]  el.errorText = sErrorText 
_el._errortext=_serrortext;
// [638]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [639]  Return el 
return _el;
// End Sub
};

// [642] Sub NewInfoBox(sname As String, sBoxType As String, sText As String, sIcon As String, sIconColor As String, sIconBackgroundColor As String, iCount As Int, iStart As Int, iFinish As Int, iInterval As Int, bSetCounter As Boolean, iSpeed As Int, iRefreshInterval As Int, bHoverExpand As Boolean, bHoverZoom As Boolean) As VMInputControl 
_B.newinfobox=function(_sname,_sboxtype,_stext,_sicon,_siconcolor,_siconbackgroundcolor,_icount,_istart,_ifinish,_iinterval,_bsetcounter,_ispeed,_irefreshinterval,_bhoverexpand,_bhoverzoom) {
var _el;
// [643]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [644]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [645]  el.Initialize(sname) 
_el.initialize(_sname);
// [646]  el.typeof = {24} 
_el._typeof="infobox";
// [647]  el.fieldType = {25} 
_el._fieldtype="string";
// [648]  el.bSetCounter = bSetCounter 
_el._bsetcounter=_bsetcounter;
// [649]  el.Start = iStart 
_el._start=_istart;
// [650]  el.Finish = iFinish 
_el._finish=_ifinish;
// [651]  el.Speed = iSpeed 
_el._speed=_ispeed;
// [652]  el.RefreshInterval = iRefreshInterval 
_el._refreshinterval=_irefreshinterval;
// [653]  el.Count = iCount 
_el._count=_icount;
// [654]  el.IconName = sIcon 
_el._iconname=_sicon;
// [655]  el.IconColor = sIconColor 
_el._iconcolor=_siconcolor;
// [656]  el.IconBackgroundColor = sIconBackgroundColor 
_el._iconbackgroundcolor=_siconbackgroundcolor;
// [657]  el.Text = sText 
_el._text=_stext;
// [658]  el.HoverExpandEffect = bHoverExpand 
_el._hoverexpandeffect=_bhoverexpand;
// [659]  el.HoverZoomEffect = bHoverZoom 
_el._hoverzoomeffect=_bhoverzoom;
// [660]  el.BoxType = sBoxType 
_el._boxtype=_sboxtype;
// [661]  Return el 
return _el;
// End Sub
};

// [665] Sub NewSlider(sname As String, slabel As String, iMinValue As Int, iMaxValue As String,iTabIndex As Int) As VMInputControl 
_B.newslider=function(_sname,_slabel,_iminvalue,_imaxvalue,_itabindex) {
var _el;
// [666]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [667]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [668]  el.Initialize(sname) 
_el.initialize(_sname);
// [669]  el.SetSlider 
_el.setslider();
// [670]  el.minvalue = iMinValue 
_el._minvalue=_iminvalue;
// [671]  el.maxvalue = iMaxValue 
_el._maxvalue=_imaxvalue;
// [672]  el.label = slabel 
_el._label=_slabel;
// [673]  el.ThumbLabel = True 
_el._thumblabel=true;
// [674]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [675]  Return el 
return _el;
// End Sub
};

// [679] Sub NewEmail(sname As String, slabel As String, splaceholder As String, bRequired As Boolean, sIcon As String, shelpertext As String, serrorText As String, iTabIndex As Int) As VMInputControl 
_B.newemail=function(_sname,_slabel,_splaceholder,_brequired,_sicon,_shelpertext,_serrortext,_itabindex) {
var _el;
// [680]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [681]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [682]  el.Initialize(sname) 
_el.initialize(_sname);
// [683]  el.clearable = True 
_el._clearable=true;
// [684]  el.SetEmail 
_el.setemail();
// [685]  el.errorText = serrorText 
_el._errortext=_serrortext;
// [686]  el.label = slabel 
_el._label=_slabel;
// [687]  el.required = bRequired 
_el._required=_brequired;
// [688]  el.iconname = sIcon 
_el._iconname=_sicon;
// [689]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [690]  el.helperText = shelpertext 
_el._helpertext=_shelpertext;
// [691]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [692]  Return el 
return _el;
// End Sub
};

// [695] Sub NewText(sname As String, slabel As String, splaceholder As String, bRequired As Boolean, sIcon As String, iMaxLen As Int, shelpertext As String, serrorText As String, iTabIndex As Int) As VMInputControl 
_B.newtext=function(_sname,_slabel,_splaceholder,_brequired,_sicon,_imaxlen,_shelpertext,_serrortext,_itabindex) {
var _el;
// [696]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [697]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [698]  el.Initialize(sname) 
_el.initialize(_sname);
// [699]  el.typeOf = {26} 
_el._typeof="text";
// [700]  el.clearable = True 
_el._clearable=true;
// [701]  el.errorText = serrorText 
_el._errortext=_serrortext;
// [702]  el.label = slabel 
_el._label=_slabel;
// [703]  el.required = bRequired 
_el._required=_brequired;
// [704]  el.iconname = sIcon 
_el._iconname=_sicon;
// [705]  If iMaxLen > 0 Then el.MaxLength = iMaxLen 
if (_imaxlen>0) {_el._maxlength=_imaxlen;}
// [706]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [707]  el.helperText = shelpertext 
_el._helpertext=_shelpertext;
// [708]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [709]  Return el 
return _el;
// End Sub
};

// [713] Sub NewTextArea(sname As String, slabel As String, splaceholder As String, bRequired As Boolean, bAutoGrow As Boolean, sIcon As String, iMaxLen As Int, shelpertext As String, serrorText As String,iTabIndex As Int) As VMInputControl 
_B.newtextarea=function(_sname,_slabel,_splaceholder,_brequired,_bautogrow,_sicon,_imaxlen,_shelpertext,_serrortext,_itabindex) {
var _el;
// [714]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [715]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [716]  el.Initialize(sname) 
_el.initialize(_sname);
// [717]  el.clearable = True 
_el._clearable=true;
// [718]  el.SetTextArea 
_el.settextarea();
// [719]  el.errorText = serrorText 
_el._errortext=_serrortext;
// [720]  el.label = slabel 
_el._label=_slabel;
// [721]  el.required = bRequired 
_el._required=_brequired;
// [722]  el.iconname = sIcon 
_el._iconname=_sicon;
// [723]  If iMaxLen > 0 Then el.MaxLength = iMaxLen 
if (_imaxlen>0) {_el._maxlength=_imaxlen;}
// [724]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [725]  el.helperText = shelpertext 
_el._helpertext=_shelpertext;
// [726]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [727]  el.AutoGrow = bAutoGrow 
_el._autogrow=_bautogrow;
// [728]  Return el 
return _el;
// End Sub
};

// [732] Sub NewTel(sname As String, slabel As String, splaceholder As String, bRequired As Boolean, sIcon As String, shelpertext As String, serrorText As String, iTabIndex As Int) As VMInputControl 
_B.newtel=function(_sname,_slabel,_splaceholder,_brequired,_sicon,_shelpertext,_serrortext,_itabindex) {
var _el;
// [733]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [734]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [735]  el.Initialize(sname) 
_el.initialize(_sname);
// [736]  el.typeOf = {27} 
_el._typeof="text";
// [737]  el.errorText = serrorText 
_el._errortext=_serrortext;
// [738]  el.label = slabel 
_el._label=_slabel;
// [739]  el.required = bRequired 
_el._required=_brequired;
// [740]  el.iconname = sIcon 
_el._iconname=_sicon;
// [741]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [742]  el.helperText = shelpertext 
_el._helpertext=_shelpertext;
// [743]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [744]  Return el 
return _el;
// End Sub
};

// [747] Sub NewNumber(sname As String, slabel As String, splaceholder As String, bRequired As Boolean, sIcon As String, shelpertext As String, serrorText As String, iTabIndex As Int) As VMInputControl 
_B.newnumber=function(_sname,_slabel,_splaceholder,_brequired,_sicon,_shelpertext,_serrortext,_itabindex) {
var _el;
// [748]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [749]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [750]  el.Initialize(sname) 
_el.initialize(_sname);
// [751]  el.typeOf = {28} 
_el._typeof="number";
// [752]  el.fieldType = {29} 
_el._fieldtype="int";
// [753]  el.errorText = serrorText 
_el._errortext=_serrortext;
// [754]  el.label = slabel 
_el._label=_slabel;
// [755]  el.required = bRequired 
_el._required=_brequired;
// [756]  el.iconname = sIcon 
_el._iconname=_sicon;
// [757]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [758]  el.helperText = shelpertext 
_el._helpertext=_shelpertext;
// [759]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [760]  Return el 
return _el;
// End Sub
};

// [764] Sub NewPassword(sname As String, slabel As String, splaceholder As String, bRequired As Boolean, bToggle As Boolean, sIcon As String, iMaxLen As Int, shelpertext As String, serrorText As String, iTabIndex As Int) As VMInputControl 
_B.newpassword=function(_sname,_slabel,_splaceholder,_brequired,_btoggle,_sicon,_imaxlen,_shelpertext,_serrortext,_itabindex) {
var _el;
// [765]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [766]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [767]  el.Initialize(sname) 
_el.initialize(_sname);
// [768]  el.SetPassword 
_el.setpassword();
// [769]  el.errorText = serrorText 
_el._errortext=_serrortext;
// [770]  el.label = slabel 
_el._label=_slabel;
// [771]  el.required = bRequired 
_el._required=_brequired;
// [772]  el.iconname = sIcon 
_el._iconname=_sicon;
// [773]  el.MaxLength = iMaxLen 
_el._maxlength=_imaxlen;
// [774]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [775]  el.helperText = shelpertext 
_el._helpertext=_shelpertext;
// [776]  el.TogglePassword = bToggle 
_el._togglepassword=_btoggle;
// [777]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [778]  Return el 
return _el;
// End Sub
};

// [781] Sub NewFile(sname As String, slabel As String, splaceholder As String, bRequired As Boolean, shelperText As String, sErrorText As String, iTabIndex As Int) As VMInputControl 
_B.newfile=function(_sname,_slabel,_splaceholder,_brequired,_shelpertext,_serrortext,_itabindex) {
var _el;
// [782]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [783]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [784]  el.Initialize(sname) 
_el.initialize(_sname);
// [785]  el.SetEmail 
_el.setemail();
// [786]  el.typeOf = {30} 
_el._typeof="file";
// [787]  el.errorText = sErrorText 
_el._errortext=_serrortext;
// [788]  el.helperText = shelperText 
_el._helpertext=_shelpertext;
// [789]  el.Required = bRequired 
_el._required=_brequired;
// [790]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [791]  el.PlaceHolder = splaceholder 
_el._placeholder=_splaceholder;
// [792]  el.label = slabel 
_el._label=_slabel;
// [793]  Return el 
return _el;
// End Sub
};

// [796] Sub NewImage(sname As String, sdefaultValue As String, salt As String, swidth As String, sheight As String) As VMInputControl 
_B.newimage=function(_sname,_sdefaultvalue,_salt,_swidth,_sheight) {
var _el;
// [797]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [798]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [799]  el.Initialize(sname) 
_el.initialize(_sname);
// [800]  el.typeOf = {31} 
_el._typeof="image";
// [801]  el.Width = swidth 
_el._width=_swidth;
// [802]  el.Height = sheight 
_el._height=_sheight;
// [803]  el.defaultValue = sdefaultValue 
_el._defaultvalue=_sdefaultvalue;
// [804]  el.Alt = salt 
_el._alt=_salt;
// [805]  Return el 
return _el;
// End Sub
};

// [808] Sub NewH1(sname As String, sText As String) As VMInputControl 
_B.newh1=function(_sname,_stext) {
// [809]  Return NewLabel(sname, {32} , sText) 
return _B.newlabel(_sname,"h1",_stext,_B);
// End Sub
};

// [812] Sub NewH2(sname As String, sText As String) As VMInputControl 
_B.newh2=function(_sname,_stext) {
// [813]  Return NewLabel(sname, {33} , sText) 
return _B.newlabel(_sname,"h2",_stext,_B);
// End Sub
};

// [816] Sub NewH3(sname As String, sText As String) As VMInputControl 
_B.newh3=function(_sname,_stext) {
// [817]  Return NewLabel(sname, {34} , sText) 
return _B.newlabel(_sname,"h3",_stext,_B);
// End Sub
};

// [820] Sub NewH4(sname As String, sText As String) As VMInputControl 
_B.newh4=function(_sname,_stext) {
// [821]  Return NewLabel(sname, {35} , sText) 
return _B.newlabel(_sname,"h4",_stext,_B);
// End Sub
};

// [824] Sub NewH5(sname As String, sText As String) As VMInputControl 
_B.newh5=function(_sname,_stext) {
// [825]  Return NewLabel(sname, {36} , sText) 
return _B.newlabel(_sname,"h5",_stext,_B);
// End Sub
};

// [828] Sub NewH6(sname As String, sText As String) As VMInputControl 
_B.newh6=function(_sname,_stext) {
// [829]  Return NewLabel(sname, {37} , sText) 
return _B.newlabel(_sname,"h6",_stext,_B);
// End Sub
};

// [832] Sub NewP(sname As String, sText As String) As VMInputControl 
_B.newp=function(_sname,_stext) {
// [833]  Return NewLabel(sname, {38} , sText) 
return _B.newlabel(_sname,"p",_stext,_B);
// End Sub
};

// [836] Sub NewLabel(sname As String, sSize As String, sText As String) As VMInputControl 
_B.newlabel=function(_sname,_ssize,_stext) {
var _el;
// [837]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [838]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [839]  el.Initialize(sname) 
_el.initialize(_sname);
// [840]  el.typeOf = {39} 
_el._typeof="label";
// [841]  el.Tag = sSize 
_el._tag=_ssize;
// [842]  el.Text = sText 
_el._text=_stext;
// [843]  Return el 
return _el;
// End Sub
};

// [846] Sub NewIcon(sname As String, sIcon As String, sSize As String) As VMInputControl 
_B.newicon=function(_sname,_sicon,_ssize) {
var _el;
// [847]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [848]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [849]  el.Initialize(sname) 
_el.initialize(_sname);
// [850]  el.typeOf = {40} 
_el._typeof="icon";
// [851]  el.iconsize = sSize 
_el._iconsize=_ssize;
// [852]  el.IconName = sIcon 
_el._iconname=_sicon;
// [853]  Return el 
return _el;
// End Sub
};

// [856] Sub NewButton(sname As String, sLabel As String, sIcon As String, bRaised As Boolean, bPrimary As Boolean, bAccent As Boolean, bFitWidth As Boolean) As VMInputControl 
_B.newbutton=function(_sname,_slabel,_sicon,_braised,_bprimary,_baccent,_bfitwidth) {
var _el;
// [857]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [858]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [859]  el.Initialize(sname) 
_el.initialize(_sname);
// [860]  el.SetButton 
_el.setbutton();
// [861]  el.SetLabel(sLabel) 
_el.setlabel(_slabel);
// [862]  el.SetButtonTypeRegular 
_el.setbuttontyperegular();
// [863]  el.SetRaised(bRaised) 
_el.setraised(_braised);
// [864]  If bPrimary Then el.SetPrimary(bPrimary) 
if (_bprimary) {_el.setprimary(_bprimary);}
// [865]  If bAccent Then el.SetAccent(bAccent) 
if (_baccent) {_el.setaccent(_baccent);}
// [866]  If bFitWidth Then el.SetFitWidth(True) 
if (_bfitwidth) {_el.setfitwidth(true);}
// [867]  Return el 
return _el;
// End Sub
};

// [870] Sub NewList(sname As String) As VMInputControl 
_B.newlist=function(_sname) {
var _el;
// [871]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [872]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [873]  el.Initialize(sname) 
_el.initialize(_sname);
// [874]  el.SetList 
_el.setlist();
// [875]  Return el 
return _el;
// End Sub
};

// [878] Sub NewSelect(sname As String, sLabel As String, bRequired As Boolean, bMultiple As Boolean, sPlaceHolder As String, sourceTable As String, sourceField As String, displayField As String, sHelperText As String, sErrorText As String, iTabIndex As Int) As VMInputControl 
_B.newselect=function(_sname,_slabel,_brequired,_bmultiple,_splaceholder,_sourcetable,_sourcefield,_displayfield,_shelpertext,_serrortext,_itabindex) {
var _el;
// [879]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [880]  Dim el As VMInputControl 
_el= new banano_bananovuematerial_vminputcontrol();
// [881]  el.Initialize(sname) 
_el.initialize(_sname);
// [882]  el.SetSelect 
_el.setselect();
// [883]  el.label = sLabel 
_el._label=_slabel;
// [884]  el.required = bRequired 
_el._required=_brequired;
// [885]  If iTabIndex > 0 Then el.TabIndex = iTabIndex 
if (_itabindex>0) {_el._tabindex=_itabindex;}
// [886]  el.placeholder = sPlaceHolder 
_el._placeholder=_splaceholder;
// [887]  el.helperText = sHelperText 
_el._helpertext=_shelpertext;
// [888]  el.errorText = sErrorText 
_el._errortext=_serrortext;
// [889]  el.Dense = True 
_el._dense=true;
// [890]  el.useoptions = False 
_el._useoptions=false;
// [891]  el.sourceTable = sourceTable 
_el._sourcetable=_sourcetable;
// [892]  el.SourceField = sourceField 
_el._sourcefield=_sourcefield;
// [893]  el.displayField = displayField 
_el._displayfield=_displayfield;
// [894]  el.multiple = bMultiple 
_el._multiple=_bmultiple;
// [895]  Return el 
return _el;
// End Sub
};

// [898] Sub SetEmpty 
_B.setempty=function() {
// [899]  vue.SetStateListValues(Fields) 
_B._vue.setstatelistvalues(_B._fields);
// End Sub
};

// [902] Sub SetDefaults 
_B.setdefaults=function() {
var _k;
// [903]  vue.SetState(Defaults) 
_B._vue.setstate(_B._defaults);
// [904]  vue.SetState(visibility) 
_B._vue.setstate(_B._visibility);
// [905]  For Each k As String In Required.Keys 
var _kKeys = Object.keys(_B._required);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [906]  HideError(k) 
_B.hideerror(_k,_B);
// [907]  Next 
}
// End Sub
};

// [910] Sub AddRequired(r As String) As VMContainer 
_B.addrequired=function(_r) {
// [911]  Required.put(r,r) 
_B._required[_r]=_r;
// [912]  Return Me 
return _B;
// End Sub
};

// [915] Sub RemoveRequired(r As String) As VMContainer 
_B.removerequired=function(_r) {
// [916]  Required.Remove(r) 
delete _B._required[_r];
// [917]  Return Me 
return _B;
// End Sub
};

// [920] Sub LinkRecordTypes(rec As Map) As Map 
_B.linkrecordtypes=function(_rec) {
var _nrec,_k,_v;
// [921]  Dim nrec As Map = CreateMap() 
_nrec={};
// [922]  For Each k As String In rec.keys 
var _kKeys = Object.keys(_rec);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [923]  Dim v As Object = rec.Get(k) 
_v=_rec[_k];
// [924]  k = k.ToLowerCase 
_k=_k.toLowerCase();
// [925]  nrec.Put(k, v) 
_nrec[_k]=_v;
// [926]  Next 
}
// [927]  If Doubles.Size > 0 Then vue.MakeDouble(nrec, Doubles) 
if (_B._doubles.length>0) {_B._vue.makedouble(_nrec,_B._doubles);}
// [928]  If Integers.Size > 0 Then vue.MakeInteger(nrec, Integers) 
if (_B._integers.length>0) {_B._vue.makeinteger(_nrec,_B._integers);}
// [929]  If Strings.Size > 0 Then vue.MakeTrim(nrec, Strings) 
if (_B._strings.length>0) {_B._vue.maketrim(_nrec,_B._strings);}
// [930]  If Dates.Size > 0 Then vue.MakeDate(nrec, Dates) 
if (_B._dates.length>0) {_B._vue.makedate(_nrec,_B._dates);}
// [931]  If Booleans.Size > 0 Then vue.MakeBoolean(nrec, Booleans) 
if (_B._booleans.length>0) {_B._vue.makeboolean(_nrec,_B._booleans);}
// [932]  Return nrec 
return _nrec;
// End Sub
};

// [935] Sub AddControl(ctl As VMInputControl, r As String, c As String, os As String, om As String, ol As String, oxl As String, s As String, m As String, l As String, xl As String) 
_B.addcontrol=function(_ctl,_r,_c,_os,_om,_ol,_oxl,_s,_m,_l,_xl) {
var _srow,_scell,_rckey,_row;
// [936]  ctl.Row = r 
_ctl._row=_r;
// [937]  ctl.Cell = c 
_ctl._cell=_c;
// [938]  ctl.SizeSmall = s 
_ctl._sizesmall=_s;
// [939]  ctl.SizeMedium = m 
_ctl._sizemedium=_m;
// [940]  ctl.SizeLarge = l 
_ctl._sizelarge=_l;
// [941]  ctl.SizeXLarge = xl 
_ctl._sizexlarge=_xl;
// [942]  ctl.OffsetSmall = os 
_ctl._offsetsmall=_os;
// [943]  ctl.OffsetMedium = om 
_ctl._offsetmedium=_om;
// [944]  ctl.OffsetLarge = ol 
_ctl._offsetlarge=_ol;
// [945]  ctl.OffsetXLarge = oxl 
_ctl._offsetxlarge=_oxl;
// [946]  Controls.add(ctl) 
_B._controls.push(_ctl);
// [948]  If r > TotalRows Then 
if (_r>_B._totalrows) {
// [949]  TotalRows = r 
_B._totalrows=_r;
// [950]  End If 
}
// [952]  Dim sRow As String = vue.PadRight(r,2, {41} ) 
_srow=_B._vue.padright(_r,2,"0");
// [953]  Dim sCell As String = vue.PadRight(c,2, {42} ) 
_scell=_B._vue.padright(_c,2,"0");
// [954]  Dim rcKey As String = {6} 
_rckey="" + _srow + "." + _scell + "";
// [956]  sortitM.Put(rcKey,ctl) 
_B._sortitm[_rckey]=_ctl;
// [957]  If rows.ContainsKey(sRow) = False Then 
if ((_srow in _B._rows)==false) {
// [958]  Dim row As EachRow 
_row= new banano_bananovuematerial_eachrow();
// [959]  row.Initialize 
_row.initialize();
// [960]  rows.Put(sRow, row) 
_B._rows[_srow]=_row;
// [961]  End If 
}
// End Sub
};

// [965] Sub AddControlS(ctl As VMInputControl, r As String, c As String, s As String, m As String, l As String, xl As String) 
_B.addcontrols=function(_ctl,_r,_c,_s,_m,_l,_xl) {
// [966]  AddControl(ctl, r, c, 0,0,0,0,s,m,l,xl) 
_B.addcontrol(_ctl,_r,_c,0,0,0,0,_s,_m,_l,_xl,_B);
// End Sub
};

// [969] Sub AddIntegers(i As List) As VMContainer 
_B.addintegers=function(_i) {
var _s;
// [970]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [971]  Integers.Add(s) 
_B._integers.push(_s);
// [972]  Next 
}
// [973]  Return Me 
return _B;
// End Sub
};

// [976] Sub AddStrings(i As List) As VMContainer 
_B.addstrings=function(_i) {
var _s;
// [977]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [978]  Strings.Add(s) 
_B._strings.push(_s);
// [979]  Next 
}
// [980]  Return Me 
return _B;
// End Sub
};

// [983] Sub AddBooleans(i As List) As VMContainer 
_B.addbooleans=function(_i) {
var _s;
// [984]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [985]  Booleans.Add(s) 
_B._booleans.push(_s);
// [986]  Next 
}
// [987]  Return Me 
return _B;
// End Sub
};

// [990] Sub AddDates(i As List) As VMContainer 
_B.adddates=function(_i) {
var _s;
// [991]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [992]  Dates.Add(s) 
_B._dates.push(_s);
// [993]  Next 
}
// [994]  Return Me 
return _B;
// End Sub
};

// [997] Sub AddDoubles(d As List) As VMContainer 
_B.adddoubles=function(_d) {
var _s;
// [998]  For Each s As String In d 
for (var _sindex=0;_sindex<_d.length;_sindex++) {
_s=_d[_sindex];
// [999]  Doubles.Add(s) 
_B._doubles.push(_s);
// [1000]  Next 
}
// [1001]  Return Me 
return _B;
// End Sub
};

// [1004] private Sub BuildControls 
_B.buildcontrols=function() {
var _showkey,_diskey,_enakey,_errkey,_isarray,_cnt,_idxpos,_nc,_lst,_li,_btn,_tp,_chp,_chps,_lbl,_img,_fil,_input,_txtarea,_ibox,_slid,_sel,_ok,_ov,_datex,_chk,_sw,_icn,_rg,_cg;
// [1005]  Dim showKey As String 
_showkey="";
// [1006]  Dim disKey As String 
_diskey="";
// [1007]  Dim enaKey As String 
_enakey="";
// [1008]  Dim errKey As String 
_errkey="";
// [1009]  Dim isarray As Boolean 
_isarray=false;
// [1011]  For Each cnt As VMInputControl In Controls 
for (var _cntindex=0;_cntindex<_B._controls.length;_cntindex++) {
_cnt=_B._controls[_cntindex];
// [1012]  If cnt.Exclude = True Then Exclusions.Add(cnt.name) 
if (_cnt._exclude==true) {_B._exclusions.push(_cnt._name);}
// [1014]  Dim idxpos As Int = Exclusions.IndexOf(cnt.name) 
_idxpos=_B._exclusions.indexOf(_cnt._name);
// [1015]  If idxpos = -1 Then 
if (_idxpos==-1) {
// [1016]  Select Case cnt.typeOf 
switch ("" + _cnt._typeof) {
// [1017]  Case {43} , {44} 
case "" + "button":
case "" + "list":
// [1018]  cnt.fieldType = {45} 
_cnt._fieldtype="";
// [1019]  cnt.Required = False 
_cnt._required=false;
// [1020]  Case Else 
break;
default:
// [1021]  Fields.Add(cnt.name) 
_B._fields.push(_cnt._name);
// [1022]  Defaults.Put(cnt.name, cnt.defaultValue) 
_B._defaults[_cnt._name]=_cnt._defaultvalue;
// [1023]  End Select 
break;
}
// [1024]  If cnt.required Then 
if (_cnt._required) {
// [1025]  Required.put(cnt.name,cnt.name) 
_B._required[_cnt._name]=_cnt._name;
// [1026]  End If 
}
// [1027]  Select Case cnt.fieldType 
switch ("" + _cnt._fieldtype) {
// [1028]  Case {46} 
case "" + "int":
// [1029]  Integers.Add(cnt.name) 
_B._integers.push(_cnt._name);
// [1030]  Case {47} 
break;
case "" + "bool":
// [1031]  Booleans.Add(cnt.name) 
_B._booleans.push(_cnt._name);
// [1032]  Case {48} 
break;
case "" + "string":
// [1033]  Strings.Add(cnt.name) 
_B._strings.push(_cnt._name);
// [1034]  Case {49} 
break;
case "" + "date":
// [1035]  Dates.Add(cnt.name) 
_B._dates.push(_cnt._name);
// [1036]  Case {50} 
break;
case "" + "dbl":
// [1037]  Doubles.Add(cnt.name) 
_B._doubles.push(_cnt._name);
// [1038]  End Select 
break;
}
// [1039]  End If 
}
// [1040]  Next 
}
// [1042]  BuildGrid(Grid) 
_B.buildgrid(_B._grid,_B);
// [1047]  For Each nc As VMInputControl In Controls 
for (var _ncindex=0;_ncindex<_B._controls.length;_ncindex++) {
_nc=_B._controls[_ncindex];
// [1048]  showKey = {7} 
_showkey="" + _nc._name + "show";
// [1049]  disKey = {8} 
_diskey="" + _nc._name + "disabled";
// [1050]  enaKey = {9} 
_enakey="" + _nc._name + "required";
// [1051]  errKey = {10} 
_errkey="" + _nc._name + "error";
// [1052]  isarray = False 
_isarray=false;
// [1062]  visibility.Put(showKey, nc.Isvisible) 
_B._visibility[_showkey]=_nc._isvisible;
// [1064]  Select Case nc.typeOf 
switch ("" + _nc._typeof) {
// [1065]  Case {51} 
case "" + "list":
// [1066]  Dim lst As VMList = CreateList(nc.name, module) 
_lst=_B.createlist(_nc._name,_B._module,_B);
// [1067]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1068]  lst.SetVShow(showKey) 
_lst.setvshow(_showkey);
// [1069]  End If 
}
// [1070]  lst.AddSubHeader(nc.label) 
_lst.addsubheader(_nc._label);
// [1071]  Dim li As VMListItem = CreateListItem( {13} , module) 
_li=_B.createlistitem("" + _nc._name + "li",_B._module,_B);
// [1072]  li.SetVFor( {52} , nc.source) 
_li.setvfor("row",_nc._source);
// [1073]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1074]  li.SetID(nc.key,True) 
_li.setid(_nc._key,true);
// [1075]  li.SetKey(nc.key,True) 
_li.setkey(_nc._key,true);
// [1076]  End If 
}
// [1077]  li.SetText(nc.text) 
_li.settext(_nc._text);
// [1078]  Select Case nc.Lines 
switch ("" + _nc._lines) {
// [1079]  Case 2 
case "" + 2:
// [1080]  lst.SetDoubleLine(True) 
_lst.setdoubleline(true);
// [1081]  li.SetDescription(nc.Description) 
_li.setdescription(_nc._description);
// [1082]  Case 3 
break;
case "" + 3:
// [1083]  lst.SetTripleLine(True) 
_lst.settripleline(true);
// [1084]  li.SetDescription(nc.Description) 
_li.setdescription(_nc._description);
// [1085]  End Select 
break;
}
// [1089]  If nc.ActionIcon <> {53} Then 
if (_nc._actionicon!="") {
// [1090]  li.SetActionIcon(nc.ActionIcon) 
_li.setactionicon(_nc._actionicon);
// [1091]  End If 
}
// [1092]  If nc.MenuIcon <> {54} Then 
if (_nc._menuicon!="") {
// [1093]  li.SetMenuIcon(nc.MenuIcon) 
_li.setmenuicon(_nc._menuicon);
// [1094]  End If 
}
// [1095]  If nc.IconName <> {55} Then 
if (_nc._iconname!="") {
// [1096]  li.SetIcon(nc.iconname,nc.IsPrimary) 
_li.seticon(_nc._iconname,_nc._isprimary);
// [1097]  End If 
}
// [1098]  If nc.AddEdit Then 
if (_nc._addedit) {
// [1099]  li.AddEditMenuItem(nc.Key, nc.editcaption) 
_li.addeditmenuitem(_nc._key,_nc._editcaption);
// [1100]  li.AddDeleteMenuItem(nc.Key, nc.deletecaption) 
_li.adddeletemenuitem(_nc._key,_nc._deletecaption);
// [1101]  End If 
}
// [1102]  li.Pop(lst) 
_li.pop(_lst);
// [1107]  Grid.AddComponent(nc.row, nc.Cell, lst.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_lst.tostring());
// [1109]  Case {56} 
break;
case "" + "button":
// [1110]  Select Case nc.ButtonType 
switch ("" + _nc._buttontype) {
// [1111]  Case {57} 
case "" + "regular":
// [1112]  nc.Fab = False 
_nc._fab=false;
// [1113]  nc.iconbutton = False 
_nc._iconbutton=false;
// [1114]  Case {58} 
break;
case "" + "icon":
// [1115]  nc.IconButton = True 
_nc._iconbutton=true;
// [1116]  nc.Fab = False 
_nc._fab=false;
// [1117]  Case {59} 
break;
case "" + "fab":
// [1118]  nc.Fab = True 
_nc._fab=true;
// [1119]  nc.IconButton = False 
_nc._iconbutton=false;
// [1120]  End Select 
break;
}
// [1121]  Dim btn As VMButton = CreateButton(nc.name, module) 
_btn=_B.createbutton(_nc._name,_B._module,_B);
// [1122]  btn.SetText(nc.label) 
_btn.settext(_nc._label);
// [1123]  btn.SetRaised(nc.raised) 
_btn.setraised(_nc._raised);
// [1124]  btn.SetPrimary(nc.isprimary) 
_btn.setprimary(_nc._isprimary);
// [1125]  btn.SetAccent(nc.isaccent) 
_btn.setaccent(_nc._isaccent);
// [1126]  btn.SetRipple(nc.Ripple) 
_btn.setripple(_nc._ripple);
// [1127]  btn.SetMenuTrigger(nc.MenuTrigger) 
_btn.setmenutrigger(_nc._menutrigger);
// [1128]  btn.SetDense(nc.Dense) 
_btn.setdense(_nc._dense);
// [1129]  btn.SetIconButton(nc.IconButton) 
_btn.seticonbutton(_nc._iconbutton);
// [1130]  btn.SetPlain(nc.Plain) 
_btn.setplain(_nc._plain);
// [1131]  btn.SetMini(nc.Mini) 
_btn.setmini(_nc._mini);
// [1132]  btn.SetFab(nc.Fab) 
_btn.setfab(_nc._fab);
// [1133]  btn.SetListAction(nc.ListAction) 
_btn.setlistaction(_nc._listaction);
// [1134]  btn.SetIcon(nc.IconName) 
_btn.seticon(_nc._iconname);
// [1135]  btn.SetTo(nc.NavigateTo, False) 
_btn.setto(_nc._navigateto,false);
// [1136]  btn.SetFabPosition(nc.FabPosition) 
_btn.setfabposition(_nc._fabposition);
// [1137]  btn.SetFabFixed(nc.FabFixed) 
_btn.setfabfixed(_nc._fabfixed);
// [1138]  If nc.FitWidth Then 
if (_nc._fitwidth) {
// [1139]  btn.SetStyle(CreateMap( {60} : {61} , {62} : {63} , {64} : {65} )) 
_btn.setstyle({"width":"100%", "margin-left":"0px", "margin-right":"0px"});
// [1140]  End If 
}
// [1141]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1142]  btn.SetVShow(showKey) 
_btn.setvshow(_showkey);
// [1143]  btn.SetDisabled(nc.IsDisabled) 
_btn.setdisabled(_nc._isdisabled);
// [1144]  End If 
}
// [1145]  btn.SetTabIndex(nc.TabIndex) 
_btn.settabindex(_nc._tabindex);
// [1149]  Grid.AddComponent(nc.row, nc.Cell, btn.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_btn.tostring());
// [1150]  Case {66} 
break;
case "" + "timepicker":
// [1151]  Dim tp As VMTimePicker = CreateTimePicker(nc.name, module) 
_tp=_B.createtimepicker(_nc._name,_B._module,_B);
// [1152]  tp.SetLabel(nc.label) 
_tp.setlabel(_nc._label);
// [1153]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1154]  tp.SetVModel(nc.name) 
_tp.setvmodel(_nc._name);
// [1155]  tp.SetVShow(showKey) 
_tp.setvshow(_showkey);
// [1156]  tp.SetDisabled(nc.IsDisabled) 
_tp.setdisabled(_nc._isdisabled);
// [1157]  tp.SetRequired(nc.required) 
_tp.setrequired(_nc._required);
// [1158]  End If 
}
// [1159]  tp.SetName(nc.name,False) 
_tp.setname(_nc._name,false);
// [1160]  tp.SetTabIndex(nc.TabIndex) 
_tp.settabindex(_nc._tabindex);
// [1161]  tp.SetPlaceholder(nc.placeholder) 
_tp.setplaceholder(_nc._placeholder);
// [1162]  tp.SetHelperText(nc.helperText) 
_tp.sethelpertext(_nc._helpertext);
// [1163]  tp.SetErrorText(nc.errorText) 
_tp.seterrortext(_nc._errortext);
// [1164]  Grid.AddComponent(nc.row, nc.Cell, tp.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_tp.tostring());
// [1165]  Case {67} 
break;
case "" + "chip":
// [1166]  Dim chp As VMChip = CreateChip(nc.name,module) 
_chp=_B.createchip(_nc._name,_B._module,_B);
// [1167]  chp.SetText(nc.Text) 
_chp.settext(_nc._text);
// [1168]  chp.SetClickable(nc.Clickable) 
_chp.setclickable(_nc._clickable);
// [1169]  chp.SetDeletable(nc.Deletable) 
_chp.setdeletable(_nc._deletable);
// [1170]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1171]  chp.SetVShow(showKey) 
_chp.setvshow(_showkey);
// [1172]  chp.setVmodel(nc.name) 
_chp.setvmodel(_nc._name);
// [1173]  chp.SetDisabled(disKey) 
_chp.setdisabled(_diskey);
// [1174]  End If 
}
// [1175]  If nc.UseOptions = True Then 
if (_nc._useoptions==true) {
// [1176]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1177]  chp.SetOptions(nc.sourceTable, nc.options, nc.sourceField, nc.displayField) 
_chp.setoptions(_nc._sourcetable,_nc._options,_nc._sourcefield,_nc._displayfield);
// [1178]  End If 
}
// [1179]  End If 
}
// [1180]  If nc.UseDataSource = True Then 
if (_nc._usedatasource==true) {
// [1181]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1182]  chp.SetDataSource(nc.sourceTable, nc.sourceField, nc.displayField) 
_chp.setdatasource(_nc._sourcetable,_nc._sourcefield,_nc._displayfield);
// [1183]  End If 
}
// [1184]  End If 
}
// [1185]  Grid.AddComponent(nc.row, nc.Cell, chp.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_chp.tostring());
// [1186]  Case {68} 
break;
case "" + "chips":
// [1187]  isarray = True 
_isarray=true;
// [1188]  Dim chps As VMChips = CreateChips(nc.name, module) 
_chps=_B.createchips(_nc._name,_B._module,_B);
// [1189]  chps.SetInputType(nc.InputType) 
_chps.setinputtype(_nc._inputtype);
// [1190]  chps.SetPlaceholder(nc.PlaceHolder) 
_chps.setplaceholder(_nc._placeholder);
// [1191]  chps.SetStatic(nc.Static) 
_chps.setstatic(_nc._static);
// [1192]  chps.SetCheckDuplicated(nc.CheckDuplicates) 
_chps.setcheckduplicated(_nc._checkduplicates);
// [1193]  chps.SetHelperText(nc.helperText) 
_chps.sethelpertext(_nc._helpertext);
// [1194]  chps.SetErrorText(nc.errorText) 
_chps.seterrortext(_nc._errortext);
// [1195]  chps.SetLabel(nc.label) 
_chps.setlabel(_nc._label);
// [1196]  chps.SetRequired(nc.Required) 
_chps.setrequired(_nc._required);
// [1197]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1198]  chps.setVmodel(nc.name) 
_chps.setvmodel(_nc._name);
// [1199]  chps.SetDisabled(disKey) 
_chps.setdisabled(_diskey);
// [1200]  chps.SetVShow(showKey) 
_chps.setvshow(_showkey);
// [1201]  End If 
}
// [1202]  vue.SetStateSingle(nc.name, Array()) 
_B._vue.setstatesingle(_nc._name,[]);
// [1203]  Grid.AddComponent(nc.row, nc.Cell, chps.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_chps.tostring());
// [1204]  Case {69} 
break;
case "" + "label":
// [1205]  Dim lbl As VMLabel = CreateLABEL(nc.name) 
_lbl=_B.createlabel(_nc._name,_B);
// [1206]  lbl.SetTag(nc.Tag) 
_lbl.settag(_nc._tag);
// [1207]  lbl.SetText(nc.Text) 
_lbl.settext(_nc._text);
// [1208]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1209]  lbl.SetVShow(showKey) 
_lbl.setvshow(_showkey);
// [1210]  End If 
}
// [1211]  Grid.AddComponent(nc.row, nc.Cell, lbl.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_lbl.tostring());
// [1212]  Case {70} 
break;
case "" + "image":
// [1213]  Dim img As VMImage = CreateImage(nc.name, module) 
_img=_B.createimage(_nc._name,_B._module,_B);
// [1214]  img.SetAlt(nc.Alt) 
_img.setalt(_nc._alt);
// [1215]  img.SetWidth(nc.Width) 
_img.setwidth(_nc._width);
// [1216]  img.SetHeight(nc.Height) 
_img.setheight(_nc._height);
// [1217]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1218]  img.SetVModel(nc.name) 
_img.setvmodel(_nc._name);
// [1219]  img.SetVShow(showKey) 
_img.setvshow(_showkey);
// [1220]  img.SetValue(nc.defaultValue, True) 
_img.setvalue(_nc._defaultvalue,true);
// [1221]  Else 
} else {
// [1222]  img.SetValue(nc.defaultValue, False) 
_img.setvalue(_nc._defaultvalue,false);
// [1223]  End If 
}
// [1224]  Grid.AddComponent(nc.row, nc.Cell, img.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_img.tostring());
// [1225]  Case {71} 
break;
case "" + "file":
// [1226]  Dim fil As VMFile = CreateFile(nc.name, module) 
_fil=_B.createfile(_nc._name,_B._module,_B);
// [1227]  fil.SetErrorText(nc.errorText) 
_fil.seterrortext(_nc._errortext);
// [1228]  fil.SetLabel(nc.label) 
_fil.setlabel(_nc._label);
// [1229]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1230]  fil.SetVModel(nc.name) 
_fil.setvmodel(_nc._name);
// [1231]  fil.SetVShow(showKey) 
_fil.setvshow(_showkey);
// [1232]  fil.SetDisabled(nc.IsDisabled) 
_fil.setdisabled(_nc._isdisabled);
// [1233]  fil.SetRequired(nc.required) 
_fil.setrequired(_nc._required);
// [1234]  End If 
}
// [1235]  fil.SetName(nc.name,False) 
_fil.setname(_nc._name,false);
// [1236]  fil.SetTabIndex(nc.TabIndex) 
_fil.settabindex(_nc._tabindex);
// [1237]  fil.SetHelperText(nc.helperText) 
_fil.sethelpertext(_nc._helpertext);
// [1238]  fil.SetPlaceholder(nc.placeholder) 
_fil.setplaceholder(_nc._placeholder);
// [1242]  Grid.AddComponent(nc.row, nc.Cell, fil.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_fil.tostring());
// [1244]  Case {72} , {73} , {74} , {75} , {76} 
break;
case "" + "number":
case "" + "text":
case "" + "tel":
case "" + "email":
case "" + "password":
// [1245]  Dim input As VMInput = CreateInput(nc.name, module) 
_input=_B.createinput(_nc._name,_B._module,_B);
// [1246]  input.SetErrorText(nc.errorText) 
_input.seterrortext(_nc._errortext);
// [1247]  input.SetType(nc.typeOf) 
_input.settype(_nc._typeof);
// [1248]  input.SetLabel(nc.label) 
_input.setlabel(_nc._label);
// [1249]  input.SetReadOnly(nc.readonly) 
_input.setreadonly(_nc._readonly);
// [1250]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1251]  input.SetVModel(nc.name) 
_input.setvmodel(_nc._name);
// [1252]  input.SetVShow(showKey) 
_input.setvshow(_showkey);
// [1253]  input.SetDisabled(nc.IsDisabled) 
_input.setdisabled(_nc._isdisabled);
// [1254]  input.SetRequired(nc.required) 
_input.setrequired(_nc._required);
// [1255]  End If 
}
// [1256]  input.SetName(nc.name,False) 
_input.setname(_nc._name,false);
// [1257]  input.SetIcon(nc.IconName) 
_input.seticon(_nc._iconname);
// [1258]  input.SetTabIndex(nc.TabIndex) 
_input.settabindex(_nc._tabindex);
// [1259]  input.SetMaxlength(nc.MaxLength) 
_input.setmaxlength(_nc._maxlength);
// [1260]  input.SetHelperText(nc.helperText) 
_input.sethelpertext(_nc._helpertext);
// [1261]  input.SetPlaceholder(nc.placeholder) 
_input.setplaceholder(_nc._placeholder);
// [1262]  If nc.typeOf <> {77} Then 
if (_nc._typeof!="password") {
// [1263]  input.SetClearable(nc.clearable) 
_input.setclearable(_nc._clearable);
// [1264]  input.SetTogglePassword(nc.TogglePassword) 
_input.settogglepassword(_nc._togglepassword);
// [1265]  End If 
}
// [1269]  Grid.AddComponent(nc.row, nc.Cell, input.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_input.tostring());
// [1271]  Case {78} 
break;
case "" + "textarea":
// [1272]  Dim txtarea As VMTextArea = CreateTextArea(nc.name, module) 
_txtarea=_B.createtextarea(_nc._name,_B._module,_B);
// [1273]  txtarea.SetClearable(nc.clearable) 
_txtarea.setclearable(_nc._clearable);
// [1274]  txtarea.SetErrorText(nc.errorText) 
_txtarea.seterrortext(_nc._errortext);
// [1275]  txtarea.SetLabel(nc.label) 
_txtarea.setlabel(_nc._label);
// [1276]  txtarea.SetReadOnly(nc.readonly) 
_txtarea.setreadonly(_nc._readonly);
// [1277]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1278]  txtarea.SetVModel(nc.name) 
_txtarea.setvmodel(_nc._name);
// [1279]  txtarea.SetVShow(showKey) 
_txtarea.setvshow(_showkey);
// [1280]  txtarea.SetDisabled(nc.IsDisabled) 
_txtarea.setdisabled(_nc._isdisabled);
// [1281]  txtarea.SetRequired(nc.required) 
_txtarea.setrequired(_nc._required);
// [1282]  End If 
}
// [1283]  txtarea.SetName(nc.name,False) 
_txtarea.setname(_nc._name,false);
// [1284]  txtarea.SetTabIndex(nc.TabIndex) 
_txtarea.settabindex(_nc._tabindex);
// [1285]  txtarea.SetMaxlength(nc.MaxLength) 
_txtarea.setmaxlength(_nc._maxlength);
// [1286]  txtarea.SetPlaceholder(nc.placeholder) 
_txtarea.setplaceholder(_nc._placeholder);
// [1287]  txtarea.SetHelperText(nc.helperText) 
_txtarea.sethelpertext(_nc._helpertext);
// [1288]  txtarea.SetAutogrow(nc.AutoGrow) 
_txtarea.setautogrow(_nc._autogrow);
// [1289]  txtarea.SetIcon(nc.IconName) 
_txtarea.seticon(_nc._iconname);
// [1293]  Grid.AddComponent(nc.row, nc.Cell, txtarea.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_txtarea.tostring());
// [1294]  Case {79} 
break;
case "" + "infobox":
// [1295]  Dim ibox As VMInfoBox = CreateInfoBox(nc.name, module) 
_ibox=_B.createinfobox(_nc._name,_B._module,_B);
// [1296]  If nc.bSetCounter Then 
if (_nc._bsetcounter) {
// [1297]  ibox.SetFrom(nc.Start) 
_ibox.setfrom(_nc._start);
// [1298]  ibox.SetTo(nc.Finish) 
_ibox.setto(_nc._finish);
// [1299]  ibox.SetSpeed(nc.Speed) 
_ibox.setspeed(_nc._speed);
// [1300]  ibox.SetRefreshInterval(nc.RefreshInterval) 
_ibox.setrefreshinterval(_nc._refreshinterval);
// [1301]  End If 
}
// [1302]  ibox.SetNumber(nc.Count) 
_ibox.setnumber(_nc._count);
// [1303]  ibox.SetIcon(nc.IconName) 
_ibox.seticon(_nc._iconname);
// [1304]  ibox.SetIconColor(nc.IconColor) 
_ibox.seticoncolor(_nc._iconcolor);
// [1305]  ibox.SetIconBackgroundColor(nc.IconBackgroundColor) 
_ibox.seticonbackgroundcolor(_nc._iconbackgroundcolor);
// [1306]  ibox.SetText(nc.Text) 
_ibox.settext(_nc._text);
// [1307]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1308]  ibox.SetVShow(showKey) 
_ibox.setvshow(_showkey);
// [1309]  End If 
}
// [1310]  ibox.SetHoverExpandEffect(nc.HoverExpandEffect) 
_ibox.sethoverexpandeffect(_nc._hoverexpandeffect);
// [1311]  ibox.SetHoverZoomEffect(nc.HoverZoomEffect) 
_ibox.sethoverzoomeffect(_nc._hoverzoomeffect);
// [1312]  Select Case nc.BoxType 
switch ("" + _nc._boxtype) {
// [1313]  Case {80} 
case "" + "2":
// [1314]  ibox.SetStyle2(True) 
_ibox.setstyle2(true);
// [1315]  Case {81} 
break;
case "" + "3":
// [1316]  ibox.SetStyle3(True) 
_ibox.setstyle3(true);
// [1317]  Case {82} 
break;
case "" + "4":
// [1318]  ibox.SetStyle4(True) 
_ibox.setstyle4(true);
// [1319]  End Select 
break;
}
// [1320]  Grid.AddComponent(nc.row, nc.Cell, ibox.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_ibox.tostring());
// [1321]  Case {83} 
break;
case "" + "slider":
// [1322]  Dim slid As VMSlider = CreateSlider(nc.name, module) 
_slid=_B.createslider(_nc._name,_B._module,_B);
// [1323]  slid.SetMin(nc.minvalue) 
_slid.setmin(_nc._minvalue);
// [1324]  slid.SetMax(nc.maxvalue) 
_slid.setmax(_nc._maxvalue);
// [1325]  slid.SetLabel(nc.label) 
_slid.setlabel(_nc._label);
// [1326]  slid.SetThumbLabel(nc.ThumbLabel) 
_slid.setthumblabel(_nc._thumblabel);
// [1327]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1328]  slid.SetVModel(nc.name) 
_slid.setvmodel(_nc._name);
// [1329]  slid.SetVShow(showKey) 
_slid.setvshow(_showkey);
// [1330]  slid.SetDisabled(nc.IsDisabled) 
_slid.setdisabled(_nc._isdisabled);
// [1331]  End If 
}
// [1332]  slid.SetName(nc.name,False) 
_slid.setname(_nc._name,false);
// [1333]  slid.SetTabIndex(nc.TabIndex) 
_slid.settabindex(_nc._tabindex);
// [1337]  Grid.AddComponent(nc.row, nc.Cell, slid.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_slid.tostring());
// [1338]  Case {84} , {85} 
break;
case "" + "select":
case "" + "selectbox":
// [1339]  isarray = False 
_isarray=false;
// [1340]  Dim sel As VMSelect = CreateSelect(nc.name, module) 
_sel=_B.createselect(_nc._name,_B._module,_B);
// [1341]  sel.SetLabel(nc.label) 
_sel.setlabel(_nc._label);
// [1342]  sel.SetName(nc.name) 
_sel.setname(_nc._name);
// [1343]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1344]  sel.SetVModel(nc.name) 
_sel.setvmodel(_nc._name);
// [1345]  sel.SetVShow(showKey) 
_sel.setvshow(_showkey);
// [1346]  sel.SetDisabled(nc.IsDisabled) 
_sel.setdisabled(_nc._isdisabled);
// [1347]  sel.SetRequired(nc.required) 
_sel.setrequired(_nc._required);
// [1348]  End If 
}
// [1349]  sel.SetTabIndex(nc.TabIndex) 
_sel.settabindex(_nc._tabindex);
// [1350]  sel.SetPlaceholder(nc.placeholder) 
_sel.setplaceholder(_nc._placeholder);
// [1351]  sel.SetHelperText(nc.helperText) 
_sel.sethelpertext(_nc._helpertext);
// [1352]  sel.SetErrorText(nc.errorText) 
_sel.seterrortext(_nc._errortext);
// [1353]  sel.SetDense(nc.Dense) 
_sel.setdense(_nc._dense);
// [1354]  If nc.UseOptions = True Then 
if (_nc._useoptions==true) {
// [1355]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1356]  sel.SetOptions(nc.sourceTable, nc.options, nc.sourceField, nc.displayField) 
_sel.setoptions(_nc._sourcetable,_nc._options,_nc._sourcefield,_nc._displayfield);
// [1357]  Else 
} else {
// [1358]  For Each ok As String In nc.options.keys 
var _okKeys = Object.keys(_nc._options);
for (var _okindex=0;_okindex<_okKeys.length;_okindex++) {
_ok=_okKeys[_okindex];
// [1359]  Dim ov As String = nc.options.Get(ok) 
_ov=_nc._options[_ok];
// [1360]  sel.additem(ok, ov) 
_sel.additem(_ok,_ov);
// [1361]  Next 
}
// [1362]  End If 
}
// [1363]  Else 
} else {
// [1364]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1365]  sel.SetDataSource(nc.sourceTable, nc.sourceField, nc.displayField) 
_sel.setdatasource(_nc._sourcetable,_nc._sourcefield,_nc._displayfield);
// [1366]  End If 
}
// [1367]  End If 
}
// [1368]  sel.SetMultiple(nc.multiple) 
_sel.setmultiple(_nc._multiple);
// [1369]  sel.SetDense(True) 
_sel.setdense(true);
// [1370]  If nc.multiple Then isarray = True 
if (_nc._multiple) {_isarray=true;}
// [1374]  Grid.AddComponent(nc.row, nc.Cell, sel.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_sel.tostring());
// [1395]  Case {88} , {89} 
break;
case "" + "datepicker":
case "" + "date":
// [1396]  Dim datex As VMDatePicker = CreateDatePicker(nc.name, module) 
_datex=_B.createdatepicker(_nc._name,_B._module,_B);
// [1397]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1398]  datex.SetVModel(nc.name) 
_datex.setvmodel(_nc._name);
// [1399]  datex.SetVShow(showKey) 
_datex.setvshow(_showkey);
// [1400]  datex.SetDisabled(nc.IsDisabled) 
_datex.setdisabled(_nc._isdisabled);
// [1401]  datex.SetRequired(nc.required) 
_datex.setrequired(_nc._required);
// [1402]  End If 
}
// [1403]  datex.SetLabel(nc.label) 
_datex.setlabel(_nc._label);
// [1404]  datex.SetImmediately(nc.immediately) 
_datex.setimmediately(_nc._immediately);
// [1405]  datex.SetOpenOnFocus(nc.openonfocus) 
_datex.setopenonfocus(_nc._openonfocus);
// [1406]  datex.SetClearable(nc.clearable) 
_datex.setclearable(_nc._clearable);
// [1407]  datex.SetTabIndex(nc.TabIndex) 
_datex.settabindex(_nc._tabindex);
// [1408]  datex.SetHelperText(nc.helperText) 
_datex.sethelpertext(_nc._helpertext);
// [1409]  datex.SetErrorText(nc.errorText) 
_datex.seterrortext(_nc._errortext);
// [1413]  Grid.AddComponent(nc.row, nc.Cell, datex.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_datex.tostring());
// [1415]  Case {90} 
break;
case "" + "checkbox":
// [1416]  Dim chk As VMCheckBox = CreateCheckBox(nc.name, module) 
_chk=_B.createcheckbox(_nc._name,_B._module,_B);
// [1417]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1418]  chk.SetVModel(nc.name) 
_chk.setvmodel(_nc._name);
// [1419]  chk.SetVShow(showKey) 
_chk.setvshow(_showkey);
// [1420]  chk.SetDisabled(nc.IsDisabled) 
_chk.setdisabled(_nc._isdisabled);
// [1421]  End If 
}
// [1422]  chk.SetValue(nc.value) 
_chk.setvalue(_nc._value);
// [1423]  chk.SetText(nc.label) 
_chk.settext(_nc._label);
// [1424]  chk.SetPrimary(True) 
_chk.setprimary(true);
// [1425]  chk.SetName(nc.name,False) 
_chk.setname(_nc._name,false);
// [1426]  chk.SetTabIndex(nc.TabIndex) 
_chk.settabindex(_nc._tabindex);
// [1430]  Grid.AddComponent(nc.row, nc.Cell, chk.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_chk.tostring());
// [1432]  Case {91} , {92} 
break;
case "" + "switch":
case "" + "switchbox":
// [1433]  Dim sw As VMSwitch = CreateSwitch(nc.name, module) 
_sw=_B.createswitch(_nc._name,_B._module,_B);
// [1434]  sw.SetText(nc.label) 
_sw.settext(_nc._label);
// [1435]  sw.SetValue(nc.value) 
_sw.setvalue(_nc._value);
// [1436]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1437]  sw.SetVShow(showKey) 
_sw.setvshow(_showkey);
// [1438]  sw.SetVModel(nc.name) 
_sw.setvmodel(_nc._name);
// [1439]  sw.SetDisabled(nc.IsDisabled) 
_sw.setdisabled(_nc._isdisabled);
// [1440]  End If 
}
// [1441]  sw.SetName(nc.name,False) 
_sw.setname(_nc._name,false);
// [1442]  sw.SetPrimary(True) 
_sw.setprimary(true);
// [1443]  sw.SetTabIndex(nc.TabIndex) 
_sw.settabindex(_nc._tabindex);
// [1447]  Grid.AddComponent(nc.row, nc.Cell, sw.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_sw.tostring());
// [1448]  Case {93} 
break;
case "" + "icon":
// [1449]  Dim icn As VMIcon = CreateIcon(nc.name) 
_icn=_B.createicon(_nc._name,_B);
// [1450]  icn.SetText(nc.IconName) 
_icn.settext(_nc._iconname);
// [1451]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1452]  icn.SetVShow(showKey) 
_icn.setvshow(_showkey);
// [1453]  End If 
}
// [1454]  icn.SetName(nc.name,False) 
_icn.setname(_nc._name,false);
// [1455]  Select Case nc.IconSize 
switch ("" + _nc._iconsize) {
// [1456]  Case {94} 
case "" + "normal":
// [1457]  Case {95} 
break;
case "" + "2":
// [1458]  icn.SetSize2x(True) 
_icn.setsize2x(true);
// [1459]  Case {96} 
break;
case "" + "3":
// [1460]  icn.SetSize3x(True) 
_icn.setsize3x(true);
// [1461]  Case {97} 
break;
case "" + "4":
// [1462]  icn.SetSize4x(True) 
_icn.setsize4x(true);
// [1463]  Case {98} 
break;
case "" + "5":
// [1464]  icn.SetSize5x(True) 
_icn.setsize5x(true);
// [1465]  End Select 
break;
}
// [1466]  Grid.AddComponent(nc.row, nc.Cell, icn.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_icn.tostring());
// [1484]  Case {100} , {101} 
break;
case "" + "radiogroup":
case "" + "radio":
// [1485]  Dim rg As VMRadioGroup = CreateRadioGroup(nc.name, nc.label, module) 
_rg=_B.createradiogroup(_nc._name,_nc._label,_B._module,_B);
// [1486]  rg.SetDesignMode(DesignMode) 
_rg.setdesignmode(_B._designmode);
// [1487]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1488]  rg.SetVShow(showKey) 
_rg.setvshow(_showkey);
// [1489]  rg.SetVModel(nc.name) 
_rg.setvmodel(_nc._name);
// [1490]  rg.SetValue(nc.value) 
_rg.setvalue(_nc._value);
// [1491]  End If 
}
// [1492]  rg.AddItems(nc.options) 
_rg.additems(_nc._options);
// [1493]  rg.SetTabIndex(nc.TabIndex) 
_rg.settabindex(_nc._tabindex);
// [1494]  Grid.AddComponent(nc.row, nc.Cell, rg.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_rg.tostring());
// [1495]  Case {102} 
break;
case "" + "checkboxgroup":
// [1496]  isarray = True 
_isarray=true;
// [1497]  Dim cg As VMCheckBoxGroup = CreateCheckBoxGroup(nc.name, nc.label,module) 
_cg=_B.createcheckboxgroup(_nc._name,_nc._label,_B._module,_B);
// [1498]  cg.SetDesignMode(DesignMode) 
_cg.setdesignmode(_B._designmode);
// [1499]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1500]  cg.SetVShow(showKey) 
_cg.setvshow(_showkey);
// [1501]  cg.SetVModel(nc.name) 
_cg.setvmodel(_nc._name);
// [1502]  cg.SetValue(nc.value) 
_cg.setvalue(_nc._value);
// [1503]  End If 
}
// [1504]  cg.AddItems(nc.options) 
_cg.additems(_nc._options);
// [1505]  cg.SetTabIndex(nc.TabIndex) 
_cg.settabindex(_nc._tabindex);
// [1506]  Grid.AddComponent(nc.row, nc.Cell, cg.ToString) 
_B._grid.addcomponent(_nc._row,_nc._cell,_cg.tostring());
// [1507]  End Select 
break;
}
// [1509]  If DesignMode = False Then 
if (_B._designmode==false) {
// [1510]  vue.SetStateSingle(showKey, nc.Isvisible) 
_B._vue.setstatesingle(_showkey,_nc._isvisible);
// [1511]  vue.SetStateSingle(disKey, nc.IsDisabled) 
_B._vue.setstatesingle(_diskey,_nc._isdisabled);
// [1512]  vue.SetStateSingle(enaKey, nc.Required) 
_B._vue.setstatesingle(_enakey,_nc._required);
// [1513]  If isarray Then 
if (_isarray) {
// [1514]  vue.SetStateSingle(nc.name, Array()) 
_B._vue.setstatesingle(_nc._name,[]);
// [1515]  Else 
} else {
// [1516]  vue.SetStateSingle(nc.name, nc.defaultValue) 
_B._vue.setstatesingle(_nc._name,_nc._defaultvalue);
// [1517]  End If 
}
// [1518]  vue.SetStateSingle(errKey, False) 
_B._vue.setstatesingle(_errkey,false);
// [1519]  End If 
}
// [1520]  Next 
}
// End Sub
};

// [1524] private Sub CreateImage(img As String, eventHandler As Object) As VMImage 
_B.createimage=function(_img,_eventhandler) {
var _el;
// [1525]  Dim el As VMImage 
_el= new banano_bananovuematerial_vmimage();
// [1526]  el.Initialize(vue, img, eventHandler) 
_el.initialize(_B._vue,_img,_eventhandler);
// [1527]  Return el 
return _el;
// End Sub
};

// [1530] private Sub CreateLABEL(lblID As String) As VMLabel 
_B.createlabel=function(_lblid) {
var _el;
// [1531]  Dim el As VMLabel 
_el= new banano_bananovuematerial_vmlabel();
// [1532]  el.Initialize(vue, lblID) 
_el.initialize(_B._vue,_lblid);
// [1533]  Return el 
return _el;
// End Sub
};

// [1536] private Sub CreateChips(sid As String, eventHandler As Object) As VMChips 
_B.createchips=function(_sid,_eventhandler) {
var _el;
// [1537]  Dim el As VMChips 
_el= new banano_bananovuematerial_vmchips();
// [1538]  el.Initialize(vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1539]  Return el 
return _el;
// End Sub
};

// [1542] private Sub CreateChip(sid As String, eventHandler As Object) As VMChip 
_B.createchip=function(_sid,_eventhandler) {
var _el;
// [1543]  Dim el As VMChip 
_el= new banano_bananovuematerial_vmchip();
// [1544]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1545]  Return el 
return _el;
// End Sub
};

// [1548] private Sub CreateTimePicker(sid As String, eventHandler As Object) As VMTimePicker 
_B.createtimepicker=function(_sid,_eventhandler) {
var _el;
// [1549]  Dim el As VMTimePicker 
_el= new banano_bananovuematerial_vmtimepicker();
// [1550]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1551]  Return el 
return _el;
// End Sub
};

// [1555] private Sub BuildGrid(parentGrid As VMGrid) 
_B.buildgrid=function(_parentgrid) {
var _k,_missingrc,_compcnt,_srow,_scell,_rckey,_rc,_finalrows,_finalcells,_strrow,_colcnt,_finalrow,_er,_finalcell,_ec,_finalcellssize,_cellsize;
// [1557]  sortItL.Initialize 
_B._sortitl.length=0;
// [1558]  For Each k As String In sortitM.Keys 
var _kKeys = Object.keys(_B._sortitm);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [1559]  sortItL.Add(k) 
_B._sortitl.push(_k);
// [1560]  Next 
}
// [1562]  sortItL.Sort(True) 
if (!isNaN(parseFloat(_B._sortitl[0])) && isFinite(_B._sortitl[0])) {
_B._sortitl.sort(function(a, b){return a - b});
} else {
_B._sortitl.sort();
};
// [1564]  Dim missingRC As List 
_missingrc=[];
// [1565]  missingRC.Initialize 
_missingrc.length=0;
// [1566]  For compCnt = 1 To TotalRows 
for (_compcnt=1;_compcnt<=_B._totalrows;_compcnt++) {
// [1567]  Dim sRow As String = compCnt 
_srow=_compcnt;
// [1568]  sRow = vue.PadRight(sRow,2, {103} ) 
_srow=_B._vue.padright(_srow,2,"0");
// [1569]  Dim sCell As String = vue.PadRight( {104} ,2, {105} ) 
_scell=_B._vue.padright("1",2,"0");
// [1570]  Dim rcKey As String = {14} 
_rckey="" + _srow + "." + _scell + "";
// [1571]  If sortItL.IndexOf(rcKey) = -1 Then 
if (_B._sortitl.indexOf(_rckey)==-1) {
// [1572]  missingRC.Add(rcKey) 
_missingrc.push(_rckey);
// [1573]  End If 
}
// [1574]  Next 
}
// [1575]  If missingRC.Size -1 >= 0 Then 
if (_missingrc.length-1>=0) {
// [1576]  For Each rc As String In missingRC 
for (var _rcindex=0;_rcindex<_missingrc.length;_rcindex++) {
_rc=_missingrc[_rcindex];
// [1577]  Log( {106} & rc & {107} ) 
console.log("VMContainer: "+_rc+": RC is NOT defined");
// [1578]  Next 
}
// [1580]  Return 
return;
// [1581]  End If 
}
// [1585]  Dim finalRows As Map 
_finalrows={};
// [1586]  finalRows.Initialize 
_finalrows={};
// [1587]  For Each rc As String In sortItL 
for (var _rcindex=0;_rcindex<_B._sortitl.length;_rcindex++) {
_rc=_B._sortitl[_rcindex];
// [1588]  Dim sRow As String = vue.MvField(rc,1, {108} ) 
_srow=_B._vue.mvfield(_rc,1,".");
// [1589]  If finalRows.ContainsKey(sRow) Then 
if ((_srow in _finalrows)) {
// [1590]  Dim finalCells As List = finalRows.Get(sRow) 
_finalcells=_finalrows[_srow];
// [1591]  Else 
} else {
// [1592]  Dim finalCells As List 
_finalcells=[];
// [1593]  finalCells.Initialize 
_finalcells.length=0;
// [1594]  End If 
}
// [1595]  finalCells.Add(rc) 
_finalcells.push(_rc);
// [1596]  finalRows.Put(sRow,finalCells) 
_finalrows[_srow]=_finalcells;
// [1597]  Next 
}
// [1600]  sortItL.Initialize 
_B._sortitl.length=0;
// [1601]  For Each strRow As String In finalRows.Keys 
var _strrowKeys = Object.keys(_finalrows);
for (var _strrowindex=0;_strrowindex<_strrowKeys.length;_strrowindex++) {
_strrow=_strrowKeys[_strrowindex];
// [1602]  sortItL.Add(strRow) 
_B._sortitl.push(_strrow);
// [1603]  Next 
}
// [1604]  sortItL.Sort(True) 
if (!isNaN(parseFloat(_B._sortitl[0])) && isFinite(_B._sortitl[0])) {
_B._sortitl.sort(function(a, b){return a - b});
} else {
_B._sortitl.sort();
};
// [1605]  Dim colCnt As Int 
_colcnt=0;
// [1606]  For Each finalRow As String In sortItL 
for (var _finalrowindex=0;_finalrowindex<_B._sortitl.length;_finalrowindex++) {
_finalrow=_B._sortitl[_finalrowindex];
// [1607]  Dim er As EachRow = rows.Get(finalRow) 
_er=_B._rows[_finalrow];
// [1610]  Dim finalCell(11) As String 
_finalcell=[];
// [1611]  Dim ec(11) As VMInputControl 
_ec=[];
// [1614]  Dim finalCells As List = finalRows.Get(finalRow) 
_finalcells=_finalrows[_finalrow];
// [1616]  Dim finalCellsSize As Int = finalCells.Size - 1 
_finalcellssize=_finalcells.length-1;
// [1617]  For colCnt = 0 To finalCellsSize 
for (_colcnt=0;_colcnt<=_finalcellssize;_colcnt++) {
// [1618]  finalCell(colCnt) = finalCells.Get(colCnt) 
_finalcell[_colcnt]=_finalcells[_colcnt];
// [1619]  ec(colCnt) = sortitM.Get(finalCell(colCnt)) 
_ec[_colcnt]=_B._sortitm[_finalcell[_colcnt]];
// [1620]  Next 
}
// [1622]  parentGrid.AddRow(1, er.Visibility, {109} , {110} ) 
_parentgrid.addrow(1,_er._visibility,"","");
// [1623]  Dim cellSize As Int 
_cellsize=0;
// [1624]  For cellSize = 0 To finalCellsSize 
for (_cellsize=0;_cellsize<=_finalcellssize;_cellsize++) {
// [1626]  parentGrid.AddColumnOSMP(1, ec(cellSize).OffsetSmall, ec(cellSize).OffsetMedium, ec(cellSize).OffsetLarge, ec(cellSize).OffsetXLarge, ec(cellSize).SizeSmall, ec(cellSize).SizeMedium, ec(cellSize).SizeLarge, ec(cellSize).SizeXLarge, {111} , ec(cellSize).Visibility, {112} ) 
_parentgrid.addcolumnosmp(1,_ec[_cellsize]._offsetsmall,_ec[_cellsize]._offsetmedium,_ec[_cellsize]._offsetlarge,_ec[_cellsize]._offsetxlarge,_ec[_cellsize]._sizesmall,_ec[_cellsize]._sizemedium,_ec[_cellsize]._sizelarge,_ec[_cellsize]._sizexlarge,"",_ec[_cellsize]._visibility,"");
// [1629]  Next 
}
// [1630]  Next 
}
// End Sub
};

// [1634] private Sub CreateInfoBox(sid As String, eventHandler As Object) As VMInfoBox 
_B.createinfobox=function(_sid,_eventhandler) {
var _el;
// [1635]  HasInfoBox = True 
_B._hasinfobox=true;
// [1636]  Dim el As VMInfoBox 
_el= new banano_bananovuematerial_vminfobox();
// [1637]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1638]  Return el 
return _el;
// End Sub
};

// [1641] private Sub CreateTextArea(sid As String, eventHandler As Object) As VMTextArea 
_B.createtextarea=function(_sid,_eventhandler) {
var _el;
// [1642]  Dim el As VMTextArea 
_el= new banano_bananovuematerial_vmtextarea();
// [1643]  el.Initialize(vue, sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1644]  Return el 
return _el;
// End Sub
};

// [1648] private Sub CreateFile(sid As String, eventHandler As Object) As VMFile 
_B.createfile=function(_sid,_eventhandler) {
var _el;
// [1649]  Dim el As VMFile 
_el= new banano_bananovuematerial_vmfile();
// [1650]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1651]  Return el 
return _el;
// End Sub
};

// [1655] private Sub CreateInput(sid As String, eventHandler As Object) As VMInput 
_B.createinput=function(_sid,_eventhandler) {
var _el;
// [1656]  Dim el As VMInput 
_el= new banano_bananovuematerial_vminput();
// [1657]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1658]  Return el 
return _el;
// End Sub
};

// [1662] private Sub CreateSlider(sid As String, eventHandler As Object) As VMSlider 
_B.createslider=function(_sid,_eventhandler) {
var _el;
// [1663]  Dim el As VMSlider 
_el= new banano_bananovuematerial_vmslider();
// [1664]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1665]  Return el 
return _el;
// End Sub
};

// [1669] private Sub CreateNumber(sid As String, eventHandler As Object) As VMInput 
_B.createnumber=function(_sid,_eventhandler) {
var _el;
// [1670]  Dim el As VMInput = CreateInput(sid,eventHandler).SetTypeNumber(True) 
_el=_B.createinput(_sid,_eventhandler,_B).settypenumber(true);
// [1671]  Return el 
return _el;
// End Sub
};

// [1674] private Sub CreateSelect(sid As String, eventHandler As Object) As VMSelect 
_B.createselect=function(_sid,_eventhandler) {
var _el;
// [1675]  Dim el As VMSelect 
_el= new banano_bananovuematerial_vmselect();
// [1676]  el.Initialize(vue,sid,eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1677]  Return el 
return _el;
// End Sub
};

// [1681] private Sub CreateSwitch(sid As String, eventHandler As Object) As VMSwitch 
_B.createswitch=function(_sid,_eventhandler) {
var _el;
// [1682]  Dim el As VMSwitch 
_el= new banano_bananovuematerial_vmswitch();
// [1683]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1684]  Return el 
return _el;
// End Sub
};

// [1687] private Sub CreateCheckBox(sid As String, eventHandler As Object) As VMCheckBox 
_B.createcheckbox=function(_sid,_eventhandler) {
var _el;
// [1688]  Dim el As VMCheckBox 
_el= new banano_bananovuematerial_vmcheckbox();
// [1689]  el.Initialize(vue, sid, eventHandler) 
_el.initialize(_B._vue,_sid,_eventhandler);
// [1690]  Return el 
return _el;
// End Sub
};

// [1694] private Sub CreateIcon(sid As String) As VMIcon 
_B.createicon=function(_sid) {
var _el;
// [1695]  Dim el As VMIcon 
_el= new banano_bananovuematerial_vmicon();
// [1696]  el.Initialize(vue, sid) 
_el.initialize(_B._vue,_sid);
// [1697]  Return el 
return _el;
// End Sub
};

// [1701] private Sub CreateRadioGroup(sid As String, sCaption As String, eventHandler As Object) As VMRadioGroup 
_B.createradiogroup=function(_sid,_scaption,_eventhandler) {
var _el;
// [1702]  Dim el As VMRadioGroup 
_el= new banano_bananovuematerial_vmradiogroup();
// [1703]  el.Initialize(vue, sid, sCaption, eventHandler) 
_el.initialize(_B._vue,_sid,_scaption,_eventhandler);
// [1704]  Return el 
return _el;
// End Sub
};

// [1707] private Sub CreateCheckBoxGroup(sid As String, sCaption As String, eventHandler As Object) As VMCheckBoxGroup 
_B.createcheckboxgroup=function(_sid,_scaption,_eventhandler) {
var _el;
// [1708]  Dim el As VMCheckBoxGroup 
_el= new banano_bananovuematerial_vmcheckboxgroup();
// [1709]  el.Initialize(vue, sid, sCaption, eventHandler) 
_el.initialize(_B._vue,_sid,_scaption,_eventhandler);
// [1710]  Return el 
return _el;
// End Sub
};

}
/* =========================== VMCSS  =========================== */
function banano_bananovuematerial_vmcss() {
var _B=this;
_B._style= new banano_bananovuematerial_styleobj();

_B._width= new banano_bananovuematerial_csssize();

_B._height= new banano_bananovuematerial_csssize();

_B._background= new banano_bananovuematerial_cssbackground();

_B._border= new banano_bananovuematerial_cssborder();

_B._margin= new banano_bananovuematerial_csspositions();

_B._padding= new banano_bananovuematerial_csspositions();

_B._outline= new banano_bananovuematerial_cssoutline();

_B._text= new banano_bananovuematerial_csstext();

_B._font= new banano_bananovuematerial_cssfont();

_B._css={};

_B._liststyle= new banano_bananovuematerial_cssliststyle();

_B._transform= new banano_bananovuematerial_csstransform();

_B._transition= new banano_bananovuematerial_csstransition();

_B._animation= new banano_bananovuematerial_cssanimation();

_B._filter= new banano_bananovuematerial_cssfilter();

_B._image= new banano_bananovuematerial_cssimage();

_B._sortit=[];

// [45] Public Sub Initialize 
_B.initialize=function() {
// [46]  css.Initialize 
_B._css={};
// [47]  BackGround.Initialize 
_B._background.initialize();
// [48]  Border.Initialize 
_B._border.initialize();
// [49]  Border.Color.Initialize 
_B._border._color.initialize();
// [50]  Border.width.Initialize 
_B._border._width.initialize();
// [51]  Border.style.Initialize 
_B._border._style.initialize();
// [52]  Border.radius.Initialize 
_B._border._radius.initialize();
// [53]  Border.image.Initialize 
_B._border._image.initialize();
// [54]  Margin.Initialize 
_B._margin.initialize();
// [55]  Padding.Initialize 
_B._padding.initialize();
// [56]  Height.Initialize 
_B._height.initialize();
// [57]  Width.Initialize 
_B._width.initialize();
// [58]  Outline.Initialize 
_B._outline.initialize();
// [59]  Style.Initialize 
_B._style.initialize();
// [60]  Text.Initialize 
_B._text.initialize();
// [61]  Style.position.Initialize 
_B._style._position.initialize();
// [62]  Style.overflow.Initialize 
_B._style._overflow.initialize();
// [63]  Font.Initialize 
_B._font.initialize();
// [64]  ListStyle.Initialize 
_B._liststyle.initialize();
// [65]  Transform.Initialize 
_B._transform.initialize();
// [66]  Transition.Initialize 
_B._transition.initialize();
// [67]  Animation.Initialize 
_B._animation.initialize();
// [68]  Filter.Initialize 
_B._filter.initialize();
// [69]  Image.Initialize 
_B._image.initialize();
// End Sub
};

// [72] Sub SetAttr(property As String,value As String) As VMCSS 
_B.setattr=function(_property,_value) {
// [73]  value = value.Trim 
_value=_value.trim();
// [74]  If value.Length > 0 Then 
if (_value.length>0) {
// [75]  css.Put(property,value) 
_B._css[_property]=_value;
// [76]  End If 
}
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub Build 
_B.build=function() {
var _strprop;
// [81]  SetAttr( {2} ,Style.Color) 
_B.setattr("color",_B._style._color,_B);
// [82]  SetAttr( {3} ,Text.align) 
_B.setattr("text-align",_B._text._align,_B);
// [83]  SetAttr( {4} ,Text.decoration) 
_B.setattr("text-decoration",_B._text._decoration,_B);
// [84]  SetAttr( {5} , Text.indent) 
_B.setattr("text-indent",_B._text._indent,_B);
// [85]  SetAttr( {6} , Style.letterspacing) 
_B.setattr("letter-spacing",_B._style._letterspacing,_B);
// [86]  SetAttr( {7} , Style.lineheight) 
_B.setattr("line-height",_B._style._lineheight,_B);
// [87]  SetAttr( {8} , Style.direction) 
_B.setattr("direction",_B._style._direction,_B);
// [88]  SetAttr( {9} , Style.wordspacing) 
_B.setattr("word-spacing",_B._style._wordspacing,_B);
// [89]  SetAttr( {10} , Text.Textshadow) 
_B.setattr("text-shadow",_B._text._textshadow,_B);
// [90]  SetAttr( {11} , Style.verticalalign) 
_B.setattr("vertical-align",_B._style._verticalalign,_B);
// [91]  SetAttr( {12} ,Style.display) 
_B.setattr("display",_B._style._display,_B);
// [92]  SetAttr( {13} ,Style.visibility) 
_B.setattr("visibility",_B._style._visibility,_B);
// [93]  SetAttr( {14} ,Style.clip) 
_B.setattr("clip",_B._style._clip,_B);
// [94]  SetAttr( {15} ,Style.floatto) 
_B.setattr("float",_B._style._floatto,_B);
// [95]  SetAttr( {16} ,Style.clear) 
_B.setattr("clear",_B._style._clear,_B);
// [96]  SetAttr( {17} ,Style.opacity) 
_B.setattr("opacity",_B._style._opacity,_B);
// [97]  SetAttr( {18} ,Style.BackGround) 
_B.setattr("background",_B._style._background,_B);
// [98]  SetAttr( {19} ,Style.boxsizing) 
_B.setattr("box-sizing",_B._style._boxsizing,_B);
// [99]  SetAttr( {20} ,Style.resize) 
_B.setattr("resize",_B._style._resize,_B);
// [100]  SetAttr( {21} , Style.boxshadow) 
_B.setattr("box-shadow",_B._style._boxshadow,_B);
// [101]  SetAttr( {22} , Style.whitespace) 
_B.setattr("white-space",_B._style._whitespace,_B);
// [102]  SetAttr( {23} , Text.textoverflow) 
_B.setattr("text-overflow",_B._text._textoverflow,_B);
// [105]  SetAttr( {24} , Image.objectfit) 
_B.setattr("object-fit",_B._image._objectfit,_B);
// [109]  SetAttr( {25} ,Filter.filter) 
_B.setattr("filter",_B._filter._filter,_B);
// [110]  SetAttr( {26} , Filter.webkitfilter) 
_B.setattr("-webkit-filter",_B._filter._webkitfilter,_B);
// [113]  SetAttr( {27} , Animation.animation) 
_B.setattr("animation",_B._animation._animation,_B);
// [114]  SetAttr( {28} , Animation.delay) 
_B.setattr("animation-delay",_B._animation._delay,_B);
// [115]  SetAttr( {29} , Animation.direction) 
_B.setattr("animation-direction",_B._animation._direction,_B);
// [116]  SetAttr( {30} , Animation.duration) 
_B.setattr("animation-duration",_B._animation._duration,_B);
// [117]  SetAttr( {31} , Animation.fillmode) 
_B.setattr("animation-fill-mode",_B._animation._fillmode,_B);
// [118]  SetAttr( {32} , Animation.iterationcount) 
_B.setattr("animation-iteration-count",_B._animation._iterationcount,_B);
// [119]  SetAttr( {33} , Animation.name) 
_B.setattr("animation-name",_B._animation._name,_B);
// [120]  SetAttr( {34} , Animation.playstate) 
_B.setattr("animation-play-state",_B._animation._playstate,_B);
// [121]  SetAttr( {35} , Animation.timingfunction) 
_B.setattr("animation-timing-function",_B._animation._timingfunction,_B);
// [125]  SetAttr( {36} ,Transition.webkittransition) 
_B.setattr("-webkit-transition",_B._transition._webkittransition,_B);
// [126]  SetAttr( {37} ,Transition.transition) 
_B.setattr("transition",_B._transition._transition,_B);
// [127]  SetAttr( {38} ,Transition.delay) 
_B.setattr("transition-delay",_B._transition._delay,_B);
// [128]  SetAttr( {39} ,Transition.duration) 
_B.setattr("transition-duration",_B._transition._duration,_B);
// [129]  SetAttr( {40} ,Transition.property) 
_B.setattr("transition-property",_B._transition._property,_B);
// [130]  SetAttr( {41} ,Transition.timingfunction) 
_B.setattr("transition-timing-function",_B._transition._timingfunction,_B);
// [133]  SetAttr( {42} , Transform.texttransform) 
_B.setattr("text-transform",_B._transform._texttransform,_B);
// [134]  SetAttr( {43} , Transform.mstransform) 
_B.setattr("-ms-transform",_B._transform._mstransform,_B);
// [135]  SetAttr( {44} , Transform.origin) 
_B.setattr("transform-origin",_B._transform._origin,_B);
// [136]  SetAttr( {45} , Transform.style) 
_B.setattr("transform-style",_B._transform._style,_B);
// [137]  SetAttr( {46} , Transform.perspective) 
_B.setattr("perspective",_B._transform._perspective,_B);
// [138]  SetAttr( {47} , Transform.perspectiveorigin) 
_B.setattr("perspective-origin",_B._transform._perspectiveorigin,_B);
// [139]  SetAttr( {48} , Transform.backfacevisibility) 
_B.setattr("backface-visibility",_B._transform._backfacevisibility,_B);
// [140]  SetAttr( {49} , Transform.webkittransform) 
_B.setattr("-webkit-transform",_B._transform._webkittransform,_B);
// [143]  SetAttr( {50} ,Style.overflow.all) 
_B.setattr("overflow",_B._style._overflow._all,_B);
// [144]  SetAttr( {51} ,Style.overflow.y) 
_B.setattr("overflow-y",_B._style._overflow._y,_B);
// [145]  SetAttr( {52} ,Style.overflow.x) 
_B.setattr("overflow-x",_B._style._overflow._x,_B);
// [148]  SetAttr( {53} ,Style.zindex) 
_B.setattr("z-index",_B._style._zindex,_B);
// [149]  SetAttr( {54} ,Style.position.all) 
_B.setattr("position",_B._style._position._all,_B);
// [150]  SetAttr( {55} ,Style.position.left) 
_B.setattr("left",_B._style._position._left,_B);
// [151]  SetAttr( {56} ,Style.position.top) 
_B.setattr("top",_B._style._position._top,_B);
// [152]  SetAttr( {57} ,Style.position.bottom) 
_B.setattr("bottom",_B._style._position._bottom,_B);
// [153]  SetAttr( {58} ,Style.position.right) 
_B.setattr("right",_B._style._position._right,_B);
// [156]  SetAttr( {59} , Font.all) 
_B.setattr("font",_B._font._all,_B);
// [157]  SetAttr( {60} , Font.fontFamily) 
_B.setattr("font-family",_B._font._fontfamily,_B);
// [158]  SetAttr( {61} , Font.style) 
_B.setattr("font-style",_B._font._style,_B);
// [159]  SetAttr( {62} , Font.size) 
_B.setattr("font-size",_B._font._size,_B);
// [160]  SetAttr( {63} , Font.weight) 
_B.setattr("font-weight",_B._font._weight,_B);
// [161]  SetAttr( {64} , Font.variant) 
_B.setattr("font-variant",_B._font._variant,_B);
// [162]  SetAttr( {65} , Font.src) 
_B.setattr("src",_B._font._src,_B);
// [163]  SetAttr( {66} , Font.stretch) 
_B.setattr("font-stretch",_B._font._stretch,_B);
// [165]  SetAttr( {67} , ListStyle.typeof) 
_B.setattr("list-style-type",_B._liststyle._typeof,_B);
// [166]  SetAttr( {68} , ListStyle.position) 
_B.setattr("list-style-position",_B._liststyle._position,_B);
// [167]  SetAttr( {69} , {0} ) 
_B.setattr("list-style-image","url('" + _B._liststyle._image + "')",_B);
// [169]  SetAttr( {70} ,Width.size) 
_B.setattr("width",_B._width._size,_B);
// [170]  SetAttr( {71} ,Width.maxsize) 
_B.setattr("max-width",_B._width._maxsize,_B);
// [171]  SetAttr( {72} ,Width.minsize) 
_B.setattr("min-width",_B._width._minsize,_B);
// [173]  SetAttr( {73} ,Height.size) 
_B.setattr("height",_B._height._size,_B);
// [174]  SetAttr( {74} ,Height.maxsize) 
_B.setattr("max-height",_B._height._maxsize,_B);
// [175]  SetAttr( {75} ,Height.minsize) 
_B.setattr("min-height",_B._height._minsize,_B);
// [177]  SetAttr( {76} ,BackGround.color) 
_B.setattr("background-color",_B._background._color,_B);
// [178]  SetAttr( {77} , {1} ) 
_B.setattr("background-image","url('" + _B._background._image + "')",_B);
// [179]  SetAttr( {78} , BackGround.repeat) 
_B.setattr("background-repeat",_B._background._repeat,_B);
// [180]  SetAttr( {79} , BackGround.position) 
_B.setattr("background-position",_B._background._position,_B);
// [181]  SetAttr( {80} , BackGround.attachment) 
_B.setattr("background-attachment",_B._background._attachment,_B);
// [182]  SetAttr( {81} , BackGround.clip) 
_B.setattr("background-clip",_B._background._clip,_B);
// [183]  SetAttr( {82} , BackGround.size) 
_B.setattr("background-size",_B._background._size,_B);
// [184]  SetAttr( {83} , BackGround.origin) 
_B.setattr("background-origin",_B._background._origin,_B);
// [187]  SetAttr( {84} ,Border.collapse) 
_B.setattr("border-collapse",_B._border._collapse,_B);
// [188]  SetAttr( {85} , Border.style.all) 
_B.setattr("border-style",_B._border._style._all,_B);
// [189]  SetAttr( {86} , Border.style.top) 
_B.setattr("border-top-style",_B._border._style._top,_B);
// [190]  SetAttr( {87} , Border.style.bottom) 
_B.setattr("border-bottom-style",_B._border._style._bottom,_B);
// [191]  SetAttr( {88} , Border.style.right) 
_B.setattr("border-right-style",_B._border._style._right,_B);
// [192]  SetAttr( {89} , Border.style.left) 
_B.setattr("border-left-style",_B._border._style._left,_B);
// [194]  SetAttr( {90} , Border.color.all) 
_B.setattr("border-color",_B._border._color._all,_B);
// [195]  SetAttr( {91} , Border.color.left) 
_B.setattr("border-left-color",_B._border._color._left,_B);
// [196]  SetAttr( {92} , Border.color.right) 
_B.setattr("border-right-color",_B._border._color._right,_B);
// [197]  SetAttr( {93} , Border.color.top) 
_B.setattr("border-top-color",_B._border._color._top,_B);
// [198]  SetAttr( {94} , Border.color.bottom) 
_B.setattr("border-bottom-color",_B._border._color._bottom,_B);
// [200]  SetAttr( {95} , Border.radius.all) 
_B.setattr("border-radius",_B._border._radius._all,_B);
// [201]  SetAttr( {96} , Border.radius.topleft) 
_B.setattr("border-top-left-radius",_B._border._radius._topleft,_B);
// [202]  SetAttr( {97} , Border.radius.topright) 
_B.setattr("border-top-right-radius",_B._border._radius._topright,_B);
// [203]  SetAttr( {98} , Border.radius.bottomleft) 
_B.setattr("border-bottom-left-radius",_B._border._radius._bottomleft,_B);
// [204]  SetAttr( {99} , Border.radius.bottomright) 
_B.setattr("border-bottom-right-radius",_B._border._radius._bottomright,_B);
// [207]  SetAttr( {100} , Border.width.all) 
_B.setattr("border-width",_B._border._width._all,_B);
// [208]  SetAttr( {101} ,Border.width.left) 
_B.setattr("border-left-width",_B._border._width._left,_B);
// [209]  SetAttr( {102} ,Border.width.right) 
_B.setattr("border-right-width",_B._border._width._right,_B);
// [210]  SetAttr( {103} ,Border.width.top) 
_B.setattr("border-top-width",_B._border._width._top,_B);
// [211]  SetAttr( {104} ,Border.width.bottom) 
_B.setattr("border-bottom-width",_B._border._width._bottom,_B);
// [214]  SetAttr( {105} , Border.image.image) 
_B.setattr("border-image",_B._border._image._image,_B);
// [215]  SetAttr( {106} ,Border.image.source) 
_B.setattr("border-image-source",_B._border._image._source,_B);
// [216]  SetAttr( {107} ,Border.image.slice) 
_B.setattr("border-image-slice",_B._border._image._slice,_B);
// [217]  SetAttr( {108} ,Border.image.width) 
_B.setattr("border-image-width",_B._border._image._width,_B);
// [218]  SetAttr( {109} ,Border.image.outset) 
_B.setattr("border-image-outset",_B._border._image._outset,_B);
// [219]  SetAttr( {110} ,Border.image.repeat) 
_B.setattr("border-image-repeat",_B._border._image._repeat,_B);
// [222]  SetAttr( {111} ,Margin.all) 
_B.setattr("margin",_B._margin._all,_B);
// [223]  SetAttr( {112} ,Margin.top) 
_B.setattr("margin-top",_B._margin._top,_B);
// [224]  SetAttr( {113} ,Margin.bottom) 
_B.setattr("margin-bottom",_B._margin._bottom,_B);
// [225]  SetAttr( {114} ,Margin.left) 
_B.setattr("margin-left",_B._margin._left,_B);
// [226]  SetAttr( {115} ,Margin.right) 
_B.setattr("margin-right",_B._margin._right,_B);
// [228]  SetAttr( {116} ,Padding.all) 
_B.setattr("padding",_B._padding._all,_B);
// [229]  SetAttr( {117} ,Padding.top) 
_B.setattr("padding-top",_B._padding._top,_B);
// [230]  SetAttr( {118} ,Padding.bottom) 
_B.setattr("padding-bottom",_B._padding._bottom,_B);
// [231]  SetAttr( {119} ,Padding.left) 
_B.setattr("padding-left",_B._padding._left,_B);
// [232]  SetAttr( {120} ,Padding.right) 
_B.setattr("padding-right",_B._padding._right,_B);
// [234]  SetAttr( {121} ,Outline.all) 
_B.setattr("outline",_B._outline._all,_B);
// [235]  SetAttr( {122} ,Outline.style) 
_B.setattr("outline-style",_B._outline._style,_B);
// [236]  SetAttr( {123} ,Outline.offset) 
_B.setattr("outline-offset",_B._outline._offset,_B);
// [237]  SetAttr( {124} ,Outline.width) 
_B.setattr("outline-width",_B._outline._width,_B);
// [238]  SetAttr( {125} ,Outline.color) 
_B.setattr("outline-color",_B._outline._color,_B);
// [241]  sortit.Initialize 
_B._sortit.length=0;
// [242]  For Each strProp As String In css.Keys 
var _strpropKeys = Object.keys(_B._css);
for (var _strpropindex=0;_strpropindex<_strpropKeys.length;_strpropindex++) {
_strprop=_strpropKeys[_strpropindex];
// [243]  sortit.Add(strProp) 
_B._sortit.push(_strprop);
// [244]  Next 
}
// [245]  sortit.Sort(True) 
if (!isNaN(parseFloat(_B._sortit[0])) && isFinite(_B._sortit[0])) {
_B._sortit.sort(function(a, b){return a - b});
} else {
_B._sortit.sort();
};
// End Sub
};

// [249] Sub ToMap As Map 
_B.tomap=function() {
// [250]  Return css 
return _B._css;
// End Sub
};

// [254] Sub ToJSON As String 
_B.tojson=function() {
var _sjson;
// [255]  Dim sjson As String = BANano.ToJson(css) 
_sjson=JSON.stringify(_B._css);
// [256]  Return sjson 
return _sjson;
// End Sub
};

}
/* =========================== VMDatePicker  =========================== */
function banano_bananovuematerial_vmdatepicker() {
var _B=this;
_B._datepicker= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._ht= new banano_bananovuematerial_vmelement();

_B._hashelp=false;

_B._haserror=false;

_B._he= new banano_bananovuematerial_vmelement();

_B._module={};

_B._errkey="";

// [16] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMDatePicker 
_B.initialize=function(_v,_sid,_eventhandler) {
// [17]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [18]  vue = v 
_B._vue=_v;
// [19]  module = eventHandler 
_B._module=_eventhandler;
// [20]  DatePicker.Initialize(vue, ID).SetTag( {4} ) 
_B._datepicker.initialize(_B._vue,_B._id).settag("md-datepicker");
// [21]  lbl.Initialize(vue, {0} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "lbl");
// [22]  hasHelp = False 
_B._hashelp=false;
// [23]  hasError = False 
_B._haserror=false;
// [24]  errKey = {1} 
_B._errkey="" + _B._id + "error";
// [25]  vue.SetStateSingle(errKey, False) 
_B._vue.setstatesingle(_B._errkey,false);
// [26]  DatePicker.SetAttrSingle( {5} , errKey & {6} ) 
_B._datepicker.setattrsingle(":class",_B._errkey+"class");
// [27]  vue.SetComputed(errKey & {7} , Me, {8} ) 
_B._vue.setcomputed(_B._errkey+"class",_B,"FieldError");
// [28]  SetOnOpened 
_B.setonopened(_B);
// [29]  SetOnClosed 
_B.setonclosed(_B);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] private Sub FieldError As Object 
_B.fielderror=function() {
var _errmodel,_obj;
// [34]  Dim errModel As Boolean = vue.GetState(errKey, False) 
_errmodel=_B._vue.getstate(_B._errkey,false);
// [35]  Dim obj As Map = CreateMap() 
_obj={};
// [36]  obj.Put( {9} , errModel) 
_obj["md-invalid"]=_errmodel;
// [37]  Return obj 
return _obj;
// End Sub
};

// [41] Sub SetRequired(varRequired As Boolean) As VMDatePicker 
_B.setrequired=function(_varrequired) {
// [42]  DatePicker.SetRequired(varRequired) 
_B._datepicker.setrequired(_varrequired);
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetDisabled(b As Boolean) As VMDatePicker 
_B.setdisabled=function(_b) {
// [47]  DatePicker.SetDisabled(b) 
_B._datepicker.setdisabled(_b);
// [48]  Return Me 
return _B;
// End Sub
};

// [52] private Sub SetOnOpened As VMDatePicker 
_B.setonopened=function() {
var _methodname,_e,_cb;
// [53]  Dim methodName As String = {2} 
_methodname="" + _B._id + "_opened";
// [54]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [55]  Dim e As BANanoEvent 
_e=null;
// [56]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [57]  SetAttr(CreateMap( {10} : methodName)) 
_B.setattr({"v-on:md-opened":_methodname},_B);
// [60]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [61]  Return Me 
return _B;
// End Sub
};

// [65] private Sub SetOnClosed As VMDatePicker 
_B.setonclosed=function() {
var _methodname,_e,_cb;
// [66]  Dim methodName As String = {3} 
_methodname="" + _B._id + "_closed";
// [67]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [68]  Dim e As BANanoEvent 
_e=null;
// [69]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [70]  SetAttr(CreateMap( {11} : methodName)) 
_B.setattr({"v-on:md-closed":_methodname},_B);
// [73]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [74]  Return Me 
return _B;
// End Sub
};

// [78] Sub SetTabIndex(ti As String) As VMDatePicker 
_B.settabindex=function(_ti) {
// [79]  DatePicker.SetTabIndex(ti) 
_B._datepicker.settabindex(_ti);
// [80]  Return Me 
return _B;
// End Sub
};

// [83] Sub SetVShow(vif As String) As VMDatePicker 
_B.setvshow=function(_vif) {
// [84]  If vif = {12} Then Return Me 
if (_vif=="") { return _B;}
// [85]  DatePicker.SetVShow(vif) 
_B._datepicker.setvshow(_vif);
// [86]  Return Me 
return _B;
// End Sub
};

// [89] Sub SetVIf(vshow As String) As VMDatePicker 
_B.setvif=function(_vshow) {
// [90]  If vshow = {13} Then Return Me 
if (_vshow=="") { return _B;}
// [91]  DatePicker.SetVif(vshow) 
_B._datepicker.setvif(_vshow);
// [92]  Return Me 
return _B;
// End Sub
};

// [97] Sub SetClearable(varClearable As Boolean) As VMDatePicker 
_B.setclearable=function(_varclearable) {
// [98]  DatePicker.SetClearable(varClearable) 
_B._datepicker.setclearable(_varclearable);
// [99]  Return Me 
return _B;
// End Sub
};

// [103] Sub AddClass(c As String) As VMDatePicker 
_B.addclass=function(_c) {
// [104]  DatePicker.AddClass(c) 
_B._datepicker.addclass(_c);
// [105]  Return Me 
return _B;
// End Sub
};

// [109] Sub SetAttr(attr As Map) As VMDatePicker 
_B.setattr=function(_attr) {
// [110]  DatePicker.SetAttr(attr) 
_B._datepicker.setattr(_attr);
// [111]  Return Me 
return _B;
// End Sub
};

// [115] Sub SetHelperText(t As String) As VMDatePicker 
_B.sethelpertext=function(_t) {
// [116]  If t = {14} Then Return Me 
if (_t=="") { return _B;}
// [117]  hasHelp = True 
_B._hashelp=true;
// [118]  ht = DatePicker.SetHelperText(t) 
_B._ht=_B._datepicker.sethelpertext(_t);
// [119]  Return Me 
return _B;
// End Sub
};

// [123] Sub SetErrorText(t As String) As VMDatePicker 
_B.seterrortext=function(_t) {
// [124]  If t = {15} Then Return Me 
if (_t=="") { return _B;}
// [125]  hasError = True 
_B._haserror=true;
// [126]  he = DatePicker.SetErrorText(t) 
_B._he=_B._datepicker.seterrortext(_t);
// [127]  Return Me 
return _B;
// End Sub
};

// [130] Sub SetImmediately(b As Boolean) As VMDatePicker 
_B.setimmediately=function(_b) {
// [131]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [132]  DatePicker.SetAttr(CreateMap( {16} : b)) 
_B._datepicker.setattr({":md-immediately":_b});
// [133]  Return Me 
return _B;
// End Sub
};

// [136] Sub SetOpenOnFocus(b As Boolean) As VMDatePicker 
_B.setopenonfocus=function(_b) {
// [137]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [138]  DatePicker.SetAttr(CreateMap( {17} : b)) 
_B._datepicker.setattr({":md-open-on-focus":_b});
// [139]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetOverrideNative(b As Boolean) As VMDatePicker 
_B.setoverridenative=function(_b) {
// [143]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [144]  DatePicker.SetAttr(CreateMap( {18} : b)) 
_B._datepicker.setattr({":md-override-native":_b});
// [145]  Return Me 
return _B;
// End Sub
};

// [148] Sub SetDebounce(b As Boolean) As VMDatePicker 
_B.setdebounce=function(_b) {
// [149]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [150]  DatePicker.SetAttr(CreateMap( {19} : b)) 
_B._datepicker.setattr({"md-debounce":_b});
// [151]  Return Me 
return _B;
// End Sub
};

// [154] Sub SetVModel(k As String) As VMDatePicker 
_B.setvmodel=function(_k) {
// [155]  If k = {20} Then Return Me 
if (_k=="") { return _B;}
// [156]  DatePicker.SetVModel(k) 
_B._datepicker.setvmodel(_k);
// [157]  Return Me 
return _B;
// End Sub
};

// [160] Sub SetLabel(t As String) As VMDatePicker 
_B.setlabel=function(_t) {
// [161]  If t = {21} Then Return Me 
if (_t=="") { return _B;}
// [162]  lbl.SetText(t) 
_B._lbl.settext(_t);
// [163]  Return Me 
return _B;
// End Sub
};

// [167] Sub SetName(varName As Object, bind As Boolean) As VMDatePicker 
_B.setname=function(_varname,_bind) {
// [168]  DatePicker.SetName(varName, bind) 
_B._datepicker.setname(_varname,_bind);
// [169]  Return Me 
return _B;
// End Sub
};

// [172] Sub ToString As String 
_B.tostring=function() {
// [173]  lbl.Pop(DatePicker) 
_B._lbl.pop(_B._datepicker);
// [174]  If hasHelp Then 
if (_B._hashelp) {
// [175]  ht.Pop(DatePicker) 
_B._ht.pop(_B._datepicker);
// [176]  End If 
}
// [177]  If hasError Then 
if (_B._haserror) {
// [178]  he.Pop(DatePicker) 
_B._he.pop(_B._datepicker);
// [179]  End If 
}
// [180]  Return DatePicker.tostring 
return _B._datepicker.tostring();
// End Sub
};

// [183] Sub Render 
_B.render=function() {
// [184]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [187] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [188]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [192] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [193]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMDialog  =========================== */
function banano_bananovuematerial_vmdialog() {
var _B=this;
_B._dialog= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._actions= new banano_bananovuematerial_vmelement();

_B._bactive=false;

_B._content= new banano_bananovuematerial_vmelement();

_B._module={};

_B._container= new banano_bananovuematerial_vmcontainer();

// [15] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMDialog 
_B.initialize=function(_v,_sid,_eventhandler) {
// [16]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [17]  vue = v 
_B._vue=_v;
// [18]  module = eventHandler 
_B._module=_eventhandler;
// [19]  Dialog.Initialize(vue, {0} ).SetTag( {10} ) 
_B._dialog.initialize(_B._vue,"" + _B._id + "dialog").settag("md-dialog");
// [20]  actions.Initialize(vue, {1} ).SetTag( {11} ) 
_B._actions.initialize(_B._vue,"" + _B._id + "actions").settag("md-dialog-actions");
// [21]  actions.RemoveAttr( {12} ) 
_B._actions.removeattr(":required");
// [22]  actions.RemoveAttr( {13} ) 
_B._actions.removeattr("v-show");
// [23]  bActive = False 
_B._bactive=false;
// [24]  If ID <> {14} Then 
if (_B._id!="") {
// [25]  SetActiveSync(ID) 
_B.setactivesync(_B._id,_B);
// [26]  End If 
}
// [27]  Content.Initialize(vue, {2} ).SetTag( {15} ) 
_B._content.initialize(_B._vue,"" + _B._id + "content").settag("md-dialog-content");
// [28]  Content.RemoveAttr( {16} ) 
_B._content.removeattr(":required");
// [29]  Container.Initialize(vue, sid & {17} , eventHandler) 
_B._container.initialize(_B._vue,_sid+"grid",_eventhandler);
// [30]  Container.RemoveAttr( {18} ) 
_B._container.removeattr(":required");
// [31]  SetOnOpened 
_B.setonopened(_B);
// [32]  SetOnClosed 
_B.setonclosed(_B);
// [33]  SetOnClickedOutside 
_B.setonclickedoutside(_B);
// [34]  Dialog.RemoveAttr( {19} ) 
_B._dialog.removeattr(":required");
// [35]  Dialog.RemoveAttr( {20} ) 
_B._dialog.removeattr("v-show");
// [36]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetDefaults 
_B.setdefaults=function() {
// [41]  Container.SetDefaults 
_B._container.setdefaults();
// End Sub
};

// [45] Sub GetData As Map 
_B.getdata=function() {
// [46]  Return Container.GetData 
return _B._container.getdata();
// End Sub
};

// [50] Sub Required As Map 
_B.required=function() {
// [51]  Return Container.required 
return _B._container._required;
// End Sub
};

// [54] Sub SetKey(k As String) As VMDialog 
_B.setkey=function(_k) {
// [55]  Dialog.SetKey(k,True) 
_B._dialog.setkey(_k,true);
// [56]  Return Me 
return _B;
// End Sub
};

// [59] Sub SetScrollBar(b As Boolean) As VMDialog 
_B.setscrollbar=function(_b) {
// [60]  Content.SetScrollBar(True) 
_B._content.setscrollbar(true);
// [61]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetStyle(m As Map) As VMDialog 
_B.setstyle=function(_m) {
// [66]  Dialog.SetStyle(m) 
_B._dialog.setstyle(_m);
// [67]  Return Me 
return _B;
// End Sub
};

// [71] Sub SetWidth(w As String) As VMDialog 
_B.setwidth=function(_w) {
// [72]  Dialog.SetStyle(CreateMap( {21} :w)) 
_B._dialog.setstyle({"width":_w});
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub SetHeight(w As String) As VMDialog 
_B.setheight=function(_w) {
// [77]  Dialog.SetStyle(CreateMap( {22} :w)) 
_B._dialog.setstyle({"width":_w});
// [78]  Return Me 
return _B;
// End Sub
};

// [81] Sub AddContent(cntText As VMElement) As VMDialog 
_B.addcontent=function(_cnttext) {
// [82]  cntText.Pop(Content) 
_cnttext.pop(_B._content);
// [83]  Return Me 
return _B;
// End Sub
};

// [86] Sub AddForm(frm As VMForm) 
_B.addform=function(_frm) {
// [87]  AddHTML(frm.ToString) 
_B.addhtml(_frm.tostring(),_B);
// End Sub
};

// [90] Sub AddHTML(htmlContent As String) 
_B.addhtml=function(_htmlcontent) {
// [91]  Content.SetText(htmlContent) 
_B._content.settext(_htmlcontent);
// End Sub
};

// [94] Sub Hide 
_B.hide=function() {
var _opt;
// [95]  Dim opt As Map = CreateMap() 
_opt={};
// [96]  opt.Put(ID, False) 
_opt[_B._id]=false;
// [97]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [100] Sub Show 
_B.show=function() {
var _opt;
// [101]  Dim opt As Map = CreateMap() 
_opt={};
// [102]  opt.Put(ID, True) 
_opt[_B._id]=true;
// [103]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [106] Sub SetElevation(e As Int) As VMDialog 
_B.setelevation=function(_e) {
// [107]  Dialog.SetElevation(e) 
_B._dialog.setelevation(_e);
// [108]  Return Me 
return _B;
// End Sub
};

// [112] Sub AddClass(c As String) As VMDialog 
_B.addclass=function(_c) {
// [113]  Dialog.AddClass(c) 
_B._dialog.addclass(_c);
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetAttr(attr As Map) As VMDialog 
_B.setattr=function(_attr) {
// [119]  Dialog.SetAttr(attr) 
_B._dialog.setattr(_attr);
// [120]  Return Me 
return _B;
// End Sub
};

// [123] Sub SetContent(cntText As String) As VMDialog 
_B.setcontent=function(_cnttext) {
// [124]  Dialog.SetText(cntText) 
_B._dialog.settext(_cnttext);
// [125]  Return Me 
return _B;
// End Sub
};

// [128] Sub SetTitle(t As String) As VMDialog 
_B.settitle=function(_t) {
var _pp,_el;
// [129]  Dim pp As String = {3} 
_pp="" + _B._id + "title";
// [130]  vue.SetStateSingle(pp, t) 
_B._vue.setstatesingle(_pp,_t);
// [131]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [132]  el.Initialize(vue, {4} ).SetTagDialogTitle(True) 
_el.initialize(_B._vue,"" + _B._id + "title").settagdialogtitle(true);
// [133]  el.SetText( {5} ) 
_el.settext("{{ " + _pp + " }}");
// [134]  el.Pop(Dialog) 
_el.pop(_B._dialog);
// [135]  Return Me 
return _B;
// End Sub
};

// [138] Sub AddAction(btn As VMButton) As VMDialog 
_B.addaction=function(_btn) {
// [139]  btn.Pop(actions) 
_btn.pop(_B._actions);
// [140]  Return Me 
return _B;
// End Sub
};

// [143] Sub AddOK(btnID As String, Caption As String) As VMDialog 
_B.addok=function(_btnid,_caption) {
var _btn;
// [144]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [145]  btn.Initialize(vue, btnID, module) 
_btn.initialize(_B._vue,_btnid,_B._module);
// [146]  btn.SetText(Caption).SetPrimary(True) 
_btn.settext(_caption).setprimary(true);
// [147]  btn.RemoveAttr( {23} ) 
_btn.removeattr(":required");
// [148]  AddAction(btn) 
_B.addaction(_btn,_B);
// [149]  Return Me 
return _B;
// End Sub
};

// [152] Sub AddCancel(btnID As String, Caption As String) As VMDialog 
_B.addcancel=function(_btnid,_caption) {
var _btn;
// [153]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [154]  btn.Initialize(vue, btnID, module) 
_btn.initialize(_B._vue,_btnid,_B._module);
// [155]  btn.SetText(Caption).SetAccent(True) 
_btn.settext(_caption).setaccent(true);
// [156]  btn.RemoveAttr( {24} ) 
_btn.removeattr(":required");
// [157]  AddAction(btn) 
_B.addaction(_btn,_B);
// [158]  Return Me 
return _B;
// End Sub
};

// [162] Sub SetMaxWidth(mw As String) As VMDialog 
_B.setmaxwidth=function(_mw) {
// [163]  Dialog.SetMaxWidth(mw) 
_B._dialog.setmaxwidth(_mw);
// [164]  Return Me 
return _B;
// End Sub
};

// [167] Sub SetMaxHeight(mw As String) As VMDialog 
_B.setmaxheight=function(_mw) {
// [168]  Dialog.SetMaxHeight(mw) 
_B._dialog.setmaxheight(_mw);
// [169]  Return Me 
return _B;
// End Sub
};

// [172] private Sub SetActiveSync(a As Object) As VMDialog 
_B.setactivesync=function(_a) {
// [173]  Dialog.SetActiveSync(a) 
_B._dialog.setactivesync(_a);
// [174]  bActive = True 
_B._bactive=true;
// [175]  Return Me 
return _B;
// End Sub
};

// [178] Sub ToString As String 
_B.tostring=function() {
// [179]  AddHTML(Container.ToString) 
_B.addhtml(_B._container.tostring(),_B);
// [180]  Content.Pop(Dialog) 
_B._content.pop(_B._dialog);
// [181]  If bActive = False Then 
if (_B._bactive==false) {
// [182]  Log( {6} ) 
console.log("VMDialog.SetActiveSync: '" + _B._id + "' has not been activated!");
// [183]  End If 
}
// [184]  If actions.hasContent Then 
if (_B._actions._hascontent) {
// [185]  actions.Pop(Dialog) 
_B._actions.pop(_B._dialog);
// [186]  End If 
}
// [187]  Return Dialog.tostring 
return _B._dialog.tostring();
// End Sub
};

// [190] Sub Render 
_B.render=function() {
// [191]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [194] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [195]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [198] Sub SetFullScreen(b As Boolean) As VMDialog 
_B.setfullscreen=function(_b) {
// [199]  Dialog.SetAttr(CreateMap( {25} : b)) 
_B._dialog.setattr({":md-fullscreen":_b});
// [200]  Return Me 
return _B;
// End Sub
};

// [203] Sub SetClickOutsideToClose(b As Boolean) As VMDialog 
_B.setclickoutsidetoclose=function(_b) {
// [204]  Dialog.SetAttr(CreateMap( {26} : b)) 
_B._dialog.setattr({":md-click-outside-to-close":_b});
// [205]  Return Me 
return _B;
// End Sub
};

// [208] Sub SetCloseOnEsc(b As Boolean) As VMDialog 
_B.setcloseonesc=function(_b) {
// [209]  Dialog.SetAttr(CreateMap( {27} : b)) 
_B._dialog.setattr({":md-close-on-esc":_b});
// [210]  Return Me 
return _B;
// End Sub
};

// [213] Sub SetBackdrop(b As Boolean) As VMDialog 
_B.setbackdrop=function(_b) {
// [214]  Dialog.SetAttr(CreateMap( {28} : b)) 
_B._dialog.setattr({":md-backdrop":_b});
// [215]  Return Me 
return _B;
// End Sub
};

// [218] private Sub SetOnOpened As VMDialog 
_B.setonopened=function() {
var _methodname,_e,_cb;
// [219]  Dim methodName As String = {7} 
_methodname="" + _B._id + "_opened";
// [220]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [221]  Dim e As BANanoEvent 
_e=null;
// [222]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [223]  Dialog.SetAttr(CreateMap( {29} : methodName)) 
_B._dialog.setattr({"v-on:md-opened":_methodname});
// [225]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [226]  Return Me 
return _B;
// End Sub
};

// [229] private Sub SetOnClosed As VMDialog 
_B.setonclosed=function() {
var _methodname,_e,_cb;
// [230]  Dim methodName As String = {8} 
_methodname="" + _B._id + "_closed";
// [231]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [232]  Dim e As BANanoEvent 
_e=null;
// [233]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [234]  Dialog.SetAttr(CreateMap( {30} : methodName)) 
_B._dialog.setattr({"v-on:md-closed":_methodname});
// [236]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [237]  Return Me 
return _B;
// End Sub
};

// [240] private Sub SetOnClickedOutside As VMDialog 
_B.setonclickedoutside=function() {
var _methodname,_e,_cb;
// [241]  Dim methodName As String = {9} 
_methodname="" + _B._id + "_outside";
// [242]  Dim e As BANanoEvent 
_e=null;
// [243]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [244]  Dialog.SetAttr(CreateMap( {31} : methodName)) 
_B._dialog.setattr({"v-on:md-clicked-outside":_methodname});
// [246]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [247]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMDivider  =========================== */
function banano_bananovuematerial_vmdivider() {
var _B=this;
_B._divider= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [8] Public Sub Initialize(v As BANanoVue, sid As String) As VMDivider 
_B.initialize=function(_v,_sid) {
// [9]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [10]  vue = v 
_B._vue=_v;
// [11]  Divider.Initialize(vue, ID).SetTag( {0} ) 
_B._divider.initialize(_B._vue,_B._id).settag("md-divider");
// [12]  Return Me 
return _B;
// End Sub
};

// [15] Sub SetInset(b As Boolean) As VMDivider 
_B.setinset=function(_b) {
// [16]  If b Then Divider.addclass( {1} ) 
if (_b) {_B._divider.addclass("md-inset");}
// [17]  Return Me 
return _B;
// End Sub
};

// [20] Sub ToString As String 
_B.tostring=function() {
// [21]  Return Divider.tostring 
return _B._divider.tostring();
// End Sub
};

// [24] Sub Render 
_B.render=function() {
// [25]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [28] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [29]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMDrawer  =========================== */
function banano_bananovuematerial_vmdrawer() {
var _B=this;
_B._drawer= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._bactive=false;

_B._drawerlist= new banano_bananovuematerial_vmlist();

_B._items={};

_B._mshow="";

_B._toolbar= new banano_bananovuematerial_vmtoolbar();

_B._module={};

// [14] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMDrawer 
_B.initialize=function(_v,_sid,_eventhandler) {
// [15]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [16]  vue = v 
_B._vue=_v;
// [17]  Drawer.Initialize(vue, ID).SetTag( {3} ) 
_B._drawer.initialize(_B._vue,_B._id).settag("md-app-drawer");
// [18]  bActive = False 
_B._bactive=false;
// [19]  If ID <> {4} Then 
if (_B._id!="") {
// [20]  SetActiveSync(ID) 
_B.setactivesync(_B._id,_B);
// [21]  End If 
}
// [22]  module = eventHandler 
_B._module=_eventhandler;
// [23]  DrawerList.Initialize(vue, {0} , eventHandler) 
_B._drawerlist.initialize(_B._vue,"" + _B._id + "list",_eventhandler);
// [24]  DrawerList.SetExpandSingle(True) 
_B._drawerlist.setexpandsingle(true);
// [25]  items.Initialize 
_B._items={};
// [26]  mshow = {5} 
_B._mshow="";
// [27]  ToolBar.Initialize(vue, {1} , eventHandler) 
_B._toolbar.initialize(_B._vue,"" + _B._id + "tblbar",_eventhandler);
// [28]  ToolBar.SetTransparent(True).SetElevation(0) 
_B._toolbar.settransparent(true).setelevation(0);
// [29]  ToolBar.SetTitle( {6} ) 
_B._toolbar.settitle("");
// [30]  Drawer.RemoveAttr( {7} ) 
_B._drawer.removeattr("v-show");
// [31]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetTitle(newTitle As String) As VMDrawer 
_B.settitle=function(_newtitle) {
// [35]  vue.SetState(CreateMap( {8} :newTitle)) 
_B._vue.setstate({"drawertblbartitle":_newtitle});
// [36]  Return Me 
return _B;
// End Sub
};

// [39] Sub UpdateTitle(newTitle As String) As VMDrawer 
_B.updatetitle=function(_newtitle) {
// [40]  vue.SetState(CreateMap( {9} :newTitle)) 
_B._vue.setstate({"drawertblbartitle":_newtitle});
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub Toggle 
_B.toggle=function() {
var _bstate;
// [45]  vue.ToggleState(ID) 
_B._vue.togglestate(_B._id);
// [46]  Dim bstate As Boolean = vue.GetState(ID,True) 
_bstate=_B._vue.getstate(_B._id,true);
// [47]  vue.SetStateSingle( {10} , bstate) 
_B._vue.setstatesingle("back1show",_bstate);
// End Sub
};

// [51] Sub Show 
_B.show=function() {
// [52]  vue.SetStateSingle(ID,True) 
_B._vue.setstatesingle(_B._id,true);
// End Sub
};

// [57] Sub Hide 
_B.hide=function() {
// [58]  vue.SetStateSingle(ID, False) 
_B._vue.setstatesingle(_B._id,false);
// End Sub
};

// [62] Sub SetVShow(vshow As String) As VMDrawer 
_B.setvshow=function(_vshow) {
// [63]  Drawer.SetVShow(vshow) 
_B._drawer.setvshow(_vshow);
// [64]  mshow = vshow 
_B._mshow=_vshow;
// [65]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetVIf(vshow As String) As VMDrawer 
_B.setvif=function(_vshow) {
// [69]  Drawer.SetVif(vshow) 
_B._drawer.setvif(_vshow);
// [70]  mshow = vshow 
_B._mshow=_vshow;
// [71]  Return Me 
return _B;
// End Sub
};

// [75] Sub SetWidth(width As String) 
_B.setwidth=function(_width) {
// [76]  vue.SetStyle( {11} , {12} , width) 
_B._vue.setstyle(".md-drawer","width",_width);
// End Sub
};

// [79] Sub AddAvatar(key As String, imgURL As String, text As String) 
_B.addavatar=function(_key,_imgurl,_text) {
var _item;
// [80]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [81]  item.Initialize(vue, key, module) 
_item.initialize(_B._vue,_key,_B._module);
// [82]  item.SetAvatar(imgURL) 
_item.setavatar(_imgurl);
// [83]  item.SetText(text) 
_item.settext(_text);
// [84]  items.Put(key, item) 
_B._items[_key]=_item;
// End Sub
};

// [87] Sub AddSubAvatar(parent As String, key As String, imgURL As String, text As String) 
_B.addsubavatar=function(_parent,_key,_imgurl,_text) {
var _li,_pl,_item;
// [88]  If items.ContainsKey(parent) Then 
if ((_parent in _B._items)) {
// [89]  Dim li As VMListItem = items.Get(parent) 
_li=_B._items[_parent];
// [90]  Dim pl As VMList = li.childList 
_pl=_li._childlist;
// [91]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [92]  item.Initialize(vue, key, module) 
_item.initialize(_B._vue,_key,_B._module);
// [93]  item.SetAvatar(imgURL) 
_item.setavatar(_imgurl);
// [94]  item.SetText(text) 
_item.settext(_text);
// [95]  item.Pop(pl) 
_item.pop(_pl);
// [96]  End If 
}
// End Sub
};

// [99] Sub AddItem(key As String, icon As String, text As String) 
_B.additem=function(_key,_icon,_text) {
var _item;
// [100]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [101]  item.Initialize(vue, key, module) 
_item.initialize(_B._vue,_key,_B._module);
// [102]  item.SetIcon(icon, False) 
_item.seticon(_icon,false);
// [103]  item.SetText(text) 
_item.settext(_text);
// [104]  items.Put(key, item) 
_B._items[_key]=_item;
// End Sub
};

// [107] Sub AddSubItem(parent As String, key As String, icon As String, text As String) 
_B.addsubitem=function(_parent,_key,_icon,_text) {
var _li,_pl,_item;
// [108]  If items.ContainsKey(parent) Then 
if ((_parent in _B._items)) {
// [109]  Dim li As VMListItem = items.Get(parent) 
_li=_B._items[_parent];
// [110]  Dim pl As VMList = li.childList 
_pl=_li._childlist;
// [111]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [112]  item.Initialize(vue, key, module) 
_item.initialize(_B._vue,_key,_B._module);
// [113]  item.SetIcon(icon, False) 
_item.seticon(_icon,false);
// [114]  item.SetText(text) 
_item.settext(_text);
// [115]  item.SetInset(True) 
_item.setinset(true);
// [116]  item.Pop(pl) 
_item.pop(_pl);
// [117]  End If 
}
// End Sub
};

// [120] Sub SetElevation(e As Int) As VMDrawer 
_B.setelevation=function(_e) {
// [121]  Drawer.SetElevation(e) 
_B._drawer.setelevation(_e);
// [122]  Return Me 
return _B;
// End Sub
};

// [126] Sub AddClass(c As String) As VMDrawer 
_B.addclass=function(_c) {
// [127]  Drawer.AddClass(c) 
_B._drawer.addclass(_c);
// [128]  Return Me 
return _B;
// End Sub
};

// [132] Sub SetAttr(attr As Map) As VMDrawer 
_B.setattr=function(_attr) {
// [133]  Drawer.SetAttr(attr) 
_B._drawer.setattr(_attr);
// [134]  Return Me 
return _B;
// End Sub
};

// [137] private Sub SetActiveSync(v As String) As VMDrawer 
_B.setactivesync=function(_v) {
// [138]  Drawer.SetActiveSync(v) 
_B._drawer.setactivesync(_v);
// [139]  bActive = True 
_B._bactive=true;
// [140]  Return Me 
return _B;
// End Sub
};

// [143] Sub SetPermanentFull(b As Boolean) As VMDrawer 
_B.setpermanentfull=function(_b) {
// [144]  Drawer.SetPermanentFull(b) 
_B._drawer.setpermanentfull(_b);
// [145]  Return Me 
return _B;
// End Sub
};

// [148] Sub ToString As String 
_B.tostring=function() {
var _item,_cl;
// [149]  ToolBar.CreateButton( {13} ).SetOnClick(Me).SetDense(True).SetIcon( {14} ).SetIconButton(True).Pop(ToolBar.EndSection) 
_B._toolbar.createbutton("back1").setonclick(_B).setdense(true).seticon("keyboard_arrow_left").seticonbutton(true).pop(_B._toolbar._endsection);
// [150]  ToolBar.Pop(Drawer) 
_B._toolbar.pop(_B._drawer);
// [152]  For Each item As VMListItem In items.Values 
for (_itemKEY in _B._items) {
var _item=_B._items[_itemKEY];
// [153]  Dim cl As VMList = item.childList 
_cl=_item._childlist;
// [154]  If cl.HasContent Then item.SetList(cl) 
if (_cl._hascontent) {_item.setlist(_cl);}
// [155]  item.Pop(DrawerList) 
_item.pop(_B._drawerlist);
// [156]  Next 
}
// [157]  If DrawerList.HasContent Then DrawerList.Pop(Drawer) 
if (_B._drawerlist._hascontent) {_B._drawerlist.pop(_B._drawer);}
// [158]  If bActive = False Then 
if (_B._bactive==false) {
// [159]  Log( {2} ) 
console.log("VMDrawer.SetActiveSync: '" + _B._id + "' has not been activated!");
// [160]  End If 
}
// [161]  Return Drawer.tostring 
return _B._drawer.tostring();
// End Sub
};

// [164] Sub back1_click(e As BANanoEvent) 
_B.back1_click=function(_e) {
var _bdrawer;
// [165]  Toggle 
_B.toggle(_B);
// [166]  Dim bDrawer As Boolean = vue.GetState( {15} ,False) 
_bdrawer=_B._vue.getstate("drawer",false);
// [167]  bDrawer = Not(bDrawer) 
_bdrawer=!(_bdrawer);
// [168]  vue.SetStateSingle( {16} , bDrawer) 
_B._vue.setstatesingle("menushow",_bdrawer);
// End Sub
};

// [171] Sub Render 
_B.render=function() {
// [172]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [175] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [176]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [180] Sub SetActive(varActive As Object) As VMDrawer 
_B.setactive=function(_varactive) {
// [181]  SetAttr(CreateMap( {17} : varActive)) 
_B.setattr({"md-active":_varactive},_B);
// [182]  Return Me 
return _B;
// End Sub
};

// [186] Sub SetSwipeable(varSwipeable As Boolean) As VMDrawer 
_B.setswipeable=function(_varswipeable) {
// [187]  SetAttr(CreateMap( {18} : varSwipeable)) 
_B.setattr({":md-swipeable":_varswipeable},_B);
// [188]  Return Me 
return _B;
// End Sub
};

// [192] Sub SetFixed(varFixed As Boolean) As VMDrawer 
_B.setfixed=function(_varfixed) {
// [193]  SetAttr(CreateMap( {19} : varFixed)) 
_B.setattr({":md-fixed":_varfixed},_B);
// [194]  Return Me 
return _B;
// End Sub
};

// [198] Sub SetRight(varRight As Boolean) As VMDrawer 
_B.setright=function(_varright) {
// [199]  SetAttr(CreateMap( {20} : varRight)) 
_B.setattr({":md-right":_varright},_B);
// [200]  Return Me 
return _B;
// End Sub
};

// [204] Sub SetPermanent(varPermanent As Object) As VMDrawer 
_B.setpermanent=function(_varpermanent) {
// [205]  SetAttr(CreateMap( {21} : varPermanent)) 
_B.setattr({"md-permanent":_varpermanent},_B);
// [206]  Return Me 
return _B;
// End Sub
};

// [210] Sub SetPermanentClipped(b As Boolean) As VMDrawer 'ignore 
_B.setpermanentclipped=function(_b) {
// [211]  SetAttr(CreateMap( {22} : {23} )) 
_B.setattr({"md-permanent":"clipped"},_B);
// [212]  Return Me 
return _B;
// End Sub
};

// [216] Sub SetPermanentCard(b As Boolean) As VMDrawer 'ignore 
_B.setpermanentcard=function(_b) {
// [217] SetAttr(CreateMap( {24} : {25} )) 
_B.setattr({"md-permanent":"card"},_B);
// [218] Return Me 
return _B;
// End Sub
};

// [222] Sub SetPersistent(varPersistent As Object) As VMDrawer 
_B.setpersistent=function(_varpersistent) {
// [223]  SetAttr(CreateMap( {26} : varPersistent)) 
_B.setattr({"md-persistent":_varpersistent},_B);
// [224]  Return Me 
return _B;
// End Sub
};

// [228] Sub SetPersistentFull(b As Boolean) As VMDrawer 'ignore 
_B.setpersistentfull=function(_b) {
// [229]  SetAttr(CreateMap( {27} : {28} )) 
_B.setattr({"md-persistent":"full"},_B);
// [230]  Return Me 
return _B;
// End Sub
};

// [234] Sub SetPersistentMini(b As Boolean) As VMDrawer 'ignore 
_B.setpersistentmini=function(_b) {
// [235]  SetAttr(CreateMap( {29} : {30} )) 
_B.setattr({"md-persistent":"mini"},_B);
// [236]  Return Me 
return _B;
// End Sub
};

// [240] Sub SetSwipeThreshold(varSwipe As Object) As VMDrawer 
_B.setswipethreshold=function(_varswipe) {
// [241]  SetAttr(CreateMap( {31} : varSwipe)) 
_B.setattr({"md-swipe-threshold":_varswipe},_B);
// [242]  Return Me 
return _B;
// End Sub
};

// [246] Sub SetSwipeRestraint(varSwipe As Object) As VMDrawer 
_B.setswiperestraint=function(_varswipe) {
// [247]  SetAttr(CreateMap( {32} : varSwipe)) 
_B.setattr({"md-swipe-restraint":_varswipe},_B);
// [248]  Return Me 
return _B;
// End Sub
};

// [252] Sub SetSwipeTime(varSwipe As Object) As VMDrawer 
_B.setswipetime=function(_varswipe) {
// [253]  SetAttr(CreateMap( {33} : varSwipe)) 
_B.setattr({"md-swipe-time":_varswipe},_B);
// [254]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMElement  =========================== */
function banano_bananovuematerial_vmelement() {
var _B=this;
_B._element= new banano_bananovuematerial_vuehtml();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hascontent=false;

_B._rowclass="row";

_B._cellclass="col";

_B._offclass={"s":"offset-sm-", "m":"offset-md-", "l":"offset-lg-", "xl":"offset-xl-"};

_B._colclass={"s":"col-sm-", "m":"col-md-", "l":"col-lg-", "xl":"col-xl-"};

_B._showkey="";

_B._diskey="";

_B._reqkey="";

_B._errkey="";

// [20] Public Sub Initialize(v As BANanoVue, sid As String) As VMElement 
_B.initialize=function(_v,_sid) {
// [21]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [22]  ID = ID.trim 
_B._id=_B._id.trim();
// [23]  Element.Initialize(ID, {39} ) 
_B._element.initialize(_B._id,"div");
// [24]  vue = v 
_B._vue=_v;
// [25]  hasContent = False 
_B._hascontent=false;
// [26]  SetRef(ID) 
_B.setref(_B._id,_B);
// [27]  showKey = {0} 
_B._showkey="" + _B._id + "show";
// [28]  disKey = {1} 
_B._diskey="" + _B._id + "disabled";
// [29]  reqKey = {2} 
_B._reqkey="" + _B._id + "required";
// [30]  errKey = {3} 
_B._errkey="" + _B._id + "error";
// [31]  vue.SetStateSingle(showKey, True) 
_B._vue.setstatesingle(_B._showkey,true);
// [32]  vue.SetStateSingle(disKey, False) 
_B._vue.setstatesingle(_B._diskey,false);
// [33]  vue.SetStateSingle(reqKey, False) 
_B._vue.setstatesingle(_B._reqkey,false);
// [34]  vue.SetStateSingle(errKey, False) 
_B._vue.setstatesingle(_B._errkey,false);
// [36]  SetRequired(False) 
_B.setrequired(false,_B);
// [37]  SetVShow(showKey) 
_B.setvshow(_B._showkey,_B);
// [38]  SetDisabled(False) 
_B.setdisabled(false,_B);
// [39]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetClearable(varClearable As Boolean) As VMElement 
_B.setclearable=function(_varclearable) {
// [45]  SetAttr(CreateMap( {40} : varClearable)) 
_B.setattr({":md-clearable":_varclearable},_B);
// [46]  Return Me 
return _B;
// End Sub
};

// [49] Sub SetStyleSingle(prop As String, val As Object) As VMElement 
_B.setstylesingle=function(_prop,_val) {
var _attr;
// [50]  Dim attr As Map = CreateMap() 
_attr={};
// [51]  attr.Put(prop, val) 
_attr[_prop]=_val;
// [52]  SetStyle(attr) 
_B.setstyle(_attr,_B);
// [53]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetAttrSingle(prop As String, val As Object) As VMElement 
_B.setattrsingle=function(_prop,_val) {
var _attr;
// [57]  Dim attr As Map = CreateMap() 
_attr={};
// [58]  attr.Put(prop, val) 
_attr[_prop]=_val;
// [59]  SetAttr(attr) 
_B.setattr(_attr,_B);
// [60]  Return Me 
return _B;
// End Sub
};

// [63] Sub Required(b As Boolean) As VMElement 
_B.required=function(_b) {
// [64]  vue.SetStateSingle(reqKey, b) 
_B._vue.setstatesingle(_B._reqkey,_b);
// [65]  Return Me 
return _B;
// End Sub
};

// [68] Sub Enable(b As Boolean) As VMElement 
_B.enable=function(_b) {
var _n;
// [69]  Dim n As Boolean = Not(b) 
_n=!(_b);
// [70]  vue.SetStateSingle(disKey, n) 
_B._vue.setstatesingle(_B._diskey,_n);
// [71]  Return Me 
return _B;
// End Sub
};

// [74] Sub Show As VMElement 
_B.show=function() {
// [75]  vue.SetStateSingle(showKey, True) 
_B._vue.setstatesingle(_B._showkey,true);
// [76]  Return Me 
return _B;
// End Sub
};

// [79] Sub Hide As VMElement 
_B.hide=function() {
// [80]  vue.SetStateSingle(showKey, False) 
_B._vue.setstatesingle(_B._showkey,false);
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub SetVisible(b As Boolean) As VMElement 
_B.setvisible=function(_b) {
// [85]  vue.SetStateSingle(showKey, b) 
_B._vue.setstatesingle(_B._showkey,_b);
// [86]  Return Me 
return _B;
// End Sub
};

// [89] Sub SetPlaceholder(varPlaceholder As String) As VMElement 
_B.setplaceholder=function(_varplaceholder) {
// [90]  Element.SetAttrPlaceHolder(varPlaceholder) 
_B._element.setattrplaceholder(_varplaceholder);
// [91]  Return Me 
return _B;
// End Sub
};

// [94] Sub SetAttr1(attr As String, val As Object) As VMElement 
_B.setattr1=function(_attr,_val) {
var _opt;
// [95]  Dim opt As Map = CreateMap() 
_opt={};
// [96]  opt.Put(attr, val) 
_opt[_attr]=_val;
// [97]  SetAttr(opt) 
_B.setattr(_opt,_B);
// [98]  Return Me 
return _B;
// End Sub
};

// [101] Sub MakePx(sValue As String) As String 
_B.makepx=function(_svalue) {
// [102]  Return Element.MakePx(sValue) 
return _B._element.makepx(_svalue);
// End Sub
};

// [105] Sub SetFor(f As String) As VMElement 
_B.setfor=function(_f) {
// [106]  Element.SetAttr( {41} , f) 
_B._element.setattr("for",_f);
// [107]  Return Me 
return _B;
// End Sub
};

// [110] Sub SetVCloak As VMElement 
_B.setvcloak=function() {
// [111]  Element.setvcloak 
_B._element.setvcloak();
// [112]  Return Me 
return _B;
// End Sub
};

// [115] Sub SetNotSelectible As VMElement 
_B.setnotselectible=function() {
// [116]  Element.AddClass( {42} ) 
_B._element.addclass("gj-unselectable");
// [117]  Return Me 
return _B;
// End Sub
};

// [120] Sub SetTabIndex(ti As String) As VMElement 
_B.settabindex=function(_ti) {
// [121]  Element.SetTabIndex(ti) 
_B._element.settabindex(_ti);
// [122]  Return Me 
return _B;
// End Sub
};

// [125] Sub SetMethodPost As VMElement 
_B.setmethodpost=function() {
// [126]  SetAttr(CreateMap( {43} : {44} )) 
_B.setattr({"method":"POST"},_B);
// [127]  Return Me 
return _B;
// End Sub
};

// [130] Sub SetDraggable(b As Boolean) As VMElement 
_B.setdraggable=function(_b) {
// [131]  SetAttr(CreateMap( {45} :b)) 
_B.setattr({":draggable":_b},_B);
// [132]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetDroppable(b As Boolean) As VMElement 
_B.setdroppable=function(_b) {
// [136]  SetAttr(CreateMap( {46} :b)) 
_B.setattr({":droppable":_b},_B);
// [137]  Return Me 
return _B;
// End Sub
};

// [141] Sub SetWidth(w As String) As VMElement 
_B.setwidth=function(_w) {
// [142]  SetStyle(CreateMap( {47} :w)) 
_B.setstyle({"width":_w},_B);
// [143]  Return Me 
return _B;
// End Sub
};

// [146] Sub SetHeight(h As String) As VMElement 
_B.setheight=function(_h) {
// [147]  SetStyle(CreateMap( {48} :h)) 
_B.setstyle({"height":_h},_B);
// [148]  Return Me 
return _B;
// End Sub
};

// [152] Sub SetBorder(width As String, color As String, bstyle As String) As VMElement 
_B.setborder=function(_width,_color,_bstyle) {
var _b;
// [153]  Dim b As Map = CreateMap() 
_b={};
// [154]  b.Put( {49} , bstyle) 
_b["border-style"]=_bstyle;
// [155]  b.Put( {50} , width) 
_b["border-width"]=_width;
// [156]  b.Put( {51} , color) 
_b["border-color"]=_color;
// [157]  SetStyle(b) 
_B.setstyle(_b,_B);
// [158]  Return Me 
return _B;
// End Sub
};

// [162] Sub SetCursorMove As VMElement 
_B.setcursormove=function() {
// [163]  SetStyle(CreateMap( {52} : {53} )) 
_B.setstyle({"cursor":"move"},_B);
// [164]  Return Me 
return _B;
// End Sub
};

// [167] Sub SetCursorPointer As VMElement 
_B.setcursorpointer=function() {
// [168]  SetStyle(CreateMap( {54} : {55} )) 
_B.setstyle({"cursor":"pointer"},_B);
// [169]  Return Me 
return _B;
// End Sub
};

// [172] Sub SetTextAlignCenter As VMElement 
_B.settextaligncenter=function() {
// [173]  SetStyle(CreateMap( {56} : {57} )) 
_B.setstyle({"text-align":"center"},_B);
// [174]  Return Me 
return _B;
// End Sub
};

// [178] Sub Clear As VMElement 
_B.clear=function() {
// [179]  Element.clear 
_B._element.clear();
// [180]  Return Me 
return _B;
// End Sub
};

// [183] Sub SetSlot(sltValue As String) As VMElement 
_B.setslot=function(_sltvalue) {
// [184]  Element.SetAttr( {58} , sltValue) 
_B._element.setattr("slot",_sltvalue);
// [185]  Return Me 
return _B;
// End Sub
};

// [188] Sub SetTerm(term As String) As VMElement 
_B.setterm=function(_term) {
// [189]  Element.SetAttr( {59} , term) 
_B._element.setattr(":md-term",_term);
// [190]  Return Me 
return _B;
// End Sub
};

// [193] Sub SetSlotScope(sltValue As String) As VMElement 
_B.setslotscope=function(_sltvalue) {
// [194]  Element.SetAttr( {60} , sltValue) 
_B._element.setattr("slot-scope",_sltvalue);
// [195]  Return Me 
return _B;
// End Sub
};

// [198] Sub SetType(typeof As String) As VMElement 
_B.settype=function(_typeof) {
// [199]  Element.SetAttr( {61} , typeof) 
_B._element.setattr("type",_typeof);
// [200]  Return Me 
return _B;
// End Sub
};

// [203] Sub RemoveClass(className As String) As VMElement 
_B.removeclass=function(_classname) {
// [204]  Element.removeClass(className) 
_B._element.removeclass(_classname);
// [205]  Return Me 
return _B;
// End Sub
};

// [208] Sub SetExact(b As Boolean) As VMElement 
_B.setexact=function(_b) {
// [209]  If b Then SetAttr(CreateMap( {62} : b)) 
if (_b) {_B.setattr({"exact":_b},_B);}
// [210]  Return Me 
return _B;
// End Sub
};

// [213] Sub SetOnMouseOut(module As Object, methodName As String) As VMElement 
_B.setonmouseout=function(_module,_methodname) {
var _e,_cb;
// [214]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [215]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [216]  SetAttr(CreateMap( {63} : methodName)) 
_B.setattr({"v-on:mouseout":_methodname},_B);
// [217]  Dim e As BANanoEvent 
_e=null;
// [218]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [219]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [220]  Return Me 
return _B;
// End Sub
};

// [223] Sub SetOnMouseOver(module As Object, methodName As String) As VMElement 
_B.setonmouseover=function(_module,_methodname) {
var _e,_cb;
// [224]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [225]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [226]  SetAttr(CreateMap( {64} : methodName)) 
_B.setattr({"v-on:mouseover":_methodname},_B);
// [227]  Dim e As BANanoEvent 
_e=null;
// [228]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [229]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [230]  Return Me 
return _B;
// End Sub
};

// [233] Sub SetKey(k As Object, bind As Boolean) As VMElement 
_B.setkey=function(_k,_bind) {
// [234]  If bind Then 
if (_bind) {
// [235]  RemoveAttr( {65} ) 
_B.removeattr("key",_B);
// [236]  Element.SetAttr( {66} , k) 
_B._element.setattr(":key",_k);
// [237]  Else 
} else {
// [238]  RemoveAttr( {67} ) 
_B.removeattr(":key",_B);
// [239]  Element.SetAttr( {68} , k) 
_B._element.setattr("key",_k);
// [240]  End If 
}
// [241]  Return Me 
return _B;
// End Sub
};

// [244] Sub SetIs(t As String) As VMElement 
_B.setis=function(_t) {
// [245]  t = t.tolowercase 
_t=_t.toLowerCase();
// [246]  SetAttr(CreateMap( {69} : t)) 
_B.setattr({":is":_t},_B);
// [247]  Return Me 
return _B;
// End Sub
};

// [251] Sub SetRef(varRef As String) As VMElement 
_B.setref=function(_varref) {
// [252]  If varRef <> {70} Then 
if (_varref!="") {
// [253]  SetAttr(CreateMap( {71} : varRef)) 
_B.setattr({"ref":_varref},_B);
// [254]  End If 
}
// [255]  Return Me 
return _B;
// End Sub
};

// [258] Sub SetVText(t As Object) As VMElement 
_B.setvtext=function(_t) {
// [259]  SetAttr(CreateMap( {72} : t)) 
_B.setattr({"v-text":_t},_B);
// [260]  Return Me 
return _B;
// End Sub
};

// [263] Sub SetVElse(t As Object) As VMElement 
_B.setvelse=function(_t) {
// [264]  SetAttr(CreateMap( {73} : t)) 
_B.setattr({"v-else":_t},_B);
// [265]  Return Me 
return _B;
// End Sub
};

// [268] Sub SetVElseIf(t As Object) As VMElement 
_B.setvelseif=function(_t) {
// [269]  SetAttr(CreateMap( {74} : t)) 
_B.setattr({"v-else-if":_t},_B);
// [270]  Return Me 
return _B;
// End Sub
};

// [273] Sub SetVOn(t As Object) As VMElement 
_B.setvon=function(_t) {
// [274]  SetAttr(CreateMap( {75} : t)) 
_B.setattr({"v-on":_t},_B);
// [275]  Return Me 
return _B;
// End Sub
};

// [278] Sub SetVBind(t As String) As VMElement 
_B.setvbind=function(_t) {
// [279]  t = t.tolowercase 
_t=_t.toLowerCase();
// [280]  SetAttr(CreateMap( {76} : t)) 
_B.setattr({"v-bind":_t},_B);
// [281]  Return Me 
return _B;
// End Sub
};

// [284] Sub SetVBindIs(t As String) As VMElement 
_B.setvbindis=function(_t) {
// [285]  t = t.tolowercase 
_t=_t.toLowerCase();
// [286]  SetAttr(CreateMap( {77} : t)) 
_B.setattr({"v-bind:is":_t},_B);
// [287]  Return Me 
return _B;
// End Sub
};

// [290] Sub SetVOnce(t As Object) As VMElement 
_B.setvonce=function(_t) {
// [291]  SetAttr(CreateMap( {78} : t)) 
_B.setattr({"v-once":_t},_B);
// [292]  Return Me 
return _B;
// End Sub
};

// [297] Sub SetVFor(item As String, dataSource As String) As VMElement 
_B.setvfor=function(_item,_datasource) {
var _sline;
// [298]  dataSource = dataSource.tolowercase 
_datasource=_datasource.toLowerCase();
// [299]  item = item.tolowercase 
_item=_item.toLowerCase();
// [300]  If vue.StateExists(dataSource) = False Then vue.SetStateSingle(dataSource, Array()) 
if (_B._vue.stateexists(_datasource)==false) {_B._vue.setstatesingle(_datasource,[]);}
// [301]  Dim sline As String = {4} 
_sline="" + _item + " in " + _datasource + "";
// [302]  SetAttr(CreateMap( {79} : sline)) 
_B.setattr({"v-for":_sline},_B);
// [303]  RemoveAttr( {80} ) 
_B.removeattr("ref",_B);
// [304]  Return Me 
return _B;
// End Sub
};

// [308] Sub SetValue(valueName As String, bind As Boolean) As VMElement 
_B.setvalue=function(_valuename,_bind) {
// [309]  If bind Then 
if (_bind) {
// [310]  RemoveAttr( {81} ) 
_B.removeattr("value",_B);
// [311]  valueName = valueName.tolowercase 
_valuename=_valuename.toLowerCase();
// [312]  SetAttr(CreateMap( {82} :valueName)) 
_B.setattr({":value":_valuename},_B);
// [313]  Else 
} else {
// [314]  RemoveAttr( {83} ) 
_B.removeattr(":value",_B);
// [315]  SetAttr(CreateMap( {84} :valueName)) 
_B.setattr({"value":_valuename},_B);
// [316]  End If 
}
// [317]  Return Me 
return _B;
// End Sub
};

// [321] Sub SetTemplate(tmp As Object) As VMElement 
_B.settemplate=function(_tmp) {
// [322]  Element.Clear 
_B._element.clear();
// [323]  Element.SetText(tmp) 
_B._element.settext(_tmp);
// [324]  Return Me 
return _B;
// End Sub
};

// [327] Sub SetVHtml(h As String) As VMElement 
_B.setvhtml=function(_h) {
// [328]  If h = {85} Then Return Me 
if (_h=="") { return _B;}
// [329]  h = h.tolowercase 
_h=_h.toLowerCase();
// [330]  Element.SetAttr( {86} , h) 
_B._element.setattr("v-html",_h);
// [331]  Return Me 
return _B;
// End Sub
};

// [334] Sub SetAutoComplete(auto As String) As VMElement 
_B.setautocomplete=function(_auto) {
// [335]  SetAttr(CreateMap( {87} : auto)) 
_B.setattr({"autocomplete":_auto},_B);
// [336]  Return Me 
return _B;
// End Sub
};

// [346] Sub SetName(n As String, bind As Boolean) As VMElement 
_B.setname=function(_n,_bind) {
// [347]  If bind Then 
if (_bind) {
// [348]  RemoveAttr( {91} ) 
_B.removeattr("name",_B);
// [349]  SetAttr(CreateMap( {92} : n)) 
_B.setattr({":name":_n},_B);
// [350]  Else 
} else {
// [351]  RemoveAttr( {93} ) 
_B.removeattr(":name",_B);
// [352]  SetAttr(CreateMap( {94} : n)) 
_B.setattr({"name":_n},_B);
// [353]  End If 
}
// [354]  Return Me 
return _B;
// End Sub
};

// [357] public Sub RemoveAttr(sName As String) As VMElement 
_B.removeattr=function(_sname) {
// [358]  Element.RemoveAttr(sName) 
_B._element.removeattr(_sname);
// [359]  Return Me 
return _B;
// End Sub
};

// [362] Sub SetID(n As String, bind As Boolean) As VMElement 
_B.setid=function(_n,_bind) {
// [363]  If bind Then 
if (_bind) {
// [364]  RemoveAttr( {95} ) 
_B.removeattr("id",_B);
// [365]  SetAttr(CreateMap( {96} : n)) 
_B.setattr({":id":_n},_B);
// [366]  Else 
} else {
// [367]  RemoveAttr( {97} ) 
_B.removeattr(":id",_B);
// [368]  SetAttr(CreateMap( {98} : n)) 
_B.setattr({"id":_n},_B);
// [369]  End If 
}
// [370]  Return Me 
return _B;
// End Sub
};

// [373] Sub SetVIf(vif As String) As VMElement 
_B.setvif=function(_vif) {
// [374]  vif = vif.ToLowerCase 
_vif=_vif.toLowerCase();
// [375]  If vue.HasState(vif) = False Then vue.SetStateFalse(vif) 
if (_B._vue.hasstate(_vif)==false) {_B._vue.setstatefalse(_vif);}
// [376]  Element.SetVIf(vif) 
_B._element.setvif(_vif);
// [377]  Return Me 
return _B;
// End Sub
};

// [380] Sub SetVShow(vif As String) As VMElement 
_B.setvshow=function(_vif) {
// [381]  vif = vif.ToLowerCase 
_vif=_vif.toLowerCase();
// [382]  If vue.HasState(vif) = False Then vue.SetStateFalse(vif) 
if (_B._vue.hasstate(_vif)==false) {_B._vue.setstatefalse(_vif);}
// [383]  Element.SetVShow(vif) 
_B._element.setvshow(_vif);
// [384]  Return Me 
return _B;
// End Sub
};

// [389] Sub AddBR 
_B.addbr=function() {
// [390]  SetText( {99} ) 
_B.settext("<br>",_B);
// End Sub
};

// [394] Sub AddHR 
_B.addhr=function() {
// [395]  SetText( {100} ) 
_B.settext("<hr>",_B);
// End Sub
};

// [399] Sub AddClass(c As String) As VMElement 
_B.addclass=function(_c) {
// [400]  Element.AddClass(c) 
_B._element.addclass(_c);
// [401]  Return Me 
return _B;
// End Sub
};

// [405] Sub Render1(parent As String) 
_B.render1=function(_parent) {
// [406]  BANano.GetElement(parent).Append(ToString) 
u(_parent).append(_B.tostring(_B));
// End Sub
};

// [410] Sub Pop1(p As VMElement) 
_B.pop1=function(_p) {
// [411]  p.AddChild(Me) 
_p.addchild(_B);
// End Sub
};

// [415] Sub SetColor(c As Object) As VMElement 
_B.setcolor=function(_c) {
// [416]  SetStyle(CreateMap( {101} : c)) 
_B.setstyle({"color":_c},_B);
// [417]  Return Me 
return _B;
// End Sub
};

// [420] Sub SetStyle(m As Map) As VMElement 
_B.setstyle=function(_m) {
// [421]  Element.SetStyles(m) 
_B._element.setstyles(_m);
// [422]  Return Me 
return _B;
// End Sub
};

// [426] Sub AddChild(child As VMElement) As VMElement 
_B.addchild=function(_child) {
var _childhtml;
// [427]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [428]  Element.SetText(childHTML) 
_B._element.settext(_childhtml);
// [429]  hasContent = True 
_B._hascontent=true;
// [430]  Return Me 
return _B;
// End Sub
};

// [434] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [435]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [436]  AddChild(childx) 
_B.addchild(_childx,_B);
// [437]  Next 
}
// End Sub
};

// [441] Sub SetBackgroundColor(p As Object) As VMElement 
_B.setbackgroundcolor=function(_p) {
// [442]  SetStyle(CreateMap( {102} :p)) 
_B.setstyle({"background-color":_p},_B);
// [443]  Return Me 
return _B;
// End Sub
};

// [446] Sub SetMarginAll(p As Object) As VMElement 
_B.setmarginall=function(_p) {
// [447]  SetStyle(CreateMap( {103} :p)) 
_B.setstyle({"margin":_p},_B);
// [448]  Return Me 
return _B;
// End Sub
};

// [451] Sub SetPaddingAll(p As Object) As VMElement 
_B.setpaddingall=function(_p) {
// [452]  SetStyle(CreateMap( {104} :p)) 
_B.setstyle({"padding":_p},_B);
// [453]  Return Me 
return _B;
// End Sub
};

// [456] Sub SetLayoutColumn(b As Boolean) As VMElement 
_B.setlayoutcolumn=function(_b) {
// [457]  Element.AddClass( {105} ) 
_B._element.addclass("md-layout-column");
// [458]  Return Me 
return _B;
// End Sub
};

// [462] Sub SetDoubleLine(b As Boolean) As VMElement 
_B.setdoubleline=function(_b) {
// [463]  Element.AddClass( {106} ) 
_B._element.addclass("md-double-line");
// [464]  Return Me 
return _B;
// End Sub
};

// [468] Sub SetInset(b As Boolean) As VMElement 
_B.setinset=function(_b) {
// [469]  If b Then Element.AddClass( {107} ) 
if (_b) {_B._element.addclass("md-inset");}
// [470]  Return Me 
return _B;
// End Sub
};

// [473] Sub SetTagDialogActions(b As Boolean) As VMElement 
_B.settagdialogactions=function(_b) {
// [474]  Element.SetTag( {108} ) 
_B._element.settag("md-dialog-actions");
// [475]  Return Me 
return _B;
// End Sub
};

// [478] Sub SetMaxWidth(mw As String) As VMElement 
_B.setmaxwidth=function(_mw) {
// [479]  Element.SetStyle( {109} ,mw) 
_B._element.setstyle("max-width",_mw);
// [480]  Return Me 
return _B;
// End Sub
};

// [483] Sub SetMaxHeight(mw As String) As VMElement 
_B.setmaxheight=function(_mw) {
// [484]  Element.SetStyle( {110} ,mw) 
_B._element.setstyle("max-height",_mw);
// [485]  Return Me 
return _B;
// End Sub
};

// [488] Sub SetTagDialogTitle(b As Boolean) As VMElement 
_B.settagdialogtitle=function(_b) {
// [489]  Element.SetTag( {111} ) 
_B._element.settag("md-dialog-title");
// [490]  Return Me 
return _B;
// End Sub
};

// [493] Sub SetActiveSync(a As String) As VMElement 
_B.setactivesync=function(_a) {
var _state;
// [494]  a = a.tolowercase 
_a=_a.toLowerCase();
// [495]  Element.SetAttr( {112} , a) 
_B._element.setattr(":md-active.sync",_a);
// [496]  Dim state As Map = CreateMap() 
_state={};
// [497]  state.Put(a, False) 
_state[_a]=false;
// [498]  vue.SetState(state) 
_B._vue.setstate(_state);
// [499]  Return Me 
return _B;
// End Sub
};

// [502] Sub SetTo(t As Object) As VMElement 
_B.setto=function(_t) {
// [503]  Element.SetAttr( {113} , t) 
_B._element.setattr("to",_t);
// [504]  Return Me 
return _B;
// End Sub
};

// [507] Sub SetDense(b As Boolean) As VMElement 
_B.setdense=function(_b) {
// [508]  Element.AddClass( {114} ) 
_B._element.addclass("md-dense");
// [509]  Return Me 
return _B;
// End Sub
};

// [512] Sub SetHREF(h As String) As VMElement 
_B.sethref=function(_h) {
// [513]  Element.SetAttrHREF(h) 
_B._element.setattrhref(_h);
// [514]  Return Me 
return _B;
// End Sub
};

// [517] Sub SetDisabled(b As Boolean) As VMElement 
_B.setdisabled=function(_b) {
// [518]  vue.SetStatesingle(disKey, b) 
_B._vue.setstatesingle(_B._diskey,_b);
// [519]  Element.SetAttr( {115} , disKey) 
_B._element.setattr(":disabled",_B._diskey);
// [520]  Return Me 
return _B;
// End Sub
};

// [523] Sub SetRequired(b As Boolean) As VMElement 
_B.setrequired=function(_b) {
// [524]  vue.SetStateSingle(reqKey, b) 
_B._vue.setstatesingle(_B._reqkey,_b);
// [525]  Element.SetAttr( {116} , reqKey) 
_B._element.setattr(":required",_B._reqkey);
// [526]  Return Me 
return _B;
// End Sub
};

// [529] Sub SetAccent(b As Boolean) As VMElement 
_B.setaccent=function(_b) {
// [530]  Element.AddClass( {117} ) 
_B._element.addclass("md-accent");
// [531]  Return Me 
return _B;
// End Sub
};

// [534] Sub SetRipple(b As Boolean) As VMElement 
_B.setripple=function(_b) {
// [535]  Element.SetAttr( {118} , b) 
_B._element.setattr(":md-ripple",_b);
// [536]  Return Me 
return _B;
// End Sub
};

// [539] Sub SetMedium(b As Boolean) As VMElement 
_B.setmedium=function(_b) {
// [540]  If b Then Element.AddClass( {119} ) 
if (_b) {_B._element.addclass("md-medium");}
// [541]  Return Me 
return _B;
// End Sub
};

// [544] Sub SetLarge(b As Boolean) As VMElement 
_B.setlarge=function(_b) {
// [545]  Element.AddClass( {120} ) 
_B._element.addclass("md-large");
// [546]  Return Me 
return _B;
// End Sub
};

// [550] Sub SetWaterfall(b As Boolean) As VMElement 
_B.setwaterfall=function(_b) {
// [551]  Element.SetAttr( {121} , b) 
_B._element.setattr(":md-waterfall",_b);
// [552]  Return Me 
return _B;
// End Sub
};

// [555] Sub SetAttr(m As Map) As VMElement 
_B.setattr=function(_m) {
var _k,_v;
// [556]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [557]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [558]  Element.SetAttr(k, v) 
_B._element.setattr(_k,_v);
// [559]  Next 
}
// [560]  Return Me 
return _B;
// End Sub
};

// [563] Sub SetScrollBar(b As Boolean) As VMElement 
_B.setscrollbar=function(_b) {
// [564]  Element.AddClass( {122} ) 
_B._element.addclass("md-scrollbar");
// [565]  Return Me 
return _B;
// End Sub
};

// [568] Sub SetBackgroundImage(url As String) As VMElement 
_B.setbackgroundimage=function(_url) {
// [569]  Element.SetStyle( {123} , {5} ) 
_B._element.setstyle("background-image","url('" + _url + "')");
// [570]  Element.SetStyle( {124} , {125} ) 
_B._element.setstyle("background-size","100% 100%");
// [571]  Return Me 
return _B;
// End Sub
};

// [574] Sub SetTagAppContent(b As Boolean) As VMElement 
_B.settagappcontent=function(_b) {
// [575]  Element.SetTag( {126} ) 
_B._element.settag("md-app-content");
// [576]  Return Me 
return _B;
// End Sub
};

// [579] Sub SetDisplay4(b As Boolean) As VMElement 
_B.setdisplay4=function(_b) {
// [580]  Element.AddClass( {127} ) 
_B._element.addclass("md-display-4");
// [581]  Return Me 
return _B;
// End Sub
};

// [584] Sub SetDisplay3(b As Boolean) As VMElement 
_B.setdisplay3=function(_b) {
// [585]  Element.AddClass( {128} ) 
_B._element.addclass("md-display-3");
// [586]  Return Me 
return _B;
// End Sub
};

// [589] Sub SetDisplay2(b As Boolean) As VMElement 
_B.setdisplay2=function(_b) {
// [590]  Element.AddClass( {129} ) 
_B._element.addclass("md-display-2");
// [591]  Return Me 
return _B;
// End Sub
};

// [594] Sub SetDisplay1(b As Boolean) As VMElement 
_B.setdisplay1=function(_b) {
// [595]  Element.AddClass( {130} ) 
_B._element.addclass("md-display-1");
// [596]  Return Me 
return _B;
// End Sub
};

// [600] Sub SetHeadline(b As Boolean) As VMElement 
_B.setheadline=function(_b) {
// [601]  Element.AddClass( {131} ) 
_B._element.addclass("md-headline");
// [602]  Return Me 
return _B;
// End Sub
};

// [606] Sub SetTitle(b As Boolean) As VMElement 
_B.settitle=function(_b) {
// [607]  Element.AddClass( {132} ) 
_B._element.addclass("md-title");
// [608]  Return Me 
return _B;
// End Sub
};

// [611] Sub SetAppContent(b As Boolean) As VMElement 
_B.setappcontent=function(_b) {
// [612]  Element.SetTag( {133} ) 
_B._element.settag("md-app-content");
// [613]  Return Me 
return _B;
// End Sub
};

// [616] Sub SetTransparent(b As Boolean) As VMElement 
_B.settransparent=function(_b) {
// [617]  Element.AddClass( {134} ) 
_B._element.addclass("md-transparent");
// [618]  Return Me 
return _B;
// End Sub
};

// [621] Sub SetSRC(s As String, bind As Boolean) As VMElement 
_B.setsrc=function(_s,_bind) {
// [622]  If bind Then 
if (_bind) {
// [623]  SetAttr(CreateMap( {135} :s)) 
_B.setattr({":src":_s},_B);
// [624]  Else 
} else {
// [625]  SetAttr(CreateMap( {136} :s)) 
_B.setattr({"src":_s},_B);
// [626]  End If 
}
// [627]  Return Me 
return _B;
// End Sub
};

// [630] Sub SetAlt(a As String) As VMElement 
_B.setalt=function(_a) {
// [631]  Element.SetAlt(a) 
_B._element.setalt(_a);
// [632]  Return Me 
return _B;
// End Sub
};

// [635] Sub SetVerticalAlignMiddle As VMElement 
_B.setverticalalignmiddle=function() {
// [636]  SetStyle(CreateMap( {137} : {138} )) 
_B.setstyle({"vertical-align":"middle"},_B);
// [637]  Return Me 
return _B;
// End Sub
};

// [640] Sub SetLineHeight(lh As Object) As VMElement 
_B.setlineheight=function(_lh) {
// [641]  SetStyle(CreateMap( {139} : lh)) 
_B.setstyle({"line-height":_lh},_B);
// [642]  Return Me 
return _B;
// End Sub
};

// [645] Sub SetPermanentFull(b As Boolean) As VMElement 
_B.setpermanentfull=function(_b) {
// [646]  Element.SetAttr( {140} , {141} ) 
_B._element.setattr("md-permanent","full");
// [647]  Return Me 
return _B;
// End Sub
};

// [650] Sub SetIconButton(b As Boolean) As VMElement 
_B.seticonbutton=function(_b) {
// [651]  Element.AddClass( {142} ) 
_B._element.addclass("md-icon-button");
// [652]  Return Me 
return _B;
// End Sub
};

// [655] Sub SetListAction(b As Boolean) As VMElement 
_B.setlistaction=function(_b) {
// [656]  Element.AddClass( {143} ) 
_B._element.addclass("md-list-action");
// [657]  Return Me 
return _B;
// End Sub
};

// [660] Sub SetTagIcon(b As Boolean) As VMElement 
_B.settagicon=function(_b) {
// [661]  Element.SetTag( {144} ) 
_B._element.settag("md-icon");
// [662]  Return Me 
return _B;
// End Sub
};

// [665] Sub SetTagListItem(b As Boolean) As VMElement 
_B.settaglistitem=function(_b) {
// [666]  Element.settag( {145} ) 
_B._element.settag("md-list-item");
// [667]  Return Me 
return _B;
// End Sub
};

// [670] Sub SetTagSpan(b As Boolean) As VMElement 
_B.settagspan=function(_b) {
// [671]  Element.SetTag( {146} ) 
_B._element.settag("span");
// [672]  Return Me 
return _B;
// End Sub
};

// [675] Sub SetListItemText(b As Boolean) As VMElement 
_B.setlistitemtext=function(_b) {
// [676]  Element.AddClass( {147} ) 
_B._element.addclass("md-list-item-text");
// [677]  Return Me 
return _B;
// End Sub
};

// [680] Sub SetElevation(e As Int) As VMElement 
_B.setelevation=function(_e) {
// [681]  Element.addclass( {6} ) 
_B._element.addclass("md-elevation-" + _e + "");
// [682]  Return Me 
return _B;
// End Sub
};

// [685] Sub SetPrimary(b As Boolean) As VMElement 
_B.setprimary=function(_b) {
// [686]  Element.AddClass( {148} ) 
_B._element.addclass("md-primary");
// [687]  Return Me 
return _B;
// End Sub
};

// [691] Sub SetSubHeading(b As Boolean) As VMElement 
_B.setsubheading=function(_b) {
// [692]  Element.AddClass( {149} ) 
_B._element.addclass("md-subheading");
// [693]  Return Me 
return _B;
// End Sub
};

// [697] Sub SetSubHead(b As Boolean) As VMElement 
_B.setsubhead=function(_b) {
// [698]  Element.AddClass( {150} ) 
_B._element.addclass("md-subhead");
// [699]  Return Me 
return _B;
// End Sub
};

// [704] Sub SetTagSubHeader(b As Boolean) As VMElement 
_B.settagsubheader=function(_b) {
// [705]  Element.SetTag( {151} ) 
_B._element.settag("md-subheader");
// [706]  Return Me 
return _B;
// End Sub
};

// [710] Sub SetBody2(b As Boolean) As VMElement 
_B.setbody2=function(_b) {
// [711]  Element.AddClass( {152} ) 
_B._element.addclass("md-body-2");
// [712]  Return Me 
return _B;
// End Sub
};

// [717] Sub SetBody1(b As Boolean) As VMElement 
_B.setbody1=function(_b) {
// [718]  Element.AddClass( {153} ) 
_B._element.addclass("md-body-1");
// [719]  Return Me 
return _B;
// End Sub
};

// [724] Sub SetCaption(b As Boolean) As VMElement 
_B.setcaption=function(_b) {
// [725]  Element.AddClass( {154} ) 
_B._element.addclass("md-caption");
// [726]  Return Me 
return _B;
// End Sub
};

// [730] Sub SetHidden(xsmall As Boolean, small As Boolean, medium As Boolean, large As Boolean, xlarge As Boolean) As VMElement 
_B.sethidden=function(_xsmall,_small,_medium,_large,_xlarge) {
var _sizes,_strsizes;
// [731]  Dim sizes As List 
_sizes=[];
// [732]  sizes.Initialize 
_sizes.length=0;
// [734]  If xsmall Then 
if (_xsmall) {
// [735]  sizes.Add( {7} ) 
_sizes.push("md-xsmall-hide");
// [736]  End If 
}
// [738]  If small Then 
if (_small) {
// [739]  sizes.Add( {8} ) 
_sizes.push("md-small-hide");
// [740]  End If 
}
// [742]  If medium Then 
if (_medium) {
// [743]  sizes.Add( {9} ) 
_sizes.push("md-medium-hide");
// [744]  End If 
}
// [746]  If large Then 
if (_large) {
// [747]  sizes.Add( {10} ) 
_sizes.push("md-large-hide");
// [748]  End If 
}
// [750]  If xlarge Then 
if (_xlarge) {
// [751]  sizes.Add( {11} ) 
_sizes.push("md-xlarge-hide");
// [752]  End If 
}
// [754]  Dim strSizes As String = Element.join( {155} , sizes) 
_strsizes=_B._element.join(" ",_sizes);
// [755]  Element.AddClass(strSizes) 
_B._element.addclass(_strsizes);
// [756]  Return Me 
return _B;
// End Sub
};

// [759] Sub SetSizes(xsmall As Int, small As Int, medium As Int, large As Int, xlarge As Int) As VMElement 
_B.setsizes=function(_xsmall,_small,_medium,_large,_xlarge) {
var _sizes,_eachcell,_eachsize,_xsmalld,_smalld,_mediumd,_larged,_xlarged,_strsizes;
// [760]  Dim sizes As List 
_sizes=[];
// [761]  sizes.Initialize 
_sizes.length=0;
// [762]  Dim eachCell As Double = 8.33 
_eachcell=8.33;
// [763]  Dim eachSize As String 
_eachsize="";
// [765]  If xsmall > 0 Then 
if (_xsmall>0) {
// [766]  Dim xsmallD As Double = xsmall * BANano.parseFloat(eachCell) 
_xsmalld=_xsmall*parseFloat(_eachcell);
// [767]  xsmallD = Round(BANano.parseFloat(xsmallD)) 
_xsmalld=Math.round(parseFloat(_xsmalld));
// [768]  eachSize = {12} 
_eachsize="md-xsmall-size-" + _xsmalld + "";
// [769]  sizes.Add(eachSize) 
_sizes.push(_eachsize);
// [770]  End If 
}
// [772]  If small > 0 Then 
if (_small>0) {
// [773]  Dim smallD As Double = small * BANano.parseFloat(eachCell) 
_smalld=_small*parseFloat(_eachcell);
// [774]  smallD = Round(BANano.parseFloat(smallD)) 
_smalld=Math.round(parseFloat(_smalld));
// [775]  eachSize = {13} 
_eachsize="md-small-size-" + _smalld + "";
// [776]  sizes.Add(eachSize) 
_sizes.push(_eachsize);
// [777]  End If 
}
// [779]  If medium > 0 Then 
if (_medium>0) {
// [780]  Dim mediumD As Double = medium * BANano.parseFloat(eachCell) 
_mediumd=_medium*parseFloat(_eachcell);
// [781]  mediumD = Round(BANano.parseFloat(mediumD)) 
_mediumd=Math.round(parseFloat(_mediumd));
// [782]  eachSize = {14} 
_eachsize="md-medium-size-" + _mediumd + "";
// [783]  sizes.Add(eachSize) 
_sizes.push(_eachsize);
// [784]  End If 
}
// [786]  If large > 0 Then 
if (_large>0) {
// [787]  Dim largeD As Double = large * BANano.parseFloat(eachCell) 
_larged=_large*parseFloat(_eachcell);
// [788]  largeD = Round(BANano.parseFloat(largeD)) 
_larged=Math.round(parseFloat(_larged));
// [789]  eachSize = {15} 
_eachsize="md-large-size-" + _larged + "";
// [790]  sizes.Add(eachSize) 
_sizes.push(_eachsize);
// [791]  End If 
}
// [793]  If xlarge > 0 Then 
if (_xlarge>0) {
// [794]  Dim xlargeD As Double = xlarge * BANano.parseFloat(eachCell) 
_xlarged=_xlarge*parseFloat(_eachcell);
// [795]  xlargeD = Round(BANano.parseFloat(xlargeD)) 
_xlarged=Math.round(parseFloat(_xlarged));
// [796]  eachSize = {16} 
_eachsize="md-xlarge-size-" + _xlarged + "";
// [797]  sizes.Add(eachSize) 
_sizes.push(_eachsize);
// [798]  End If 
}
// [800]  Dim strSizes As String = Element.join( {156} , sizes) 
_strsizes=_B._element.join(" ",_sizes);
// [801]  Element.AddClass(strSizes) 
_B._element.addclass(_strsizes);
// [802]  Return Me 
return _B;
// End Sub
};

// [805] Sub SetSize(s As Int) As VMElement 
_B.setsize=function(_s) {
var _eachcell,_actsize;
// [806]  Dim eachCell As Double = 8.33 
_eachcell=8.33;
// [807]  Dim actSize As Double = s * BANano.parseFloat(eachCell) 
_actsize=_s*parseFloat(_eachcell);
// [808]  actSize = Round(BANano.parseFloat(actSize)) 
_actsize=Math.round(parseFloat(_actsize));
// [809]  Element.AddClass( {17} ) 
_B._element.addclass("md-size-" + _actsize + "");
// [810]  Return Me 
return _B;
// End Sub
};

// [813] Sub SetHelperText(t As String) As VMElement 
_B.sethelpertext=function(_t) {
var _ht;
// [814]  Dim ht As VMElement 
_ht= new banano_bananovuematerial_vmelement();
// [815]  ht.Initialize(vue, {18} ).SetTag( {157} ) 
_ht.initialize(_B._vue,"" + _B._id + "hlp").settag("span");
// [816]  ht.AddClass( {158} ) 
_ht.addclass("md-helper-text");
// [817]  ht.SetText(t) 
_ht.settext(_t);
// [818]  Return ht 
return _ht;
// End Sub
};

// [821] Sub SetErrorText(t As String) As VMElement 
_B.seterrortext=function(_t) {
var _errorshow,_he;
// [822]  Dim errorShow As String = {19} 
_errorshow="" + _B._id + "error";
// [823]  Dim he As VMElement 
_he= new banano_bananovuematerial_vmelement();
// [824]  he.Initialize(vue, {20} ).SetTag( {159} ) 
_he.initialize(_B._vue,"" + _B._id + "err").settag("span");
// [825]  he.AddClass( {160} ) 
_he.addclass("md-error");
// [826]  he.SetText(t) 
_he.settext(_t);
// [827]  Return he 
return _he;
// End Sub
};

// [831] Sub SetNoWrap(b As Boolean) As VMElement 
_B.setnowrap=function(_b) {
// [832]  Element.AddClass( {161} ) 
_B._element.addclass("md-layout-nowrap");
// [833]  Return Me 
return _B;
// End Sub
};

// [836] Sub SetVModel(k As String) As VMElement 
_B.setvmodel=function(_k) {
var _opt;
// [837]  k = k.tolowercase 
_k=_k.toLowerCase();
// [838]  If vue.HasState(k) = False Then 
if (_B._vue.hasstate(_k)==false) {
// [839]  Dim opt As Map = CreateMap() 
_opt={};
// [840]  opt.Put(k, Null) 
_opt[_k]=null;
// [841]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// [842]  End If 
}
// [843]  Element.SetAttr( {162} , k) 
_B._element.setattr("v-model",_k);
// [844]  Return Me 
return _B;
// End Sub
};

// [848] Sub SetTag(t As String) As VMElement 
_B.settag=function(_t) {
// [849]  Element.SetTag(t) 
_B._element.settag(_t);
// [850]  Return Me 
return _B;
// End Sub
};

// [853] Sub AddElements(lst As List) 
_B.addelements=function(_lst) {
var _li;
// [854]  For Each li As VMElement In lst 
for (var _liindex=0;_liindex<_lst.length;_liindex++) {
_li=_lst[_liindex];
// [855]  SetText(li.tostring) 
_B.settext(_li.tostring(),_B);
// [856]  Next 
}
// End Sub
};

// [859] Sub AddElement(el As VMElement) 
_B.addelement=function(_el) {
// [860]  SetText(el.ToString) 
_B.settext(_el.tostring(),_B);
// End Sub
};

// [863] Sub SetText(t As String) As VMElement 
_B.settext=function(_t) {
// [864]  Element.SetText(t) 
_B._element.settext(_t);
// [865]  hasContent = True 
_B._hascontent=true;
// [866]  Return Me 
return _B;
// End Sub
};

// [869] Sub SetGutter(b As Boolean) As VMElement 
_B.setgutter=function(_b) {
// [870]  Element.AddClass( {163} ) 
_B._element.addclass("md-gutter");
// [871]  Return Me 
return _B;
// End Sub
};

// [874] Sub SetLayout(b As Boolean) As VMElement 
_B.setlayout=function(_b) {
// [875]  Element.AddClass( {164} ) 
_B._element.addclass("md-layout");
// [876]  Return Me 
return _B;
// End Sub
};

// [880] Sub SetLayoutItem(b As Boolean) As VMElement 
_B.setlayoutitem=function(_b) {
// [881]  Element.AddClass( {165} ) 
_B._element.addclass("md-layout-item");
// [882]  Return Me 
return _B;
// End Sub
};

// [886] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [887]  p.Element.AddElement(Element) 
_p._element.addelement(_B._element);
// [888]  hasContent = True 
_B._hascontent=true;
// End Sub
};

// [891] Sub ToString As String 
_B.tostring=function() {
// [892]  Return Element.tostring 
return _B._element.tostring();
// End Sub
};

// [896] Sub Render 
_B.render=function() {
// [897]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [900] Sub SetOnCancel(module As Object, methodName As String) As VMElement 
_B.setoncancel=function(_module,_methodname) {
var _e,_cb;
// [901]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [902]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [903]  Dim e As BANanoEvent 
_e=null;
// [904]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [905]  SetAttr(CreateMap( {166} : methodName)) 
_B.setattr({"@md-cancel":_methodname},_B);
// [907]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [908]  Return Me 
return _B;
// End Sub
};

// [911] Sub SetOnConfirm(module As Object, methodName As String) As VMElement 
_B.setonconfirm=function(_module,_methodname) {
var _e,_cb;
// [912]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [913]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [914]  Dim e As BANanoEvent 
_e=null;
// [915]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [916]  SetAttr(CreateMap( {167} : methodName)) 
_B.setattr({"@md-confirm":_methodname},_B);
// [918]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [919]  Return Me 
return _B;
// End Sub
};

// [924] Sub SetOnInput(module As Object, methodName As String) As VMElement 
_B.setoninput=function(_module,_methodname) {
var _e,_cb;
// [925]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [926]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [927]  Dim e As BANanoEvent 
_e=null;
// [928]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [929]  SetAttr(CreateMap( {168} : methodName)) 
_B.setattr({"v-on:input":_methodname},_B);
// [931]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [932]  Return Me 
return _B;
// End Sub
};

// [936] Sub SetOnFocus(module As Object, methodName As String) As VMElement 
_B.setonfocus=function(_module,_methodname) {
var _e,_cb;
// [937]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [938]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [939]  Dim e As BANanoEvent 
_e=null;
// [940]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [941]  SetAttr(CreateMap( {169} : methodName)) 
_B.setattr({"v-on:focus":_methodname},_B);
// [943]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [944]  Return Me 
return _B;
// End Sub
};

// [947] Sub SetOnClear(module As Object, methodName As String) As VMElement 
_B.setonclear=function(_module,_methodname) {
var _e,_cb;
// [948]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [949]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [950]  Dim e As BANanoEvent 
_e=null;
// [951]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [952]  SetAttr(CreateMap( {170} : methodName)) 
_B.setattr({"v-on:md-clear":_methodname},_B);
// [954]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [955]  Return Me 
return _B;
// End Sub
};

// [959] Sub SetOnBlur(module As Object, methodName As String) As VMElement 
_B.setonblur=function(_module,_methodname) {
var _e,_cb;
// [960]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [961]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [962]  Dim e As BANanoEvent 
_e=null;
// [963]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [964]  SetAttr(CreateMap( {171} : methodName)) 
_B.setattr({"v-on:blur":_methodname},_B);
// [966]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [967]  Return Me 
return _B;
// End Sub
};

// [971] Sub SetPointer(b As Boolean) As VMElement 
_B.setpointer=function(_b) {
// [972]  Element.SetPointer(True) 
_B._element.setpointer(true);
// [973]  Return Me 
return _B;
// End Sub
};

// [977] Sub SetOnClick(module As Object, methodName As String) As VMElement 
_B.setonclick=function(_module,_methodname) {
var _e,_cb;
// [978]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [979]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [980]  Dim e As BANanoEvent 
_e=null;
// [981]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [982]  SetAttr(CreateMap( {172} : methodName)) 
_B.setattr({"v-on:click":_methodname},_B);
// [984]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [985]  SetPointer(True) 
_B.setpointer(true,_B);
// [986]  Return Me 
return _B;
// End Sub
};

// [990] Sub SetOnChange(module As Object, methodName As String) As VMElement 
_B.setonchange=function(_module,_methodname) {
var _e,_cb;
// [991]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [992]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [993]  Dim e As BANanoEvent 
_e=null;
// [994]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [995]  SetAttr(CreateMap( {173} : methodName)) 
_B.setattr({"v-on:change":_methodname},_B);
// [997]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [998]  Return Me 
return _B;
// End Sub
};

// [1003] Sub SetOnTouchStart(module As Object, methodName As String) As VMElement 
_B.setontouchstart=function(_module,_methodname) {
var _e,_cb;
// [1004]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1005]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [1006]  Dim e As BANanoEvent 
_e=null;
// [1007]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [1008]  SetAttr(CreateMap( {174} : methodName)) 
_B.setattr({"v-on:touchstart":_methodname},_B);
// [1010]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [1011]  Return Me 
return _B;
// End Sub
};

// [1014] Sub SetOnDragOver(module As Object, methodName As String) As VMElement 
_B.setondragover=function(_module,_methodname) {
var _e,_cb;
// [1015]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1016]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [1017]  Dim e As BANanoEvent 
_e=null;
// [1018]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [1019]  SetAttr(CreateMap( {175} : methodName)) 
_B.setattr({"v-on:dragover":_methodname},_B);
// [1021]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [1022]  Return Me 
return _B;
// End Sub
};

// [1025] Sub SetOnDragStart(module As Object, methodName As String) As VMElement 
_B.setondragstart=function(_module,_methodname) {
var _e,_cb;
// [1026]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1027]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [1028]  Dim e As BANanoEvent 
_e=null;
// [1029]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [1030]  SetAttr(CreateMap( {176} : methodName)) 
_B.setattr({"v-on:dragstart":_methodname},_B);
// [1032]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [1033]  Return Me 
return _B;
// End Sub
};

// [1036] Sub SetOnDragEnd(module As Object, methodName As String) As VMElement 
_B.setondragend=function(_module,_methodname) {
var _e,_cb;
// [1037]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1038]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [1039]  Dim e As BANanoEvent 
_e=null;
// [1040]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [1041]  SetAttr(CreateMap( {177} : methodName)) 
_B.setattr({"v-on:dragend":_methodname},_B);
// [1043]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [1044]  Return Me 
return _B;
// End Sub
};

// [1047] Sub SetOnDragEnter(module As Object, methodName As String) As VMElement 
_B.setondragenter=function(_module,_methodname) {
var _e,_cb;
// [1048]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1049]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [1050]  Dim e As BANanoEvent 
_e=null;
// [1051]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [1052]  SetAttr(CreateMap( {178} : methodName)) 
_B.setattr({"v-on:dragenter":_methodname},_B);
// [1054]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [1055]  Return Me 
return _B;
// End Sub
};

// [1058] Sub SetOnDrop(module As Object, methodName As String) As VMElement 
_B.setondrop=function(_module,_methodname) {
var _e,_cb;
// [1059]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1060]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [1061]  Dim e As BANanoEvent 
_e=null;
// [1062]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _module[(_methodname).toLowerCase()]==="function") {return _module[(_methodname).toLowerCase()](_e,_B)};};
// [1063]  SetAttr(CreateMap( {179} : methodName)) 
_B.setattr({"v-on:drop":_methodname},_B);
// [1065]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [1066]  Return Me 
return _B;
// End Sub
};

// [1070] Sub SetMargins(mt As Object, mb As Object, ml As Object, mr As Object) As VMElement 
_B.setmargins=function(_mt,_mb,_ml,_mr) {
// [1071]  AddStyle( {180} , mt) 
_B.addstyle("margin-top",_mt,_B);
// [1072]  AddStyle( {181} , mb) 
_B.addstyle("margin-bottom",_mb,_B);
// [1073]  AddStyle( {182} , ml) 
_B.addstyle("margin-left",_ml,_B);
// [1074]  AddStyle( {183} , mr) 
_B.addstyle("margin-right",_mr,_B);
// [1075]  Return Me 
return _B;
// End Sub
};

// [1079] Sub AddStyle(prop As String, val As Object) As VMElement 
_B.addstyle=function(_prop,_val) {
var _m;
// [1080]  If val = Null Then Return Me 
if (_val==null) { return _B;}
// [1081]  Dim m As Map = CreateMap() 
_m={};
// [1082]  m.Put(prop, val) 
_m[_prop]=_val;
// [1083]  SetStyle(m) 
_B.setstyle(_m,_B);
// [1084]  Return Me 
return _B;
// End Sub
};

// [1087] Sub SetPadding(pt As Object, pb As Object, pl As Object, pr As Object) As VMElement 
_B.setpadding=function(_pt,_pb,_pl,_pr) {
// [1088]  AddStyle( {184} , pt) 
_B.addstyle("padding-top",_pt,_B);
// [1089]  AddStyle( {185} , pb) 
_B.addstyle("padding-bottom",_pb,_B);
// [1090]  AddStyle( {186} , pl) 
_B.addstyle("padding-left",_pl,_B);
// [1091]  AddStyle( {187} , pr) 
_B.addstyle("padding-right",_pr,_B);
// [1092]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMEmptyState  =========================== */
function banano_bananovuematerial_vmemptystate() {
var _B=this;
_B._emptystate= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [9] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMEmptyState 
_B.initialize=function(_v,_sid,_eventhandler) {
// [10]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [11]  vue = v 
_B._vue=_v;
// [12]  module = eventHandler 
_B._module=_eventhandler;
// [13]  EmptyState.Initialize(vue, ID).SetTag( {0} ) 
_B._emptystate.initialize(_B._vue,_B._id).settag("md-empty-state");
// [14]  Return Me 
return _B;
// End Sub
};

// [18] Sub SetStyle(sm As Map) As VMEmptyState 
_B.setstyle=function(_sm) {
// [19]  EmptyState.SetStyle(sm) 
_B._emptystate.setstyle(_sm);
// [20]  Return Me 
return _B;
// End Sub
};

// [23] Sub SetVIf(vif As String) As VMEmptyState 
_B.setvif=function(_vif) {
// [24]  EmptyState.SetVIf(vif) 
_B._emptystate.setvif(_vif);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetID(iID As String, bind As Boolean) As VMEmptyState 
_B.setid=function(_iid,_bind) {
// [29]  EmptyState.SetID(iID,bind) 
_B._emptystate.setid(_iid,_bind);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetName(nam As String, bind As Boolean) As VMEmptyState 
_B.setname=function(_nam,_bind) {
// [34]  EmptyState.SetName(nam, bind) 
_B._emptystate.setname(_nam,_bind);
// [35]  Return Me 
return _B;
// End Sub
};

// [38] Sub AddHTML(html As String) As VMEmptyState 
_B.addhtml=function(_html) {
// [39]  EmptyState.SetText(html) 
_B._emptystate.settext(_html);
// [40]  Return Me 
return _B;
// End Sub
};

// [44] Sub AddChild(child As VMElement) As VMEmptyState 
_B.addchild=function(_child) {
var _childhtml;
// [45]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [46]  EmptyState.SetText(childHTML) 
_B._emptystate.settext(_childhtml);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [52]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [53]  AddChild(childx) 
_B.addchild(_childx,_B);
// [54]  Next 
}
// End Sub
};

// [57] Sub SetKey(k As String, bind As Boolean) As VMEmptyState 
_B.setkey=function(_k,_bind) {
// [58]  EmptyState.SetKey(k, bind) 
_B._emptystate.setkey(_k,_bind);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetIcon(icon As String) As VMEmptyState 
_B.seticon=function(_icon) {
// [63]  If icon = {1} Then Return Me 
if (_icon=="") { return _B;}
// [64]  EmptyState.SetAttr(CreateMap( {2} : icon)) 
_B._emptystate.setattr({"md-icon":_icon});
// [65]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetLabel(labelx As String) As VMEmptyState 
_B.setlabel=function(_labelx) {
// [69]  If labelx = {3} Then Return Me 
if (_labelx=="") { return _B;}
// [70]  EmptyState.SetAttr(CreateMap( {4} : labelx)) 
_B._emptystate.setattr({"md-label":_labelx});
// [71]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetDescription(labelx As String) As VMEmptyState 
_B.setdescription=function(_labelx) {
// [75]  If labelx = {5} Then Return Me 
if (_labelx=="") { return _B;}
// [76]  EmptyState.SetAttr(CreateMap( {6} : labelx)) 
_B._emptystate.setattr({"md-description":_labelx});
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetRounded(b As Boolean) As VMEmptyState 
_B.setrounded=function(_b) {
// [81]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [82]  EmptyState.SetAttr(CreateMap( {7} : b)) 
_B._emptystate.setattr({"md-rounded":_b});
// [83]  Return Me 
return _B;
// End Sub
};

// [86] Sub SetSize(size As String) As VMEmptyState 
_B.setsize=function(_size) {
// [87]  If size = {8} Then Return Me 
if (_size=="") { return _B;}
// [88]  EmptyState.SetAttr(CreateMap( {9} : size)) 
_B._emptystate.setattr({"md-size":_size});
// [89]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetPrimary(b As Boolean) As VMEmptyState 
_B.setprimary=function(_b) {
// [93]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [94]  EmptyState.AddClass( {10} ) 
_B._emptystate.addclass("md-primary");
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetAccent(b As Boolean) As VMEmptyState 
_B.setaccent=function(_b) {
// [99]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [100]  EmptyState.AddClass( {11} ) 
_B._emptystate.addclass("md-accent");
// [101]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetVShow(vif As String) As VMEmptyState 
_B.setvshow=function(_vif) {
// [105]  EmptyState.SetVShow(vif) 
_B._emptystate.setvshow(_vif);
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub AddClass(c As String) As VMEmptyState 
_B.addclass=function(_c) {
// [111]  EmptyState.AddClass(c) 
_B._emptystate.addclass(_c);
// [112]  Return Me 
return _B;
// End Sub
};

// [116] Sub SetAttr(attr As Map) As VMEmptyState 
_B.setattr=function(_attr) {
// [117]  EmptyState.SetAttr(attr) 
_B._emptystate.setattr(_attr);
// [118]  Return Me 
return _B;
// End Sub
};

// [121] Sub ToString As String 
_B.tostring=function() {
// [122]  Return EmptyState.tostring 
return _B._emptystate.tostring();
// End Sub
};

// [125] Sub Render 
_B.render=function() {
// [126]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [129] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [130]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [134] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [135]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMEnlighter  =========================== */
function banano_bananovuematerial_vmenlighter() {
var _B=this;
_B._enlighter= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._codename="";

_B._codevisible="";

_B._options={};

_B._codeel= new banano_bananovuematerial_vmelement();

// [14] Public Sub Initialize(v As BANanoVue, sid As String, lang As String) As VMEnlighter 
_B.initialize=function(_v,_sid,_lang) {
// [15]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [16]  Enlighter.Initialize(v, ID).SetTag( {3} ) 
_B._enlighter.initialize(_v,_B._id).settag("pre");
// [17]  Enlighter.SetAttr(CreateMap( {4} :lang)) 
_B._enlighter.setattr({"data-enlighter-language":_lang});
// [18]  Enlighter.SetAttr(CreateMap( {5} : {6} )) 
_B._enlighter.setattr({"data-enlighter-linenumbers":"true"});
// [19]  vue = v 
_B._vue=_v;
// [20]  Enlighter.SetStyle(CreateMap( {7} : {8} , {9} : {10} )) 
_B._enlighter.setstyle({"width":"100% !important", "height":"80vh !important"});
// [22]  codeName = {0} 
_B._codename="" + _B._id + "code";
// [23]  CodeEL.Initialize(v, codeName).SetTag( {11} ) 
_B._codeel.initialize(_v,_B._codename).settag("code");
// [24]  CodeEL.SetText( {1} ) 
_B._codeel.settext("{{ " + _B._codename + " }}");
// [25]  CodeEL.AddClass( {12} ).AddClass( {13} ) 
_B._codeel.addclass("col s12").addclass("special");
// [26]  CodeEL.SetAttr(CreateMap( {14} :lang)) 
_B._codeel.setattr({"data-enlighter-language":_lang});
// [27]  CodeEL.SetAttr(CreateMap( {15} : {16} )) 
_B._codeel.setattr({"data-enlighter-linenumbers":"true"});
// [30]  SetText( {17} ) 
_B.settext("",_B);
// [31]  codevisible = {2} 
_B._codevisible="" + _B._id + "visible";
// [32]  SetVIf(codevisible) 
_B.setvif(_B._codevisible,_B);
// [33]  SetVisible(True) 
_B.setvisible(true,_B);
// [34]  options.Initialize 
_B._options={};
// [35]  options.Put( {18} , lang) 
_B._options["language"]=_lang;
// [36]  options.Put( {19} , 4) 
_B._options["indent"]=4;
// [37]  options.Put( {20} , True) 
_B._options["showLinenumbers"]=true;
// [38]  options.Put( {21} , {22} ) 
_B._options["renderer"]="Inline";
// [39]  Return Me 
return _B;
// End Sub
};

// [42] Sub SetElevation(e As Int) As VMEnlighter 
_B.setelevation=function(_e) {
// [43]  Enlighter.SetElevation(e) 
_B._enlighter.setelevation(_e);
// [44]  Return Me 
return _B;
// End Sub
};

// [47] Sub SetVisible(b As Boolean) 
_B.setvisible=function(_b) {
// [48]  vue.SetStateSingle(codevisible, b) 
_B._vue.setstatesingle(_B._codevisible,_b);
// End Sub
};

// [51] Sub SetVIf(vif As String) As VMEnlighter 
_B.setvif=function(_vif) {
// [52]  Enlighter.SetVIf(vif) 
_B._enlighter.setvif(_vif);
// [53]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetVShow(vif As String) As VMEnlighter 
_B.setvshow=function(_vif) {
// [57]  Enlighter.SetVShow(vif) 
_B._enlighter.setvshow(_vif);
// [58]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetText(sText As String) As VMEnlighter 
_B.settext=function(_stext) {
// [63]  vue.SetStateSingle(codeName, sText) 
_B._vue.setstatesingle(_B._codename,_stext);
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub Refresh 
_B.refresh=function() {
var _bo;
// [68]  Dim bo As BANanoObject = BANano.Window.GetField( {23} ).RunMethod( {24} , codeName) 
_bo=window["document"]["id"](_B._codename);
// [69]  bo.RunMethod( {25} , options) 
_bo["enlight"](_B._options);
// End Sub
};

// [73] Sub ToString As String 
_B.tostring=function() {
// [74]  Enlighter.AddElement(CodeEL) 
_B._enlighter.addelement(_B._codeel);
// [75]  Return Enlighter.ToString 
return _B._enlighter.tostring();
// End Sub
};

// [79] Sub Render 
_B.render=function() {
// [80]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [84] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [85]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [89] Sub AddClass(c As String) As VMEnlighter 
_B.addclass=function(_c) {
// [90]  Enlighter.AddClass(c) 
_B._enlighter.addclass(_c);
// [91]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetAttr(attr As Map) As VMEnlighter 
_B.setattr=function(_attr) {
// [96]  Enlighter.SetAttr(attr) 
_B._enlighter.setattr(_attr);
// [97]  Return Me 
return _B;
// End Sub
};

// [101] Sub SetStyle(sm As Map) As VMEnlighter 
_B.setstyle=function(_sm) {
// [102]  Enlighter.SetStyle(sm) 
_B._enlighter.setstyle(_sm);
// [103]  Return Me 
return _B;
// End Sub
};

// [107] Sub SetPadding(p As Object) As VMEnlighter 
_B.setpadding=function(_p) {
// [108]  Enlighter.SetPaddingAll(p) 
_B._enlighter.setpaddingall(_p);
// [109]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMField  =========================== */
function banano_bananovuematerial_vmfield() {
var _B=this;
_B._field= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

_B._errkey="";

// [12] Public Sub Initialize(v As BANanoVue, parentID As String, sid As String, eventHandler As Object) As VMField 
_B.initialize=function(_v,_parentid,_sid,_eventhandler) {
// [13]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [14]  Field.Initialize(v, ID) 
_B._field.initialize(_v,_B._id);
// [15]  Field.SetTag( {2} ) 
_B._field.settag("md-field");
// [16]  vue = v 
_B._vue=_v;
// [17]  module = eventHandler 
_B._module=_eventhandler;
// [18]  Field.SetOnClear(module, {0} ) 
_B._field.setonclear(_B._module,"" + _B._id + "_clear");
// [19]  errKey = {1} 
_B._errkey="" + _parentid + "error";
// [20]  vue.SetStateSingle(errKey, False) 
_B._vue.setstatesingle(_B._errkey,false);
// [21]  Field.SetAttr(CreateMap( {3} :errKey & {4} )) 
_B._field.setattr({":class":_B._errkey+"class"});
// [22]  vue.SetComputed(errKey & {5} , Me, {6} ) 
_B._vue.setcomputed(_B._errkey+"class",_B,"FieldError");
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetMarginAll(p As Object) As VMField 
_B.setmarginall=function(_p) {
// [27]  Field.setmarginall(p) 
_B._field.setmarginall(_p);
// [28]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetMaxWidth(mw As String) As VMField 
_B.setmaxwidth=function(_mw) {
// [32]  Field.SetMaxWidth(mw) 
_B._field.setmaxwidth(_mw);
// [33]  Return Me 
return _B;
// End Sub
};

// [36] private Sub FieldError As Object 
_B.fielderror=function() {
var _errmodel,_obj;
// [37]  Dim errModel As Boolean = vue.GetState(errKey, False) 
_errmodel=_B._vue.getstate(_B._errkey,false);
// [38]  Dim obj As Map = CreateMap() 
_obj={};
// [39]  obj.Put( {7} , errModel) 
_obj["md-invalid"]=_errmodel;
// [40]  Return obj 
return _obj;
// End Sub
};

// [45] Sub ToString As String 
_B.tostring=function() {
// [46]  Return Field.ToString 
return _B._field.tostring();
// End Sub
};

// [49] Sub SetVModel(k As String) As VMField 
_B.setvmodel=function(_k) {
// [50]  Field.SetVModel(k) 
_B._field.setvmodel(_k);
// [51]  Return Me 
return _B;
// End Sub
};

// [54] Sub SetVIf(vif As Object) As VMField 
_B.setvif=function(_vif) {
// [55]  Field.SetVIf(vif) 
_B._field.setvif(_vif);
// [56]  Return Me 
return _B;
// End Sub
};

// [59] Sub SetVShow(vif As Object) As VMField 
_B.setvshow=function(_vif) {
// [60]  Field.SetVShow(vif) 
_B._field.setvshow(_vif);
// [61]  Return Me 
return _B;
// End Sub
};

// [65] Sub Render 
_B.render=function() {
// [66]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [70] Sub AddChild(child As VMElement) As VMField 
_B.addchild=function(_child) {
var _childhtml;
// [71]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [72]  Field.SetText(childHTML) 
_B._field.settext(_childhtml);
// [73]  Return Me 
return _B;
// End Sub
};

// [77] Sub SetText(t As Object) As VMField 
_B.settext=function(_t) {
// [78]  Field.SetText(t) 
_B._field.settext(_t);
// [79]  Return Me 
return _B;
// End Sub
};

// [82] Sub SetPrimary(b As Boolean) As VMField 
_B.setprimary=function(_b) {
// [83]  Field.SetPrimary(True) 
_B._field.setprimary(true);
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetAccent(b As Boolean) As VMField 
_B.setaccent=function(_b) {
// [88]  Field.SetAccent(True) 
_B._field.setaccent(true);
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [94]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [98] Sub AddClass(c As String) As VMField 
_B.addclass=function(_c) {
// [99]  Field.AddClass(c) 
_B._field.addclass(_c);
// [100]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetAttr(attr As Map) As VMField 
_B.setattr=function(_attr) {
// [105]  Field.SetAttr(attr) 
_B._field.setattr(_attr);
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub SetStyle(sm As Map) As VMField 
_B.setstyle=function(_sm) {
// [111]  Field.SetStyle(sm) 
_B._field.setstyle(_sm);
// [112]  Return Me 
return _B;
// End Sub
};

// [116] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [117]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [118]  AddChild(childx) 
_B.addchild(_childx,_B);
// [119]  Next 
}
// End Sub
};

// [123] Sub SetPadding(p As Object) As VMField 
_B.setpadding=function(_p) {
// [124]  Field.SetPaddingAll(p) 
_B._field.setpaddingall(_p);
// [125]  Return Me 
return _B;
// End Sub
};

// [129] Sub SetInline(varInline As Boolean) As VMField 
_B.setinline=function(_varinline) {
// [130]  SetAttr(CreateMap( {8} : varInline)) 
_B.setattr({":md-inline":_varinline},_B);
// [131]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetCounter(varCounter As Boolean) As VMField 
_B.setcounter=function(_varcounter) {
// [136]  SetAttr(CreateMap( {9} : varCounter)) 
_B.setattr({":md-counter":_varcounter},_B);
// [137]  Return Me 
return _B;
// End Sub
};

// [141] Sub SetClearable(varClearable As Boolean) As VMField 
_B.setclearable=function(_varclearable) {
// [142]  SetAttr(CreateMap( {10} : varClearable)) 
_B.setattr({":md-clearable":_varclearable},_B);
// [143]  Return Me 
return _B;
// End Sub
};

// [147] Sub SetTogglePassword(varTogglePassword As Boolean) As VMField 
_B.settogglepassword=function(_vartogglepassword) {
// [148]  SetAttr(CreateMap( {11} : varTogglePassword)) 
_B.setattr({":md-toggle-password":_vartogglepassword},_B);
// [149]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMFile  =========================== */
function banano_bananovuematerial_vmfile() {
var _B=this;
_B._fileo= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._fileint= new banano_bananovuematerial_vmfield();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._hashelp=false;

_B._ht= new banano_bananovuematerial_vmelement();

_B._haserror=false;

_B._he= new banano_bananovuematerial_vmelement();

_B._vmodel="";

_B._module={};

// [18] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMFile 
_B.initialize=function(_v,_sid,_eventhandler) {
var _flist;
// [19]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [20]  FileO.Initialize(v, ID) 
_B._fileo.initialize(_v,_B._id);
// [21]  FileO.SetTag( {4} ) 
_B._fileo.settag("md-file");
// [22]  module = eventHandler 
_B._module=_eventhandler;
// [23]  vue = v 
_B._vue=_v;
// [24]  FileInt.Initialize(v, ID, {0} , module) 
_B._fileint.initialize(_v,_B._id,"" + _B._id + "field",_B._module);
// [25]  lbl.Initialize(vue, {1} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label");
// [26]  hasHelp = False 
_B._hashelp=false;
// [27]  hasError = False 
_B._haserror=false;
// [28]  vmodel = {5} 
_B._vmodel="";
// [29]  Dim fList As Object 
_flist={};
// [30]  SetOnChange(fList) 
_B.setonchange(_flist,_B);
// [31]  Return Me 
return _B;
// End Sub
};

// [35] Sub SetName(varName As Object, bind As Boolean) As VMFile 
_B.setname=function(_varname,_bind) {
// [36]  FileO.SetName(varName, bind) 
_B._fileo.setname(_varname,_bind);
// [37]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetTabIndex(ti As String) As VMFile 
_B.settabindex=function(_ti) {
// [41]  FileO.SetTabIndex(ti) 
_B._fileo.settabindex(_ti);
// [42]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetAcceptImages As VMFile 
_B.setacceptimages=function() {
// [46]  SetAttr(CreateMap( {6} : {7} )) 
_B.setattr({"accept":"image/*"},_B);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] private Sub SetOnChange(fileList As Object) As VMFile 
_B.setonchange=function(_filelist) {
var _methodname,_cb;
// [52]  Dim methodName As String = {2} 
_methodname="" + _B._id + "_change";
// [53]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [54]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(fileList)) 
_cb=function(_filelist) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_filelist,_B)};};
// [55]  SetAttr(CreateMap( {8} : methodName)) 
_B.setattr({"v-on:md-change":_methodname},_B);
// [57]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [58]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetMultiple(b As Boolean) As VMFile 
_B.setmultiple=function(_b) {
// [62]  FileO.SetAttr(CreateMap( {9} : b)) 
_B._fileo.setattr({":multiple":_b});
// [63]  Return Me 
return _B;
// End Sub
};

// [66] Sub SetAccept(accept As Object) As VMFile 
_B.setaccept=function(_accept) {
// [67]  FileO.SetAttr(CreateMap( {10} : accept)) 
_B._fileo.setattr({"accept":_accept});
// [68]  Return Me 
return _B;
// End Sub
};

// [71] Sub SetReadOnly(b As Boolean) As VMFile 
_B.setreadonly=function(_b) {
// [72]  FileO.SetAttr(CreateMap( {11} : b)) 
_B._fileo.setattr({":readonly":_b});
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub SetLabel(l As Object) As VMFile 
_B.setlabel=function(_l) {
// [77]  lbl.SetText(l) 
_B._lbl.settext(_l);
// [78]  Return Me 
return _B;
// End Sub
};

// [82] Sub ToString As String 
_B.tostring=function() {
// [83]  lbl.Pop(FileInt.Field) 
_B._lbl.pop(_B._fileint._field);
// [84]  FileO.Pop(FileInt.Field) 
_B._fileo.pop(_B._fileint._field);
// [85]  If hasHelp Then 
if (_B._hashelp) {
// [86]  ht.Pop(FileInt.Field) 
_B._ht.pop(_B._fileint._field);
// [87]  End If 
}
// [88]  If hasError Then 
if (_B._haserror) {
// [89]  he.Pop(FileInt.Field) 
_B._he.pop(_B._fileint._field);
// [90]  End If 
}
// [91]  Return FileInt.tostring 
return _B._fileint.tostring();
// End Sub
};

// [94] Sub SetHelperText(t As String) As VMFile 
_B.sethelpertext=function(_t) {
// [95]  hasHelp = True 
_B._hashelp=true;
// [96]  ht = FileO.SetHelperText(t) 
_B._ht=_B._fileo.sethelpertext(_t);
// [97]  Return Me 
return _B;
// End Sub
};

// [100] Sub SetErrorText(t As String) As VMFile 
_B.seterrortext=function(_t) {
// [101]  hasError = True 
_B._haserror=true;
// [102]  he = FileO.SetErrorText(t) 
_B._he=_B._fileo.seterrortext(_t);
// [103]  Return Me 
return _B;
// End Sub
};

// [106] Sub SetVModel(k As String) As VMFile 
_B.setvmodel=function(_k) {
// [107]  vmodel = k.tolowercase 
_B._vmodel=_k.toLowerCase();
// [108]  vue.SetStateSingle(k,Null) 
_B._vue.setstatesingle(_k,null);
// [109]  FileO.SetVModel(k) 
_B._fileo.setvmodel(_k);
// [110]  Return Me 
return _B;
// End Sub
};

// [113] Sub SetValue(xval As String) As VMFile 
_B.setvalue=function(_xval) {
// [114]  If vmodel = {12} Then 
if (_B._vmodel=="") {
// [115]  Log( {3} ) 
console.log("VMFile.SetValue " + _B._id + " - v-model has not been set!");
// [116]  End If 
}
// [117]  vue.SetStateSingle(vmodel, xval) 
_B._vue.setstatesingle(_B._vmodel,_xval);
// [118]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetVIf(vif As Object) As VMFile 
_B.setvif=function(_vif) {
// [122]  FileInt.SetVIf(vif) 
_B._fileint.setvif(_vif);
// [123]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetVShow(vif As Object) As VMFile 
_B.setvshow=function(_vif) {
// [127]  FileInt.SetVShow(vif) 
_B._fileint.setvshow(_vif);
// [128]  Return Me 
return _B;
// End Sub
};

// [132] Sub Render 
_B.render=function() {
// [133]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [137] Sub AddChild(child As VMElement) As VMFile 
_B.addchild=function(_child) {
var _childhtml;
// [138]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [139]  FileO.SetText(childHTML) 
_B._fileo.settext(_childhtml);
// [140]  Return Me 
return _B;
// End Sub
};

// [144] Sub SetText(t As Object) As VMFile 
_B.settext=function(_t) {
// [145]  FileO.SetText(t) 
_B._fileo.settext(_t);
// [146]  Return Me 
return _B;
// End Sub
};

// [149] Sub SetPrimary(b As Boolean) As VMFile 
_B.setprimary=function(_b) {
// [150]  FileO.SetPrimary(True) 
_B._fileo.setprimary(true);
// [151]  Return Me 
return _B;
// End Sub
};

// [154] Sub SetAccent(b As Boolean) As VMFile 
_B.setaccent=function(_b) {
// [155]  FileO.SetAccent(True) 
_B._fileo.setaccent(true);
// [156]  Return Me 
return _B;
// End Sub
};

// [160] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [161]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [165] Sub AddClass(c As String) As VMFile 
_B.addclass=function(_c) {
// [166]  FileO.AddClass(c) 
_B._fileo.addclass(_c);
// [167]  Return Me 
return _B;
// End Sub
};

// [171] Sub SetAttr(attr As Map) As VMFile 
_B.setattr=function(_attr) {
// [172]  FileO.SetAttr(attr) 
_B._fileo.setattr(_attr);
// [173]  Return Me 
return _B;
// End Sub
};

// [177] Sub SetStyle(sm As Map) As VMFile 
_B.setstyle=function(_sm) {
// [178]  FileO.SetStyle(sm) 
_B._fileo.setstyle(_sm);
// [179]  Return Me 
return _B;
// End Sub
};

// [183] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [184]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [185]  AddChild(childx) 
_B.addchild(_childx,_B);
// [186]  Next 
}
// End Sub
};

// [190] Sub SetPadding(p As Object) As VMFile 
_B.setpadding=function(_p) {
// [191]  FileO.SetPaddingAll(p) 
_B._fileo.setpaddingall(_p);
// [192]  Return Me 
return _B;
// End Sub
};

// [196] Sub SetPlaceholder(varPlaceholder As Object) As VMFile 
_B.setplaceholder=function(_varplaceholder) {
// [197]  SetAttr(CreateMap( {13} : varPlaceholder)) 
_B.setattr({"placeholder":_varplaceholder},_B);
// [198]  Return Me 
return _B;
// End Sub
};

// [201] Sub SetDisabled(b As Boolean) As VMFile 
_B.setdisabled=function(_b) {
// [202]  FileO.SetDisabled(b) 
_B._fileo.setdisabled(_b);
// [203]  Return Me 
return _B;
// End Sub
};

// [208] Sub SetRequired(varRequired As Boolean) As VMFile 
_B.setrequired=function(_varrequired) {
// [209]  FileO.SetRequired(varRequired) 
_B._fileo.setrequired(_varrequired);
// [210]  Return Me 
return _B;
// End Sub
};

// [215] Sub SetInline(varInline As Boolean) As VMFile 
_B.setinline=function(_varinline) {
// [216]  FileInt.SetInline(varInline) 
_B._fileint.setinline(_varinline);
// [217]  Return Me 
return _B;
// End Sub
};

// [221] Sub SetClearable(varClearable As Boolean) As VMFile 
_B.setclearable=function(_varclearable) {
// [222]  FileInt.SetClearable(varClearable) 
_B._fileint.setclearable(_varclearable);
// [223]  Return Me 
return _B;
// End Sub
};

// [226] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [227]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMForm  =========================== */
function banano_bananovuematerial_vmform() {
var _B=this;
_B._form= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._container= new banano_bananovuematerial_vmcontainer();

_B._module={};

// [10] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMForm 
_B.initialize=function(_v,_sid,_eventhandler) {
// [11]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [12]  vue = v 
_B._vue=_v;
// [13]  module = eventHandler 
_B._module=_eventhandler;
// [14]  Form.Initialize(vue, ID).SetTag( {0} ) 
_B._form.initialize(_B._vue,_B._id).settag("form");
// [15]  Container.Initialize(vue, sid & {1} , eventHandler) 
_B._container.initialize(_B._vue,_sid+"grid",_eventhandler);
// [16]  Return Me 
return _B;
// End Sub
};

// [20] Sub AddClass(c As String) As VMForm 
_B.addclass=function(_c) {
// [21]  Form.AddClass(c) 
_B._form.addclass(_c);
// [22]  Return Me 
return _B;
// End Sub
};

// [25] Sub SetNoValidate(b As Boolean) As VMForm 
_B.setnovalidate=function(_b) {
// [26]  SetAttr(CreateMap( {2} : b)) 
_B.setattr({":novalidate":_b},_B);
// [27]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetAttr(attr As Map) As VMForm 
_B.setattr=function(_attr) {
// [32]  Form.SetAttr(attr) 
_B._form.setattr(_attr);
// [33]  Return Me 
return _B;
// End Sub
};

// [36] Sub ToString As String 
_B.tostring=function() {
// [37]  Form.SetText(Container.ToString) 
_B._form.settext(_B._container.tostring());
// [38]  Return Form.tostring 
return _B._form.tostring();
// End Sub
};

// [41] Sub Render 
_B.render=function() {
// [42]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [45] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [46]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMFrappeGantt  =========================== */
function banano_bananovuematerial_vmfrappegantt() {
var _B=this;
_B._p= new banano_bananovuematerial_vmelement();

_B._frappegantt= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._enumview= new banano_bananovuematerial_viewtype();

_B._tasks=[];

_B._options={};

_B._bofg=null;

_B._module={};

// [18] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMFrappeGantt 
_B.initialize=function(_v,_sid,_eventhandler) {
var _task,_start,_finish,_progress,_mode;
// [19]  BANano.DependsOnAsset( {7} ) 
;
// [20]  BANano.DependsOnAsset( {8} ) 
;
// [21]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [22]  vue = v 
_B._vue=_v;
// [23]  module = eventHandler 
_B._module=_eventhandler;
// [24]  Tasks.Initialize 
_B._tasks.length=0;
// [25]  FrappeGantt.Initialize(vue, ID).SetTag( {9} ) 
_B._frappegantt.initialize(_B._vue,_B._id).settag("div");
// [26]  p.Initialize(vue, {0} ).SetTag( {10} ) 
_B._p.initialize(_B._vue,"" + _B._id + "parent").settag("div");
// [27]  EnumView.Initialize 
_B._enumview.initialize();
// [28]  EnumView.Day = {11} 
_B._enumview._day="Day";
// [29]  EnumView.HalfDay = {12} 
_B._enumview._halfday="Half Day";
// [30]  EnumView.Month = {13} 
_B._enumview._month="Month";
// [31]  EnumView.QuarterDay = {14} 
_B._enumview._quarterday="Quarter Day";
// [32]  EnumView.Week = {15} 
_B._enumview._week="Week";
// [33]  options.Initialize 
_B._options={};
// [34]  options.put( {16} , Array( {17} , {18} , {19} , {20} , {21} )) 
_B._options["view_modes"]=["Quarter Day","Half Day","Day","Week","Month"];
// [35]  options.Put( {22} , Null) 
_B._options["custom_popup_html"]=null;
// [36]  SetViewMode( {23} ) 
_B.setviewmode("Day",_B);
// [37]  SetDateFormat( {24} ) 
_B.setdateformat("YYYY-MM-DD",_B);
// [38]  SetLanguage( {25} ) 
_B.setlanguage("en",_B);
// [39]  SetElevation(2) 
_B.setelevation(2,_B);
// [40]  Dim task As Object, start As Object, finish As Object 
_task={};
_task={};
_start={};
_start={};
_finish={};
// [41]  Dim progress As Object, mode As Object 
_progress={};
_progress={};
_mode={};
// [42]  SetOnClick(task) 
_B.setonclick(_task,_B);
// [43]  SetOnDateChange(task, start, finish) 
_B.setondatechange(_task,_start,_finish,_B);
// [44]  SetOnProgressChange(task, progress) 
_B.setonprogresschange(_task,_progress,_B);
// [45]  SetOnViewChange(mode) 
_B.setonviewchange(_mode,_B);
// [46]  Return Me 
return _B;
// End Sub
};

// [49] Sub SetElevation(e As Int) As VMFrappeGantt 
_B.setelevation=function(_e) {
// [50]  p.SetElevation(e) 
_B._p.setelevation(_e);
// [51]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetLanguage(lng As String) As VMFrappeGantt 
_B.setlanguage=function(_lng) {
// [56]  options.Put( {26} , lng) 
_B._options["language"]=_lng;
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetWidth(w As String) As VMFrappeGantt 
_B.setwidth=function(_w) {
// [61]  p.SetStyle(CreateMap( {27} :w)) 
_B._p.setstyle({"width":_w});
// [62]  p.SetWidth(w) 
_B._p.setwidth(_w);
// [63]  Return Me 
return _B;
// End Sub
};

// [66] Sub SetHeight(h As String) As VMFrappeGantt 
_B.setheight=function(_h) {
// [67]  p.SetStyle(CreateMap( {28} :h)) 
_B._p.setstyle({"height":_h});
// [68]  p.SetHeight(h) 
_B._p.setheight(_h);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetViewMonth As VMFrappeGantt 
_B.setviewmonth=function() {
// [73]  SetViewMode( {29} ) 
_B.setviewmode("Month",_B);
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SetViewWeek As VMFrappeGantt 
_B.setviewweek=function() {
// [78]  SetViewMode( {30} ) 
_B.setviewmode("Week",_B);
// [79]  Return Me 
return _B;
// End Sub
};

// [82] Sub SetViewDay As VMFrappeGantt 
_B.setviewday=function() {
// [83]  SetViewMode( {31} ) 
_B.setviewmode("Day",_B);
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetViewHalfDay As VMFrappeGantt 
_B.setviewhalfday=function() {
// [88]  SetViewMode( {32} ) 
_B.setviewmode("Half Day",_B);
// [89]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetViewQuarterDay As VMFrappeGantt 
_B.setviewquarterday=function() {
// [93]  SetViewMode( {33} ) 
_B.setviewmode("Quarter Day",_B);
// [94]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetHeaderHeight(hh As String) As VMFrappeGantt 
_B.setheaderheight=function(_hh) {
// [99]  options.Put( {34} , hh) 
_B._options["header_height"]=_hh;
// [100]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetColumnWidth(cw As String) As VMFrappeGantt 
_B.setcolumnwidth=function(_cw) {
// [105]  options.Put( {35} , cw) 
_B._options["column_width"]=_cw;
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub SetStep(si As String) As VMFrappeGantt 
_B.setstep=function(_si) {
// [111]  options.Put( {36} , si) 
_B._options["step"]=_si;
// [112]  Return Me 
return _B;
// End Sub
};

// [116] Sub SetBarHeight(bh As String) As VMFrappeGantt 
_B.setbarheight=function(_bh) {
// [117]  options.Put( {37} , bh) 
_B._options["bar_height"]=_bh;
// [118]  Return Me 
return _B;
// End Sub
};

// [122] Sub SetBorderCornerRadius(bcr As String) As VMFrappeGantt 
_B.setbordercornerradius=function(_bcr) {
// [123]  options.Put( {38} , bcr) 
_B._options["bar_corner_radius"]=_bcr;
// [124]  Return Me 
return _B;
// End Sub
};

// [128] Sub SetArrowCurve(ac As String) As VMFrappeGantt 
_B.setarrowcurve=function(_ac) {
// [129]  options.Put( {39} , ac) 
_B._options["arrow_curve"]=_ac;
// [130]  Return Me 
return _B;
// End Sub
};

// [134] Sub SetPadding(px As String) As VMFrappeGantt 
_B.setpadding=function(_px) {
// [135]  options.Put( {40} , px) 
_B._options["padding"]=_px;
// [136]  Return Me 
return _B;
// End Sub
};

// [140] Sub SetViewMode(vm As String) As VMFrappeGantt 
_B.setviewmode=function(_vm) {
// [141]  options.Put( {41} , vm) 
_B._options["view_mode"]=_vm;
// [142]  Return Me 
return _B;
// End Sub
};

// [146] Sub SetDateFormat(df As String) As VMFrappeGantt 
_B.setdateformat=function(_df) {
// [147]  options.Put( {42} , df) 
_B._options["date_format"]=_df;
// [148]  Return Me 
return _B;
// End Sub
};

// [152] Sub AddTask(taskID As String, taskName As String, taskStart As String, taskFinish As String, taskProgress As Int, taskIDDependencies As String, bMileStone As Boolean) 
_B.addtask=function(_taskid,_taskname,_taskstart,_taskfinish,_taskprogress,_taskiddependencies,_bmilestone) {
var _tsk,_tn;
// [153]  Dim tsk As Map = CreateMap( {43} : taskID, {44} : taskStart, {45} : taskFinish, {46} : taskProgress) 
_tsk={"id":_taskid, "start":_taskstart, "end":_taskfinish, "progress":_taskprogress};
// [154]  Dim tn As String = {1} 
_tn="" + _taskname + " (" + _taskprogress + "%)";
// [155]  tsk.Put( {47} , tn) 
_tsk["name"]=_tn;
// [156]  If taskIDDependencies <> {48} Then 
if (_taskiddependencies!="") {
// [157]  tsk.put( {49} , taskIDDependencies) 
_tsk["dependencies"]=_taskiddependencies;
// [158]  End If 
}
// [159]  If bMileStone Then 
if (_bmilestone) {
// [160]  tsk.Put( {50} , {51} ) 
_tsk["custom_class"]="bar-milestone";
// [161]  End If 
}
// [162]  Tasks.Add(tsk) 
_B._tasks.push(_tsk);
// End Sub
};

// [166] Sub Clear 
_B.clear=function() {
// [167]  Tasks.Initialize 
_B._tasks.length=0;
// End Sub
};

// [170] Sub SetTabIndex(ti As String) As VMFrappeGantt 
_B.settabindex=function(_ti) {
// [171]  If ti = {52} Then Return Me 
if (_ti=="") { return _B;}
// [172]  FrappeGantt.SetTabIndex(ti) 
_B._frappegantt.settabindex(_ti);
// [173]  Return Me 
return _B;
// End Sub
};

// [177] Sub SetStyle(sm As Map) As VMFrappeGantt 
_B.setstyle=function(_sm) {
// [178]  FrappeGantt.SetStyle(sm) 
_B._frappegantt.setstyle(_sm);
// [179]  Return Me 
return _B;
// End Sub
};

// [182] Sub SetVIf(vif As String) As VMFrappeGantt 
_B.setvif=function(_vif) {
// [183]  FrappeGantt.SetVIf(vif) 
_B._frappegantt.setvif(_vif);
// [184]  Return Me 
return _B;
// End Sub
};

// [187] Sub SetID(iID As String, bind As Boolean) As VMFrappeGantt 
_B.setid=function(_iid,_bind) {
// [188]  FrappeGantt.SetID(iID,bind) 
_B._frappegantt.setid(_iid,_bind);
// [189]  Return Me 
return _B;
// End Sub
};

// [192] Sub SetName(nam As String, bind As Boolean) As VMFrappeGantt 
_B.setname=function(_nam,_bind) {
// [193]  FrappeGantt.SetName(nam, bind) 
_B._frappegantt.setname(_nam,_bind);
// [194]  Return Me 
return _B;
// End Sub
};

// [197] Sub SetKey(k As String, bind As Boolean) As VMFrappeGantt 
_B.setkey=function(_k,_bind) {
// [198]  FrappeGantt.SetKey(k, bind) 
_B._frappegantt.setkey(_k,_bind);
// [199]  Return Me 
return _B;
// End Sub
};

// [202] Sub SetVShow(vif As String) As VMFrappeGantt 
_B.setvshow=function(_vif) {
// [203]  FrappeGantt.SetVShow(vif) 
_B._frappegantt.setvshow(_vif);
// [204]  Return Me 
return _B;
// End Sub
};

// [208] Sub AddClass(c As String) As VMFrappeGantt 
_B.addclass=function(_c) {
// [209]  FrappeGantt.AddClass(c) 
_B._frappegantt.addclass(_c);
// [210]  Return Me 
return _B;
// End Sub
};

// [214] Sub SetAttr(attr As Map) As VMFrappeGantt 
_B.setattr=function(_attr) {
// [215]  FrappeGantt.SetAttr(attr) 
_B._frappegantt.setattr(_attr);
// [216]  Return Me 
return _B;
// End Sub
};

// [220] private Sub SetOnClick(task As Object) As VMFrappeGantt 
_B.setonclick=function(_task) {
var _cb;
// [221]  Dim cb As BANanoObject = BANano.CallBack(module, {2} , Array(task)) 
_cb=function(_task) {if (typeof _B._module[("" + _B._id + "_click").toLowerCase()]==="function") {return _B._module[("" + _B._id + "_click").toLowerCase()](_task,_B)};};
// [222]  options.Put( {53} , cb) 
_B._options["on_click"]=_cb;
// [223]  Return Me 
return _B;
// End Sub
};

// [227] private Sub SetOnDateChange(task As Object, start As Object, finish As Object) As VMFrappeGantt 
_B.setondatechange=function(_task,_start,_finish) {
var _cb;
// [228]  Dim cb As BANanoObject = BANano.CallBack(module, {3} , Array(task, start, finish)) 
_cb=function(_task,_start,_finish) {if (typeof _B._module[("" + _B._id + "_datechange").toLowerCase()]==="function") {return _B._module[("" + _B._id + "_datechange").toLowerCase()](_task,_start,_finish,_B)};};
// [229]  options.Put( {54} , cb) 
_B._options["on_date_change"]=_cb;
// [230]  Return Me 
return _B;
// End Sub
};

// [234] private Sub SetOnProgressChange(task As Object, progress As Object) As VMFrappeGantt 
_B.setonprogresschange=function(_task,_progress) {
var _cb;
// [235]  Dim cb As BANanoObject = BANano.CallBack(module, {4} , Array(task, progress)) 
_cb=function(_task,_progress) {if (typeof _B._module[("" + _B._id + "_progresschange").toLowerCase()]==="function") {return _B._module[("" + _B._id + "_progresschange").toLowerCase()](_task,_progress,_B)};};
// [236]  options.Put( {55} , cb) 
_B._options["on_date_change"]=_cb;
// [237]  Return Me 
return _B;
// End Sub
};

// [241] private Sub SetOnViewChange(mode As Object) As VMFrappeGantt 
_B.setonviewchange=function(_mode) {
var _cb;
// [242]  Dim cb As BANanoObject = BANano.CallBack(module, {5} , Array(mode)) 
_cb=function(_mode) {if (typeof _B._module[("" + _B._id + "_viewchange").toLowerCase()]==="function") {return _B._module[("" + _B._id + "_viewchange").toLowerCase()](_mode,_B)};};
// [243]  options.Put( {56} , cb) 
_B._options["on_view_change"]=_cb;
// [244]  Return Me 
return _B;
// End Sub
};

// [247] Sub ToString As String 
_B.tostring=function() {
// [248]  FrappeGantt.Pop(p) 
_B._frappegantt.pop(_B._p);
// [249]  Return p.tostring 
return _B._p.tostring();
// End Sub
};

// [252] Sub Render 
_B.render=function() {
// [253]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [256] Sub Pop(px As VMElement) 
_B.pop=function(_px) {
// [257]  px.SetText(ToString) 
_px.settext(_B.tostring(_B));
// End Sub
};

// [262] Sub Refresh As VMFrappeGantt 
_B.refresh=function() {
var _gkey;
// [264]  Dim gKey As String = {6} 
_gkey="#" + _B._id + "";
// [265]  boFG.Initialize2( {57} , Array(gKey, Tasks, options)) 
_B._bofg=new Gantt(_gkey,_B._tasks,_B._options);
// [266]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMGijgoTable  =========================== */
function banano_bananovuematerial_vmgijgotable() {
var _B=this;
_B._table= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._inlineediting=false;

_B._inlineeditingmode="click";

_B._inlineeditingmanagementcolumn=true;

_B._width=0;

_B._grid=null;

_B._primarykey="id";

_B._pagerlimit=10;

_B._columns=[];

_B._column_date="date";

_B._column_text="text";

_B._column_icon="icon";

_B._column_checkbox="checkbox";

_B._column_dropdown="dropdown";

_B._column_none="";

_B._column_time="time";

_B._column_datetime="datetime";

_B._column_image="image";

_B._column_money="money";

_B._column_filesize="filesize";

_B._column_iconrender="iconrender";

_B._align_center="center";

_B._align_right="right";

_B._align_left="left";

_B._autogeneratecolumns=false;

_B._autoload=true;

_B._bodyrowheight="fixed";

_B._columnsm={};

_B._selectiontype="single";

_B._columnreorder=true;

_B._detailtemplate="";

_B._keepexpandedrows=false;

_B._fixedheader=false;

_B._headerfilter=true;

_B._headerfiltertype="onchange";

_B._resizablecolumns=true;

_B._showhiddencolumnsasdetails=false;

_B._expandicon="";

_B._collapseicon="";

_B._rowreorder=false;

_B._selectionmethod="basic";

_B._iconslibrary="materialicons";

_B._minwidth=0;

_B._uilibrary="materialdesign";

_B._toolbartemplate="";

_B._groupby="";

_B._datasource=[];

_B._datafield="records";

_B._showpager=true;

_B._transparentbackground=true;

_B._params={};

_B._mcallback={};

_B._eventname="";

_B._options={};

_B._responsive=true;

_B._formats={};

_B._n=null;

_B._toolbar= new banano_bananovuematerial_vmgrid();

_B._jq=null;

// [72] Public Sub Initialize(v As BANanoVue, sid As String, sPrimaryKey As String, module As Object) As VMGijgoTable 
_B.initialize=function(_v,_sid,_sprimarykey,_module) {
// [73]  Banano.DependsOnAsset( {55} ) 
;
// [74]  Banano.DependsOnAsset( {56} ) 
;
// [75]  Banano.DependsOnAsset( {57} ) 
;
// [76]  Banano.DependsOnAsset( {58} ) 
;
// [77]  Banano.DependsOnAsset( {59} ) 
;
// [78]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [79]  vue = v 
_B._vue=_v;
// [80]  JQ = vue.jquery 
_B._jq=_B._vue._jquery;
// [81]  Table.Initialize(vue, ID).SetTag( {60} ) 
_B._table.initialize(_B._vue,_B._id).settag("table");
// [82]  mCallBack = module 
_B._mcallback=_module;
// [83]  eventName = ID 
_B._eventname=_B._id;
// [84]  PrimaryKey = sPrimaryKey 
_B._primarykey=_sprimarykey;
// [85]  columnsM.Initialize 
_B._columnsm={};
// [86]  Options.Initialize 
_B._options={};
// [87]  params.Initialize 
_B._params={};
// [88]  formats.Initialize 
_B._formats={};
// [89]  N.Initialize( {61} ) 
_B._n=numeral;
// [91]  ToolBar.Initialize(vue, {0} , module) 
_B._toolbar.initialize(_B._vue,"" + _B._id + "tblBar",_module);
// [92]  ToolBar.AddRows(1) 
_B._toolbar.addrows(1);
// [93]  ToolBar.AddColumns(2,6,6,6,6) 
_B._toolbar.addcolumns(2,6,6,6,6);
// [94]  ToolBar.SetClass(1,2, {62} ) 
_B._toolbar.setclass(1,2,"text-right");
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub Reset 
_B.reset=function() {
// [99]  columnsM.Initialize 
_B._columnsm={};
// [100]  Options.Initialize 
_B._options={};
// [101]  params.Initialize 
_B._params={};
// [102]  formats.Initialize 
_B._formats={};
// End Sub
};

// [105] Sub ToString As String 
_B.tostring=function() {
// [106]  ToolbarTemplate = ToolBar.tostring 
_B._toolbartemplate=_B._toolbar.tostring();
// [107]  Return Table.tostring 
return _B._table.tostring();
// End Sub
};

// [111] Sub SetStyle(sm As Map) As VMGijgoTable 
_B.setstyle=function(_sm) {
// [112]  Table.SetStyle(sm) 
_B._table.setstyle(_sm);
// [113]  Return Me 
return _B;
// End Sub
};

// [116] Sub SetVIf(vif As Object) As VMGijgoTable 
_B.setvif=function(_vif) {
// [117]  Table.SetVIf(vif) 
_B._table.setvif(_vif);
// [118]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetKey(k As String, bind As Boolean) As VMGijgoTable 
_B.setkey=function(_k,_bind) {
// [122]  Table.SetKey(k, bind) 
_B._table.setkey(_k,_bind);
// [123]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetVShow(vif As Object) As VMGijgoTable 
_B.setvshow=function(_vif) {
// [127]  Table.SetVShow(vif) 
_B._table.setvshow(_vif);
// [128]  Return Me 
return _B;
// End Sub
};

// [132] Sub AddClass(c As String) As VMGijgoTable 
_B.addclass=function(_c) {
// [133]  Table.AddClass(c) 
_B._table.addclass(_c);
// [134]  Return Me 
return _B;
// End Sub
};

// [138] Sub SetAttr(attr As Map) As VMGijgoTable 
_B.setattr=function(_attr) {
// [139]  Table.SetAttr(attr) 
_B._table.setattr(_attr);
// [140]  Return Me 
return _B;
// End Sub
};

// [143] Sub SetDisabled(b As Boolean) As VMGijgoTable 
_B.setdisabled=function(_b) {
// [144]  Table.SetDisabled(b) 
_B._table.setdisabled(_b);
// [145]  Return Me 
return _B;
// End Sub
};

// [148] Sub Render 
_B.render=function() {
// [149]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [152] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [153]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [157] Sub AddParamater(paramName As String, paramValue As String) 
_B.addparamater=function(_paramname,_paramvalue) {
// [158]  params.Put(paramName,paramValue) 
_B._params[_paramname]=_paramvalue;
// End Sub
};

// [162] Sub Cancel(pk As String) 
_B.cancel=function(_pk) {
// [163]  grid.RunMethod( {63} , Array(pk)) 
_B._grid["cancel"](_pk);
// End Sub
};

// [167] Sub SetDataSource(rows As List) As VMGijgoTable 
_B.setdatasource=function(_rows) {
// [168]  If rows.Size = 0 Then 
if (_rows.length==0) {
// [169]  DataSource = Array() 
_B._datasource=[];
// [170]  Else 
} else {
// [171]  DataSource = rows 
_B._datasource=_rows;
// [172]  End If 
}
// [173]  Return Me 
return _B;
// End Sub
};

// [177] Sub GetRecordFromEvent(e As BANanoEvent) As Map 
_B.getrecordfromevent=function(_e) {
var _record,_res;
// [178]  Dim record As Map = e.OtherField( {64} ).Result 
_record=_e["data"];
// [179]  Dim res As Map = record.Get( {65} ) 
_res=_record["record"];
// [180]  Return res 
return _res;
// End Sub
};

// [184] Sub SetColumnGroupBy(colField As String) As VMGijgoTable 
_B.setcolumngroupby=function(_colfield) {
// [185]  colField = colField.Replace( {66} , {67} ) 
_colfield=_colfield.split(" ").join("");
// [186]  colField = colField.tolowercase 
_colfield=_colfield.toLowerCase();
// [187]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [188]  GroupBy = colField 
_B._groupby=_colfield;
// [189]  End If 
}
// [190]  Return Me 
return _B;
// End Sub
};

// [194] Sub SetColumnEditors(colField As List) As VMGijgoTable 
_B.setcolumneditors=function(_colfield) {
var _strcol,_col,_coltype;
// [195]  For Each strCol As String In colField 
for (var _strcolindex=0;_strcolindex<_colfield.length;_strcolindex++) {
_strcol=_colfield[_strcolindex];
// [196]  strCol = strCol.Replace( {68} , {69} ) 
_strcol=_strcol.split(" ").join("");
// [197]  strCol = strCol.tolowercase 
_strcol=_strcol.toLowerCase();
// [198]  If columnsM.ContainsKey(strCol) Then 
if ((_strcol in _B._columnsm)) {
// [199]  Dim col As Map = columnsM.Get(strCol) 
_col=_B._columnsm[_strcol];
// [200]  col.Put( {70} , True) 
_col["editor"]=true;
// [202]  Dim colType As String = col.Get( {71} ) 
_coltype=_col["type"];
// [203]  Select Case colType 
switch ("" + _coltype) {
// [204]  Case {72} 
case "" + "checkbox":
// [205]  col.Put( {73} , {74} ) 
_col["mode"]="editOnly";
// [206]  End Select 
break;
}
// [207]  columnsM.Put(strCol,col) 
_B._columnsm[_strcol]=_col;
// [208]  End If 
}
// [209]  Next 
}
// [210]  Return Me 
return _B;
// End Sub
};

// [214] Sub SetColumnModeReadOnly(colField As List) As VMGijgoTable 
_B.setcolumnmodereadonly=function(_colfield) {
var _strcol,_col;
// [215]  For Each strCol As String In colField 
for (var _strcolindex=0;_strcolindex<_colfield.length;_strcolindex++) {
_strcol=_colfield[_strcolindex];
// [216]  strCol = strCol.Replace( {75} , {76} ) 
_strcol=_strcol.split(" ").join("");
// [217]  strCol = strCol.tolowercase 
_strcol=_strcol.toLowerCase();
// [218]  If columnsM.ContainsKey(strCol) Then 
if ((_strcol in _B._columnsm)) {
// [219]  Dim col As Map = columnsM.Get(strCol) 
_col=_B._columnsm[_strcol];
// [220]  col.Put( {77} , {78} ) 
_col["mode"]="readOnly";
// [221]  columnsM.Put(strCol,col) 
_B._columnsm[_strcol]=_col;
// [222]  End If 
}
// [223]  Next 
}
// [224]  Return Me 
return _B;
// End Sub
};

// [228] Sub SetColumnModeEditOnly(colField As List) As VMGijgoTable 
_B.setcolumnmodeeditonly=function(_colfield) {
var _strcol,_col;
// [229]  For Each strCol As String In colField 
for (var _strcolindex=0;_strcolindex<_colfield.length;_strcolindex++) {
_strcol=_colfield[_strcolindex];
// [230]  strCol = strCol.Replace( {79} , {80} ) 
_strcol=_strcol.split(" ").join("");
// [231]  strCol = strCol.tolowercase 
_strcol=_strcol.toLowerCase();
// [232]  If columnsM.ContainsKey(strCol) Then 
if ((_strcol in _B._columnsm)) {
// [233]  Dim col As Map = columnsM.Get(strCol) 
_col=_B._columnsm[_strcol];
// [234]  col.Put( {81} , {82} ) 
_col["mode"]="editOnly";
// [235]  columnsM.Put(strCol,col) 
_B._columnsm[_strcol]=_col;
// [236]  End If 
}
// [237]  Next 
}
// [238]  Return Me 
return _B;
// End Sub
};

// [242] Sub SetColumnDataSource(colField As String, colDataSource As Object, colValueField As String, colEditField As String) As VMGijgoTable 
_B.setcolumndatasource=function(_colfield,_coldatasource,_colvaluefield,_coleditfield) {
var _col,_editor;
// [243]  colField = colField.Replace( {83} , {84} ) 
_colfield=_colfield.split(" ").join("");
// [244]  colField = colField.tolowercase 
_colfield=_colfield.toLowerCase();
// [245]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [246]  Dim col As Map = columnsM.Get(colField) 
_col=_B._columnsm[_colfield];
// [247]  Dim editor As Map = CreateMap( {85} :colDataSource, {86} :colValueField) 
_editor={"dataSource":_coldatasource, "valueField":_colvaluefield};
// [248]  col.Put( {87} , editor) 
_col["editor"]=_editor;
// [249]  col.Put( {88} , colEditField) 
_col["editField"]=_coleditfield;
// [250]  columnsM.Put(colField,col) 
_B._columnsm[_colfield]=_col;
// [251]  End If 
}
// [252]  Return Me 
return _B;
// End Sub
};

// [257] Sub SetColumnProperty(colField As String, colProperty As String, colValue As Object) 
_B.setcolumnproperty=function(_colfield,_colproperty,_colvalue) {
var _col;
// [258]  colField = colField.Replace( {89} , {90} ) 
_colfield=_colfield.split(" ").join("");
// [259]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [260]  Dim col As Map = columnsM.Get(colField) 
_col=_B._columnsm[_colfield];
// [261]  col.Put(colProperty, colValue) 
_col[_colproperty]=_colvalue;
// [262]  columnsM.Put(colField,col) 
_B._columnsm[_colfield]=_col;
// [263]  End If 
}
// End Sub
};

// [267] Sub GetByPos(rowPos As Int) As Map 
_B.getbypos=function(_rowpos) {
var _res;
// [268]  Dim res As Map = grid.RunMethod( {91} , Array(rowPos)).result 
_res=_B._grid["get"](_rowpos);
// [269]  Return res 
return _res;
// End Sub
};

// [273] Sub GetRowsVisible() As List 
_B.getrowsvisible=function() {
var _lst;
// [274]  Dim lst As List = grid.runmethod( {92} , Null).Result 
_lst=_B._grid["getAll"]();
// [275]  Return lst 
return _lst;
// End Sub
};

// [279] Sub GetRows() As List 
_B.getrows=function() {
var _lst;
// [280]  Dim lst As List = grid.runmethod( {93} , Array(True)).Result 
_lst=_B._grid["getAll"](true);
// [281]  Return lst 
return _lst;
// End Sub
};

// [286] Sub SetColumnRenderer(colField As String, colMethod As String) 
_B.setcolumnrenderer=function(_colfield,_colmethod) {
var _value,_record,_cell,_displayel,_col;
// [287]  colMethod = colMethod.tolowercase 
_colmethod=_colmethod.toLowerCase();
// [288]  Dim value, record, cell, displayEl As Map 
_value={};
_record={};
_cell={};
_displayel={};
// [289]  colField = colField.Replace( {94} , {95} ) 
_colfield=_colfield.split(" ").join("");
// [290]  colField = colField.tolowercase 
_colfield=_colfield.toLowerCase();
// [291]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [292]  Dim col As Map = columnsM.Get(colField) 
_col=_B._columnsm[_colfield];
// [293]  col.Put( {96} , Banano.CallBack(mCallBack, {1} ,Array(value, record, cell, displayEl))) 
_col["renderer"]=function(_value,_record,_cell,_displayel) {if (typeof _B._mcallback[("" + _B._eventname + "_" + _colmethod + "").toLowerCase()]==="function") {return _B._mcallback[("" + _B._eventname + "_" + _colmethod + "").toLowerCase()](_value,_record,_cell,_displayel,_B)};};
// [294]  columnsM.Put(colField,col) 
_B._columnsm[_colfield]=_col;
// [295]  End If 
}
// End Sub
};

// [299] Sub GetById(sID As String) As Map 
_B.getbyid=function(_sid) {
var _res;
// [300]  Dim res As Map = grid.RunMethod( {97} , Array(sID)).Result 
_res=_B._grid["getById"](_sid);
// [301]  Return res 
return _res;
// End Sub
};

// [305] Sub SearchFor(searchValues As Map) 
_B.searchfor=function(_searchvalues) {
// [306]  grid.RunMethod( {98} , Array(searchValues)) 
_B._grid["reload"](_searchvalues);
// End Sub
};

// [310] Sub Reload 
_B.reload=function() {
// [311]  grid.RunMethod( {99} ,Null) 
_B._grid["reload"]();
// End Sub
};

// [315] Sub Clear 
_B.clear=function() {
// [316]  grid.RunMethod( {100} ,Null) 
_B._grid["clear"]();
// End Sub
};

// [320] Sub HideColumn(colName As List) 
_B.hidecolumn=function(_colname) {
var _strcol;
// [321]  For Each strCol As String In colName 
for (var _strcolindex=0;_strcolindex<_colname.length;_strcolindex++) {
_strcol=_colname[_strcolindex];
// [322]  grid.RunMethod( {101} , Array(strCol)) 
_B._grid["hideColumn"](_strcol);
// [323]  Next 
}
// End Sub
};

// [327] Sub ShowColumn(colField As List) 
_B.showcolumn=function(_colfield) {
var _strcol;
// [328]  For Each strCol As String In colField 
for (var _strcolindex=0;_strcolindex<_colfield.length;_strcolindex++) {
_strcol=_colfield[_strcolindex];
// [329]  grid.RunMethod( {102} ,Array(strCol)) 
_B._grid["showColumn"](_strcol);
// [330]  Next 
}
// End Sub
};

// [334] Sub RemoveRow(pk As String) 
_B.removerow=function(_pk) {
// [335]  grid.RunMethod( {103} , Array(pk)) 
_B._grid["removeRow"](_pk);
// End Sub
};

// [339] Sub CountVisible As Int 
_B.countvisible=function() {
var _cv;
// [340]  Dim cv As Int = grid.RunMethod( {104} ,Null).result 
_cv=_B._grid["count"]();
// [341]  Return cv 
return _cv;
// End Sub
};

// [345] Sub CountAll As Int 
_B.countall=function() {
var _cv;
// [346]  Dim cv As Int = grid.RunMethod( {105} ,Array(True)).result 
_cv=_B._grid["count"](true);
// [347]  Return cv 
return _cv;
// End Sub
};

// [351] Sub Destroy 
_B.destroy=function() {
// [352]  Try 
try {
// [353]  grid.RunMethod( {106} , Array(True, True)) 
_B._grid["destroy"](true,true);
// [354]  Catch 
} catch(err) {
// [355]  Log(LastException) 
console.log(err);
// [356]  End Try 
}
// End Sub
};

// [359] Sub SetTitle(sTitle As String) As VMGijgoTable 
_B.settitle=function(_stitle) {
var _spantitle;
// [360]  Dim spanTitle As VMElement 
_spantitle= new banano_bananovuematerial_vmelement();
// [361]  spanTitle.Initialize(vue, {107} ).SetTag( {108} ) 
_spantitle.initialize(_B._vue,"").settag("span");
// [362]  spanTitle.SetText(sTitle) 
_spantitle.settext(_stitle);
// [363]  ToolBar.AddComponent(1,1,spanTitle.ToString) 
_B._toolbar.addcomponent(1,1,_spantitle.tostring());
// [364]  Return Me 
return _B;
// End Sub
};

// [368] Sub Refresh As VMGijgoTable 
_B.refresh=function() {
var _sizes,_pager,_mapping,_column,_inlineeditingobject,_hf,_icn;
// [369]  If grid <> Null Then Destroy 
if (_B._grid!=null) {_B.destroy(_B);}
// [370]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [371]  Case {109} 
case "" + "materialicons":
// [372]  ExpandIcon = {2} 
_B._expandicon="<i class=\"material-icons\">keyboard_arrow_right</i>";
// [373]  CollapseIcon = {3} 
_B._collapseicon="<i class=\"material-icons\">keyboard_arrow_down</i>";
// [374]  Case {110} 
break;
case "" + "fontawesome":
// [375]  ExpandIcon = {4} 
_B._expandicon="<i class=\"fa fa-chevron-right\"></i>";
// [376]  CollapseIcon = {5} 
_B._collapseicon="<i class=\"fa fa-chevron-down\"></i>";
// [377]  End Select 
break;
}
// [378]  Dim sizes As List 
_sizes=[];
// [379]  sizes.Initialize 
_sizes.length=0;
// [380]  sizes.AddAll(Array As Int(5,10,15,20,25,30,35,40,45,50)) 
_sizes.splice(_sizes.length,0,...[5,10,15,20,25,30,35,40,45,50]);
// [381]  Dim pager As Map = CreateMap( {111} :PagerLimit, {112} :sizes) 
_pager={"limit":_B._pagerlimit, "sizes":_sizes};
// [382]  Dim mapping As Map = CreateMap( {113} : DataField) 
_mapping={"dataField":_B._datafield};
// [383]  Columns.Initialize 
_B._columns.length=0;
// [384]  For Each column As Map In columnsM.Values 
for (_columnKEY in _B._columnsm) {
var _column=_B._columnsm[_columnKEY];
// [385]  Columns.Add(column) 
_B._columns.push(_column);
// [386]  Next 
}
// [387]  If autoGenerateColumns Then Columns.clear 
if (_B._autogeneratecolumns) {_B._columns.length=0;}
// [389]  Options = CreateMap( {114} :DataSource, {115} : PrimaryKey, {116} :mapping, {117} :autoLoad, {118} : BodyRowHeight, {119} :SelectionType, {120} :SelectionMethod, {121} : IconsLibrary, {122} : ColumnReorder, {123} :KeepExpandedRows, {124} :FixedHeader, {125} :ResizableColumns, {126} : responsive, {127} : RowReorder, {128} :autoGenerateColumns, {129} : UILibrary) 
_B._options={"dataSource":_B._datasource, "primaryKey":_B._primarykey, "mapping":_mapping, "autoLoad":_B._autoload, "bodyRowHeight":_B._bodyrowheight, "selectionType":_B._selectiontype, "selectionMethod":_B._selectionmethod, "iconsLibrary":_B._iconslibrary, "columnReorder":_B._columnreorder, "keepExpandedRows":_B._keepexpandedrows, "fixedHeader":_B._fixedheader, "resizableColumns":_B._resizablecolumns, "responsive":_B._responsive, "rowReorder":_B._rowreorder, "autoGenerateColumns":_B._autogeneratecolumns, "uiLibrary":_B._uilibrary};
// [405]  If InlineEditing Then 
if (_B._inlineediting) {
// [406]  Dim InlineEditingObject As Map = CreateMap( {130} : InlineEditingMode, {131} :InlineEditingManagementColumn) 
_inlineeditingobject={"mode":_B._inlineeditingmode, "managementColumn":_B._inlineeditingmanagementcolumn};
// [407]  Options.Put( {132} , InlineEditingObject) 
_B._options["inlineEditing"]=_inlineeditingobject;
// [408]  End If 
}
// [409]  If ShowPager Then Options.Put( {133} , pager) 
if (_B._showpager) {_B._options["pager"]=_pager;}
// [410]  If Columns.Size > 0 Then Options.Put( {134} , Columns) 
if (_B._columns.length>0) {_B._options["columns"]=_B._columns;}
// [411]  If MinWidth > 0 Then Options.put( {135} , MinWidth) 
if (_B._minwidth>0) {_B._options["minWidth"]=_B._minwidth;}
// [412]  If ToolbarTemplate.Length > 0 Then Options.Put( {136} ,ToolbarTemplate) 
if (_B._toolbartemplate.length>0) {_B._options["toolbarTemplate"]=_B._toolbartemplate;}
// [413]  If Width > 0 Then Options.Put( {137} , Width) 
if (_B._width>0) {_B._options["width"]=_B._width;}
// [415]  If GroupBy.length > 0 Then Options.Put( {138} , CreateMap( {139} : GroupBy)) 
if (_B._groupby.length>0) {_B._options["grouping"]={"groupBy":_B._groupby};}
// [416]  If DetailTemplate.Length > 0 Then Options.Put( {140} , DetailTemplate) 
if (_B._detailtemplate.length>0) {_B._options["detailTemplate"]=_B._detailtemplate;}
// [417]  If params.Size > 0 Then Options.Put( {141} , params) 
if (Object.keys(_B._params).length>0) {_B._options["params"]=_B._params;}
// [418]  If HeaderFilter Then 
if (_B._headerfilter) {
// [419]  Dim hf As Map = CreateMap( {142} : HeaderFilterType) 
_hf={"type":_B._headerfiltertype};
// [420]  Options.Put( {143} , hf) 
_B._options["headerFilter"]=_hf;
// [421]  End If 
}
// [422]  Dim icn As Map 
_icn={};
// [423]  icn.Initialize 
_icn={};
// [424]  icn.Put( {144} , ExpandIcon) 
_icn["expandRow"]=_B._expandicon;
// [425]  icn.Put( {145} , CollapseIcon) 
_icn["collapseRow"]=_B._collapseicon;
// [426]  icn.Put( {146} , ExpandIcon) 
_icn["expandGroup"]=_B._expandicon;
// [427]  icn.Put( {147} , CollapseIcon) 
_icn["collapseGroup"]=_B._collapseicon;
// [428]  Options.Put( {148} , icn) 
_B._options["icons"]=_icn;
// [430]  grid = JQ.Selector( {6} ) 
_B._grid=_B._jq("#" + _B._id + "");
// [431]  grid.RunMethod( {149} , Array(Options)) 
_B._grid["grid"](_B._options);
// [458]  Return Me 
return _B;
// End Sub
};

// [462] Sub UpdateRow(rowData As Map) 
_B.updaterow=function(_rowdata) {
var _pk;
// [463]  Dim pk As String = rowData.Get(PrimaryKey) 
_pk=_rowdata[_B._primarykey];
// [464]  grid.runmethod( {177} , Array(pk, rowData)) 
_B._grid["updateRow"](_pk,_rowdata);
// End Sub
};

// [468] Sub AddColumn(colName As String, colTitle As String) As VMGijgoTable 
_B.addcolumn=function(_colname,_coltitle) {
var _col;
// [470]  colName = colName.Replace( {178} , {179} ) 
_colname=_colname.split(" ").join("");
// [471]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [472]  Dim col As Map = CreateMap( {180} :colName, {181} :colTitle) 
_col={"field":_colname, "title":_coltitle};
// [473]  col.Put( {182} , COLUMN_TEXT) 
_col["type"]=_B._column_text;
// [478]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [479]  SetColumnSortable(colName, True) 
_B.setcolumnsortable(_colname,true,_B);
// [480]  Return Me 
return _B;
// End Sub
};

// [485] Sub AddColumn1(colName As String, colTitle As String, colType As String, colWidth As Int, colSortable As Boolean, colAlign As String) As VMGijgoTable 
_B.addcolumn1=function(_colname,_coltitle,_coltype,_colwidth,_colsortable,_colalign) {
var _col,_events;
// [487]  colName = colName.Replace( {185} , {186} ) 
_colname=_colname.split(" ").join("");
// [488]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [489]  Dim col As Map = CreateMap( {187} :colName, {188} :colTitle) 
_col={"field":_colname, "title":_coltitle};
// [490]  If colWidth > 0 Then col.Put( {189} , colWidth) 
if (_colwidth>0) {_col["width"]=_colwidth;}
// [491]  If colSortable Then col.Put( {190} , colSortable) 
if (_colsortable) {_col["sortable"]=_colsortable;}
// [492]  If colType <> COLUMN_NONE Then col.Put( {191} , colType) 
if (_coltype!=_B._column_none) {_col["type"]=_coltype;}
// [493]  Select Case colAlign 
switch ("" + _colalign) {
// [494]  Case ALIGN_CENTER, ALIGN_RIGHT 
case "" + _B._align_center:
case "" + _B._align_right:
// [495]  col.Put( {192} , colAlign) 
_col["align"]=_colalign;
// [496]  End Select 
break;
}
// [497]  col.Put( {193} , True) 
_col["filterable"]=true;
// [498]  Dim events As Map 
_events={};
// [499]  events.Initialize 
_events={};
// [500]  col.Put( {194} , events) 
_col["events"]=_events;
// [501]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [502]  SetColumnType(colName, colType) 
_B.setcolumntype(_colname,_coltype,_B);
// [503]  Return Me 
return _B;
// End Sub
};

// [507] Sub AddIcon(colField As String, colTitle As String, colIcon As String, colWidth As String) 
_B.addicon=function(_colfield,_coltitle,_colicon,_colwidth) {
var _sicon;
// [508]  Dim sIcon As String 
_sicon="";
// [509]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [510]  Case {195} 
case "" + "materialicons":
// [511]  sIcon = {10} 
_sicon="<span class=\"material-icons gj-cursor-pointer\">" + _colicon + "</span>";
// [512]  Case {196} 
break;
case "" + "fontawesome":
// [513]  sIcon = {11} 
_sicon="<span class=\"" + _colicon + " gj-cursor-pointer\"></span>";
// [514]  End Select 
break;
}
// [515]  AddColumn(colField,colTitle) 
_B.addcolumn(_colfield,_coltitle,_B);
// [516]  SetColumnTmpl(colField,sIcon) 
_B.setcolumntmpl(_colfield,_sicon,_B);
// [517]  SetColumnFilterable(colField,False) 
_B.setcolumnfilterable(_colfield,false,_B);
// [518]  SetColumnType(colField, COLUMN_NONE) 
_B.setcolumntype(_colfield,_B._column_none,_B);
// [519]  SetColumnWidth(colField, colWidth) 
_B.setcolumnwidth(_colfield,_colwidth,_B);
// [520]  SetColumnSortable(colField, False) 
_B.setcolumnsortable(_colfield,false,_B);
// [521]  SetColumnAlignment(colField, ALIGN_CENTER) 
_B.setcolumnalignment(_colfield,_B._align_center,_B);
// End Sub
};

// [525] Sub AddIconEdit(colField As String, colTitle As String) 
_B.addiconedit=function(_colfield,_coltitle) {
var _editicon;
// [526]  Dim EditIcon As String 
_editicon="";
// [527]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [528]  Case {197} 
case "" + "materialicons":
// [529]  EditIcon = {12} 
_editicon="<span class=\"material-icons gj-cursor-pointer\">edit</span>";
// [530]  Case {198} 
break;
case "" + "fontawesome":
// [531]  EditIcon = {13} 
_editicon="<span class=\"fa fa-pencil gj-cursor-pointer\"></span>";
// [532]  End Select 
break;
}
// [533]  AddColumn(colField,colTitle) 
_B.addcolumn(_colfield,_coltitle,_B);
// [534]  SetColumnTmpl(colField,EditIcon) 
_B.setcolumntmpl(_colfield,_editicon,_B);
// [535]  SetColumnFilterable(colField,False) 
_B.setcolumnfilterable(_colfield,false,_B);
// [536]  SetColumnType(colField, COLUMN_NONE) 
_B.setcolumntype(_colfield,_B._column_none,_B);
// [537]  SetColumnWidth(colField, {199} ) 
_B.setcolumnwidth(_colfield,"80",_B);
// [538]  SetColumnSortable(colField, False) 
_B.setcolumnsortable(_colfield,false,_B);
// [539]  SetColumnAlignment(colField, ALIGN_CENTER) 
_B.setcolumnalignment(_colfield,_B._align_center,_B);
// End Sub
};

// [543] Sub AddEditTrash 
_B.addedittrash=function() {
// [544]  AddIconEdit( {200} , {201} ) 
_B.addiconedit("edit","Edit",_B);
// [545]  SetColumnClickEvent( {202} , True) 
_B.setcolumnclickevent("edit",true,_B);
// [546]  AddIconDelete( {203} , {204} ) 
_B.addicondelete("delete","Delete",_B);
// [547]  SetColumnClickEvent( {205} , True) 
_B.setcolumnclickevent("delete",true,_B);
// End Sub
};

// [550] Sub AddDownload 
_B.adddownload=function() {
// [551]  AddIcon( {206} , {207} , {208} , {209} ) 
_B.addicon("download","Get","attach_file","80",_B);
// [552]  SetColumnClickEvent( {210} , True) 
_B.setcolumnclickevent("download",true,_B);
// End Sub
};

// [555] Sub AddDelete 
_B.adddelete=function() {
// [556]  AddIconDelete( {211} , {212} ) 
_B.addicondelete("delete","Delete",_B);
// [557]  SetColumnClickEvent( {213} , True) 
_B.setcolumnclickevent("delete",true,_B);
// End Sub
};

// [560] Sub AddEdit 
_B.addedit=function() {
// [561]  AddIconEdit( {214} , {215} ) 
_B.addiconedit("edit","Edit",_B);
// [562]  SetColumnClickEvent( {216} , True) 
_B.setcolumnclickevent("edit",true,_B);
// End Sub
};

// [565] Sub AddClone 
_B.addclone=function() {
// [566]  AddIcon( {217} , {218} , {219} , 80) 
_B.addicon("clone","Clone","done_all",80,_B);
// [567]  SetColumnClickEvent( {220} , True) 
_B.setcolumnclickevent("clone",true,_B);
// End Sub
};

// [570] Sub AddPrint 
_B.addprint=function() {
// [571]  AddIcon( {221} , {222} , {223} , 80) 
_B.addicon("print","Print","print",80,_B);
// [572]  SetColumnClickEvent( {224} , True) 
_B.setcolumnclickevent("print",true,_B);
// End Sub
};

// [576] Sub AddColumns(flds As Map) 
_B.addcolumns=function(_flds) {
var _k,_v;
// [577]  For Each k As String In flds.Keys 
var _kKeys = Object.keys(_flds);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [578]  Dim v As String = flds.Get(k) 
_v=_flds[_k];
// [579]  AddColumn(k, v) 
_B.addcolumn(_k,_v,_B);
// [580]  SetColumnSortable(k, True) 
_B.setcolumnsortable(_k,true,_B);
// [581]  Next 
}
// End Sub
};

// [585] Sub AddIconDelete(colField As String, colTitle As String) 
_B.addicondelete=function(_colfield,_coltitle) {
var _delicon;
// [586]  Dim DelIcon As String 
_delicon="";
// [587]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [588]  Case {225} 
case "" + "materialicons":
// [589]  DelIcon = {14} 
_delicon="<span class=\"material-icons gj-cursor-pointer\">delete</span>";
// [590]  Case {226} 
break;
case "" + "fontawesome":
// [591]  DelIcon = {15} 
_delicon="<span class=\"fa fa-remove gj-cursor-pointer\"></span>";
// [592]  End Select 
break;
}
// [593]  AddColumn(colField,colTitle) 
_B.addcolumn(_colfield,_coltitle,_B);
// [594]  SetColumnTmpl(colField,DelIcon) 
_B.setcolumntmpl(_colfield,_delicon,_B);
// [595]  SetColumnFilterable(colField,False) 
_B.setcolumnfilterable(_colfield,false,_B);
// [596]  SetColumnType(colField, COLUMN_NONE) 
_B.setcolumntype(_colfield,_B._column_none,_B);
// [597]  SetColumnWidth(colField, {227} ) 
_B.setcolumnwidth(_colfield,"80",_B);
// [598]  SetColumnSortable(colField, False) 
_B.setcolumnsortable(_colfield,false,_B);
// [599]  SetColumnAlignment(colField, ALIGN_CENTER) 
_B.setcolumnalignment(_colfield,_B._align_center,_B);
// End Sub
};

// [604] Sub AddTemplate(colField As String, colTitle As String, colTemplate As String, colWidth As String, colSortable As Boolean, colAlign As String) 
_B.addtemplate=function(_colfield,_coltitle,_coltemplate,_colwidth,_colsortable,_colalign) {
// [605]  AddColumn(colField,colTitle) 
_B.addcolumn(_colfield,_coltitle,_B);
// [606]  SetColumnTmpl(colField,colTemplate) 
_B.setcolumntmpl(_colfield,_coltemplate,_B);
// [607]  SetColumnType(colField, COLUMN_NONE) 
_B.setcolumntype(_colfield,_B._column_none,_B);
// [608]  SetColumnWidth(colField, colWidth) 
_B.setcolumnwidth(_colfield,_colwidth,_B);
// [609]  SetColumnSortable(colField, colSortable) 
_B.setcolumnsortable(_colfield,_colsortable,_B);
// [610]  SetColumnAlignment(colField, colAlign) 
_B.setcolumnalignment(_colfield,_colalign,_B);
// End Sub
};

// [614] Sub SetColumnWidth(colName As String, colWidth As String) As VMGijgoTable 
_B.setcolumnwidth=function(_colname,_colwidth) {
var _col;
// [615]  colName = colName.Replace( {228} , {229} ) 
_colname=_colname.split(" ").join("");
// [616]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [617]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [618]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [619]  col.Put( {230} , colWidth) 
_col["width"]=_colwidth;
// [620]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [621]  End If 
}
// [622]  Return Me 
return _B;
// End Sub
};

// [626] Sub SetColumnAlignment(colName As String, colAlign As String) As VMGijgoTable 
_B.setcolumnalignment=function(_colname,_colalign) {
var _col;
// [627]  colName = colName.Replace( {231} , {232} ) 
_colname=_colname.split(" ").join("");
// [628]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [629]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [630]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [631]  Select Case colAlign 
switch ("" + _colalign) {
// [632]  Case ALIGN_CENTER, ALIGN_RIGHT 
case "" + _B._align_center:
case "" + _B._align_right:
// [633]  col.Put( {233} , colAlign) 
_col["align"]=_colalign;
// [634]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [635]  End Select 
break;
}
// [636]  End If 
}
// [637]  Return Me 
return _B;
// End Sub
};

// [641] Sub SetCenterAlignColumns(flds As List) As VMGijgoTable 
_B.setcenteraligncolumns=function(_flds) {
var _k;
// [642]  For Each k As String In flds 
for (var _kindex=0;_kindex<_flds.length;_kindex++) {
_k=_flds[_kindex];
// [643]  SetColumnAlignment(k, ALIGN_CENTER) 
_B.setcolumnalignment(_k,_B._align_center,_B);
// [644]  Next 
}
// [645]  Return Me 
return _B;
// End Sub
};

// [649] Sub SetColumnsAlignmentCenter(flds As List) As VMGijgoTable 
_B.setcolumnsalignmentcenter=function(_flds) {
// [650]  SetCenterAlignColumns(flds) 
_B.setcenteraligncolumns(_flds,_B);
// [651]  Return Me 
return _B;
// End Sub
};

// [656] Sub SetColumnsAlignmentRight(flds As List) As VMGijgoTable 
_B.setcolumnsalignmentright=function(_flds) {
// [657]  SetRightAlignColumns(flds) 
_B.setrightaligncolumns(_flds,_B);
// [658]  Return Me 
return _B;
// End Sub
};

// [662] Sub SetRightAlignColumns(flds As List) As VMGijgoTable 
_B.setrightaligncolumns=function(_flds) {
var _k;
// [663]  For Each k As String In flds 
for (var _kindex=0;_kindex<_flds.length;_kindex++) {
_k=_flds[_kindex];
// [664]  SetColumnAlignment(k, ALIGN_RIGHT) 
_B.setcolumnalignment(_k,_B._align_right,_B);
// [665]  Next 
}
// [666]  Return Me 
return _B;
// End Sub
};

// [671] Sub SetColumnTmpl(colName As String, coltmpl As String) As VMGijgoTable 
_B.setcolumntmpl=function(_colname,_coltmpl) {
var _col;
// [672]  colName = colName.Replace( {234} , {235} ) 
_colname=_colname.split(" ").join("");
// [673]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [674]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [675]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [676]  col.Put( {236} , coltmpl) 
_col["tmpl"]=_coltmpl;
// [677]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [678]  End If 
}
// [679]  Return Me 
return _B;
// End Sub
};

// [683] Sub SetColumnType(colName As String, colType As String) As VMGijgoTable 
_B.setcolumntype=function(_colname,_coltype) {
var _value,_record,_cell,_displayel,_col;
// [684]  Dim value, record, cell, displayEl As Map 
_value={};
_record={};
_cell={};
_displayel={};
// [685]  colName = colName.Replace( {237} , {238} ) 
_colname=_colname.split(" ").join("");
// [686]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [688]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [689]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [690]  col.Put( {239} , colType) 
_col["type"]=_coltype;
// [691]  Select Case colType 
switch ("" + _coltype) {
// [692]  Case COLUMN_IMAGE 
case "" + _B._column_image:
// [693]  col.Put( {240} , {241} ) 
_col["type"]="text";
// [694]  col.Put( {242} , Banano.CallBack(Me, {243} ,Array(value, record, cell, displayEl))) 
_col["renderer"]=function(_value,_record,_cell,_displayel) {if (typeof _B[("imagerender").toLowerCase()]==="function") {return _B[("imagerender").toLowerCase()](_value,_record,_cell,_displayel,_B)};};
// [695]  Case COLUMN_MONEY 
break;
case "" + _B._column_money:
// [696]  col.Put( {244} , {245} ) 
_col["type"]="text";
// [697]  col.Put( {246} , Banano.CallBack(Me, {247} ,Array(value, record, cell, displayEl))) 
_col["renderer"]=function(_value,_record,_cell,_displayel) {if (typeof _B[("moneyrender").toLowerCase()]==="function") {return _B[("moneyrender").toLowerCase()](_value,_record,_cell,_displayel,_B)};};
// [698]  col.Put( {248} , ALIGN_RIGHT) 
_col["align"]=_B._align_right;
// [699]  Case COLUMN_FILESIZE 
break;
case "" + _B._column_filesize:
// [700]  col.Put( {249} , {250} ) 
_col["type"]="text";
// [701]  col.Put( {251} , Banano.CallBack(Me, {252} ,Array(value, record, cell, displayEl))) 
_col["renderer"]=function(_value,_record,_cell,_displayel) {if (typeof _B[("filerender").toLowerCase()]==="function") {return _B[("filerender").toLowerCase()](_value,_record,_cell,_displayel,_B)};};
// [702]  col.Put( {253} , ALIGN_RIGHT) 
_col["align"]=_B._align_right;
// [703]  Case COLUMN_DATE 
break;
case "" + _B._column_date:
// [704]  col.Put( {254} , {255} ) 
_col["format"]="yyyy-mm-dd";
// [705]  Case COLUMN_TIME 
break;
case "" + _B._column_time:
// [706]  col.Put( {256} , {257} ) 
_col["format"]="HH:MM";
// [707]  Case COLUMN_DATETIME 
break;
case "" + _B._column_datetime:
// [708]  col.Put( {258} , {259} ) 
_col["format"]="yyyy-mm-dd HH:MM";
// [709]  Case COLUMN_ICONRENDER 
break;
case "" + _B._column_iconrender:
// [710]  col.Put( {260} , {261} ) 
_col["type"]="text";
// [711]  col.Put( {262} , Banano.CallBack(Me, {263} ,Array(value, record, cell, displayEl))) 
_col["renderer"]=function(_value,_record,_cell,_displayel) {if (typeof _B[("iconrender").toLowerCase()]==="function") {return _B[("iconrender").toLowerCase()](_value,_record,_cell,_displayel,_B)};};
// [712]  End Select 
break;
}
// [713]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [714]  End If 
}
// [715]  Return Me 
return _B;
// End Sub
};

// [719] Sub SetDateColumns(dates As List) As VMGijgoTable 
_B.setdatecolumns=function(_dates) {
var _k;
// [720]  For Each k As String In dates 
for (var _kindex=0;_kindex<_dates.length;_kindex++) {
_k=_dates[_kindex];
// [721]  SetColumnType(k, COLUMN_DATE) 
_B.setcolumntype(_k,_B._column_date,_B);
// [722]  Next 
}
// [723]  Return Me 
return _B;
// End Sub
};

// [726] Sub SetColumnsFormatDate(dates As List) As VMGijgoTable 
_B.setcolumnsformatdate=function(_dates) {
// [727]  SetDateColumns(dates) 
_B.setdatecolumns(_dates,_B);
// [728]  Return Me 
return _B;
// End Sub
};

// [732] Sub SetDateTimeColumns(dates As List) As VMGijgoTable 
_B.setdatetimecolumns=function(_dates) {
var _k;
// [733]  For Each k As String In dates 
for (var _kindex=0;_kindex<_dates.length;_kindex++) {
_k=_dates[_kindex];
// [734]  SetColumnType(k, COLUMN_DATETIME) 
_B.setcolumntype(_k,_B._column_datetime,_B);
// [735]  Next 
}
// [736]  Return Me 
return _B;
// End Sub
};

// [739] Sub SetColumnsFormatDateTime(dates As List) As VMGijgoTable 
_B.setcolumnsformatdatetime=function(_dates) {
// [740]  SetDateTimeColumns(dates) 
_B.setdatetimecolumns(_dates,_B);
// [741]  Return Me 
return _B;
// End Sub
};

// [746] Sub SetFileSizeColumns(dates As List) As VMGijgoTable 
_B.setfilesizecolumns=function(_dates) {
var _k;
// [747]  For Each k As String In dates 
for (var _kindex=0;_kindex<_dates.length;_kindex++) {
_k=_dates[_kindex];
// [748]  SetColumnType(k, COLUMN_FILESIZE) 
_B.setcolumntype(_k,_B._column_filesize,_B);
// [749]  Next 
}
// [750]  Return Me 
return _B;
// End Sub
};

// [753] Sub SetColumnsFormatFileSize(dates As List) As VMGijgoTable 
_B.setcolumnsformatfilesize=function(_dates) {
// [754]  SetFileSizeColumns(dates) 
_B.setfilesizecolumns(_dates,_B);
// [755]  Return Me 
return _B;
// End Sub
};

// [760] Sub SetTimeColumns(dates As List) As VMGijgoTable 
_B.settimecolumns=function(_dates) {
var _k;
// [761]  For Each k As String In dates 
for (var _kindex=0;_kindex<_dates.length;_kindex++) {
_k=_dates[_kindex];
// [762]  SetColumnType(k, COLUMN_TIME) 
_B.setcolumntype(_k,_B._column_time,_B);
// [763]  Next 
}
// [764]  Return Me 
return _B;
// End Sub
};

// [767] Sub SetColumnsFormatTime(dates As List) As VMGijgoTable 
_B.setcolumnsformattime=function(_dates) {
// [768]  SetTimeColumns(dates) 
_B.settimecolumns(_dates,_B);
// [769]  Return Me 
return _B;
// End Sub
};

// [772] Sub SetColumnsFormatMoney(dates As List) As VMGijgoTable 
_B.setcolumnsformatmoney=function(_dates) {
// [773]  SetMoneyColumns(dates) 
_B.setmoneycolumns(_dates,_B);
// [774]  Return Me 
return _B;
// End Sub
};

// [778] Sub SetMoneyColumns(dates As List) As VMGijgoTable 
_B.setmoneycolumns=function(_dates) {
var _k;
// [779]  For Each k As String In dates 
for (var _kindex=0;_kindex<_dates.length;_kindex++) {
_k=_dates[_kindex];
// [780]  SetColumnType(k, COLUMN_MONEY) 
_B.setcolumntype(_k,_B._column_money,_B);
// [781]  Next 
}
// [782]  Return Me 
return _B;
// End Sub
};

// [787] Sub SetColumnClickEvent(colField As String, stopPropagation As Boolean) 
_B.setcolumnclickevent=function(_colfield,_stoppropagation) {
var _e,_col,_events;
// [788]  colField = colField.Replace( {264} , {265} ) 
_colfield=_colfield.split(" ").join("");
// [789]  colField = colField.tolowercase 
_colfield=_colfield.toLowerCase();
// [790]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [791]  Dim e As Map 
_e={};
// [792]  Dim col As Map = columnsM.Get(colField) 
_col=_B._columnsm[_colfield];
// [793]  If col.ContainsKey( {266} ) = False Then 
if (("events" in _col)==false) {
// [794]  Dim events As Map = CreateMap() 
_events={};
// [795]  col.Put( {267} , events) 
_col["events"]=_events;
// [796]  End If 
}
// [797]  Dim events As Map = col.Get( {268} ) 
_events=_col["events"];
// [798]  If stopPropagation Then col.Put( {269} , stopPropagation) 
if (_stoppropagation) {_col["stopPropagation"]=_stoppropagation;}
// [799]  events.Put( {270} , Banano.CallBack(mCallBack, eventName & {16} , Array(e))) 
_events["click"]=function(_e) {if (typeof _B._mcallback[(_B._eventname+"_" + _colfield + "").toLowerCase()]==="function") {return _B._mcallback[(_B._eventname+"_" + _colfield + "").toLowerCase()](_e,_B)};};
// [800]  col.Put( {271} , events) 
_col["events"]=_events;
// [801]  columnsM.Put(colField,col) 
_B._columnsm[_colfield]=_col;
// [802]  End If 
}
// End Sub
};

// [806] Sub SetColumnEvent(colField As String, colEvent As String, stopPropagation As Boolean) 
_B.setcolumnevent=function(_colfield,_colevent,_stoppropagation) {
var _e,_col,_events;
// [807]  colField = colField.Replace( {272} , {273} ) 
_colfield=_colfield.split(" ").join("");
// [808]  colField = colField.tolowercase 
_colfield=_colfield.toLowerCase();
// [809]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [810]  Dim e As Map 
_e={};
// [811]  Dim col As Map = columnsM.Get(colField) 
_col=_B._columnsm[_colfield];
// [812]  If col.ContainsKey( {274} ) = False Then 
if (("events" in _col)==false) {
// [813]  Dim events As Map = CreateMap() 
_events={};
// [814]  col.Put( {275} , events) 
_col["events"]=_events;
// [815]  End If 
}
// [816]  Dim events As Map = col.Get( {276} ) 
_events=_col["events"];
// [817]  If stopPropagation Then col.Put( {277} , stopPropagation) 
if (_stoppropagation) {_col["stopPropagation"]=_stoppropagation;}
// [818]  events.Put(colEvent, Banano.CallBack(mCallBack, eventName & {17} , Array(e))) 
_events[_colevent]=function(_e) {if (typeof _B._mcallback[(_B._eventname+"_" + _colfield.toLowerCase() + "_" + _colevent + "").toLowerCase()]==="function") {return _B._mcallback[(_B._eventname+"_" + _colfield.toLowerCase() + "_" + _colevent + "").toLowerCase()](_e,_B)};};
// [819]  col.Put( {278} , events) 
_col["events"]=_events;
// [820]  columnsM.Put(colField,col) 
_B._columnsm[_colfield]=_col;
// [821]  End If 
}
// End Sub
};

// [829] Sub SetColumnMinWidth(colField As String, colMinWidth As Int, colPriority As Int) As VMGijgoTable 
_B.setcolumnminwidth=function(_colfield,_colminwidth,_colpriority) {
var _col;
// [830]  colField = colField.Replace( {279} , {280} ) 
_colfield=_colfield.split(" ").join("");
// [831]  colField = colField.tolowercase 
_colfield=_colfield.toLowerCase();
// [832]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [833]  Dim col As Map = columnsM.Get(colField) 
_col=_B._columnsm[_colfield];
// [834]  col.Put( {281} , colMinWidth) 
_col["minWidth"]=_colminwidth;
// [835]  col.Put( {282} , colPriority) 
_col["priority"]=_colpriority;
// [836]  columnsM.Put(colField,col) 
_B._columnsm[_colfield]=_col;
// [837]  End If 
}
// [838]  Return Me 
return _B;
// End Sub
};

// [842] Sub GetSelected As String 
_B.getselected=function() {
var _res;
// [843]  Dim res As String = grid.RunMethod( {283} ,Null).Result 
_res=_B._grid["getSelected"]();
// [844]  Return res 
return _res;
// End Sub
};

// [848] Sub GetSelections As List 
_B.getselections=function() {
var _res;
// [849]  Dim res As List = grid.RunMethod( {284} ,Null).Result 
_res=_B._grid["getSelections"]();
// [850]  Return res 
return _res;
// End Sub
};

// [854] Sub SelectAll 
_B.selectall=function() {
// [855]  grid.RunMethod( {285} , Null) 
_B._grid["selectAll"]();
// End Sub
};

// [859] Sub UnSelectAll 
_B.unselectall=function() {
// [860]  grid.RunMethod( {286} , Null) 
_B._grid["unSelectAll"]();
// End Sub
};

// [864] Sub ExpandAll 
_B.expandall=function() {
// [865]  grid.RunMethod( {287} , Null) 
_B._grid["expandAll"]();
// End Sub
};

// [869] Sub CollapseAll 
_B.collapseall=function() {
// [870]  grid.RunMethod( {288} , Null) 
_B._grid["collapseAll"]();
// End Sub
};

// [874] Sub SetSelected(rowPos As Int) 
_B.setselected=function(_rowpos) {
// [875]  grid.runmethod( {289} , Array(rowPos)) 
_B._grid["setSelected"](_rowpos);
// End Sub
};

// [879] Sub SetColumnName(colField As String, colName As String) As VMGijgoTable 
_B.setcolumnname=function(_colfield,_colname) {
var _col;
// [880]  colField = colField.Replace( {290} , {291} ) 
_colfield=_colfield.split(" ").join("");
// [881]  colField = colField.tolowercase 
_colfield=_colfield.toLowerCase();
// [882]  If columnsM.ContainsKey(colField) Then 
if ((_colfield in _B._columnsm)) {
// [883]  Dim col As Map = columnsM.Get(colField) 
_col=_B._columnsm[_colfield];
// [884]  col.Put( {292} , colName) 
_col["name"]=_colname;
// [885]  columnsM.Put(colField,col) 
_B._columnsm[_colfield]=_col;
// [886]  End If 
}
// [887]  Return Me 
return _B;
// End Sub
};

// [892] Sub SetColumnToolTip(colName As String, colToolTip As String) As VMGijgoTable 
_B.setcolumntooltip=function(_colname,_coltooltip) {
var _col;
// [893]  colName = colName.Replace( {293} , {294} ) 
_colname=_colname.split(" ").join("");
// [894]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [896]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [897]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [898]  col.Put( {295} , colToolTip) 
_col["tooltip"]=_coltooltip;
// [899]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [900]  End If 
}
// [901]  Return Me 
return _B;
// End Sub
};

// [905] Sub SetColumnStopPropagation(colName As String, colStopPropagation As Boolean) As VMGijgoTable 
_B.setcolumnstoppropagation=function(_colname,_colstoppropagation) {
var _col;
// [906]  colName = colName.Replace( {296} , {297} ) 
_colname=_colname.split(" ").join("");
// [907]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [909]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [910]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [911]  col.Put( {298} , colStopPropagation) 
_col["stopPropagation"]=_colstoppropagation;
// [912]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [913]  End If 
}
// [914]  Return Me 
return _B;
// End Sub
};

// [919] Sub GetChanges As List 
_B.getchanges=function() {
var _res;
// [920]  Dim res As List = grid.runmethod( {299} ,Null).Result 
_res=_B._grid["getChanges"]();
// [921]  Return res 
return _res;
// End Sub
};

// [925] Sub SetColumnIcon(colName As String, colIcon As String) As VMGijgoTable 
_B.setcolumnicon=function(_colname,_colicon) {
var _col;
// [926]  colName = colName.Replace( {300} , {301} ) 
_colname=_colname.split(" ").join("");
// [927]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [928]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [929]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [930]  col.Put( {302} , colIcon) 
_col["icon"]=_colicon;
// [931]  col.Put( {303} , COLUMN_ICON) 
_col["type"]=_B._column_icon;
// [932]  col.Put( {304} , False) 
_col["filterable"]=false;
// [933]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [934]  End If 
}
// [935]  Return Me 
return _B;
// End Sub
};

// [939] Sub SetColumnsHidden(colNames As List) 
_B.setcolumnshidden=function(_colnames) {
var _col;
// [940]  For Each col As String In colNames 
for (var _colindex=0;_colindex<_colnames.length;_colindex++) {
_col=_colnames[_colindex];
// [941]  SetColumnHidden(col) 
_B.setcolumnhidden(_col,_B);
// [942]  Next 
}
// End Sub
};

// [945] Sub SetColumnsSortable(colNames As List, b As Boolean) 
_B.setcolumnssortable=function(_colnames,_b) {
var _col;
// [946]  For Each col As String In colNames 
for (var _colindex=0;_colindex<_colnames.length;_colindex++) {
_col=_colnames[_colindex];
// [947]  SetColumnSortable(col, b) 
_B.setcolumnsortable(_col,_b,_B);
// [948]  Next 
}
// End Sub
};

// [951] Sub SetColumnsFilterable(colNames As List, b As Boolean) 
_B.setcolumnsfilterable=function(_colnames,_b) {
var _col;
// [952]  For Each col As String In colNames 
for (var _colindex=0;_colindex<_colnames.length;_colindex++) {
_col=_colnames[_colindex];
// [953]  SetColumnFilterable(col, b) 
_B.setcolumnfilterable(_col,_b,_B);
// [954]  Next 
}
// End Sub
};

// [957] Sub SetColumnsFormat(colNames As List, f As String) 
_B.setcolumnsformat=function(_colnames,_f) {
var _col;
// [958]  For Each col As String In colNames 
for (var _colindex=0;_colindex<_colnames.length;_colindex++) {
_col=_colnames[_colindex];
// [959]  SetColumnFormat(col, f) 
_B.setcolumnformat(_col,_f,_B);
// [960]  Next 
}
// End Sub
};

// [965] Sub SetColumnHidden(colName As String) As VMGijgoTable 
_B.setcolumnhidden=function(_colname) {
var _col;
// [966]  colName = colName.Replace( {305} , {306} ) 
_colname=_colname.split(" ").join("");
// [967]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [968]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [969]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [970]  col.Put( {307} , True) 
_col["hidden"]=true;
// [971]  col.Put( {308} , False) 
_col["filterable"]=false;
// [972]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [973]  End If 
}
// [974]  Return Me 
return _B;
// End Sub
};

// [978] Sub SetColumnHiddenOnly(colName As String, bValue As Boolean) As VMGijgoTable 
_B.setcolumnhiddenonly=function(_colname,_bvalue) {
var _col;
// [979]  colName = colName.Replace( {309} , {310} ) 
_colname=_colname.split(" ").join("");
// [980]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [981]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [982]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [983]  col.Put( {311} , bValue) 
_col["hidden"]=_bvalue;
// [984]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [985]  End If 
}
// [986]  Return Me 
return _B;
// End Sub
};

// [991] Sub SetColumnSortable(colName As String, colSortable As Boolean) As VMGijgoTable 
_B.setcolumnsortable=function(_colname,_colsortable) {
var _col;
// [992]  colName = colName.Replace( {312} , {313} ) 
_colname=_colname.split(" ").join("");
// [993]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [994]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [995]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [996]  col.Put( {314} , colSortable) 
_col["sortable"]=_colsortable;
// [997]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [998]  End If 
}
// [999]  Return Me 
return _B;
// End Sub
};

// [1003] Sub AddRow(rowData As Map) 
_B.addrow=function(_rowdata) {
// [1004]  If grid = Null Then Refresh 
if (_B._grid==null) {_B.refresh(_B);}
// [1005]  grid.RunMethod( {315} , Array(rowData)) 
_B._grid["addRow"](_rowdata);
// End Sub
};

// [1009] Sub DownloadCSV(fileName As String) 
_B.downloadcsv=function(_filename) {
// [1010]  grid.RunMethod( {316} , Array(fileName,True)) 
_B._grid["downloadCSV"](_filename,true);
// End Sub
};

// [1014] Sub GetCSV 
_B.getcsv=function() {
// [1015]  grid.RunMethod( {317} , Array(True)) 
_B._grid["getCSV"](true);
// End Sub
};

// [1019] Sub SetColumnItalic(colName As String) As VMGijgoTable 
_B.setcolumnitalic=function(_colname) {
var _col;
// [1020]  colName = colName.Replace( {318} , {319} ) 
_colname=_colname.split(" ").join("");
// [1021]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [1022]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [1023]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [1024]  col.Put( {320} , {321} ) 
_col["headerCssClass"]="italic";
// [1025]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [1026]  End If 
}
// [1027]  Return Me 
return _B;
// End Sub
};

// [1031] Sub SetColumnHeaderCSS(colName As String, headerCssClass As String) As VMGijgoTable 
_B.setcolumnheadercss=function(_colname,_headercssclass) {
var _col;
// [1032]  colName = colName.Replace( {322} , {323} ) 
_colname=_colname.split(" ").join("");
// [1033]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [1035]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [1036]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [1037]  col.Put( {324} , headerCssClass) 
_col["headerCssClass"]=_headercssclass;
// [1038]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [1039]  End If 
}
// [1040]  Return Me 
return _B;
// End Sub
};

// [1044] Sub SetColumnFilterable(colName As String, colFilter As Boolean) As VMGijgoTable 
_B.setcolumnfilterable=function(_colname,_colfilter) {
var _col;
// [1045]  colName = colName.Replace( {325} , {326} ) 
_colname=_colname.split(" ").join("");
// [1046]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [1048]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [1049]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [1050]  col.Put( {327} , colFilter) 
_col["filterable"]=_colfilter;
// [1051]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [1052]  End If 
}
// [1053]  Return Me 
return _B;
// End Sub
};

// [1057] Sub SetColumnCSS(colName As String, colCSS As String) As VMGijgoTable 
_B.setcolumncss=function(_colname,_colcss) {
var _col;
// [1058]  colName = colName.Replace( {328} , {329} ) 
_colname=_colname.split(" ").join("");
// [1059]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [1061]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [1062]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [1063]  col.Put( {330} , colCSS) 
_col["cssClass"]=_colcss;
// [1064]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [1065]  End If 
}
// [1066]  Return Me 
return _B;
// End Sub
};

// [1071] Sub SetColumnFormatNumeral(colField As String, colFormat As String) As VMGijgoTable 
_B.setcolumnformatnumeral=function(_colfield,_colformat) {
// [1072]  SetColumnProperty(colField, {331} , colFormat) 
_B.setcolumnproperty(_colfield,"formatnumeral",_colformat,_B);
// [1073]  formats.Put(colField,colFormat) 
_B._formats[_colfield]=_colformat;
// [1074]  Return Me 
return _B;
// End Sub
};

// [1078] Sub SetColumnFormat(colName As String, colFormat As String) As VMGijgoTable 
_B.setcolumnformat=function(_colname,_colformat) {
var _col;
// [1079]  colName = colName.Replace( {332} , {333} ) 
_colname=_colname.split(" ").join("");
// [1080]  colName = colName.tolowercase 
_colname=_colname.toLowerCase();
// [1082]  If columnsM.ContainsKey(colName) Then 
if ((_colname in _B._columnsm)) {
// [1083]  Dim col As Map = columnsM.Get(colName) 
_col=_B._columnsm[_colname];
// [1084]  col.Put( {334} , colFormat) 
_col["format"]=_colformat;
// [1085]  columnsM.Put(colName,col) 
_B._columnsm[_colname]=_col;
// [1086]  End If 
}
// [1087]  Return Me 
return _B;
// End Sub
};

// [1091] Sub IconRender(value As Object, record As Map, cell As BANanoObject, displayEl As BANanoObject) 
_B.iconrender=function(_value,_record,_cell,_displayel) {
var _sfontsize,_sfontcolor,_sb,_sstyle,_sicon,_de;
// [1092]  If value = Null Then 
if (_value==null) {
// [1093]  value = {335} 
_value="";
// [1094]  Return 
return;
// [1095]  End If 
}
// [1096]  Dim sfontsize As String = record.GetDefault( {336} , {337} ) 
_sfontsize=(_record["iconsize"] || "");
// [1097]  Dim sfontcolor As String = record.GetDefault( {338} , {339} ) 
_sfontcolor=(_record["iconcolor"] || "");
// [1098]  If sfontsize = Null Then sfontsize = {340} 
if (_sfontsize==null) {_sfontsize="";}
// [1099]  If sfontcolor = Null Then sfontcolor = {341} 
if (_sfontcolor==null) {_sfontcolor="";}
// [1100]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [1101]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [1102]  If sfontsize <> {342} Then sb.Append( {18} ) 
if (_sfontsize!="") {_sb.append("font-size:" + _sfontsize + "px;");}
// [1103]  If sfontcolor <> {343} Then sb.Append( {19} ) 
if (_sfontcolor!="") {_sb.append("color:" + _sfontcolor + ";");}
// [1104]  Dim sStyle As String = sb.tostring 
_sstyle=_sb.toString();
// [1105]  Dim sIcon As String = {344} 
_sicon="";
// [1106]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [1107]  Case {345} 
case "" + "materialicons":
// [1108]  sIcon = {20} 
_sicon="<i class=\"material-icons gj-cursor-pointer\" style=\"" + _sstyle + "\">" + _value + "</i>";
// [1109]  Case {346} 
break;
case "" + "fontawesome":
// [1110]  sIcon = {21} 
_sicon="<i class=\"" + _value + " gj-cursor-pointer\" style=\"" + _sstyle + "\"></i>";
// [1111]  End Select 
break;
}
// [1112]  Dim dE As BANanoElement = Banano.ToElement(displayEl) 
_de=u(_displayel);
// [1113]  dE.SetHTML(sIcon) 
_de.html(_sicon);
// End Sub
};

// [1118] Sub FileRender(value As Object, record As Map, cell As BANanoObject, displayEl As BANanoObject) 
_B.filerender=function(_value,_record,_cell,_displayel) {
var _de;
// [1119]  If value = Null Then value = 0 
if (_value==null) {_value=0;}
// [1120]  Dim dE As BANanoElement = Banano.ToElement(displayEl) 
_de=u(_displayel);
// [1121]  value = N.Selector(value).RunMethod( {347} ,Array( {348} )) 
_value=_B._n(_value)["format"]("0.00 b");
// [1122]  dE.SetText(value) 
_de.text(_value);
// End Sub
};

// [1126] Sub NumeralFormat(sValue As String,sFormat As String) As String 
_B.numeralformat=function(_svalue,_sformat) {
// [1127]  sValue = N.Selector(sValue).RunMethod( {349} ,Array(sFormat)).result 
_svalue=_B._n(_svalue)["format"](_sformat);
// [1128]  Return sValue 
return _svalue;
// End Sub
};

// [1132] Sub MoneyRender(value As Object, record As Map, cell As BANanoObject, displayEl As BANanoObject) 
_B.moneyrender=function(_value,_record,_cell,_displayel) {
var _de;
// [1133]  If value = Null Then value = 0 
if (_value==null) {_value=0;}
// [1134]  Dim dE As BANanoElement = Banano.ToElement(displayEl) 
_de=u(_displayel);
// [1135]  value = N.Selector(value).RunMethod( {350} ,Array( {351} )) 
_value=_B._n(_value)["format"]("(0,0.00)");
// [1136]  dE.SetText(value) 
_de.text(_value);
// End Sub
};

// [1140] Sub ImageRender(value As Object, record As Map, cell As BANanoObject, displayEl As BANanoObject) 
_B.imagerender=function(_value,_record,_cell,_displayel) {
var _simagewidth,_simageheight,_sb,_sstyle,_de,_simg;
// [1142]  If value <> Null Then 
if (_value!=null) {
// [1143]  Dim simagewidth As String = record.GetDefault( {352} , {353} ) 
_simagewidth=(_record["imagewidth"] || "");
// [1144]  Dim simageheight As String = record.GetDefault( {354} , {355} ) 
_simageheight=(_record["imageheight"] || "");
// [1145]  If simagewidth = Null Then simagewidth = {356} 
if (_simagewidth==null) {_simagewidth="";}
// [1146]  If simageheight = Null Then simageheight = {357} 
if (_simageheight==null) {_simageheight="";}
// [1147]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [1148]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [1149]  If simageheight <> {358} Then sb.Append( {22} ) 
if (_simageheight!="") {_sb.append("height:" + _B.makepx(_simageheight,_B) + ";");}
// [1150]  If simagewidth <> {359} Then sb.Append( {23} ) 
if (_simagewidth!="") {_sb.append("width:" + _B.makepx(_simagewidth,_B) + ";");}
// [1151]  Dim sStyle As String = sb.tostring 
_sstyle=_sb.toString();
// [1152]  Dim dE As BANanoElement = Banano.ToElement(displayEl) 
_de=u(_displayel);
// [1153]  Dim simg As String = {24} 
_simg="<img src=\"" + _value + "\" alt=\"\" style=\"" + _sstyle + "\">";
// [1154]  dE.SetHTML(simg) 
_de.html(_simg);
// [1155]  End If 
}
// End Sub
};

// [1159] private Sub MakePx(sValue As String) As String 
_B.makepx=function(_svalue) {
// [1160]  sValue = sValue.trim 
_svalue=_svalue.trim();
// [1161]  If sValue.EndsWith( {360} ) Then 
if (_svalue.endsWith("%")) {
// [1162]  Return sValue 
return _svalue;
// [1163]  else If sValue.EndsWith( {361} ) Then 
} else if (_svalue.endsWith("vm")) {
// [1164]  Return sValue 
return _svalue;
// [1165]  else If sValue.EndsWith( {362} ) Then 
} else if (_svalue.endsWith("px")) {
// [1166]  Return sValue 
return _svalue;
// [1167]  else If sValue.EndsWith( {363} ) Then 
} else if (_svalue.endsWith("cm")) {
// [1168]  Return sValue 
return _svalue;
// [1169]  else If sValue.EndsWith( {364} ) Then 
} else if (_svalue.endsWith("mm")) {
// [1170]  Return sValue 
return _svalue;
// [1171]  else If sValue.EndsWith( {365} ) Then 
} else if (_svalue.endsWith("in")) {
// [1172]  Return sValue 
return _svalue;
// [1173]  else If sValue.EndsWith( {366} ) Then 
} else if (_svalue.endsWith("pt")) {
// [1174]  Return sValue 
return _svalue;
// [1175]  else If sValue.EndsWith( {367} ) Then 
} else if (_svalue.endsWith("pc")) {
// [1176]  Return sValue 
return _svalue;
// [1177]  else If sValue.EndsWith( {368} ) Then 
} else if (_svalue.endsWith("em")) {
// [1178]  Return sValue 
return _svalue;
// [1179]  else If sValue.EndsWith( {369} ) Then 
} else if (_svalue.endsWith("ex")) {
// [1180]  Return sValue 
return _svalue;
// [1181]  else If sValue.EndsWith( {370} ) Then 
} else if (_svalue.endsWith("ch")) {
// [1182]  Return sValue 
return _svalue;
// [1183]  else If sValue.EndsWith( {371} ) Then 
} else if (_svalue.endsWith("rem")) {
// [1184]  Return sValue 
return _svalue;
// [1185]  else If sValue.EndsWith( {372} ) Then 
} else if (_svalue.endsWith("vw")) {
// [1186]  Return sValue 
return _svalue;
// [1187]  else If sValue.EndsWith( {373} ) Then 
} else if (_svalue.endsWith("vh")) {
// [1188]  Return sValue 
return _svalue;
// [1189]  else If sValue.EndsWith( {374} ) Then 
} else if (_svalue.endsWith("vmin")) {
// [1190]  Return sValue 
return _svalue;
// [1191]  else If sValue.EndsWith( {375} ) Then 
} else if (_svalue.endsWith("vmax")) {
// [1192]  Return sValue 
return _svalue;
// [1193]  else If sValue.EndsWith( {376} ) Then 
} else if (_svalue.endsWith(";")) {
// [1194]  Return sValue 
return _svalue;
// [1195]  Else 
} else {
// [1196]  sValue = sValue.Replace( {377} , {378} ) 
_svalue=_svalue.split("px").join("");
// [1197]  sValue = {25} 
_svalue="" + _svalue + "px";
// [1198]  If sValue = {379} Then sValue = {380} 
if (_svalue=="px") {_svalue="";}
// [1199]  Return sValue 
return _svalue;
// [1200]  End If 
}
// End Sub
};

}
/* =========================== VMGMap  =========================== */
function banano_bananovuematerial_vmgmap() {
var _B=this;
_B._gmap= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

_B._markers= new banano_bananovuematerial_vmelement();

_B._options={};

_B._points=[];

_B._markername="";

_B._infowindow= new banano_bananovuematerial_vmelement();

_B._iwoptions="";

_B._iwposition="";

_B._iwopen="";

_B._curmidx="";

_B._kmllayer= new banano_bananovuematerial_vmelement();

_B._kmlname="";

// [24] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMGMap 
_B.initialize=function(_v,_sid,_eventhandler) {
var _woptions,_pixeloffset;
// [25]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [26]  GMap.Initialize(v, ID).SetTag( {17} ) 
_B._gmap.initialize(_v,_B._id).settag("gmap-map");
// [27]  GMap.SetRef(ID) 
_B._gmap.setref(_B._id);
// [28]  GMap.RemoveAttr( {18} ).RemoveAttr( {19} ).RemoveAttr( {20} ) 
_B._gmap.removeattr(":required").removeattr("v-show").removeattr(":disabled");
// [29]  GMap.SetAttrSingle( {21} , {0} ) 
_B._gmap.setattrsingle(":options","" + _B._id + "options");
// [30]  vue.setstatesingle( {1} , CreateMap()) 
_B._vue.setstatesingle("" + _B._id + "options",{});
// [31]  vue = v 
_B._vue=_v;
// [32]  markerName = {2} 
_B._markername="" + _B._id + "markers";
// [33]  kmlName = {3} 
_B._kmlname="" + _B._id + "kmlayers";
// [35]  module = eventHandler 
_B._module=_eventhandler;
// [36]  options.Initialize 
_B._options={};
// [37]  markers.initialize(vue,markerName).SetTag( {22} ).SetAttrSingle( {23} , {24} ) 
_B._markers.initialize(_B._vue,_B._markername).settag("gmap-marker").setattrsingle(":position","m.position");
// [38]  markers.RemoveAttr( {25} ).RemoveAttr( {26} ).RemoveAttr( {27} ) 
_B._markers.removeattr(":required").removeattr("v-show").removeattr(":disabled");
// [39]  markers.SetAttrSingle( {28} , {4} ) 
_B._markers.setattrsingle("v-if","" + _B._id + "markersvisible");
// [40]  markers.SetAttrSingle( {29} , True) 
_B._markers.setattrsingle(":clickable",true);
// [41]  markers.SetAttrSingle( {30} , True) 
_B._markers.setattrsingle(":draggable",true);
// [42]  markers.SetVFor( {31} , markerName) 
_B._markers.setvfor("(m,i)",_B._markername);
// [43]  markers.SetAttrSingle( {32} , {33} ) 
_B._markers.setattrsingle(":key","m.id");
// [44]  markers.SetAttrSingle( {34} , {35} ) 
_B._markers.setattrsingle("@click","toggleinfowindow(m,i)");
// [45]  SetEvents 
_B.setevents(_B);
// [46]  vue.SetStateSingle(markerName, Array()) 
_B._vue.setstatesingle(_B._markername,[]);
// [47]  points.Initialize 
_B._points.length=0;
// [49]  iwPosition = {5} 
_B._iwposition="" + _B._id + "iwpos";
// [50]  iwOptions = {6} 
_B._iwoptions="" + _B._id + "opt";
// [51]  iwOpen = {7} 
_B._iwopen="" + _B._id + "open";
// [52]  curMidx = {8} 
_B._curmidx="" + _B._id + "midx";
// [54]  vue.setstatesingle(iwPosition, Null) 
_B._vue.setstatesingle(_B._iwposition,null);
// [55]  vue.setstatesingle(iwOpen, False) 
_B._vue.setstatesingle(_B._iwopen,false);
// [56]  vue.setstatesingle(curMidx, Null) 
_B._vue.setstatesingle(_B._curmidx,null);
// [58]  infoWindow.Initialize(vue, {9} ).SetTag( {36} ) 
_B._infowindow.initialize(_B._vue,"" + _B._id + "iw").settag("gmap-info-window");
// [59]  infoWindow.RemoveAttr( {37} ).RemoveAttr( {38} ).RemoveAttr( {39} ) 
_B._infowindow.removeattr(":required").removeattr("v-show").removeattr(":disabled");
// [60]  infoWindow.SetAttrSingle( {40} , iwOptions) 
_B._infowindow.setattrsingle(":options",_B._iwoptions);
// [61]  infoWindow.setattrsingle( {41} , iwPosition) 
_B._infowindow.setattrsingle(":position",_B._iwposition);
// [62]  infoWindow.SetAttrSingle( {42} , iwOpen) 
_B._infowindow.setattrsingle(":opened",_B._iwopen);
// [63]  infoWindow.SetAttrSingle( {43} , {44} ) 
_B._infowindow.setattrsingle("@closeclick","closeinfowindow");
// [65]  Dim woptions As Map = CreateMap() 
_woptions={};
// [66]  Dim pixelOffset As Map = CreateMap() 
_pixeloffset={};
// [67]  pixelOffset.Put( {45} , 0) 
_pixeloffset["width"]=0;
// [68]  pixelOffset.put( {46} , -35) 
_pixeloffset["height"]=-35;
// [69]  woptions.Put( {47} , {48} ) 
_woptions["content"]="";
// [70]  woptions.put( {49} , pixelOffset) 
_woptions["pixelOffset"]=_pixeloffset;
// [71]  vue.SetStateSingle(iwOptions, woptions) 
_B._vue.setstatesingle(_B._iwoptions,_woptions);
// [74]  kmlLayer.Initialize(vue, kmlName).SetTag( {50} ) 
_B._kmllayer.initialize(_B._vue,_B._kmlname).settag("google-kml-layer");
// [75]  kmlLayer.RemoveAttr( {51} ).RemoveAttr( {52} ).RemoveAttr( {53} ) 
_B._kmllayer.removeattr(":required").removeattr("v-show").removeattr(":disabled");
// [76]  kmlLayer.SetAttrSingle( {54} , {10} ) 
_B._kmllayer.setattrsingle("v-if","" + _B._id + "kmlvisible");
// [77]  vue.setstatesingle(kmlName, Array()) 
_B._vue.setstatesingle(_B._kmlname,[]);
// [78]  kmlLayer.SetAttrSingle( {55} , True) 
_B._kmllayer.setattrsingle(":clickable",true);
// [79]  kmlLayer.SetVFor( {56} , kmlName) 
_B._kmllayer.setvfor("lyr",_B._kmlname);
// [80]  kmlLayer.SetAttrSingle( {57} , {58} ) 
_B._kmllayer.setattrsingle(":url","lyr.url");
// [82]  ShowKML(False) 
_B.showkml(false,_B);
// [83]  ShowMarkers(True) 
_B.showmarkers(true,_B);
// [86]  SetFullscreenControl(True) 
_B.setfullscreencontrol(true,_B);
// [87]  SetDisableDefaultUi(False) 
_B.setdisabledefaultui(false,_B);
// [88]  SetMapTypeControl(True) 
_B.setmaptypecontrol(true,_B);
// [89]  SetRotateControl(True) 
_B.setrotatecontrol(true,_B);
// [90]  SetStreetViewControl(True) 
_B.setstreetviewcontrol(true,_B);
// [91]  SetScaleControl(True) 
_B.setscalecontrol(true,_B);
// [92]  SetZoomControl(True) 
_B.setzoomcontrol(true,_B);
// [93]  Return Me 
return _B;
// End Sub
};

// [96] Sub ShowInfoWindow(b As Boolean) As VMGMap 
_B.showinfowindow=function(_b) {
// [97]  vue.SetStateSingle(iwOpen, b) 
_B._vue.setstatesingle(_B._iwopen,_b);
// [98]  Return Me 
return _B;
// End Sub
};

// [101] Sub SetKMLURL(url As String) As VMGMap 
_B.setkmlurl=function(_url) {
var _kmlold,_kml,_nl;
// [102]  Dim kmlold As List 
_kmlold=[];
// [103]  Dim kml As List = vue.GetState(kmlName, kmlold) 
_kml=_B._vue.getstate(_B._kmlname,_kmlold);
// [104]  Dim nl As Map = CreateMap() 
_nl={};
// [105]  nl.put( {59} , url) 
_nl["url"]=_url;
// [106]  kml.add(nl) 
_kml.push(_nl);
// [107]  vue.setstatesingle(kmlName, kml) 
_B._vue.setstatesingle(_B._kmlname,_kml);
// End Sub
};

// [110] Sub ShowMarkers(b As Boolean) As VMGMap 
_B.showmarkers=function(_b) {
// [111]  vue.setstatesingle( {11} , b) 
_B._vue.setstatesingle("" + _B._id + "markersvisible",_b);
// [112]  Return Me 
return _B;
// End Sub
};

// [115] Sub ShowKML(b As Boolean) As VMGMap 
_B.showkml=function(_b) {
// [116]  vue.setstatesingle( {12} , b) 
_B._vue.setstatesingle("" + _B._id + "kmlvisible",_b);
// [117]  Return Me 
return _B;
// End Sub
};

// [120] Private Sub closeInfoWindow 
_B.closeinfowindow=function() {
// [121]  vue.setstatesingle(iwOpen, False) 
_B._vue.setstatesingle(_B._iwopen,false);
// End Sub
};

// [124] private Sub toggleInfoWindow(m As Map, i As Object) 
_B.toggleinfowindow=function(_m,_i) {
var _mo,_infowindowpos,_mcontent,_infooptions,_cidx;
// [125]  Dim mo As Map = CreateMap() 
_mo={};
// [126]  Dim infoWindowPos As Map = m.Get( {60} ) 
_infowindowpos=_m["position"];
// [127]  Dim mcontent As String = m.Get( {61} ) 
_mcontent=_m["infoText"];
// [128]  Dim infoOptions As Map = vue.GetState(iwOptions, mo) 
_infooptions=_B._vue.getstate(_B._iwoptions,_mo);
// [129]  infoOptions.Put( {62} , mcontent) 
_infooptions["content"]=_mcontent;
// [130]  vue.setstatesingle(iwPosition, infoWindowPos) 
_B._vue.setstatesingle(_B._iwposition,_infowindowpos);
// [131]  vue.setstatesingle(iwOptions, infoOptions) 
_B._vue.setstatesingle(_B._iwoptions,_infooptions);
// [133]  Dim cIdx As Object = vue.getstate(curMidx, Null) 
_cidx=_B._vue.getstate(_B._curmidx,null);
// [134]  If cIdx = i Then 
if (_cidx==_i) {
// [135]  vue.ToggleState(iwOpen) 
_B._vue.togglestate(_B._iwopen);
// [136]  Else 
} else {
// [137]  vue.SetStateSingle(iwOpen, True) 
_B._vue.setstatesingle(_B._iwopen,true);
// [138]  vue.setstatesingle(curMidx, i) 
_B._vue.setstatesingle(_B._curmidx,_i);
// [139]  End If 
}
// End Sub
};

// [142] private Sub SetEvents 
_B.setevents=function() {
var _m,_i,_cb,_e;
// [143]  Dim m, i As Object 
_m={};
_i={};
// [144]  Dim cb As BANanoObject = BANano.CallBack(Me, {63} , Array(m, i)) 
_cb=function(_m,_i) {if (typeof _B[("toggleInfoWindow").toLowerCase()]==="function") {return _B[("toggleInfoWindow").toLowerCase()](_m,_i,_B)};};
// [145]  vue.SetCallBack( {64} , cb) 
_B._vue.setcallback("toggleInfoWindow",_cb);
// [147]  Dim e As BANanoEvent 
_e=null;
// [148]  Dim cb As BANanoObject = BANano.CallBack(Me, {65} , Array(e)) 
_cb=function(_e) {if (typeof _B[("closeInfoWindow").toLowerCase()]==="function") {return _B[("closeInfoWindow").toLowerCase()](_e,_B)};};
// [149]  vue.SetCallBack( {66} , cb) 
_B._vue.setcallback("closeInfoWindow",_cb);
// End Sub
};

// [153] Sub ClearMarkers As VMGMap 
_B.clearmarkers=function() {
// [154]  points.Initialize 
_B._points.length=0;
// [155]  Return Me 
return _B;
// End Sub
};

// [159] Sub Refresh 
_B.refresh=function() {
// [160]  vue.SetStateSingle(markerName, points) 
_B._vue.setstatesingle(_B._markername,_B._points);
// End Sub
};

// [163] Sub AddMarker(mID As String, lat As Double, lng As Double, label As String, info As String) 
_B.addmarker=function(_mid,_lat,_lng,_label,_info) {
var _point,_marker;
// [164]  mID = mID.tolowercase 
_mid=_mid.toLowerCase();
// [165]  Dim point As Map = CreateMap() 
_point={};
// [166]  Dim marker As Map = CreateMap() 
_marker={};
// [168]  lat = BANano.parseFloat(lat) 
_lat=parseFloat(_lat);
// [169]  lng = BANano.parseFloat(lng) 
_lng=parseFloat(_lng);
// [171]  point.Put( {67} , lat) 
_point["lat"]=_lat;
// [172]  point.put( {68} , lng) 
_point["lng"]=_lng;
// [174]  marker.put( {69} , point) 
_marker["position"]=_point;
// [175]  marker.put( {70} , mID) 
_marker["id"]=_mid;
// [176]  If info <> Null Then marker.Put( {71} , info) 
if (_info!=null) {_marker["infoText"]=_info;}
// [177]  If label <> Null Then marker.put( {72} , label) 
if (_label!=null) {_marker["label"]=_label;}
// [178]  points.add(marker) 
_B._points.push(_marker);
// End Sub
};

// [181] Sub SetZoomControl(b As Boolean) As VMGMap 
_B.setzoomcontrol=function(_b) {
// [182]  options.put( {73} , b) 
_B._options["zoomControl"]=_b;
// [183]  Return Me 
return _B;
// End Sub
};

// [186] Sub SetScaleControl(b As Boolean) As VMGMap 
_B.setscalecontrol=function(_b) {
// [187]  options.put( {74} , b) 
_B._options["scaleControl"]=_b;
// [188]  Return Me 
return _B;
// End Sub
};

// [191] Sub SetStreetViewControl(b As Boolean) As VMGMap 
_B.setstreetviewcontrol=function(_b) {
// [192]  options.put( {75} , b) 
_B._options["streetViewControl"]=_b;
// [193]  Return Me 
return _B;
// End Sub
};

// [196] Sub SetRotateControl(b As Boolean) As VMGMap 
_B.setrotatecontrol=function(_b) {
// [197]  options.put( {76} , b) 
_B._options["rotateControl"]=_b;
// [198]  Return Me 
return _B;
// End Sub
};

// [201] Sub SetMapTypeControl(b As Boolean) As VMGMap 
_B.setmaptypecontrol=function(_b) {
// [202]  options.put( {77} , b) 
_B._options["mapTypeControl"]=_b;
// [203]  Return Me 
return _B;
// End Sub
};

// [206] Sub SetDisableDefaultUi(b As Boolean) As VMGMap 
_B.setdisabledefaultui=function(_b) {
// [207]  options.put( {78} , b) 
_B._options["disableDefaultUi"]=_b;
// [208]  Return Me 
return _B;
// End Sub
};

// [211] Sub SetFullscreenControl(b As Boolean) As VMGMap 
_B.setfullscreencontrol=function(_b) {
// [212]  options.put( {79} , b) 
_B._options["fullscreenControl"]=_b;
// [213]  Return Me 
return _B;
// End Sub
};

// [216] Sub SetCenter(lat As Double, lng As Double) As VMGMap 
_B.setcenter=function(_lat,_lng) {
var _pp,_point;
// [217]  lat = BANano.parseFloat(lat) 
_lat=parseFloat(_lat);
// [218]  lng = BANano.parseFloat(lng) 
_lng=parseFloat(_lng);
// [220]  Dim pp As String = {13} 
_pp="" + _B._id + "center";
// [221]  Dim point As Map = CreateMap() 
_point={};
// [222]  point.put( {80} , lat) 
_point["lat"]=_lat;
// [223]  point.put( {81} , lng) 
_point["lng"]=_lng;
// [224]  vue.SetStateSingle(pp, point) 
_B._vue.setstatesingle(_pp,_point);
// [225]  GMap.SetAttrSingle( {82} , pp) 
_B._gmap.setattrsingle(":center",_pp);
// [226]  Return Me 
return _B;
// End Sub
};

// [229] Sub SetZoom(z As Int) As VMGMap 
_B.setzoom=function(_z) {
var _pp;
// [230]  z = BANano.parseInt(z) 
_z=parseInt(_z);
// [231]  Dim pp As String = {14} 
_pp="" + _B._id + "zoom";
// [232]  vue.SetStateSingle(pp, z) 
_B._vue.setstatesingle(_pp,_z);
// [233]  SetAttrSingle( {83} , pp) 
_B.setattrsingle(":zoom",_pp,_B);
// [234]  Return Me 
return _B;
// End Sub
};

// [237] Sub SetHeight(h As String) As VMGMap 
_B.setheight=function(_h) {
// [238]  SetStyleSingle( {84} , h) 
_B.setstylesingle("height",_h,_B);
// [239]  Return Me 
return _B;
// End Sub
};

// [242] Sub SetWidth(h As String) As VMGMap 
_B.setwidth=function(_h) {
// [243]  SetStyleSingle( {85} , h) 
_B.setstylesingle("width",_h,_B);
// [244]  Return Me 
return _B;
// End Sub
};

// [247] Sub SetMapType(maptype As String) As VMGMap 
_B.setmaptype=function(_maptype) {
var _pp;
// [248]  Dim pp As String = {15} 
_pp="" + _B._id + "maptype";
// [249]  vue.setstatesingle(pp, maptype) 
_B._vue.setstatesingle(_pp,_maptype);
// [250]  SetAttrSingle( {86} , pp) 
_B.setattrsingle(":map-type-id",_pp,_B);
// [251]  Return Me 
return _B;
// End Sub
};

// [254] Sub SetMapTypeRoadMap As VMGMap 
_B.setmaptyperoadmap=function() {
// [255]  SetMapType( {87} ) 
_B.setmaptype("roadmap",_B);
// [256]  Return Me 
return _B;
// End Sub
};

// [259] Sub SetMapTypeSatellite As VMGMap 
_B.setmaptypesatellite=function() {
// [260]  SetMapType( {88} ) 
_B.setmaptype("satellite",_B);
// [261]  Return Me 
return _B;
// End Sub
};

// [265] Sub SetMapTypeHybrid As VMGMap 
_B.setmaptypehybrid=function() {
// [266]  SetMapType( {89} ) 
_B.setmaptype("hybrid",_B);
// [267]  Return Me 
return _B;
// End Sub
};

// [270] Sub SetMapTypeTerrain As VMGMap 
_B.setmaptypeterrain=function() {
// [271]  SetMapType( {90} ) 
_B.setmaptype("terrain",_B);
// [272]  Return Me 
return _B;
// End Sub
};

// [277] Sub ToString As String 
_B.tostring=function() {
// [278]  vue.SetStateSingle( {16} , options) 
_B._vue.setstatesingle("" + _B._id + "options",_B._options);
// [279]  vue.SetStateSingle(markerName, points) 
_B._vue.setstatesingle(_B._markername,_B._points);
// [280]  infoWindow.Pop(GMap) 
_B._infowindow.pop(_B._gmap);
// [281]  kmlLayer.pop(GMap) 
_B._kmllayer.pop(_B._gmap);
// [282]  markers.pop(GMap) 
_B._markers.pop(_B._gmap);
// [283]  Return GMap.ToString 
return _B._gmap.tostring();
// End Sub
};

// [286] Sub SetVIf(vif As Object) As VMGMap 
_B.setvif=function(_vif) {
// [287]  GMap.SetVIf(vif) 
_B._gmap.setvif(_vif);
// [288]  Return Me 
return _B;
// End Sub
};

// [291] Sub SetVShow(vif As Object) As VMGMap 
_B.setvshow=function(_vif) {
// [292]  GMap.SetVShow(vif) 
_B._gmap.setvshow(_vif);
// [293]  Return Me 
return _B;
// End Sub
};

// [296] Sub Hide As VMGMap 
_B.hide=function() {
// [297]  GMap.Hide 
_B._gmap.hide();
// [298]  Return Me 
return _B;
// End Sub
};

// [301] Sub Show As VMGMap 
_B.show=function() {
// [302]  GMap.Show 
_B._gmap.show();
// [303]  Return Me 
return _B;
// End Sub
};

// [307] Sub Render 
_B.render=function() {
// [308]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [312] Sub AddChild(child As VMElement) As VMGMap 
_B.addchild=function(_child) {
var _childhtml;
// [313]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [314]  GMap.SetText(childHTML) 
_B._gmap.settext(_childhtml);
// [315]  Return Me 
return _B;
// End Sub
};

// [319] Sub SetText(t As Object) As VMGMap 
_B.settext=function(_t) {
// [320]  GMap.SetText(t) 
_B._gmap.settext(_t);
// [321]  Return Me 
return _B;
// End Sub
};

// [325] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [326]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [330] Sub AddClass(c As String) As VMGMap 
_B.addclass=function(_c) {
// [331]  GMap.AddClass(c) 
_B._gmap.addclass(_c);
// [332]  Return Me 
return _B;
// End Sub
};

// [336] Sub SetAttr(attr As Map) As VMGMap 
_B.setattr=function(_attr) {
// [337]  GMap.SetAttr(attr) 
_B._gmap.setattr(_attr);
// [338]  Return Me 
return _B;
// End Sub
};

// [341] Sub SetAttrSingle(prop As String, val As Object) As VMGMap 
_B.setattrsingle=function(_prop,_val) {
// [342]  GMap.SetAttrSingle(prop, val) 
_B._gmap.setattrsingle(_prop,_val);
// [343]  Return Me 
return _B;
// End Sub
};

// [347] Sub SetStyle(sm As Map) As VMGMap 
_B.setstyle=function(_sm) {
// [348]  GMap.SetStyle(sm) 
_B._gmap.setstyle(_sm);
// [349]  Return Me 
return _B;
// End Sub
};

// [352] Sub SetStyleSingle(prop As String, val As Object) As VMGMap 
_B.setstylesingle=function(_prop,_val) {
// [353]  GMap.setstylesingle(prop, val) 
_B._gmap.setstylesingle(_prop,_val);
// [354]  Return Me 
return _B;
// End Sub
};

// [358] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [359]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [360]  AddChild(childx) 
_B.addchild(_childx,_B);
// [361]  Next 
}
// End Sub
};

// [365] Sub SetPadding(p As Object) As VMGMap 
_B.setpadding=function(_p) {
// [366]  GMap.SetPaddingAll(p) 
_B._gmap.setpaddingall(_p);
// [367]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMGrid  =========================== */
function banano_bananovuematerial_vmgrid() {
var _B=this;
_B._grid= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._rows={};

_B._columns={};

_B._lastrow=0;

_B._rc={};

_B._rowclass="row";

_B._cellclass="col";

_B._showid=false;

_B._components={};

_B._rowclasses={};

_B._offclass={"s":"offset-sm-", "m":"offset-md-", "l":"offset-lg-", "xl":"offset-xl-"};

_B._colclass={"s":"col-sm-", "m":"col-md-", "l":"col-lg-", "xl":"col-xl-"};

_B._rowstyles={};

_B._attributes={};

_B._isbuilt=false;

_B._module={};

// [42] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMGrid 
_B.initialize=function(_v,_sid,_eventhandler) {
// [43]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [44]  vue = v 
_B._vue=_v;
// [45]  Grid.Initialize(vue, ID).SetTag( {63} ) 
_B._grid.initialize(_B._vue,_B._id).settag("div");
// [46]  Rows.Initialize 
_B._rows={};
// [47]  LastRow = 0 
_B._lastrow=0;
// [48]  module = eventHandler 
_B._module=_eventhandler;
// [49]  RC.Initialize 
_B._rc={};
// [50]  Columns.Initialize 
_B._columns={};
// [51]  ShowID = False 
_B._showid=false;
// [52]  Components.Initialize 
_B._components={};
// [53]  rowClasses.Initialize 
_B._rowclasses={};
// [54]  rowStyles.Initialize 
_B._rowstyles={};
// [55]  attributes.Initialize 
_B._attributes={};
// [56]  isBuilt = False 
_B._isbuilt=false;
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetScrollBar(b As Boolean) As VMGrid 
_B.setscrollbar=function(_b) {
// [61]  Grid.SetScrollBar(b) 
_B._grid.setscrollbar(_b);
// [62]  Return Me 
return _B;
// End Sub
};

// [65] Sub Clear As VMGrid 
_B.clear=function() {
// [66]  Grid.clear 
_B._grid.clear();
// [67]  Rows.Initialize 
_B._rows={};
// [68]  LastRow = 0 
_B._lastrow=0;
// [69]  RC.Initialize 
_B._rc={};
// [70]  Columns.Initialize 
_B._columns={};
// [71]  Components.Initialize 
_B._components={};
// [72]  rowClasses.Initialize 
_B._rowclasses={};
// [73]  rowStyles.Initialize 
_B._rowstyles={};
// [74]  attributes.Initialize 
_B._attributes={};
// [75]  isBuilt = False 
_B._isbuilt=false;
// [76]  Return Me 
return _B;
// End Sub
};

// [79] private Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [80]  If o = BANano.UNDEFINED Then o = {64} 
if (_o=='undefined') {_o="";}
// [81]  Return {65} & o 
return ""+_o;
// End Sub
};

// [85] Sub SetClass(rowPos As Int, colPos As Int, className As String) 
_B.setclass=function(_rowpos,_colpos,_classname) {
var _rowc,_rowkey;
// [87]  Dim rowc As Map 
_rowc={};
// [88]  Dim rowKey As String = {0} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [89]  If colPos = 0 Then 
if (_colpos==0) {
// [90]  rowKey = {1} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [91]  End If 
}
// [92]  If rowClasses.ContainsKey(rowKey) Then 
if ((_rowkey in _B._rowclasses)) {
// [93]  rowc = rowClasses.Get(rowKey) 
_rowc=_B._rowclasses[_rowkey];
// [94]  Else 
} else {
// [95]  rowc.Initialize 
_rowc={};
// [96]  rowc.clear 
_rowc={};
// [97]  End If 
}
// [98]  rowc.Put(className,className) 
_rowc[_classname]=_classname;
// [99]  rowClasses.Put(rowKey,rowc) 
_B._rowclasses[_rowkey]=_rowc;
// End Sub
};

// [104] Sub SetOnClick(rowpos As Int, colpos As Int) As VMGrid 
_B.setonclick=function(_rowpos,_colpos) {
var _rowc,_rowkey,_methodname,_e,_cb;
// [105]  Dim rowc As Map 
_rowc={};
// [106]  Dim rowKey As String = {2} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [107]  If colpos = 0 Then 
if (_colpos==0) {
// [108]  rowKey = {3} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [109]  End If 
}
// [110]  Dim methodName As String = {4} 
_methodname="" + _rowkey + "_click";
// [111]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [112]  Dim e As BANanoEvent 
_e=null;
// [113]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [115]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [116]  If attributes.ContainsKey(rowKey) Then 
if ((_rowkey in _B._attributes)) {
// [117]  rowc = attributes.Get(rowKey) 
_rowc=_B._attributes[_rowkey];
// [118]  Else 
} else {
// [119]  rowc.Initialize 
_rowc={};
// [120]  rowc.clear 
_rowc={};
// [121]  End If 
}
// [122]  rowc.Put( {66} ,methodName) 
_rowc["v-on:click"]=_methodname;
// [123]  attributes.Put(rowKey,rowc) 
_B._attributes[_rowkey]=_rowc;
// [124]  Return Me 
return _B;
// End Sub
};

// [128] Sub SetOnTouchStart(rowpos As Int, colpos As Int) As VMGrid 
_B.setontouchstart=function(_rowpos,_colpos) {
var _rowc,_rowkey,_methodname,_e,_cb;
// [129]  Dim rowc As Map 
_rowc={};
// [130]  Dim rowKey As String = {5} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [131]  If colpos = 0 Then 
if (_colpos==0) {
// [132]  rowKey = {6} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [133]  End If 
}
// [134]  Dim methodName As String = {7} 
_methodname="" + _rowkey + "_touchstart";
// [135]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [136]  Dim e As BANanoEvent 
_e=null;
// [137]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [139]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [140]  If attributes.ContainsKey(rowKey) Then 
if ((_rowkey in _B._attributes)) {
// [141]  rowc = attributes.Get(rowKey) 
_rowc=_B._attributes[_rowkey];
// [142]  Else 
} else {
// [143]  rowc.Initialize 
_rowc={};
// [144]  rowc.clear 
_rowc={};
// [145]  End If 
}
// [146]  rowc.Put( {67} ,methodName) 
_rowc["v-on:touchstart"]=_methodname;
// [147]  attributes.Put(rowKey,rowc) 
_B._attributes[_rowkey]=_rowc;
// [148]  Return Me 
return _B;
// End Sub
};

// [151] Sub SetOnDragOver(rowPos As Int, colPos As Int) As VMGrid 
_B.setondragover=function(_rowpos,_colpos) {
var _rowc,_rowkey,_methodname,_e,_cb;
// [152]  Dim rowc As Map 
_rowc={};
// [153]  Dim rowKey As String = {8} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [154]  If colPos = 0 Then 
if (_colpos==0) {
// [155]  rowKey = {9} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [156]  End If 
}
// [157]  Dim methodName As String = {10} 
_methodname="" + _rowkey + "_dragover";
// [158]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [159]  Dim e As BANanoEvent 
_e=null;
// [160]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [162]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [164]  If attributes.ContainsKey(rowKey) Then 
if ((_rowkey in _B._attributes)) {
// [165]  rowc = attributes.Get(rowKey) 
_rowc=_B._attributes[_rowkey];
// [166]  Else 
} else {
// [167]  rowc.Initialize 
_rowc={};
// [168]  rowc.clear 
_rowc={};
// [169]  End If 
}
// [170]  rowc.Put( {68} ,methodName) 
_rowc["v-on:dragover"]=_methodname;
// [171]  attributes.Put(rowKey,rowc) 
_B._attributes[_rowkey]=_rowc;
// [172]  Return Me 
return _B;
// End Sub
};

// [175] Sub SetOnDragStart(rowPos As Int, colPos As Int) As VMGrid 
_B.setondragstart=function(_rowpos,_colpos) {
var _rowc,_rowkey,_methodname,_e,_cb;
// [176]  Dim rowc As Map 
_rowc={};
// [177]  Dim rowKey As String = {11} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [178]  If colPos = 0 Then 
if (_colpos==0) {
// [179]  rowKey = {12} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [180]  End If 
}
// [181]  Dim methodName As String = {13} 
_methodname="" + _rowkey + "_dragstart";
// [182]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [183]  Dim e As BANanoEvent 
_e=null;
// [184]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [186]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [188]  If attributes.ContainsKey(rowKey) Then 
if ((_rowkey in _B._attributes)) {
// [189]  rowc = attributes.Get(rowKey) 
_rowc=_B._attributes[_rowkey];
// [190]  Else 
} else {
// [191]  rowc.Initialize 
_rowc={};
// [192]  rowc.clear 
_rowc={};
// [193]  End If 
}
// [194]  rowc.Put( {69} ,methodName) 
_rowc["v-on:dragstart"]=_methodname;
// [195]  attributes.Put(rowKey,rowc) 
_B._attributes[_rowkey]=_rowc;
// [196]  Return Me 
return _B;
// End Sub
};

// [199] Sub SetOnDragEnd(rowPos As Int, colPos As Int) As VMGrid 
_B.setondragend=function(_rowpos,_colpos) {
var _rowc,_rowkey,_methodname,_e,_cb;
// [200]  Dim rowc As Map 
_rowc={};
// [201]  Dim rowKey As String = {14} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [202]  If colPos = 0 Then 
if (_colpos==0) {
// [203]  rowKey = {15} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [204]  End If 
}
// [205]  Dim methodName As String = {16} 
_methodname="" + _rowkey + "_dragend";
// [206]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [207]  Dim e As BANanoEvent 
_e=null;
// [208]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [210]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [212]  If attributes.ContainsKey(rowKey) Then 
if ((_rowkey in _B._attributes)) {
// [213]  rowc = attributes.Get(rowKey) 
_rowc=_B._attributes[_rowkey];
// [214]  Else 
} else {
// [215]  rowc.Initialize 
_rowc={};
// [216]  rowc.clear 
_rowc={};
// [217]  End If 
}
// [218]  rowc.Put( {70} ,methodName) 
_rowc["v-on:dragend"]=_methodname;
// [219]  attributes.Put(rowKey,rowc) 
_B._attributes[_rowkey]=_rowc;
// [220]  Return Me 
return _B;
// End Sub
};

// [223] Sub SetOnDragEnter(rowPos As Int, colPos As Int) As VMGrid 
_B.setondragenter=function(_rowpos,_colpos) {
var _rowc,_rowkey,_methodname,_e,_cb;
// [224]  Dim rowc As Map 
_rowc={};
// [225]  Dim rowKey As String = {17} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [226]  If colPos = 0 Then 
if (_colpos==0) {
// [227]  rowKey = {18} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [228]  End If 
}
// [229]  Dim methodName As String = {19} 
_methodname="" + _rowkey + "_dragenter";
// [230]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [231]  Dim e As BANanoEvent 
_e=null;
// [232]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [234]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [236]  If attributes.ContainsKey(rowKey) Then 
if ((_rowkey in _B._attributes)) {
// [237]  rowc = attributes.Get(rowKey) 
_rowc=_B._attributes[_rowkey];
// [238]  Else 
} else {
// [239]  rowc.Initialize 
_rowc={};
// [240]  rowc.clear 
_rowc={};
// [241]  End If 
}
// [242]  rowc.Put( {71} ,methodName) 
_rowc["v-on:dragenter"]=_methodname;
// [243]  attributes.Put(rowKey,rowc) 
_B._attributes[_rowkey]=_rowc;
// [244]  Return Me 
return _B;
// End Sub
};

// [248] Sub SetOnDrop(rowPos As Int, colPos As Int) As VMGrid 
_B.setondrop=function(_rowpos,_colpos) {
var _rowc,_rowkey,_methodname,_e,_cb;
// [249]  Dim rowc As Map 
_rowc={};
// [250]  Dim rowKey As String = {20} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [251]  If colPos = 0 Then 
if (_colpos==0) {
// [252]  rowKey = {21} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [253]  End If 
}
// [254]  Dim methodName As String = {22} 
_methodname="" + _rowkey + "_drop";
// [255]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [256]  Dim e As BANanoEvent 
_e=null;
// [257]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [259]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [261]  If attributes.ContainsKey(rowKey) Then 
if ((_rowkey in _B._attributes)) {
// [262]  rowc = attributes.Get(rowKey) 
_rowc=_B._attributes[_rowkey];
// [263]  Else 
} else {
// [264]  rowc.Initialize 
_rowc={};
// [265]  rowc.clear 
_rowc={};
// [266]  End If 
}
// [267]  rowc.Put( {72} ,methodName) 
_rowc["v-on:drop"]=_methodname;
// [268]  attributes.Put(rowKey,rowc) 
_B._attributes[_rowkey]=_rowc;
// [269]  Return Me 
return _B;
// End Sub
};

// [274] Sub AddRow(iRows As Int, sVisibility As String, sThemeName As String, sClassName As String) As VMGrid 
_B.addrow=function(_irows,_svisibility,_sthemename,_sclassname) {
var _nrow,_rowkey;
// [277]  LastRow = Rows.size 
_B._lastrow=Object.keys(_B._rows).length;
// [279]  Dim nRow As GridRow 
_nrow= new banano_bananovuematerial_gridrow();
// [280]  nRow.Initialize 
_nrow.initialize();
// [281]  InitializeRow(nRow) 
_B.initializerow(_nrow,_B);
// [282]  nRow = CreateRow(iRows,sVisibility,sThemeName,sClassName) 
_nrow=_B.createrow(_irows,_svisibility,_sthemename,_sclassname,_B);
// [284]  Dim rowKey As String = {23} 
_rowkey="" + _B._id + "r" + _B._lastrow + "";
// [286]  Rows.Put(rowKey,nRow) 
_B._rows[_rowkey]=_nrow;
// [287]  Return Me 
return _B;
// End Sub
};

// [290] Sub AddColumnsOSMPV(iColumns As String, iOffsetSmall As String, iOffsetMedium As String,iOffsetLarge As String, iOffsetXLarge As String, iSizeSmall As String,iSizeMedium As String, iSizeLarge As String, IsizeXLarge As String, iVisibility As String, sTheme As String) As VMGrid 
_B.addcolumnsosmpv=function(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_ivisibility,_stheme) {
// [293]  AddColumnOSMP(iColumns, iOffsetSmall, iOffsetMedium, iOffsetLarge, iOffsetXLarge, iSizeSmall,iSizeMedium,iSizeLarge, IsizeXLarge, sTheme,iVisibility, {73} ) 
_B.addcolumnosmp(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_stheme,_ivisibility,"",_B);
// [296]  Return Me 
return _B;
// End Sub
};

// [299] Sub AddRows(iRows As Int) As VMGrid 
_B.addrows=function(_irows) {
// [300]  AddRow(iRows, {74} , {75} , {76} ) 
_B.addrow(_irows,"","","",_B);
// [301]  Return Me 
return _B;
// End Sub
};

// [304] Sub AddColumns3x4 As VMGrid 
_B.addcolumns3x4=function() {
// [305]  AddColumns(3, {77} , {78} , {79} , {80} ) 
_B.addcolumns(3,"12","4","4","4",_B);
// [306]  Return Me 
return _B;
// End Sub
};

// [309] Sub AddColumns4x3 As VMGrid 
_B.addcolumns4x3=function() {
// [310]  AddColumns(4, {81} , {82} , {83} , {84} ) 
_B.addcolumns(4,"12","3","3","3",_B);
// [311]  Return Me 
return _B;
// End Sub
};

// [314] Sub AddColumns2x6 As VMGrid 
_B.addcolumns2x6=function() {
// [315]  AddColumns(2, {85} , {86} , {87} , {88} ) 
_B.addcolumns(2,"12","6","6","6",_B);
// [316]  Return Me 
return _B;
// End Sub
};

// [319] Sub AddColumns6x2 As VMGrid 
_B.addcolumns6x2=function() {
// [320]  AddColumns(6, {89} , {90} , {91} , {92} ) 
_B.addcolumns(6,"12","2","2","2",_B);
// [321]  Return Me 
return _B;
// End Sub
};

// [324] Sub AddColumns12x1 As VMGrid 
_B.addcolumns12x1=function() {
// [325]  AddColumns(12, {93} , {94} , {95} , {96} ) 
_B.addcolumns(12,"12","1","1","1",_B);
// [326]  Return Me 
return _B;
// End Sub
};

// [329] Sub AddColumns8p4 As VMGrid 
_B.addcolumns8p4=function() {
// [330]  AddColumns(1, {97} , {98} , {99} , {100} ).AddColumns(1, {101} , {102} , {103} , {104} ) 
_B.addcolumns(1,"12","8","8","8",_B).addcolumns(1,"12","4","4","4");
// [331]  Return Me 
return _B;
// End Sub
};

// [334] Sub AddColumns4p8 As VMGrid 
_B.addcolumns4p8=function() {
// [335]  AddColumns(1, {105} , {106} , {107} , {108} ).AddColumns(1, {109} , {110} , {111} , {112} ) 
_B.addcolumns(1,"12","4","4","4",_B).addcolumns(1,"12","8","8","8");
// [336]  Return Me 
return _B;
// End Sub
};

// [339] Sub AddColumns1p11 As VMGrid 
_B.addcolumns1p11=function() {
// [340]  AddColumns(1, {113} , {114} , {115} , {116} ).AddColumns(1, {117} , {118} , {119} , {120} ) 
_B.addcolumns(1,"12","1","1","1",_B).addcolumns(1,"12","11","11","11");
// [341]  Return Me 
return _B;
// End Sub
};

// [344] Sub AddColumns11p1 As VMGrid 
_B.addcolumns11p1=function() {
// [345]  AddColumns(1, {121} , {122} , {123} , {124} ).AddColumns(1, {125} , {126} , {127} , {128} ) 
_B.addcolumns(1,"12","11","11","11",_B).addcolumns(1,"12","1","1","1");
// [346]  Return Me 
return _B;
// End Sub
};

// [349] Sub AddColumns2p10 As VMGrid 
_B.addcolumns2p10=function() {
// [350]  AddColumns(1, {129} , {130} , {131} , {132} ).AddColumns(1, {133} , {134} , {135} , {136} ) 
_B.addcolumns(1,"12","2","2","2",_B).addcolumns(1,"12","10","10","10");
// [351]  Return Me 
return _B;
// End Sub
};

// [354] Sub AddColumns10p2 As VMGrid 
_B.addcolumns10p2=function() {
// [355]  AddColumns(1, {137} , {138} , {139} , {140} ).AddColumns(1, {141} , {142} , {143} , {144} ) 
_B.addcolumns(1,"12","10","10","10",_B).addcolumns(1,"12","2","2","2");
// [356]  Return Me 
return _B;
// End Sub
};

// [359] Sub AddColumns3p9 As VMGrid 
_B.addcolumns3p9=function() {
// [360]  AddColumns(1, {145} , {146} , {147} , {148} ).AddColumns(1, {149} , {150} , {151} , {152} ) 
_B.addcolumns(1,"12","3","3","3",_B).addcolumns(1,"12","9","9","9");
// [361]  Return Me 
return _B;
// End Sub
};

// [364] Sub AddColumns9p3 As VMGrid 
_B.addcolumns9p3=function() {
// [365]  AddColumns(1, {153} , {154} , {155} , {156} ).AddColumns(1, {157} , {158} , {159} , {160} ) 
_B.addcolumns(1,"12","9","9","9",_B).addcolumns(1,"12","3","3","3");
// [366]  Return Me 
return _B;
// End Sub
};

// [369] Sub AddColumns7p5 As VMGrid 
_B.addcolumns7p5=function() {
// [370]  AddColumns(1, {161} , {162} , {163} , {164} ).AddColumns(1, {165} , {166} , {167} , {168} ) 
_B.addcolumns(1,"12","7","7","7",_B).addcolumns(1,"12","5","5","5");
// [371]  Return Me 
return _B;
// End Sub
};

// [374] Sub AddColumns5p7 As VMGrid 
_B.addcolumns5p7=function() {
// [375]  AddColumns(1, {169} , {170} , {171} , {172} ).AddColumns(1, {173} , {174} , {175} , {176} ) 
_B.addcolumns(1,"12","5","5","5",_B).addcolumns(1,"12","7","7","7");
// [376]  Return Me 
return _B;
// End Sub
};

// [379] Sub AddColumns12 As VMGrid 
_B.addcolumns12=function() {
// [380]  AddColumns(1, {177} , {178} , {179} , {180} ) 
_B.addcolumns(1,"12","12","12","12",_B);
// [381]  Return Me 
return _B;
// End Sub
};

// [384] Sub AddColumns(iColumns As Int, SizeSmall As String, SizeMedium As String, SizeLarge As String, SizeXLarge As String) As VMGrid 
_B.addcolumns=function(_icolumns,_sizesmall,_sizemedium,_sizelarge,_sizexlarge) {
// [385]  AddColumnOSMP(iColumns, {181} , {182} , {183} , {184} , SizeSmall,SizeMedium,SizeLarge,SizeXLarge, {185} , {186} , {187} ) 
_B.addcolumnosmp(_icolumns,"","","","",_sizesmall,_sizemedium,_sizelarge,_sizexlarge,"","","",_B);
// [386]  Return Me 
return _B;
// End Sub
};

// [390] Sub AddColumnOSMP(iColumns As Int, iOffsetSmall As String, iOffsetMedium As String, iOffsetLarge As String, iOffsetXLarge As String, iSizeSmall As String, iSizeMedium As String, iSizeLarge As String, iSizeXLarge As String, sThemeName As String, sVisibility As String, sClassName As String) As VMGrid 
_B.addcolumnosmp=function(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_sthemename,_svisibility,_sclassname) {
var _ncell,_rowkey,_oldrow,_cols;
// [394]  Dim nCell As GridColumn 
_ncell= new banano_bananovuematerial_gridcolumn();
// [395]  nCell.Initialize 
_ncell.initialize();
// [396]  InitializeColumn(nCell) 
_B.initializecolumn(_ncell,_B);
// [397]  nCell = CreateColumn(iColumns,iOffsetSmall,iOffsetMedium,iOffsetLarge,iOffsetXLarge, iSizeSmall,iSizeMedium,iSizeLarge,iSizeXLarge, sThemeName,sVisibility,sClassName) 
_ncell=_B.createcolumn(_icolumns,_ioffsetsmall,_ioffsetmedium,_ioffsetlarge,_ioffsetxlarge,_isizesmall,_isizemedium,_isizelarge,_isizexlarge,_sthemename,_svisibility,_sclassname,_B);
// [399]  Dim rowkey As String = {24} 
_rowkey="" + _B._id + "r" + _B._lastrow + "";
// [401]  If Rows.ContainsKey(rowkey) Then 
if ((_rowkey in _B._rows)) {
// [403]  Dim oldRow As GridRow 
_oldrow= new banano_bananovuematerial_gridrow();
// [404]  oldRow.Initialize 
_oldrow.initialize();
// [405]  InitializeRow(oldRow) 
_B.initializerow(_oldrow,_B);
// [406]  oldRow = Rows.Get(rowkey) 
_oldrow=_B._rows[_rowkey];
// [408]  Dim cols As List = oldRow.Columns 
_cols=_oldrow._columns;
// [409]  cols.add(nCell) 
_cols.push(_ncell);
// [410]  Rows.Put(rowkey,oldRow) 
_B._rows[_rowkey]=_oldrow;
// [411]  Else 
} else {
// [412]  Log( {188} ) 
console.log("VMGrid - AddColumnOSMP: A row has not been added yet to the grid!");
// [413]  End If 
}
// [414]  Return Me 
return _B;
// End Sub
};

// [418] Sub ToString() As String 
_B.tostring=function() {
// [419]  Build 
_B.build(_B);
// [420]  Return Grid.ToString 
return _B._grid.tostring();
// End Sub
};

// [423] private Sub InitializeRow(thisRow As GridRow) 
_B.initializerow=function(_thisrow) {
// [424]  thisRow.Columns.Initialize 
_thisrow._columns.length=0;
// [425]  thisRow.Rows = 1 
_thisrow._rows=1;
// [426]  thisRow.Visibility = {189} 
_thisrow._visibility="";
// [427]  thisRow.ThemeName = {190} 
_thisrow._themename="0";
// [428]  thisRow.ClassName = {191} 
_thisrow._classname="";
// [429]  thisRow.MarginTop = Null 
_thisrow._margintop=null;
// [430]  thisRow.MarginBottom = Null 
_thisrow._marginbottom=null;
// [431]  thisRow.MarginLeft = Null 
_thisrow._marginleft=null;
// [432]  thisRow.MarginRight = Null 
_thisrow._marginright=null;
// [433]  thisRow.PaddingTop = Null 
_thisrow._paddingtop=null;
// [434]  thisRow.PaddingBottom = Null 
_thisrow._paddingbottom=null;
// [435]  thisRow.PaddingLeft = Null 
_thisrow._paddingleft=null;
// [436]  thisRow.PaddingRight = Null 
_thisrow._paddingright=null;
// [437]  thisRow.Row = 0 
_thisrow._row=0;
// End Sub
};

// [441] Sub AddComponent(rowPos As Int, colPos As Int, elHTML As String) 
_B.addcomponent=function(_rowpos,_colpos,_elhtml) {
var _cellkey,_lst;
// [442]  Dim cellKey As String = {25} 
_cellkey="" + _B._id + "r" + _rowpos + "c" + _colpos + "";
// [443]  Dim lst As List 
_lst=[];
// [444]  If Components.ContainsKey(cellKey) Then 
if ((_cellkey in _B._components)) {
// [445]  lst = Components.Get(cellKey) 
_lst=_B._components[_cellkey];
// [446]  Else 
} else {
// [447]  lst.Initialize 
_lst.length=0;
// [448]  lst.clear 
_lst.length=0;
// [449]  End If 
}
// [450]  lst.Add(elHTML) 
_lst.push(_elhtml);
// [451]  Components.Put(cellKey,lst) 
_B._components[_cellkey]=_lst;
// End Sub
};

// [455] Sub ReplaceRC(rowPos As Int, colPos As Int, elHTML As String) 
_B.replacerc=function(_rowpos,_colpos,_elhtml) {
var _cellkey,_elbody;
// [456]  Dim cellKey As String = {26} 
_cellkey="#" + _B._id + "r" + _rowpos + "c" + _colpos + "";
// [457]  Dim elBody As BANanoElement 
_elbody=null;
// [458]  elBody = BANano.GetElement(cellKey) 
_elbody=u(_cellkey);
// [459]  If elBody <> Null Then 
if (_elbody!=null) {
// [460]  elBody.Empty 
_elbody.empty();
// [461]  elBody.SetHTML(elHTML) 
_elbody.html(_elhtml);
// [462]  End If 
}
// End Sub
};

// [466] Sub SetStyle(rowPos As Int, colPos As Int, prop As String, value As String) As VMGrid 
_B.setstyle=function(_rowpos,_colpos,_prop,_value) {
var _rowc,_rowkey;
// [467]  Dim rowc As Map 
_rowc={};
// [468]  Dim rowKey As String = {27} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [469]  If colPos = 0 Then 
if (_colpos==0) {
// [470]  rowKey = {28} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [471]  End If 
}
// [472]  If rowStyles.ContainsKey(rowKey) Then 
if ((_rowkey in _B._rowstyles)) {
// [473]  rowc = rowStyles.Get(rowKey) 
_rowc=_B._rowstyles[_rowkey];
// [474]  Else 
} else {
// [475]  rowc.Initialize 
_rowc={};
// [476]  rowc.clear 
_rowc={};
// [477]  End If 
}
// [478]  rowc.Put(prop,value) 
_rowc[_prop]=_value;
// [479]  rowStyles.Put(rowKey,rowc) 
_B._rowstyles[_rowkey]=_rowc;
// [480]  Return Me 
return _B;
// End Sub
};

// [484] Sub SetGridBorder(width As String, color As String, bstyle As String) As VMGrid 
_B.setgridborder=function(_width,_color,_bstyle) {
// [485]  Grid.SetBorder(width, color, bstyle) 
_B._grid.setborder(_width,_color,_bstyle);
// [486]  Return Me 
return _B;
// End Sub
};

// [490] Sub SetGridStyle(m As Map) As VMGrid 
_B.setgridstyle=function(_m) {
// [491]  Grid.SetStyle(m) 
_B._grid.setstyle(_m);
// [492]  Return Me 
return _B;
// End Sub
};

// [495] Sub AddGridClass(className As String) As VMGrid 
_B.addgridclass=function(_classname) {
// [496]  Grid.AddClass(className) 
_B._grid.addclass(_classname);
// [497]  Return Me 
return _B;
// End Sub
};

// [501] Sub SetBorder(rowPos As Int, colPos As Int, width As String, color As String, bstyle As String) As VMGrid 
_B.setborder=function(_rowpos,_colpos,_width,_color,_bstyle) {
var _rowc,_rowkey;
// [502]  Dim rowc As Map 
_rowc={};
// [503]  Dim rowKey As String = {29} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [504]  If colPos = 0 Then 
if (_colpos==0) {
// [505]  rowKey = {30} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [506]  End If 
}
// [507]  If rowStyles.ContainsKey(rowKey) Then 
if ((_rowkey in _B._rowstyles)) {
// [508]  rowc = rowStyles.Get(rowKey) 
_rowc=_B._rowstyles[_rowkey];
// [509]  Else 
} else {
// [510]  rowc.Initialize 
_rowc={};
// [511]  rowc.clear 
_rowc={};
// [512]  End If 
}
// [513]  rowc.Put( {192} , bstyle) 
_rowc["border-style"]=_bstyle;
// [514]  rowc.Put( {193} , width) 
_rowc["border-width"]=_width;
// [515]  rowc.Put( {194} , color) 
_rowc["border-color"]=_color;
// [516]  rowStyles.Put(rowKey,rowc) 
_B._rowstyles[_rowkey]=_rowc;
// [517]  Return Me 
return _B;
// End Sub
};

// [520] Sub SetMargins(rowPos As Int, colPos As Int, mt As Object, mb As Object, ml As Object, mr As Object) As VMGrid 
_B.setmargins=function(_rowpos,_colpos,_mt,_mb,_ml,_mr) {
var _rowc,_rowkey;
// [521]  Dim rowc As Map 
_rowc={};
// [522]  Dim rowKey As String = {31} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [523]  If colPos = 0 Then 
if (_colpos==0) {
// [524]  rowKey = {32} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [525]  End If 
}
// [526]  If rowStyles.ContainsKey(rowKey) Then 
if ((_rowkey in _B._rowstyles)) {
// [527]  rowc = rowStyles.Get(rowKey) 
_rowc=_B._rowstyles[_rowkey];
// [528]  Else 
} else {
// [529]  rowc.Initialize 
_rowc={};
// [530]  rowc.clear 
_rowc={};
// [531]  End If 
}
// [532]  If mt <> Null Then rowc.Put( {195} , mt) 
if (_mt!=null) {_rowc["margin-top"]=_mt;}
// [533]  If mb <> Null Then rowc.Put( {196} , mb) 
if (_mb!=null) {_rowc["margin-bottom"]=_mb;}
// [534]  If ml <> Null Then rowc.Put( {197} , ml) 
if (_ml!=null) {_rowc["margin-left"]=_ml;}
// [535]  If mr <> Null Then rowc.Put( {198} , mr) 
if (_mr!=null) {_rowc["margin-right"]=_mr;}
// [536]  rowStyles.Put(rowKey,rowc) 
_B._rowstyles[_rowkey]=_rowc;
// [537]  Return Me 
return _B;
// End Sub
};

// [540] Sub SetPadding(rowPos As Int, colPos As Int, pt As Object, pb As Object, pl As Object, pr As Object) As VMGrid 
_B.setpadding=function(_rowpos,_colpos,_pt,_pb,_pl,_pr) {
var _rowc,_rowkey;
// [541]  Dim rowc As Map 
_rowc={};
// [542]  Dim rowKey As String = {33} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "c" + _B.cstr(_colpos,_B) + "";
// [543]  If colPos = 0 Then 
if (_colpos==0) {
// [544]  rowKey = {34} 
_rowkey="" + _B._id + "r" + _B.cstr(_rowpos,_B) + "";
// [545]  End If 
}
// [546]  If rowStyles.ContainsKey(rowKey) Then 
if ((_rowkey in _B._rowstyles)) {
// [547]  rowc = rowStyles.Get(rowKey) 
_rowc=_B._rowstyles[_rowkey];
// [548]  Else 
} else {
// [549]  rowc.Initialize 
_rowc={};
// [550]  rowc.clear 
_rowc={};
// [551]  End If 
}
// [552]  If pt <> Null Then rowc.Put( {199} , pt) 
if (_pt!=null) {_rowc["padding-top"]=_pt;}
// [553]  If pb <> Null Then rowc.Put( {200} , pb) 
if (_pb!=null) {_rowc["padding-bottom"]=_pb;}
// [554]  If pl <> Null Then rowc.Put( {201} , pl) 
if (_pl!=null) {_rowc["padding-left"]=_pl;}
// [555]  If pr <> Null Then rowc.Put( {202} , pr) 
if (_pr!=null) {_rowc["padding-right"]=_pr;}
// [556]  rowStyles.Put(rowKey,rowc) 
_B._rowstyles[_rowkey]=_rowc;
// [557]  Return Me 
return _B;
// End Sub
};

// [561] Sub SetVIf(vif As Object) As VMGrid 
_B.setvif=function(_vif) {
// [562]  Grid.SetVIf(vif) 
_B._grid.setvif(_vif);
// [563]  Return Me 
return _B;
// End Sub
};

// [566] Sub SetKey(k As String, bind As Boolean) As VMGrid 
_B.setkey=function(_k,_bind) {
// [567]  Grid.SetKey(k, bind) 
_B._grid.setkey(_k,_bind);
// [568]  Return Me 
return _B;
// End Sub
};

// [571] Sub SetVShow(vif As Object) As VMGrid 
_B.setvshow=function(_vif) {
// [572]  Grid.SetVShow(vif) 
_B._grid.setvshow(_vif);
// [573]  Return Me 
return _B;
// End Sub
};

// [577] Sub AddClass(c As String) As VMGrid 
_B.addclass=function(_c) {
// [578]  Grid.AddClass(c) 
_B._grid.addclass(_c);
// [579]  Return Me 
return _B;
// End Sub
};

// [583] Sub SetAttr(attr As Map) As VMGrid 
_B.setattr=function(_attr) {
// [584]  Grid.SetAttr(attr) 
_B._grid.setattr(_attr);
// [585]  Return Me 
return _B;
// End Sub
};

// [588] Sub SetDisabled(b As Boolean) As VMGrid 
_B.setdisabled=function(_b) {
// [589]  Grid.SetDisabled(b) 
_B._grid.setdisabled(_b);
// [590]  Return Me 
return _B;
// End Sub
};

// [599] Sub Render 
_B.render=function() {
// [600]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [603] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [604]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [608] Sub Build 
_B.build=function() {
var _sb,_rowcnt,_rowtot,_rowkey,_currentrow,_strrow;
// [609]  If isBuilt = True Then Return 
if (_B._isbuilt==true) { return ;}
// [611]  LastRow = 0 
_B._lastrow=0;
// [612]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [613]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [615]  Dim rowCnt As Int = 0 
_rowcnt=0;
// [616]  Dim rowTot As Int = Rows.Size - 1 
_rowtot=Object.keys(_B._rows).length-1;
// [617]  For rowCnt = 0 To rowTot 
for (_rowcnt=0;_rowcnt<=_rowtot;_rowcnt++) {
// [618]  Dim rowKey As String = Rows.GetKeyAt(rowCnt) 
_rowkey=banano_getB4JKeyAt(_B._rows,_rowcnt);
// [619]  Dim currentRow As GridRow 
_currentrow= new banano_bananovuematerial_gridrow();
// [620]  currentRow.Initialize 
_currentrow.initialize();
// [621]  InitializeRow(currentRow) 
_B.initializerow(_currentrow,_B);
// [622]  currentRow = Rows.Get(rowKey) 
_currentrow=_B._rows[_rowkey];
// [623]  Dim strRow As String = BuildRow(currentRow) 
_strrow=_B.buildrow(_currentrow,_B);
// [624]  sb.Append(strRow) 
_sb.append(_strrow);
// [625]  sb.append(CRLF) 
_sb.append("\n");
// [626]  Next 
}
// [627]  Grid.SetText(sb.tostring) 
_B._grid.settext(_sb.toString());
// [628]  isBuilt = True 
_B._isbuilt=true;
// End Sub
};

// [631] Sub InitializeColumn(thisColumn As GridColumn) 
_B.initializecolumn=function(_thiscolumn) {
// [632]  thisColumn.Columns = {203} 
_thiscolumn._columns="1";
// [633]  thisColumn.OffsetSmall = {204} 
_thiscolumn._offsetsmall="0";
// [634]  thisColumn.OffsetMedium = {205} 
_thiscolumn._offsetmedium="0";
// [635]  thisColumn.OffsetLarge = {206} 
_thiscolumn._offsetlarge="0";
// [636]  thisColumn.SizeSmall = {207} 
_thiscolumn._sizesmall="12";
// [637]  thisColumn.SizeMedium = {208} 
_thiscolumn._sizemedium="12";
// [638]  thisColumn.SizeLarge = {209} 
_thiscolumn._sizelarge="12";
// [639]  thisColumn.SizeXLarge = {210} 
_thiscolumn._sizexlarge="12";
// [640]  thisColumn.MarginTop = Null 
_thiscolumn._margintop=null;
// [641]  thisColumn.MarginBottom = Null 
_thiscolumn._marginbottom=null;
// [642]  thisColumn.MarginLeft = Null 
_thiscolumn._marginleft=null;
// [643]  thisColumn.MarginRight = Null 
_thiscolumn._marginright=null;
// [644]  thisColumn.PaddingTop = Null 
_thiscolumn._paddingtop=null;
// [645]  thisColumn.PaddingBottom = Null 
_thiscolumn._paddingbottom=null;
// [646]  thisColumn.PaddingLeft = Null 
_thiscolumn._paddingleft=null;
// [647]  thisColumn.PaddingRight = Null 
_thiscolumn._paddingright=null;
// [648]  thisColumn.ThemeName = {211} 
_thiscolumn._themename="";
// [649]  thisColumn.Visibility = {212} 
_thiscolumn._visibility="";
// [650]  thisColumn.ClassName = {213} 
_thiscolumn._classname="";
// [651]  thisColumn.Row = {214} 
_thiscolumn._row="0";
// [652]  thisColumn.Col = {215} 
_thiscolumn._col="0";
// End Sub
};

// [656] private Sub CreateRow(Rows2Add As Int, Visibility As String, ThemeName As String,ClassName As String) As GridRow 
_B.createrow=function(_rows2add,_visibility,_themename,_classname) {
var _nr;
// [657]  Dim nr As GridRow 
_nr= new banano_bananovuematerial_gridrow();
// [658]  nr.Initialize 
_nr.initialize();
// [659]  InitializeRow(nr) 
_B.initializerow(_nr,_B);
// [660]  nr.ThemeName = ThemeName 
_nr._themename=_themename;
// [661]  nr.Visibility = Visibility 
_nr._visibility=_visibility;
// [662]  nr.ClassName = ClassName 
_nr._classname=_classname;
// [663]  nr.Rows = Rows2Add 
_nr._rows=_rows2add;
// [664]  nr.MarginTop = Null 
_nr._margintop=null;
// [665]  nr.MarginBottom = Null 
_nr._marginbottom=null;
// [666]  nr.MarginLeft = Null 
_nr._marginleft=null;
// [667]  nr.MarginRight = Null 
_nr._marginright=null;
// [668]  nr.PaddingTop = Null 
_nr._paddingtop=null;
// [669]  nr.PaddingBottom = Null 
_nr._paddingbottom=null;
// [670]  nr.PaddingLeft = Null 
_nr._paddingleft=null;
// [671]  nr.PaddingRight = Null 
_nr._paddingright=null;
// [672]  Return nr 
return _nr;
// End Sub
};

// [676] private Sub CreateColumn(Columns2Add As Int, OffsetSmall As String, OffsetMedium As String, OffsetLarge As String, OffsetXLarge As String, SizeSmall As String, SizeMedium As String, SizeLarge As String, SizeXLarge As String, ThemeName As String, Visibility As String, ClassName As String) As GridColumn 
_B.createcolumn=function(_columns2add,_offsetsmall,_offsetmedium,_offsetlarge,_offsetxlarge,_sizesmall,_sizemedium,_sizelarge,_sizexlarge,_themename,_visibility,_classname) {
var _ncell;
// [679]  Dim nCell As GridColumn 
_ncell= new banano_bananovuematerial_gridcolumn();
// [680]  nCell.Initialize 
_ncell.initialize();
// [681]  InitializeColumn(nCell) 
_B.initializecolumn(_ncell,_B);
// [682]  nCell.Columns = Columns2Add 
_ncell._columns=_columns2add;
// [683]  nCell.OffsetSmall = OffsetSmall 
_ncell._offsetsmall=_offsetsmall;
// [684]  nCell.OffsetMedium = OffsetMedium 
_ncell._offsetmedium=_offsetmedium;
// [685]  nCell.OffsetLarge = OffsetLarge 
_ncell._offsetlarge=_offsetlarge;
// [686]  nCell.OffsetXLarge = OffsetXLarge 
_ncell._offsetxlarge=_offsetxlarge;
// [687]  nCell.SizeSmall = SizeSmall 
_ncell._sizesmall=_sizesmall;
// [688]  nCell.SizeMedium = SizeMedium 
_ncell._sizemedium=_sizemedium;
// [689]  nCell.SizeLarge = SizeLarge 
_ncell._sizelarge=_sizelarge;
// [690]  nCell.SizeXLarge = SizeXLarge 
_ncell._sizexlarge=_sizexlarge;
// [691]  nCell.Visibility = Visibility 
_ncell._visibility=_visibility;
// [692]  nCell.ClassName = ClassName 
_ncell._classname=_classname;
// [693]  nCell.ThemeName = ThemeName 
_ncell._themename=_themename;
// [694]  nCell.MarginTop = Null 
_ncell._margintop=null;
// [695]  nCell.MarginBottom = Null 
_ncell._marginbottom=null;
// [696]  nCell.MarginLeft = Null 
_ncell._marginleft=null;
// [697]  nCell.MarginRight = Null 
_ncell._marginright=null;
// [698]  nCell.PaddingTop = Null 
_ncell._paddingtop=null;
// [699]  nCell.PaddingBottom = Null 
_ncell._paddingbottom=null;
// [700]  nCell.PaddingLeft = Null 
_ncell._paddingleft=null;
// [701]  nCell.PaddingRight = Null 
_ncell._paddingright=null;
// [702]  Return nCell 
return _ncell;
// End Sub
};

// [706] private Sub MapKeys2Delim(m As Map, delim As String) As String 
_B.mapkeys2delim=function(_m,_delim) {
var _sb,_ktot,_kcnt,_strkey;
// [707]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [708]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [709]  Dim kTot As Int = m.Size - 1 
_ktot=Object.keys(_m).length-1;
// [710]  Dim kCnt As Int 
_kcnt=0;
// [711]  Dim strKey As String = m.getkeyat(0) 
_strkey=banano_getB4JKeyAt(_m,0);
// [712]  sb.Append(strKey) 
_sb.append(_strkey);
// [713]  For kCnt = 1 To kTot 
for (_kcnt=1;_kcnt<=_ktot;_kcnt++) {
// [714]  Dim strKey As String = m.getkeyat(kCnt) 
_strkey=banano_getB4JKeyAt(_m,_kcnt);
// [715]  sb.Append(delim).append(strKey) 
_sb.append(_delim).append(_strkey);
// [716]  Next 
}
// [717]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [721] private Sub BuildRow(row As GridRow) As String 
_B.buildrow=function(_row) {
var _rowtot,_rowcnt,_sb,_rowkey,_trow,_strrowclass,_classkey,_cm,_strkey,_strval,_am,_k,_v,_cols,_colcnt,_coltot,_lastcolumn,_column,_colcnt1,_coltot1,_cellkey,_tcolumn,_strcolumnclass,_lst,_strrow;
// [723]  Dim rowTot As Int = row.Rows 
_rowtot=_row._rows;
// [724]  Dim rowCnt As Int 
_rowcnt=0;
// [725]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [726]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [728]  For rowCnt = 1 To rowTot 
for (_rowcnt=1;_rowcnt<=_rowtot;_rowcnt++) {
// [729]  LastRow = LastRow + 1 
_B._lastrow=_B._lastrow+1;
// [730]  row.Row = CStr(LastRow) 
_row._row=_B.cstr(_B._lastrow,_B);
// [731]  Dim rowKey As String = {35} 
_rowkey="" + _B._id + "r" + _B._lastrow + "";
// [732]  Dim tRow As VueHTML 
_trow= new banano_bananovuematerial_vuehtml();
// [733]  tRow.Initialize(rowKey, {216} ) 
_trow.initialize(_rowkey,"div");
// [734]  Dim strRowClass As String = BuildRowClass 
_strrowclass=_B.buildrowclass(_B);
// [735]  tRow.AddClass(strRowClass) 
_trow.addclass(_strrowclass);
// [736]  tRow.AddClass(row.ClassName) 
_trow.addclass(_row._classname);
// [737]  tRow.addClass(row.ThemeName) 
_trow.addclass(_row._themename);
// [739]  tRow.AddStyle( {217} , row.margintop) 
_trow.addstyle("margin-top",_row._margintop);
// [740]  tRow.AddStyle( {218} , row.marginbottom) 
_trow.addstyle("margin-bottom",_row._marginbottom);
// [741]  tRow.AddStyle( {219} , row.marginleft) 
_trow.addstyle("margin-left",_row._marginleft);
// [742]  tRow.AddStyle( {220} , row.marginright) 
_trow.addstyle("margin-right",_row._marginright);
// [743]  tRow.AddStyle( {221} , row.paddingtop) 
_trow.addstyle("padding-top",_row._paddingtop);
// [744]  tRow.AddStyle( {222} , row.paddingbottom) 
_trow.addstyle("padding-bottom",_row._paddingbottom);
// [745]  tRow.AddStyle( {223} , row.paddingleft) 
_trow.addstyle("padding-left",_row._paddingleft);
// [746]  tRow.AddStyle( {224} , row.paddingright) 
_trow.addstyle("padding-right",_row._paddingright);
// [749]  Dim classKey As String = {36} 
_classkey="" + _B._id + "r" + _B._lastrow + "";
// [750]  If rowClasses.ContainsKey(classKey) Then 
if ((_classkey in _B._rowclasses)) {
// [752]  Dim cm As Map = rowClasses.Get(classKey) 
_cm=_B._rowclasses[_classkey];
// [753]  tRow.AddClass(MapKeys2Delim(cm, {225} )) 
_trow.addclass(_B.mapkeys2delim(_cm," ",_B));
// [754]  End If 
}
// [755]  If rowStyles.ContainsKey(classKey) Then 
if ((_classkey in _B._rowstyles)) {
// [756]  Dim cm As Map = rowStyles.Get(classKey) 
_cm=_B._rowstyles[_classkey];
// [757]  For Each strkey As String In cm.Keys 
var _strkeyKeys = Object.keys(_cm);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [758]  Dim strVal As String = cm.Get(strkey) 
_strval=_cm[_strkey];
// [759]  tRow.AddStyleAttribute(strkey,strVal) 
_trow.addstyleattribute(_strkey,_strval);
// [760]  Next 
}
// [761]  End If 
}
// [762]  If attributes.ContainsKey(classKey) Then 
if ((_classkey in _B._attributes)) {
// [763]  Dim am As Map = attributes.Get(classKey) 
_am=_B._attributes[_classkey];
// [764]  For Each k As String In am.Keys 
var _kKeys = Object.keys(_am);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [765]  Dim v As String = am.Get(k) 
_v=_am[_k];
// [766]  tRow.SetAttr(k,v) 
_trow.setattr(_k,_v);
// [767]  Next 
}
// [768]  End If 
}
// [773]  Dim cols As List = row.Columns 
_cols=_row._columns;
// [775]  Dim colCnt As Int = 0 
_colcnt=0;
// [776]  Dim colTot As Int = cols.Size - 1 
_coltot=_cols.length-1;
// [778]  Dim LastColumn As Int = 0 
_lastcolumn=0;
// [779]  For colCnt = 0 To colTot 
for (_colcnt=0;_colcnt<=_coltot;_colcnt++) {
// [781]  Dim column As GridColumn 
_column= new banano_bananovuematerial_gridcolumn();
// [782]  column.Initialize 
_column.initialize();
// [783]  InitializeColumn(column) 
_B.initializecolumn(_column,_B);
// [784]  column = cols.Get(colCnt) 
_column=_cols[_colcnt];
// [785]  Dim colCnt1 As Int = 0 
_colcnt1=0;
// [786]  Dim colTot1 As Int = column.Columns 
_coltot1=_column._columns;
// [787]  For colCnt1 = 1 To colTot1 
for (_colcnt1=1;_colcnt1<=_coltot1;_colcnt1++) {
// [789]  LastColumn = LastColumn + 1 
_lastcolumn=_lastcolumn+1;
// [790]  column.Row = CStr(LastRow) 
_column._row=_B.cstr(_B._lastrow,_B);
// [791]  column.Col = CStr(LastColumn) 
_column._col=_B.cstr(_lastcolumn,_B);
// [792]  Dim cellKey As String = {38} 
_cellkey="" + _rowkey + "c" + _lastcolumn + "";
// [794]  RC.Put(cellKey,cellKey) 
_B._rc[_cellkey]=_cellkey;
// [801]  Dim tColumn As VueHTML 
_tcolumn= new banano_bananovuematerial_vuehtml();
// [802]  tColumn.Initialize(cellKey, {227} ) 
_tcolumn.initialize(_cellkey,"div");
// [803]  Dim strColumnClass As String = BuildColumnClass(column) 
_strcolumnclass=_B.buildcolumnclass(_column,_B);
// [804]  tColumn.AddClass(strColumnClass) 
_tcolumn.addclass(_strcolumnclass);
// [805]  tColumn.AddClass(column.ClassName) 
_tcolumn.addclass(_column._classname);
// [806]  tColumn.addClass(column.ThemeName) 
_tcolumn.addclass(_column._themename);
// [808]  tColumn.AddStyle( {228} , column.margintop) 
_tcolumn.addstyle("margin-top",_column._margintop);
// [809]  tColumn.AddStyle( {229} , column.marginbottom) 
_tcolumn.addstyle("margin-bottom",_column._marginbottom);
// [810]  tColumn.AddStyle( {230} , column.marginleft) 
_tcolumn.addstyle("margin-left",_column._marginleft);
// [811]  tColumn.AddStyle( {231} , column.marginright) 
_tcolumn.addstyle("margin-right",_column._marginright);
// [812]  tColumn.AddStyle( {232} , column.paddingtop) 
_tcolumn.addstyle("padding-top",_column._paddingtop);
// [813]  tColumn.AddStyle( {233} , column.paddingbottom) 
_tcolumn.addstyle("padding-bottom",_column._paddingbottom);
// [814]  tColumn.AddStyle( {234} , column.paddingleft) 
_tcolumn.addstyle("padding-left",_column._paddingleft);
// [815]  tColumn.AddStyle( {235} , column.paddingright) 
_tcolumn.addstyle("padding-right",_column._paddingright);
// [819]  Dim classKey As String = {40} 
_classkey="" + _B._id + "r" + _B._lastrow + "c" + _lastcolumn + "";
// [820]  If rowClasses.ContainsKey(classKey) Then 
if ((_classkey in _B._rowclasses)) {
// [822]  Dim cm As Map = rowClasses.Get(classKey) 
_cm=_B._rowclasses[_classkey];
// [823]  tColumn.AddClass(MapKeys2Delim(cm, {236} )) 
_tcolumn.addclass(_B.mapkeys2delim(_cm," ",_B));
// [824]  End If 
}
// [825]  If rowStyles.ContainsKey(classKey) Then 
if ((_classkey in _B._rowstyles)) {
// [826]  Dim cm As Map = rowStyles.Get(classKey) 
_cm=_B._rowstyles[_classkey];
// [827]  For Each strkey As String In cm.Keys 
var _strkeyKeys = Object.keys(_cm);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [828]  Dim strVal As String = cm.Get(strkey) 
_strval=_cm[_strkey];
// [829]  tColumn.AddStyleAttribute(strkey,strVal) 
_tcolumn.addstyleattribute(_strkey,_strval);
// [830]  Next 
}
// [831]  End If 
}
// [832]  If attributes.ContainsKey(classKey) Then 
if ((_classkey in _B._attributes)) {
// [833]  Dim am As Map = attributes.Get(classKey) 
_am=_B._attributes[_classkey];
// [834]  For Each k As String In am.Keys 
var _kKeys = Object.keys(_am);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [835]  Dim v As String = am.Get(k) 
_v=_am[_k];
// [836]  tColumn.SetAttr(k,v) 
_tcolumn.setattr(_k,_v);
// [837]  Next 
}
// [838]  End If 
}
// [839]  If Components.ContainsKey(cellKey) Then 
if ((_cellkey in _B._components)) {
// [840]  Dim lst As List = Components.Get(cellKey) 
_lst=_B._components[_cellkey];
// [841]  tColumn.AddContentList(lst) 
_tcolumn.addcontentlist(_lst);
// [842]  End If 
}
// [843]  tRow.AddElement(tColumn) 
_trow.addelement(_tcolumn);
// [845]  Next 
}
// [846]  Next 
}
// [847]  Dim strRow As String = tRow.tostring 
_strrow=_trow.tostring();
// [848]  sb.Append(strRow).Append(CRLF) 
_sb.append(_strrow).append("\n");
// [850]  Next 
}
// [851]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [855] private Sub BuildColumnClass(col As GridColumn) As String 
_B.buildcolumnclass=function(_col) {
var _strspans,_stroffsets,_sb;
// [856]  Dim strSpans As String = BuildSpans(col.SizeSmall,col.SizeMedium,col.SizeLarge,col.SizeXLarge) 
_strspans=_B.buildspans(_col._sizesmall,_col._sizemedium,_col._sizelarge,_col._sizexlarge,_B);
// [857]  Dim strOffSets As String = BuildOffsets(col.offsetsmall,col.offsetmedium,col.Offsetlarge,col.OffsetXlarge) 
_stroffsets=_B.buildoffsets(_col._offsetsmall,_col._offsetmedium,_col._offsetlarge,_col._offsetxlarge,_B);
// [859]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [860]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [861]  sb.Append( {41} ) 
_sb.append("" + _B._cellclass + " ");
// [862]  sb.Append(strSpans) 
_sb.append(_strspans);
// [863]  sb.Append(strOffSets) 
_sb.append(_stroffsets);
// [864]  Return sb.tostring.trim 
return _sb.toString().trim();
// End Sub
};

// [868] private Sub BuildRowClass() As String 
_B.buildrowclass=function() {
var _sb;
// [869]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [870]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [871]  sb.Append( {42} ) 
_sb.append("" + _B._rowclass + " ");
// [872]  Return sb.tostring.trim 
return _sb.toString().trim();
// End Sub
};

// [876] Private Sub BuildSpans(SS As String, SM As String, SL As String, XL As String) As String 
_B.buildspans=function(_ss,_sm,_sl,_xl) {
var _pvalue,_sb,_ktot,_kcnt,_colkey,_colc;
// [877]  Dim pvalue As String = {238} 
_pvalue="";
// [878]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [879]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [881]  Dim kTot As Int = colClass.Size - 1 
_ktot=Object.keys(_B._colclass).length-1;
// [882]  Dim kCnt As Int 
_kcnt=0;
// [883]  For kCnt = 0 To kTot 
for (_kcnt=0;_kcnt<=_ktot;_kcnt++) {
// [884]  Dim colKey As String = colClass.GetKeyAt(kCnt) 
_colkey=banano_getB4JKeyAt(_B._colclass,_kcnt);
// [886]  Dim colC As String = colClass.Get(colKey) 
_colc=_B._colclass[_colkey];
// [888]  Select Case colKey 
switch ("" + _colkey) {
// [889]  Case {239} 
case "" + "s":
// [890]  pvalue = CStr(SS) 
_pvalue=_B.cstr(_ss,_B);
// [891]  Case {240} 
break;
case "" + "m":
// [892]  pvalue = CStr(SM) 
_pvalue=_B.cstr(_sm,_B);
// [893]  Case {241} 
break;
case "" + "l":
// [894]  pvalue = CStr(SL) 
_pvalue=_B.cstr(_sl,_B);
// [895]  Case {242} 
break;
case "" + "xl":
// [896]  pvalue = CStr(XL) 
_pvalue=_B.cstr(_xl,_B);
// [897]  End Select 
break;
}
// [898]  If pvalue <> {243} Then 
if (_pvalue!="") {
// [899]  sb.Append(colC) 
_sb.append(_colc);
// [900]  sb.Append(pvalue) 
_sb.append(_pvalue);
// [901]  sb.Append( {244} ) 
_sb.append(" ");
// [902]  End If 
}
// [903]  Next 
}
// [904]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [908] Private Sub BuildOffsets(OS As String, OM As String, OL As String, OXL As String) As String 
_B.buildoffsets=function(_os,_om,_ol,_oxl) {
var _pvalue,_sb,_ktot,_kcnt,_colkey,_colc;
// [909]  Dim pvalue As String 
_pvalue="";
// [910]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [911]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [912]  Dim kTot As Int = offClass.Size - 1 
_ktot=Object.keys(_B._offclass).length-1;
// [913]  Dim kCnt As Int = 0 
_kcnt=0;
// [914]  For kCnt = 0 To kTot 
for (_kcnt=0;_kcnt<=_ktot;_kcnt++) {
// [915]  Dim colKey As String = offClass.GetKeyAt(kCnt) 
_colkey=banano_getB4JKeyAt(_B._offclass,_kcnt);
// [917]  Dim colC As String = offClass.Get(colKey) 
_colc=_B._offclass[_colkey];
// [919]  Select Case colKey 
switch ("" + _colkey) {
// [920]  Case {245} 
case "" + "s":
// [921]  pvalue = CStr(OS) 
_pvalue=_B.cstr(_os,_B);
// [922]  Case {246} 
break;
case "" + "m":
// [923]  pvalue = CStr(OM) 
_pvalue=_B.cstr(_om,_B);
// [924]  Case {247} 
break;
case "" + "l":
// [925]  pvalue = CStr(OL) 
_pvalue=_B.cstr(_ol,_B);
// [926]  Case {248} 
break;
case "" + "xl":
// [927]  pvalue = CStr(OXL) 
_pvalue=_B.cstr(_oxl,_B);
// [928]  End Select 
break;
}
// [929]  If pvalue <> {249} Then 
if (_pvalue!="") {
// [930]  sb.Append(colC) 
_sb.append(_colc);
// [931]  sb.Append(pvalue) 
_sb.append(_pvalue);
// [932]  sb.Append( {250} ) 
_sb.append(" ");
// [933]  End If 
}
// [934]  Next 
}
// [935]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [939] Sub RowExists(rowPos As Int) As Boolean 
_B.rowexists=function(_rowpos) {
var _rowcol;
// [940]  Dim rowcol As String = {43} 
_rowcol="" + _B._id + "r" + _rowpos + "";
// [941]  Return Rows.ContainsKey(rowcol) 
return (_rowcol in _B._rows);
// End Sub
};

// [945] Sub ColumnExists(rowPos As Int, colPos As Int) As Boolean 
_B.columnexists=function(_rowpos,_colpos) {
var _rowcol;
// [946]  Dim rowcol As String = {44} 
_rowcol="" + _B._id + "r" + _rowpos + "c" + _colpos + "";
// [947]  Return RC.ContainsKey(rowcol) 
return (_rowcol in _B._rc);
// End Sub
};

// [951] Sub HowManyRows() As Int 
_B.howmanyrows=function() {
// [952]  Return LastRow 
return _B._lastrow;
// End Sub
};

}
/* =========================== VMIcon  =========================== */
function banano_bananovuematerial_vmicon() {
var _B=this;
_B._icon= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hascontent=false;

// [9] Public Sub Initialize(v As BANanoVue, sid As String) As VMIcon 
_B.initialize=function(_v,_sid) {
// [10]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [11]  vue = v 
_B._vue=_v;
// [12]  Icon.Initialize(vue, ID).SetTag( {0} ) 
_B._icon.initialize(_B._vue,_B._id).settag("md-icon");
// [13]  hasContent = False 
_B._hascontent=false;
// [14]  Return Me 
return _B;
// End Sub
};

// [17] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [18]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

// [22] Sub SetOnClick(module As Object, methodName As String) As VMIcon 
_B.setonclick=function(_module,_methodname) {
// [23]  Icon.SetOnClick(module, methodName) 
_B._icon.setonclick(_module,_methodname);
// [24]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetBottomBarIcon(b As Boolean) As VMIcon 
_B.setbottombaricon=function(_b) {
// [28]  Icon.AddClass( {1} ) 
_B._icon.addclass("md-bottom-bar-icon");
// [29]  Return Me 
return _B;
// End Sub
};

// [32] Sub SetSrc(src As String) As VMIcon 
_B.setsrc=function(_src) {
// [33]  SetAttr(CreateMap( {2} : src)) 
_B.setattr({"md-src":_src},_B);
// [34]  Return Me 
return _B;
// End Sub
};

// [38] Sub AddClass(c As String) As VMIcon 
_B.addclass=function(_c) {
// [39]  Icon.AddClass(c) 
_B._icon.addclass(_c);
// [40]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetFontAwesome(fa As String) As VMIcon 
_B.setfontawesome=function(_fa) {
// [45]  AddClass(fa) 
_B.addclass(_fa,_B);
// [46]  Return Me 
return _B;
// End Sub
};

// [49] Sub SetVIf(vif As Object) As VMIcon 
_B.setvif=function(_vif) {
// [50]  If vif = {3} Then Return Me 
if (_vif=="") { return _B;}
// [51]  Icon.SetVIf(vif) 
_B._icon.setvif(_vif);
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetVShow(vif As Object) As VMIcon 
_B.setvshow=function(_vif) {
// [56]  If vif = {4} Then Return Me 
if (_vif=="") { return _B;}
// [57]  Icon.SetVShow(vif) 
_B._icon.setvshow(_vif);
// [58]  Return Me 
return _B;
// End Sub
};

// [63] Sub SetAttr(attr As Map) As VMIcon 
_B.setattr=function(_attr) {
// [64]  Icon.SetAttr(attr) 
_B._icon.setattr(_attr);
// [65]  Return Me 
return _B;
// End Sub
};

// [69] Sub SetPrimary(b As Boolean) As VMIcon 
_B.setprimary=function(_b) {
// [70]  Icon.SetPrimary(b) 
_B._icon.setprimary(_b);
// [71]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetText(t As String) As VMIcon 
_B.settext=function(_t) {
// [75]  Icon.SetText(t) 
_B._icon.settext(_t);
// [76]  hasContent = True 
_B._hascontent=true;
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetID(iID As String, bind As Boolean) As VMIcon 
_B.setid=function(_iid,_bind) {
// [81]  Icon.setid(iID, bind) 
_B._icon.setid(_iid,_bind);
// [82]  Return Me 
return _B;
// End Sub
};

// [85] Sub SetName(nam As String, bind As Boolean) As VMIcon 
_B.setname=function(_nam,_bind) {
// [86]  Icon.SetName(nam, bind) 
_B._icon.setname(_nam,_bind);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetKey(k As String, bind As Boolean) As VMIcon 
_B.setkey=function(_k,_bind) {
// [91]  Icon.SetKey(k, bind) 
_B._icon.setkey(_k,_bind);
// [92]  Return Me 
return _B;
// End Sub
};

// [95] Sub ToString As String 
_B.tostring=function() {
// [96]  Return Icon.tostring 
return _B._icon.tostring();
// End Sub
};

// [99] Sub Render 
_B.render=function() {
// [100]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [103] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [104]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [108] Sub SetSize2x(b As Boolean) As VMIcon 'ignore 
_B.setsize2x=function(_b) {
// [109]  AddClass( {5} ) 
_B.addclass("md-size-2x",_B);
// [110]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetSize3x(b As Boolean) As VMIcon 'ignore 
_B.setsize3x=function(_b) {
// [115]  AddClass( {6} ) 
_B.addclass("md-size-3x",_B);
// [116]  Return Me 
return _B;
// End Sub
};

// [120] Sub SetSize4x(b As Boolean) As VMIcon 'ignore 
_B.setsize4x=function(_b) {
// [121]  AddClass( {7} ) 
_B.addclass("md-size-4x",_B);
// [122]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetSize5x(b As Boolean) As VMIcon 'ignore 
_B.setsize5x=function(_b) {
// [127]  AddClass( {8} ) 
_B.addclass("md-size-5x",_B);
// [128]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMImage  =========================== */
function banano_bananovuematerial_vmimage() {
var _B=this;
_B._image= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hastt=false;

_B._tt= new banano_bananovuematerial_vmtooltip();

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMImage 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [13]  vue = v 
_B._vue=_v;
// [14]  Image.Initialize(vue, ID).SetTag( {14} ) 
_B._image.initialize(_B._vue,_B._id).settag("img");
// [15]  hasTT = False 
_B._hastt=false;
// [16]  Image.SetOnClick(eventHandler, {0} ) 
_B._image.setonclick(_eventhandler,"" + _B._id + "_click");
// [17]  Image.SetOnTouchStart(module, {1} ) 
_B._image.setontouchstart(_B._module,"" + _B._id + "_touchstart");
// [18]  Image.SetOnDragOver(module, {2} ) 
_B._image.setondragover(_B._module,"" + _B._id + "_dragover");
// [19]  Image.setondragstart(module, {3} ) 
_B._image.setondragstart(_B._module,"" + _B._id + "_dragstart");
// [20]  Image.SetOnDragEnd(module, {4} ) 
_B._image.setondragend(_B._module,"" + _B._id + "_dragend");
// [21]  Image.setondragenter(module, {5} ) 
_B._image.setondragenter(_B._module,"" + _B._id + "_dragenter");
// [22]  Image.SetOnDrop(module, {6} ) 
_B._image.setondrop(_B._module,"" + _B._id + "_drop");
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetToolTipTop(Text As String) As VMImage 
_B.settooltiptop=function(_text) {
// [27]  tt.Initialize(vue, {7} ).SetText(Text).SetDirectionTop(True) 
_B._tt.initialize(_B._vue,"" + _B._id + "tlt").settext(_text).setdirectiontop(true);
// [28]  hasTT = True 
_B._hastt=true;
// [29]  Return Me 
return _B;
// End Sub
};

// [32] Sub SetToolTipRight(Text As String) As VMImage 
_B.settooltipright=function(_text) {
// [33]  tt.Initialize(vue, {8} ).SetText(Text).SetDirectionRight(True) 
_B._tt.initialize(_B._vue,"" + _B._id + "tlt").settext(_text).setdirectionright(true);
// [34]  hasTT = True 
_B._hastt=true;
// [35]  Return Me 
return _B;
// End Sub
};

// [38] Sub SetToolTipBottom(Text As String) As VMImage 
_B.settooltipbottom=function(_text) {
// [39]  tt.Initialize(vue, {9} ).SetText(Text).SetDirectionBottom(True) 
_B._tt.initialize(_B._vue,"" + _B._id + "tlt").settext(_text).setdirectionbottom(true);
// [40]  hasTT = True 
_B._hastt=true;
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetToolTipLeft(Text As String) As VMImage 
_B.settooltipleft=function(_text) {
// [45]  tt.Initialize(vue, {10} ).SetText(Text).SetDirectionLeft(True) 
_B._tt.initialize(_B._vue,"" + _B._id + "tlt").settext(_text).setdirectionleft(true);
// [46]  hasTT = True 
_B._hastt=true;
// [47]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetVShow(vif As String) As VMImage 
_B.setvshow=function(_vif) {
// [51]  Image.SetVShow(vif) 
_B._image.setvshow(_vif);
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetVIf(vif As String) As VMImage 
_B.setvif=function(_vif) {
// [56]  Image.SetVIf(vif) 
_B._image.setvif(_vif);
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetDraggable(b As Boolean) As VMImage 
_B.setdraggable=function(_b) {
// [61]  Image.SetDraggable(b) 
_B._image.setdraggable(_b);
// [62]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetDroppable(b As Boolean) As VMImage 
_B.setdroppable=function(_b) {
// [66]  Image.SetDroppable(b) 
_B._image.setdroppable(_b);
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetWidth(w As String) As VMImage 
_B.setwidth=function(_w) {
// [71]  Image.SetWidth(w) 
_B._image.setwidth(_w);
// [72]  Return Me 
return _B;
// End Sub
};

// [75] Sub SetHeight(h As String) As VMImage 
_B.setheight=function(_h) {
// [76]  Image.SetHeight(h) 
_B._image.setheight(_h);
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetBorder(width As String, color As String, bstyle As String) As VMImage 
_B.setborder=function(_width,_color,_bstyle) {
// [81]  Image.SetBorder(width, color, bstyle) 
_B._image.setborder(_width,_color,_bstyle);
// [82]  Return Me 
return _B;
// End Sub
};

// [85] Sub SetMarginAll(p As Object) As VMImage 
_B.setmarginall=function(_p) {
// [86]  Image.SetMarginAll(p) 
_B._image.setmarginall(_p);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetAttr(m As Map) As VMImage 
_B.setattr=function(_m) {
// [91]  Image.SetAttr(m) 
_B._image.setattr(_m);
// [92]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetRipple(b As Boolean) As VMImage 
_B.setripple=function(_b) {
// [96]  Image.SetRipple(b) 
_B._image.setripple(_b);
// [97]  Return Me 
return _B;
// End Sub
};

// [100] Sub SetPaddingAll(p As Object) As VMImage 
_B.setpaddingall=function(_p) {
// [101]  Image.SetPaddingAll(p) 
_B._image.setpaddingall(_p);
// [102]  Return Me 
return _B;
// End Sub
};

// [105] Sub SetCursorMove As VMImage 
_B.setcursormove=function() {
// [106]  Image.SetCursorMove 
_B._image.setcursormove();
// [107]  Return Me 
return _B;
// End Sub
};

// [110] Sub SetCursorPointer As VMImage 
_B.setcursorpointer=function() {
// [111]  Image.SetCursorPointer 
_B._image.setcursorpointer();
// [112]  Return Me 
return _B;
// End Sub
};

// [115] Sub SetText(t As String) As VMImage 
_B.settext=function(_t) {
// [116]  Image.SetText(t) 
_B._image.settext(_t);
// [117]  Return Me 
return _B;
// End Sub
};

// [120] Sub SetStyle(m As Map) As VMImage 
_B.setstyle=function(_m) {
// [121]  Image.SetStyle(m) 
_B._image.setstyle(_m);
// [122]  Return Me 
return _B;
// End Sub
};

// [126] Sub AddClass(c As String) As VMImage 
_B.addclass=function(_c) {
// [127]  Image.AddClass(c) 
_B._image.addclass(_c);
// [128]  Return Me 
return _B;
// End Sub
};

// [131] Sub SetAlt(a As String) As VMImage 
_B.setalt=function(_a) {
// [132]  Image.SetAlt(a) 
_B._image.setalt(_a);
// [133]  Return Me 
return _B;
// End Sub
};

// [136] Sub SetVerticalAlignMiddle As VMImage 
_B.setverticalalignmiddle=function() {
// [137]  Image.SetVerticalAlignMiddle 
_B._image.setverticalalignmiddle();
// [138]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetValue(valueName As String, bind As Boolean) As VMImage 
_B.setvalue=function(_valuename,_bind) {
var _opt;
// [143]  If bind Then 
if (_bind) {
// [144]  valueName = valueName.tolowercase 
_valuename=_valuename.toLowerCase();
// [145]  Image.SetSRC( {11} ,True) 
_B._image.setsrc("" + _B._id + "src",true);
// [146]  Dim opt As Map = CreateMap() 
_opt={};
// [147]  opt.Put( {12} , valueName) 
_opt["" + _B._id + "src"]=_valuename;
// [148]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// [149]  Else 
} else {
// [150]  Image.SetSRC(valueName, False) 
_B._image.setsrc(_valuename,false);
// [151]  SetAttr(CreateMap( {15} :valueName)) 
_B.setattr({"value":_valuename},_B);
// [152]  End If 
}
// [153]  Return Me 
return _B;
// End Sub
};

// [156] Sub SetVModel(k As String) As VMImage 
_B.setvmodel=function(_k) {
// [157]  Image.SetVModel(k) 
_B._image.setvmodel(_k);
// [158]  Return Me 
return _B;
// End Sub
};

// [161] Sub ToString As String 
_B.tostring=function() {
var _div;
// [162]  If hasTT Then 
if (_B._hastt) {
// [163]  Dim div As VMElement 
_div= new banano_bananovuematerial_vmelement();
// [164]  div.Initialize(vue, {13} ) 
_div.initialize(_B._vue,"" + _B._id + "parent");
// [165]  div.SetText(Image.ToString) 
_div.settext(_B._image.tostring());
// [166]  div.SetText(tt.ToString) 
_div.settext(_B._tt.tostring());
// [167]  Return div.tostring 
return _div.tostring();
// [168]  Else 
} else {
// [169]  Return Image.tostring 
return _B._image.tostring();
// [170]  End If 
}
// End Sub
};

// [173] Sub Render 
_B.render=function() {
// [174]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [177] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [178]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMInfoBox  =========================== */
function banano_bananovuematerial_vminfobox() {
var _B=this;
_B._infobox= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._icon= new banano_bananovuematerial_vmelement();

_B._content= new banano_bananovuematerial_vmelement();

_B._text= new banano_bananovuematerial_vmelement();

_B._countit= new banano_bananovuematerial_vmelement();

_B._i= new banano_bananovuematerial_vmelement();

_B._hasicon=false;

_B._module={};

// [16] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMInfoBox 
_B.initialize=function(_v,_sid,_eventhandler) {
// [17]  banano.DependsOnAsset( {22} ) 
;
// [18]  banano.DependsOnAsset( {23} ) 
;
// [19]  banano.DependsOnAsset( {24} ) 
;
// [20]  module = eventHandler 
_B._module=_eventhandler;
// [21]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [22]  vue = v 
_B._vue=_v;
// [23]  InfoBox.Initialize(vue, ID).SetTag( {25} ).AddClass( {26} ) 
_B._infobox.initialize(_B._vue,_B._id).settag("div").addclass("info-box");
// [24]  Icon.Initialize(vue, {0} ).SetTag( {27} ).AddClass( {28} ) 
_B._icon.initialize(_B._vue,"" + _B._id + "icn").settag("div").addclass("icon");
// [25]  Content.Initialize(vue, {1} ).SetTag( {29} ).AddClass( {30} ) 
_B._content.initialize(_B._vue,"" + _B._id + "content").settag("div").addclass("content");
// [26]  Text.Initialize(vue, {2} ).SetTag( {31} ).AddClass( {32} ) 
_B._text.initialize(_B._vue,"" + _B._id + "text").settag("div").addclass("text");
// [27]  CountIt.Initialize(vue, {3} ).SetTag( {33} ).AddClass( {34} ) 
_B._countit.initialize(_B._vue,"" + _B._id + "number").settag("div").addclass("number");
// [28]  i.Initialize(vue, {4} ).SetTag( {35} ).AddClass( {36} ) 
_B._i.initialize(_B._vue,"" + _B._id + "i").settag("i").addclass("material-icons");
// [29]  hasIcon = False 
_B._hasicon=false;
// [30]  InfoBox.SetOnClick(module, {5} ) 
_B._infobox.setonclick(_B._module,"" + _B._id + "_click");
// [31]  SetKey(ID) 
_B.setkey(_B._id,_B);
// [32]  Return Me 
return _B;
// End Sub
};

// [35] Sub SetKey(k As Object) As VMInfoBox 
_B.setkey=function(_k) {
var _pp;
// [36]  Dim pp As String = {6} 
_pp="" + _B._id + "key";
// [37]  vue.SetStateSingle(pp, k) 
_B._vue.setstatesingle(_pp,_k);
// [38]  InfoBox.SetKey(pp,True) 
_B._infobox.setkey(_pp,true);
// [39]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetStyle2(b As Boolean) As VMInfoBox 
_B.setstyle2=function(_b) {
// [56]  InfoBox.removeclass( {38} ).addclass( {39} ) 
_B._infobox.removeclass("info-box").addclass("info-box-2");
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetStyle3(b As Boolean) As VMInfoBox 
_B.setstyle3=function(_b) {
// [61]  InfoBox.removeclass( {40} ).addclass( {41} ) 
_B._infobox.removeclass("info-box").addclass("info-box-3");
// [62]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetStyle4(b As Boolean) As VMInfoBox 
_B.setstyle4=function(_b) {
// [66]  InfoBox.removeclass( {42} ).addclass( {43} ) 
_B._infobox.removeclass("info-box").addclass("info-box-4");
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetIconBackgroundColor(background As String) As VMInfoBox 
_B.seticonbackgroundcolor=function(_background) {
var _bg;
// [71]  If background = {44} Then Return Me 
if (_background=="") { return _B;}
// [72]  Dim bg As String = {10} 
_bg="bg-" + _background + "";
// [73]  Icon.AddClass(bg) 
_B._icon.addclass(_bg);
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SetBackgroundColor(background As String) As VMInfoBox 
_B.setbackgroundcolor=function(_background) {
var _bg;
// [78]  If background = {45} Then Return Me 
if (_background=="") { return _B;}
// [79]  Dim bg As String = {11} 
_bg="bg-" + _background + "";
// [80]  InfoBox.AddClass(bg) 
_B._infobox.addclass(_bg);
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub SetIconColor(foreColor As String) As VMInfoBox 
_B.seticoncolor=function(_forecolor) {
var _bg;
// [85]  If foreColor = {46} Then Return Me 
if (_forecolor=="") { return _B;}
// [86]  Dim bg As String = {12} 
_bg="col-" + _forecolor + "";
// [87]  I.AddClass(bg) 
_B._i.addclass(_bg);
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetColor(foreColor As String) As VMInfoBox 
_B.setcolor=function(_forecolor) {
var _bg;
// [92]  Dim bg As String = {13} 
_bg="col-" + _forecolor + "";
// [93]  InfoBox.AddClass(bg) 
_B._infobox.addclass(_bg);
// [94]  Return Me 
return _B;
// End Sub
};

// [97] Sub SetText(txt As String) As VMInfoBox 
_B.settext=function(_txt) {
var _pp;
// [98]  Dim pp As String = {14} 
_pp="" + _B._id + "text";
// [99]  vue.SetStateSingle(pp, txt) 
_B._vue.setstatesingle(_pp,_txt);
// [100]  Text.SetText( {15} ) 
_B._text.settext("{{ " + _pp + " }}");
// [101]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetFrom(startFrom As String) As VMInfoBox 
_B.setfrom=function(_startfrom) {
var _pp;
// [105]  Dim pp As String = {16} 
_pp="" + _B._id + "from";
// [106]  vue.SetStateSingle(pp, startFrom) 
_B._vue.setstatesingle(_pp,_startfrom);
// [107]  CountIt.AddClass( {47} ) 
_B._countit.addclass("count-to");
// [108]  CountIt.AddClass(ID) 
_B._countit.addclass(_B._id);
// [109]  CountIt.SetAttr(CreateMap( {48} : pp)) 
_B._countit.setattr({":data-from":_pp});
// [110]  Return Me 
return _B;
// End Sub
};

// [113] Sub SetTo(endTo As String) As VMInfoBox 
_B.setto=function(_endto) {
var _pp;
// [114]  Dim pp As String = {17} 
_pp="" + _B._id + "to";
// [115]  vue.SetStateSingle(pp,endTo) 
_B._vue.setstatesingle(_pp,_endto);
// [116]  CountIt.AddClass( {49} ) 
_B._countit.addclass("count-to");
// [117]  CountIt.AddClass(ID) 
_B._countit.addclass(_B._id);
// [118]  CountIt.SetAttr(CreateMap( {50} : pp)) 
_B._countit.setattr({":data-to":_pp});
// [119]  SetNumber(endTo) 
_B.setnumber(_endto,_B);
// [120]  Return Me 
return _B;
// End Sub
};

// [124] Sub Refresh 
_B.refresh=function() {
// [126]  SetKey(DateTime.Now) 
_B.setkey(DateTime.Now(),_B);
// [127]  vue.JQuery.Selector( {18} ).RunMethod( {51} , Null) 
_B._vue._jquery("." + _B._id + "")["countTo"]();
// End Sub
};

// [130] Sub SetNumber(numo As String) As VMInfoBox 
_B.setnumber=function(_numo) {
var _pp;
// [131]  Dim pp As String = {19} 
_pp="" + _B._id + "number";
// [132]  vue.SetStateSingle(pp, numo) 
_B._vue.setstatesingle(_pp,_numo);
// [133]  CountIt.SetText( {20} ) 
_B._countit.settext("{{ " + _pp + " }}");
// [134]  Return Me 
return _B;
// End Sub
};

// [137] Sub SetSpeed(speed As String) As VMInfoBox 
_B.setspeed=function(_speed) {
var _pp;
// [138]  Dim pp As String = {21} 
_pp="" + _B._id + "speed";
// [139]  vue.SetStateSingle(pp, speed) 
_B._vue.setstatesingle(_pp,_speed);
// [140]  CountIt.AddClass( {52} ) 
_B._countit.addclass("count-to");
// [141]  CountIt.AddClass(ID) 
_B._countit.addclass(_B._id);
// [142]  CountIt.SetAttr(CreateMap( {53} :pp)) 
_B._countit.setattr({":data-speed":_pp});
// [143]  Return Me 
return _B;
// End Sub
};

// [146] Sub SetRefreshInterval(interval As String) As VMInfoBox 
_B.setrefreshinterval=function(_interval) {
// [147]  If interval = {54} Then Return Me 
if (_interval=="") { return _B;}
// [148]  CountIt.AddClass( {55} ) 
_B._countit.addclass("count-to");
// [149]  CountIt.AddClass(ID) 
_B._countit.addclass(_B._id);
// [150]  CountIt.SetAttr(CreateMap( {56} :interval)) 
_B._countit.setattr({"data-fresh-interval":_interval});
// [151]  Return Me 
return _B;
// End Sub
};

// [154] Sub SetIcon(matIcon As String) As VMInfoBox 
_B.seticon=function(_maticon) {
// [155]  If matIcon = {57} Then Return Me 
if (_maticon=="") { return _B;}
// [156]  hasIcon = True 
_B._hasicon=true;
// [157]  i.SetText(matIcon) 
_B._i.settext(_maticon);
// [158]  Return Me 
return _B;
// End Sub
};

// [161] Sub ToString As String 
_B.tostring=function() {
// [162]  If hasIcon Then i.Pop(Icon) 
if (_B._hasicon) {_B._i.pop(_B._icon);}
// [163]  Icon.Pop(InfoBox) 
_B._icon.pop(_B._infobox);
// [164]  Text.Pop(Content) 
_B._text.pop(_B._content);
// [165]  CountIt.Pop(Content) 
_B._countit.pop(_B._content);
// [166]  Content.Pop(InfoBox) 
_B._content.pop(_B._infobox);
// [167]  Return InfoBox.tostring 
return _B._infobox.tostring();
// End Sub
};

// [170] Sub SetHoverZoomEffect(b As Boolean) As VMInfoBox 
_B.sethoverzoomeffect=function(_b) {
// [171]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [172]  InfoBox.AddClass( {58} ) 
_B._infobox.addclass("hover-zoom-effect");
// [173]  Return Me 
return _B;
// End Sub
};

// [176] Sub SetHoverExpandEffect(b As Boolean) As VMInfoBox 
_B.sethoverexpandeffect=function(_b) {
// [177]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [178]  InfoBox.AddClass( {59} ) 
_B._infobox.addclass("hover-expand-effect");
// [179]  Return Me 
return _B;
// End Sub
};

// [183] Sub SetStyle(sm As Map) As VMInfoBox 
_B.setstyle=function(_sm) {
// [184]  InfoBox.SetStyle(sm) 
_B._infobox.setstyle(_sm);
// [185]  Return Me 
return _B;
// End Sub
};

// [188] Sub SetVIf(vif As Object) As VMInfoBox 
_B.setvif=function(_vif) {
// [189]  InfoBox.SetVIf(vif) 
_B._infobox.setvif(_vif);
// [190]  Return Me 
return _B;
// End Sub
};

// [193] Sub SetVShow(vif As Object) As VMInfoBox 
_B.setvshow=function(_vif) {
// [194]  InfoBox.SetVShow(vif) 
_B._infobox.setvshow(_vif);
// [195]  Return Me 
return _B;
// End Sub
};

// [199] Sub AddClass(c As String) As VMInfoBox 
_B.addclass=function(_c) {
// [200]  InfoBox.AddClass(c) 
_B._infobox.addclass(_c);
// [201]  Return Me 
return _B;
// End Sub
};

// [205] Sub SetAttr(attr As Map) As VMInfoBox 
_B.setattr=function(_attr) {
// [206]  InfoBox.SetAttr(attr) 
_B._infobox.setattr(_attr);
// [207]  Return Me 
return _B;
// End Sub
};

// [210] Sub SetDisabled(b As Boolean) As VMInfoBox 
_B.setdisabled=function(_b) {
// [211]  InfoBox.SetDisabled(b) 
_B._infobox.setdisabled(_b);
// [212]  Return Me 
return _B;
// End Sub
};

// [215] Sub Render 
_B.render=function() {
// [216]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [219] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [220]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMInput  =========================== */
function banano_bananovuematerial_vminput() {
var _B=this;
_B._input= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._inputint= new banano_bananovuematerial_vmfield();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._hashelp=false;

_B._ht= new banano_bananovuematerial_vmelement();

_B._haserror=false;

_B._icon1= new banano_bananovuematerial_vmicon();

_B._icon2= new banano_bananovuematerial_vmicon();

_B._suffix= new banano_bananovuematerial_vmelement();

_B._prefix= new banano_bananovuematerial_vmelement();

_B._hassuffix=false;

_B._hasprefix=false;

_B._he= new banano_bananovuematerial_vmelement();

_B._module={};

// [23] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMInput 
_B.initialize=function(_v,_sid,_eventhandler) {
// [24]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [25]  Input.Initialize(v, ID) 
_B._input.initialize(_v,_B._id);
// [26]  Input.SetTag( {7} ) 
_B._input.settag("md-input");
// [27]  module = eventHandler 
_B._module=_eventhandler;
// [28]  vue = v 
_B._vue=_v;
// [29]  InputInt.Initialize(v,ID, {0} ,module) 
_B._inputint.initialize(_v,_B._id,"" + _B._id + "field",_B._module);
// [30]  lbl.Initialize(vue, {1} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label");
// [31]  hasHelp = False 
_B._hashelp=false;
// [32]  hasError = False 
_B._haserror=false;
// [33]  icon1.Initialize(vue, {2} ) 
_B._icon1.initialize(_B._vue,"" + _B._id + "icon1");
// [34]  icon2.Initialize(vue, {3} ) 
_B._icon2.initialize(_B._vue,"" + _B._id + "icon2");
// [35]  prefix.Initialize(vue, {4} ).AddClass( {8} ).SetTag( {9} ) 
_B._prefix.initialize(_B._vue,"" + _B._id + "prefix").addclass("md-prefix").settag("span");
// [36]  suffix.Initialize(vue, {5} ).AddClass( {10} ).SetTag( {11} ) 
_B._suffix.initialize(_B._vue,"" + _B._id + "suffix").addclass("md-suffix").settag("span");
// [37]  hasPrefix = False 
_B._hasprefix=false;
// [38]  hasSuffix = False 
_B._hassuffix=false;
// [39]  SetOnInput 
_B.setoninput(_B);
// [40]  Return Me 
return _B;
// End Sub
};

// [43] private Sub SetOnInput As VMInput 
_B.setoninput=function() {
var _oninput,_e,_cb;
// [44]  Dim oninput As String = {6} 
_oninput="" + _B._id + "_input";
// [45]  If SubExists(module, oninput) = False Then Return Me 
if ((typeof _B._module[(_oninput).toLowerCase()]==="function")==false) { return _B;}
// [46]  Dim e As BANanoEvent 
_e=null;
// [47]  Dim cb As BANanoObject = BANano.CallBack(module, oninput, Array(e)) 
_cb=function(_e) {if (typeof _B._module[(_oninput).toLowerCase()]==="function") {return _B._module[(_oninput).toLowerCase()](_e,_B)};};
// [48]  SetAttr(CreateMap( {12} :oninput)) 
_B.setattr({"@input":_oninput},_B);
// [49]  vue.SetCallBack(oninput, cb) 
_B._vue.setcallback(_oninput,_cb);
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetAutoComplete(auto As String) As VMInput 
_B.setautocomplete=function(_auto) {
// [54]  Input.SetAutoComplete(auto) 
_B._input.setautocomplete(_auto);
// [55]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetPrefix(p As String) As VMInput 
_B.setprefix=function(_p) {
// [59]  If p = {13} Then Return Me 
if (_p=="") { return _B;}
// [60]  hasPrefix = True 
_B._hasprefix=true;
// [61]  prefix.SetText(p) 
_B._prefix.settext(_p);
// [62]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetSuffix(s As String) As VMInput 
_B.setsuffix=function(_s) {
// [66]  If s = {14} Then Return Me 
if (_s=="") { return _B;}
// [67]  hasSuffix = True 
_B._hassuffix=true;
// [68]  suffix.SetText(s) 
_B._suffix.settext(_s);
// [69]  Return Me 
return _B;
// End Sub
};

// [73] Sub SetIcon(strIcon As String) As VMInput 
_B.seticon=function(_stricon) {
// [74]  If strIcon = {15} Then Return Me 
if (_stricon=="") { return _B;}
// [75]  icon1.SetText(strIcon) 
_B._icon1.settext(_stricon);
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetIcon1(strIcon As String) As VMInput 
_B.seticon1=function(_stricon) {
// [81]  If strIcon = {16} Then Return Me 
if (_stricon=="") { return _B;}
// [82]  icon2.SetText(strIcon) 
_B._icon2.settext(_stricon);
// [83]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetReadOnly(b As Boolean) As VMInput 
_B.setreadonly=function(_b) {
// [88]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [89]  Input.SetAttr(CreateMap( {17} : b)) 
_B._input.setattr({":readonly":_b});
// [90]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetLabel(lblText As String) As VMInput 
_B.setlabel=function(_lbltext) {
// [94]  If lblText = {18} Then Return Me 
if (_lbltext=="") { return _B;}
// [95]  lbl.SetText(lblText) 
_B._lbl.settext(_lbltext);
// [96]  Return Me 
return _B;
// End Sub
};

// [100] Sub ToString As String 
_B.tostring=function() {
// [101]  If icon1.hasContent Then 
if (_B._icon1._hascontent) {
// [102]  icon1.Pop(InputInt.Field) 
_B._icon1.pop(_B._inputint._field);
// [103]  End If 
}
// [104]  lbl.Pop(InputInt.Field) 
_B._lbl.pop(_B._inputint._field);
// [105]  If hasPrefix Then 
if (_B._hasprefix) {
// [106]  prefix.Pop(InputInt.Field) 
_B._prefix.pop(_B._inputint._field);
// [107]  End If 
}
// [108]  Input.Pop(InputInt.Field) 
_B._input.pop(_B._inputint._field);
// [109]  If hasSuffix Then 
if (_B._hassuffix) {
// [110]  suffix.Pop(InputInt.Field) 
_B._suffix.pop(_B._inputint._field);
// [111]  End If 
}
// [112]  If icon2.hasContent Then 
if (_B._icon2._hascontent) {
// [113]  icon2.Pop(InputInt.Field) 
_B._icon2.pop(_B._inputint._field);
// [114]  End If 
}
// [115]  If hasHelp Then 
if (_B._hashelp) {
// [116]  ht.Pop(InputInt.Field) 
_B._ht.pop(_B._inputint._field);
// [117]  End If 
}
// [118]  If hasError Then 
if (_B._haserror) {
// [119]  he.Pop(InputInt.Field) 
_B._he.pop(_B._inputint._field);
// [120]  End If 
}
// [121]  Return InputInt.tostring 
return _B._inputint.tostring();
// End Sub
};

// [124] Sub SetHelperText(t As String) As VMInput 
_B.sethelpertext=function(_t) {
// [125]  If t = {19} Then Return Me 
if (_t=="") { return _B;}
// [126]  hasHelp = True 
_B._hashelp=true;
// [127]  ht = Input.SetHelperText(t) 
_B._ht=_B._input.sethelpertext(_t);
// [128]  Return Me 
return _B;
// End Sub
};

// [131] Sub SetErrorText(t As String) As VMInput 
_B.seterrortext=function(_t) {
// [132]  If t = {20} Then Return Me 
if (_t=="") { return _B;}
// [133]  hasError = True 
_B._haserror=true;
// [134]  he = Input.SetErrorText(t) 
_B._he=_B._input.seterrortext(_t);
// [135]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetVModel(k As String) As VMInput 
_B.setvmodel=function(_k) {
// [140]  If k = {21} Then Return Me 
if (_k=="") { return _B;}
// [141]  Input.SetVModel(k) 
_B._input.setvmodel(_k);
// [142]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetVIf(vif As Object) As VMInput 
_B.setvif=function(_vif) {
// [146]  If vif = {22} Then Return Me 
if (_vif=="") { return _B;}
// [147]  InputInt.SetVIf(vif) 
_B._inputint.setvif(_vif);
// [148]  Return Me 
return _B;
// End Sub
};

// [151] Sub SetVShow(vif As Object) As VMInput 
_B.setvshow=function(_vif) {
// [152]  If vif = {23} Then Return Me 
if (_vif=="") { return _B;}
// [153]  InputInt.SetVShow(vif) 
_B._inputint.setvshow(_vif);
// [154]  Return Me 
return _B;
// End Sub
};

// [158] Sub Render 
_B.render=function() {
// [159]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [163] Sub AddChild(child As VMElement) As VMInput 
_B.addchild=function(_child) {
var _childhtml;
// [164]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [165]  Input.SetText(childHTML) 
_B._input.settext(_childhtml);
// [166]  Return Me 
return _B;
// End Sub
};

// [170] Sub SetText(t As String) As VMInput 
_B.settext=function(_t) {
// [171]  If t = {24} Then Return Me 
if (_t=="") { return _B;}
// [172]  Input.SetText(t) 
_B._input.settext(_t);
// [173]  Return Me 
return _B;
// End Sub
};

// [176] Sub SetPrimary(b As Boolean) As VMInput 
_B.setprimary=function(_b) {
// [177]  Input.SetPrimary(True) 
_B._input.setprimary(true);
// [178]  Return Me 
return _B;
// End Sub
};

// [181] Sub SetAccent(b As Boolean) As VMInput 
_B.setaccent=function(_b) {
// [182]  Input.SetAccent(True) 
_B._input.setaccent(true);
// [183]  Return Me 
return _B;
// End Sub
};

// [187] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [188]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [192] Sub AddClass(c As String) As VMInput 
_B.addclass=function(_c) {
// [193]  Input.AddClass(c) 
_B._input.addclass(_c);
// [194]  Return Me 
return _B;
// End Sub
};

// [198] Sub SetAttr(attr As Map) As VMInput 
_B.setattr=function(_attr) {
// [199]  Input.SetAttr(attr) 
_B._input.setattr(_attr);
// [200]  Return Me 
return _B;
// End Sub
};

// [204] Sub SetStyle(sm As Map) As VMInput 
_B.setstyle=function(_sm) {
// [205]  Input.SetStyle(sm) 
_B._input.setstyle(_sm);
// [206]  Return Me 
return _B;
// End Sub
};

// [210] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [211]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [212]  AddChild(childx) 
_B.addchild(_childx,_B);
// [213]  Next 
}
// End Sub
};

// [217] Sub SetPadding(p As Object) As VMInput 
_B.setpadding=function(_p) {
// [218]  Input.SetPaddingAll(p) 
_B._input.setpaddingall(_p);
// [219]  Return Me 
return _B;
// End Sub
};

// [223] Sub SetType(varType As Object) As VMInput 
_B.settype=function(_vartype) {
// [224] SetAttr(CreateMap( {25} : varType)) 
_B.setattr({"type":_vartype},_B);
// [225] Return Me 
return _B;
// End Sub
};

// [229] Sub SetTypeText(b As Boolean) As VMInput 'ignore 
_B.settypetext=function(_b) {
// [230] SetAttr(CreateMap( {26} : {27} )) 
_B.setattr({"type":"text"},_B);
// [231] Return Me 
return _B;
// End Sub
};

// [235] Sub SetTypeEmail(b As Boolean) As VMInput 'ignore 
_B.settypeemail=function(_b) {
// [236] SetAttr(CreateMap( {28} : {29} )) 
_B.setattr({"type":"email"},_B);
// [237] Return Me 
return _B;
// End Sub
};

// [241] Sub SetTypeTel(b As Boolean) As VMInput 'ignore 
_B.settypetel=function(_b) {
// [242] SetAttr(CreateMap( {30} : {31} )) 
_B.setattr({"type":"tel"},_B);
// [243] Return Me 
return _B;
// End Sub
};

// [247] Sub SetTypePassword(b As Boolean) As VMInput 'ignore 
_B.settypepassword=function(_b) {
// [248]  SetAttr(CreateMap( {32} : {33} )) 
_B.setattr({"type":"password"},_B);
// [249]  InputInt.SetAttr(CreateMap( {34} :True)) 
_B._inputint.setattr({"md-has-password":true});
// [250]  Return Me 
return _B;
// End Sub
};

// [254] Sub SetTypeNumber(b As Boolean) As VMInput 'ignore 
_B.settypenumber=function(_b) {
// [255] SetAttr(CreateMap( {35} : {36} )) 
_B.setattr({"type":"number"},_B);
// [256] Return Me 
return _B;
// End Sub
};

// [260] Sub SetPlaceholder(varPlaceholder As Object) As VMInput 
_B.setplaceholder=function(_varplaceholder) {
// [261] SetAttr(CreateMap( {37} : varPlaceholder)) 
_B.setattr({"placeholder":_varplaceholder},_B);
// [262] Return Me 
return _B;
// End Sub
};

// [266] Sub SetRequired(varRequired As Boolean) As VMInput 
_B.setrequired=function(_varrequired) {
// [267]  Input.SetRequired(varRequired) 
_B._input.setrequired(_varrequired);
// [268]  Return Me 
return _B;
// End Sub
};

// [272] Sub SetName(varName As Object, bind As Boolean) As VMInput 
_B.setname=function(_varname,_bind) {
// [273] Input.SetName(varName, bind) 
_B._input.setname(_varname,_bind);
// [274] Return Me 
return _B;
// End Sub
};

// [278] Sub SetID(varName As Object, bind As Boolean) As VMInput 
_B.setid=function(_varname,_bind) {
// [279] Input.SetID(varName, bind) 
_B._input.setid(_varname,_bind);
// [280] Return Me 
return _B;
// End Sub
};

// [283] Sub SetDisabled(b As Boolean) As VMInput 
_B.setdisabled=function(_b) {
// [284]  Input.setdisabled(b) 
_B._input.setdisabled(_b);
// [285]  Return Me 
return _B;
// End Sub
};

// [289] Sub SetMaxLength(varMaxlength As Int) As VMInput 
_B.setmaxlength=function(_varmaxlength) {
// [290]  If varMaxlength = Null Then Return Me 
if (_varmaxlength==null) { return _B;}
// [291]  SetAttr(CreateMap( {38} : varMaxlength)) 
_B.setattr({"maxlength":_varmaxlength},_B);
// [292]  Return Me 
return _B;
// End Sub
};

// [296] Sub SetCounterDisabled As VMInput 
_B.setcounterdisabled=function() {
// [297]  InputInt.SetAttr(CreateMap( {39} : False)) 
_B._inputint.setattr({":md-counter":false});
// [298]  Return Me 
return _B;
// End Sub
};

// [302] Sub SetCounter(varCounter As String) As VMInput 
_B.setcounter=function(_varcounter) {
// [303]  If varCounter = {40} Then Return Me 
if (_varcounter=="") { return _B;}
// [304]  SetAttr(CreateMap( {41} : varCounter)) 
_B.setattr({"md-counter":_varcounter},_B);
// [305]  Return Me 
return _B;
// End Sub
};

// [309] Sub SetInline(varInline As Boolean) As VMInput 
_B.setinline=function(_varinline) {
// [310]  If varInline = True Then Return Me 
if (_varinline==true) { return _B;}
// [311]  InputInt.SetAttr(CreateMap( {42} : varInline)) 
_B._inputint.setattr({":md-inline":_varinline});
// [312] Return Me 
return _B;
// End Sub
};

// [315] Sub SetTabIndex(ti As String) As VMInput 
_B.settabindex=function(_ti) {
// [316]  Input.SetTabIndex(ti) 
_B._input.settabindex(_ti);
// [317]  Return Me 
return _B;
// End Sub
};

// [321] Sub SetClearable(varClearable As Boolean) As VMInput 
_B.setclearable=function(_varclearable) {
// [322]  If varClearable = False Then Return Me 
if (_varclearable==false) { return _B;}
// [323]  If varClearable Then InputInt.SetAttr(CreateMap( {43} : varClearable)) 
if (_varclearable) {_B._inputint.setattr({":md-clearable":_varclearable});}
// [324] Return Me 
return _B;
// End Sub
};

// [328] Sub SetTogglePassword(varTogglePassword As Boolean) As VMInput 
_B.settogglepassword=function(_vartogglepassword) {
// [329]  If varTogglePassword = False Then Return Me 
if (_vartogglepassword==false) { return _B;}
// [330]  InputInt.SetAttr(CreateMap( {44} : varTogglePassword)) 
_B._inputint.setattr({":md-toggle-password":_vartogglepassword});
// [331]  Return Me 
return _B;
// End Sub
};

// [335] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [336]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMInputControl  =========================== */
function banano_bananovuematerial_vminputcontrol() {
var _B=this;
_B._name="";

_B._label="";

_B._typeof="";

_B._helpertext="";

_B._errortext="";

_B._required=false;

_B._clearable=false;

_B._sourcetable="";

_B._sourcefield="";

_B._displayfield="";

_B._fieldtype="";

_B._isvisible=false;

_B._defaultvalue={};

_B._options={};

_B._minvalue=0;

_B._maxvalue=0;

_B._module={};

_B._methodname="";

_B._iconname="";

_B._isprimary=false;

_B._isaccent=false;

_B._isdisabled=false;

_B._text="";

_B._description="";

_B._thirdline="";

_B._lines=0;

_B._key="";

_B._source="";

_B._actionicon="";

_B._menuicon="";

_B._menuclick=false;

_B._addedit=false;

_B._editmethod="";

_B._deletemethod="";

_B._editcaption="";

_B._deletecaption="";

_B._row="";

_B._cell="";

_B._offsetsmall="";

_B._offsetmedium="";

_B._offsetlarge="";

_B._offsetxlarge="";

_B._sizesmall="";

_B._sizemedium="";

_B._sizelarge="";

_B._sizexlarge="";

_B._visibility="";

_B._useoptions=false;

_B._multiple=false;

_B._margintop={};

_B._marginbottom={};

_B._marginleft={};

_B._marginright={};

_B._paddingtop={};

_B._paddingbottom={};

_B._paddingleft={};

_B._paddingright={};

_B._optionslist=[];

_B._maxlength={};

_B._tabindex=0;

_B._autogrow=false;

_B._openonfocus=false;

_B._immediately=false;

_B._placeholder="";

_B._thumblabel=false;

_B._dense=false;

_B._iconsize="";

_B._raised=false;

_B._ripple=false;

_B._fitwidth=false;

_B._href="";

_B._menutrigger=false;

_B._iconbutton=false;

_B._plain=false;

_B._mini=false;

_B._fab=false;

_B._listaction=false;

_B._buttontype="";

_B._navigateto="";

_B._fabposition="";

_B._fabfixed=false;

_B._tag="";

_B._width="";

_B._height="";

_B._isround=false;

_B._alt="";

_B._count="";

_B._start="";

_B._finish="";

_B._speed="";

_B._refreshinterval="";

_B._boxtype="";

_B._iconcolor="";

_B._iconbackgroundcolor="";

_B._hoverzoomeffect=false;

_B._hoverexpandeffect=false;

_B._bsetcounter=false;

_B._clickable=false;

_B._deletable=false;

_B._thelimit="";

_B._checkduplicates=false;

_B._inputtype="";

_B._static=false;

_B._footer=false;

_B._format="";

_B._locale="";

_B._modal=false;

_B._size="";

_B._value="";

_B._showothermonths=false;

_B._calendarweeks=false;

_B._header=false;

_B._mode="";

_B._readonly=false;

_B._usedatasource=false;

_B._togglepassword=false;

_B._exclude=false;

// [123] Sub SetMode(s As String) As VMInputControl 
_B.setmode=function(_s) {
// [124]  Mode = s 
_B._mode=_s;
// [125]  Return Me 
return _B;
// End Sub
};

// [128] Sub SetHeader(b As Boolean) As VMInputControl 
_B.setheader=function(_b) {
// [129]  Header = b 
_B._header=_b;
// [130]  Return Me 
return _B;
// End Sub
};

// [133] Sub SetCalendarWeeks(cw As Boolean) As VMInputControl 
_B.setcalendarweeks=function(_cw) {
// [134]  CalendarWeeks = cw 
_B._calendarweeks=_cw;
// [135]  Return Me 
return _B;
// End Sub
};

// [138] Sub SetShowOtherMonths(som As Boolean) As VMInputControl 
_B.setshowothermonths=function(_som) {
// [139]  ShowOtherMonths = som 
_B._showothermonths=_som;
// [140]  Return Me 
return _B;
// End Sub
};

// [143] Sub SetValue(valu As String) As VMInputControl 
_B.setvalue=function(_valu) {
// [144]  Value = valu 
_B._value=_valu;
// [145]  Return Me 
return _B;
// End Sub
};

// [148] Sub SetSize(sSize As String) As VMInputControl 
_B.setsize=function(_ssize) {
// [149]  Size = sSize 
_B._size=_ssize;
// [150]  Return Me 
return _B;
// End Sub
};

// [153] Sub SetFooter(b As Boolean) As VMInputControl 
_B.setfooter=function(_b) {
// [154]  Footer = b 
_B._footer=_b;
// [155]  Return Me 
return _B;
// End Sub
};

// [158] Sub SetFormat(fmt As String) As VMInputControl 
_B.setformat=function(_fmt) {
// [159]  Format = fmt 
_B._format=_fmt;
// [160]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetLocale(loc As String) As VMInputControl 
_B.setlocale=function(_loc) {
// [164]  Locale = loc 
_B._locale=_loc;
// [165]  Return Me 
return _B;
// End Sub
};

// [168] Sub SetModal(mdl As Boolean) As VMInputControl 
_B.setmodal=function(_mdl) {
// [169]  Modal = mdl 
_B._modal=_mdl;
// [170]  Return Me 
return _B;
// End Sub
};

// [173] Sub SetTogglePassword(bTogglePassword As Boolean) As VMInputControl 
_B.settogglepassword=function(_btogglepassword) {
// [174]  TogglePassword = bTogglePassword 
_B._togglepassword=_btogglepassword;
// [175]  Return Me 
return _B;
// End Sub
};

// [179] Public Sub Initialize(sName As String) As VMInputControl 
_B.initialize=function(_sname) {
// [180]  sName = sName.tolowercase 
_sname=_sname.toLowerCase();
// [181]  sName = sName.trim 
_sname=_sname.trim();
// [182]  name = sName 
_B._name=_sname;
// [183]  href = {0} 
_B._href="";
// [184]  TogglePassword = False 
_B._togglepassword=false;
// [185]  UseDataSource = False 
_B._usedatasource=false;
// [186]  HoverExpandEffect = False 
_B._hoverexpandeffect=false;
// [187]  HoverZoomEffect = False 
_B._hoverzoomeffect=false;
// [188]  bSetCounter = False 
_B._bsetcounter=false;
// [189]  typeOf = {1} 
_B._typeof="text";
// [190]  fieldType = {2} 
_B._fieldtype="string";
// [191]  defaultValue = Null 
_B._defaultvalue=null;
// [192]  Isvisible = True 
_B._isvisible=true;
// [193]  IsDisabled = False 
_B._isdisabled=false;
// [194]  Required = False 
_B._required=false;
// [195]  Clickable = False 
_B._clickable=false;
// [196]  Deletable = False 
_B._deletable=false;
// [197]  UseOptions = False 
_B._useoptions=false;
// [198]  multiple = False 
_B._multiple=false;
// [199]  MarginTop = Null 
_B._margintop=null;
// [200]  MarginBottom = Null 
_B._marginbottom=null;
// [201]  MarginLeft = Null 
_B._marginleft=null;
// [202]  MarginRight = Null 
_B._marginright=null;
// [203]  PaddingTop = Null 
_B._paddingtop=null;
// [204]  PaddingBottom = Null 
_B._paddingbottom=null;
// [205]  PaddingLeft = Null 
_B._paddingleft=null;
// [206]  PaddingRight = Null 
_B._paddingright=null;
// [207]  IsDisabled = False 
_B._isdisabled=false;
// [208]  OptionsList.Initialize 
_B._optionslist.length=0;
// [209]  MaxLength = Null 
_B._maxlength=null;
// [210]  errorText = {3} 
_B._errortext="";
// [211]  helperText = {4} 
_B._helpertext="";
// [212]  AutoGrow = False 
_B._autogrow=false;
// [213]  TabIndex = {5} 
_B._tabindex="";
// [214]  immediately = True 
_B._immediately=true;
// [215]  openonfocus = False 
_B._openonfocus=false;
// [216]  Dense = False 
_B._dense=false;
// [217]  Raised = True 
_B._raised=true;
// [218]  FitWidth = True 
_B._fitwidth=true;
// [219]  Ripple = True 
_B._ripple=true;
// [220]  MenuTrigger = False 
_B._menutrigger=false;
// [221]  IconButton = False 
_B._iconbutton=false;
// [222]  Plain = False 
_B._plain=false;
// [223]  Mini = False 
_B._mini=false;
// [224]  Fab = False 
_B._fab=false;
// [225]  ListAction = False 
_B._listaction=false;
// [226]  IsPrimary = True 
_B._isprimary=true;
// [227]  IsAccent = False 
_B._isaccent=false;
// [228]  FabFixed = False 
_B._fabfixed=false;
// [229]  Static = False 
_B._static=false;
// [230]  CheckDuplicates = False 
_B._checkduplicates=false;
// [231]  readonly = False 
_B._readonly=false;
// [232]  Exclude = False 
_B._exclude=false;
// [233]  Return Me 
return _B;
// End Sub
};

// [236] Sub SetName(sname As String) As VMInputControl 
_B.setname=function(_sname) {
// [237]  sname = sname.tolowercase 
_sname=_sname.toLowerCase();
// [238]  sname = sname.trim 
_sname=_sname.trim();
// [239]  name = sname 
_B._name=_sname;
// [240]  Return Me 
return _B;
// End Sub
};

// [244] Sub SetExclude(b As Boolean) As VMInputControl 
_B.setexclude=function(_b) {
// [245]  Exclude = b 
_B._exclude=_b;
// [246]  Return Me 
return _B;
// End Sub
};

// [250] Sub SetReadOnly(b As Boolean) As VMInputControl 
_B.setreadonly=function(_b) {
// [251]  readonly = b 
_B._readonly=_b;
// [252]  Return Me 
return _B;
// End Sub
};

// [255] Sub SetInputType(i As String) As VMInputControl 
_B.setinputtype=function(_i) {
// [256]  InputType = i 
_B._inputtype=_i;
// [257]  Return Me 
return _B;
// End Sub
};

// [260] Sub SetCheckDuplicates(b As Boolean) As VMInputControl 
_B.setcheckduplicates=function(_b) {
// [261]  CheckDuplicates = b 
_B._checkduplicates=_b;
// [262]  Return Me 
return _B;
// End Sub
};

// [265] Sub SetStatic(b As Boolean) As VMInputControl 
_B.setstatic=function(_b) {
// [266]  Static = b 
_B._static=_b;
// [267]  Return Me 
return _B;
// End Sub
};

// [270] Sub SetLimit(i As String) As VMInputControl 
_B.setlimit=function(_i) {
// [271]  TheLimit = i 
_B._thelimit=_i;
// [272]  Return Me 
return _B;
// End Sub
};

// [275] Sub SetClickable(b As Boolean) As VMInputControl 
_B.setclickable=function(_b) {
// [276]  Clickable = b 
_B._clickable=_b;
// [277]  Return Me 
return _B;
// End Sub
};

// [280] Sub SetDeletable(b As Boolean) As VMInputControl 
_B.setdeletable=function(_b) {
// [281]  Deletable = b 
_B._deletable=_b;
// [282]  Return Me 
return _B;
// End Sub
};

// [286] Sub SetHoverExpandEffect(bHoverExpandEffect As Boolean) As VMInputControl 
_B.sethoverexpandeffect=function(_bhoverexpandeffect) {
// [287]  HoverExpandEffect = bHoverExpandEffect 
_B._hoverexpandeffect=_bhoverexpandeffect;
// [288]  Return Me 
return _B;
// End Sub
};

// [291] Sub SetHoverZoomEffect(bHoverZoomEffect As Boolean) As VMInputControl 
_B.sethoverzoomeffect=function(_bhoverzoomeffect) {
// [292]  HoverZoomEffect = bHoverZoomEffect 
_B._hoverzoomeffect=_bhoverzoomeffect;
// [293]  Return Me 
return _B;
// End Sub
};

// [296] Sub SetIconBackgroundColor(sIconBackgroundColor As String) As VMInputControl 
_B.seticonbackgroundcolor=function(_siconbackgroundcolor) {
// [297]  IconBackgroundColor = sIconBackgroundColor 
_B._iconbackgroundcolor=_siconbackgroundcolor;
// [298]  Return Me 
return _B;
// End Sub
};

// [301] Sub SetIconColor(sIconColor As String) As VMInputControl 
_B.seticoncolor=function(_siconcolor) {
// [302]  IconColor = sIconColor 
_B._iconcolor=_siconcolor;
// [303]  Return Me 
return _B;
// End Sub
};

// [306] Sub SetBoxType(sBoxType As String) As VMInputControl 
_B.setboxtype=function(_sboxtype) {
// [307]  BoxType = sBoxType 
_B._boxtype=_sboxtype;
// [308]  Return Me 
return _B;
// End Sub
};

// [312] Sub SetRefreshInterval(sRefreshInterval As String) As VMInputControl 
_B.setrefreshinterval=function(_srefreshinterval) {
// [313]  RefreshInterval = sRefreshInterval 
_B._refreshinterval=_srefreshinterval;
// [314]  Return Me 
return _B;
// End Sub
};

// [317] Sub SetSpeed(sSpeed As String) As VMInputControl 
_B.setspeed=function(_sspeed) {
// [318]  Speed = sSpeed 
_B._speed=_sspeed;
// [319]  Return Me 
return _B;
// End Sub
};

// [322] Sub SetFinish(sFinish As String) As VMInputControl 
_B.setfinish=function(_sfinish) {
// [323]  Finish = sFinish 
_B._finish=_sfinish;
// [324]  Return Me 
return _B;
// End Sub
};

// [327] Sub SetStart(sStart As String) As VMInputControl 
_B.setstart=function(_sstart) {
// [328]  Start = sStart 
_B._start=_sstart;
// [329]  Return Me 
return _B;
// End Sub
};

// [333] Sub SetCount(sCount As String) As VMInputControl 
_B.setcount=function(_scount) {
// [334]  Count = sCount 
_B._count=_scount;
// [335]  Return Me 
return _B;
// End Sub
};

// [338] Sub SetRound(tg As Boolean) As VMInputControl 
_B.setround=function(_tg) {
// [339]  IsRound = tg 
_B._isround=_tg;
// [340]  Return Me 
return _B;
// End Sub
};

// [343] Sub SetAlt(tg As String) As VMInputControl 
_B.setalt=function(_tg) {
// [344]  Alt = tg 
_B._alt=_tg;
// [345]  Return Me 
return _B;
// End Sub
};

// [349] Sub SetHeight(tg As String) As VMInputControl 
_B.setheight=function(_tg) {
// [350]  Height = tg 
_B._height=_tg;
// [351]  Return Me 
return _B;
// End Sub
};

// [354] Sub SetWidth(tg As String) As VMInputControl 
_B.setwidth=function(_tg) {
// [355]  Width = tg 
_B._width=_tg;
// [356]  Return Me 
return _B;
// End Sub
};

// [360] Sub SetTag(tg As String) As VMInputControl 
_B.settag=function(_tg) {
// [361]  Tag = tg 
_B._tag=_tg;
// [362]  Return Me 
return _B;
// End Sub
};

// [366] Sub SetFabPositionTopRight As VMInputControl 
_B.setfabpositiontopright=function() {
// [367]  SetFabPosition( {6} ) 
_B.setfabposition("md-fab-top-right",_B);
// [368]  Return Me 
return _B;
// End Sub
};

// [371] Sub SetFabPositionTopCenter As VMInputControl 
_B.setfabpositiontopcenter=function() {
// [372]  SetFabPosition( {7} ) 
_B.setfabposition("md-fab-top-center",_B);
// [373]  Return Me 
return _B;
// End Sub
};

// [376] Sub SetFabPositionTopLeft As VMInputControl 
_B.setfabpositiontopleft=function() {
// [377]  SetFabPosition( {8} ) 
_B.setfabposition("md-fab-top-left",_B);
// [378]  Return Me 
return _B;
// End Sub
};

// [381] Sub SetFabPositionBottomRight As VMInputControl 
_B.setfabpositionbottomright=function() {
// [382]  SetFabPosition( {9} ) 
_B.setfabposition("md-fab-bottom-right",_B);
// [383]  Return Me 
return _B;
// End Sub
};

// [386] Sub SetFabPositionBottomCenter As VMInputControl 
_B.setfabpositionbottomcenter=function() {
// [387]  SetFabPosition( {10} ) 
_B.setfabposition("md-fab-bottom-center",_B);
// [388]  Return Me 
return _B;
// End Sub
};

// [391] Sub SetFabPositionBottomLeft As VMInputControl 
_B.setfabpositionbottomleft=function() {
// [392]  SetFabPosition( {11} ) 
_B.setfabposition("md-fab-bottom-left",_B);
// [393]  Return Me 
return _B;
// End Sub
};

// [396] Sub SetFabPosition(pos As String) As VMInputControl 
_B.setfabposition=function(_pos) {
// [397]  FabPosition = pos 
_B._fabposition=_pos;
// [398]  Return Me 
return _B;
// End Sub
};

// [401] Sub SetFabFixed(b As Boolean) As VMInputControl 
_B.setfabfixed=function(_b) {
// [402]  FabFixed = b 
_B._fabfixed=_b;
// [403]  Return Me 
return _B;
// End Sub
};

// [407] Sub SetTo(sTo As String) As VMInputControl 
_B.setto=function(_sto) {
// [408]  NavigateTo = sTo 
_B._navigateto=_sto;
// [409]  Return Me 
return _B;
// End Sub
};

// [412] Sub SetButtonType(tt As String) As VMInputControl 
_B.setbuttontype=function(_tt) {
// [413]  ButtonType = tt 
_B._buttontype=_tt;
// [414]  Return Me 
return _B;
// End Sub
};

// [417] Sub SetButtonTypeRegular As VMInputControl 
_B.setbuttontyperegular=function() {
// [418]  ButtonType = {12} 
_B._buttontype="regular";
// [419]  Return Me 
return _B;
// End Sub
};

// [423] Sub SetButtonTypeIcon As VMInputControl 
_B.setbuttontypeicon=function() {
// [424]  ButtonType = {13} 
_B._buttontype="icon";
// [425]  Return Me 
return _B;
// End Sub
};

// [429] Sub SetButtonTypeFAB As VMInputControl 
_B.setbuttontypefab=function() {
// [430]  ButtonType = {14} 
_B._buttontype="fab";
// [431]  Return Me 
return _B;
// End Sub
};

// [434] Sub SetListAction(b As Boolean) As VMInputControl 
_B.setlistaction=function(_b) {
// [435]  ListAction = b 
_B._listaction=_b;
// [436]  Return Me 
return _B;
// End Sub
};

// [439] Sub SetFAB(b As Boolean) As VMInputControl 
_B.setfab=function(_b) {
// [440]  Fab = b 
_B._fab=_b;
// [441]  Return Me 
return _B;
// End Sub
};

// [444] Sub SetMini(b As Boolean) As VMInputControl 
_B.setmini=function(_b) {
// [445]  Mini = b 
_B._mini=_b;
// [446]  Return Me 
return _B;
// End Sub
};

// [449] Sub SetPlain(b As Boolean) As VMInputControl 
_B.setplain=function(_b) {
// [450]  Plain = b 
_B._plain=_b;
// [451]  Return Me 
return _B;
// End Sub
};

// [455] Sub SetIconButton(b As Boolean) As VMInputControl 
_B.seticonbutton=function(_b) {
// [456]  IconButton = b 
_B._iconbutton=_b;
// [457]  Return Me 
return _B;
// End Sub
};

// [461] Sub SetMenuTrigger(b As Boolean) As VMInputControl 
_B.setmenutrigger=function(_b) {
// [462]  MenuTrigger = b 
_B._menutrigger=_b;
// [463]  Return Me 
return _B;
// End Sub
};

// [466] Sub SetHREF(b As String) As VMInputControl 
_B.sethref=function(_b) {
// [467]  href = b 
_B._href=_b;
// [468]  Return Me 
return _B;
// End Sub
};

// [471] Sub SetFitWidth(b As Boolean) As VMInputControl 
_B.setfitwidth=function(_b) {
// [472]  FitWidth = b 
_B._fitwidth=_b;
// [473]  Return Me 
return _B;
// End Sub
};

// [477] Sub SetRipple(b As Boolean) As VMInputControl 
_B.setripple=function(_b) {
// [478]  Ripple = b 
_B._ripple=_b;
// [479]  Return Me 
return _B;
// End Sub
};

// [482] Sub SetRaised(b As Boolean) As VMInputControl 
_B.setraised=function(_b) {
// [483]  Raised = b 
_B._raised=_b;
// [484]  Return Me 
return _B;
// End Sub
};

// [487] Sub SetIconSize(icns As String) As VMInputControl 
_B.seticonsize=function(_icns) {
// [488]  IconSize = icns 
_B._iconsize=_icns;
// [489]  Return Me 
return _B;
// End Sub
};

// [492] Sub SetThumbLabel(b As Boolean) As VMInputControl 
_B.setthumblabel=function(_b) {
// [493]  ThumbLabel = b 
_B._thumblabel=_b;
// [494]  Return Me 
return _B;
// End Sub
};

// [497] Sub SetUseOptions(b As Boolean) As VMInputControl 
_B.setuseoptions=function(_b) {
// [498]  UseOptions = b 
_B._useoptions=_b;
// [499]  Return Me 
return _B;
// End Sub
};

// [502] Sub SetUseDataSource(b As Boolean) As VMInputControl 
_B.setusedatasource=function(_b) {
// [503]  UseDataSource = b 
_B._usedatasource=_b;
// [504]  Return Me 
return _B;
// End Sub
};

// [508] Sub SetDense(b As Boolean) As VMInputControl 
_B.setdense=function(_b) {
// [509]  Dense = b 
_B._dense=_b;
// [510]  Return Me 
return _B;
// End Sub
};

// [513] Sub SetPlaceHolder(txt As String) As VMInputControl 
_B.setplaceholder=function(_txt) {
// [514]  PlaceHolder = txt 
_B._placeholder=_txt;
// [515]  Return Me 
return _B;
// End Sub
};

// [518] Sub SetOpenOnFocus(b As Boolean) As VMInputControl 
_B.setopenonfocus=function(_b) {
// [519]  openonfocus = b 
_B._openonfocus=_b;
// [520]  Return Me 
return _B;
// End Sub
};

// [523] Sub SetImmediately(b As Boolean) As VMInputControl 
_B.setimmediately=function(_b) {
// [524]  immediately = b 
_B._immediately=_b;
// [525]  Return Me 
return _B;
// End Sub
};

// [528] Sub SetAutoGrow(b As Boolean) As VMInputControl 
_B.setautogrow=function(_b) {
// [529]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [530]  AutoGrow = b 
_B._autogrow=_b;
// [531]  Return Me 
return _B;
// End Sub
};

// [534] Sub SetTabIndex(idx As Int) As VMInputControl 
_B.settabindex=function(_idx) {
// [535]  TabIndex = idx 
_B._tabindex=_idx;
// [536]  Return Me 
return _B;
// End Sub
};

// [539] Sub SetSwitch As VMInputControl 
_B.setswitch=function() {
// [540]  typeOf = {15} 
_B._typeof="switchbox";
// [541]  fieldType = {16} 
_B._fieldtype="bool";
// [542]  Return Me 
return _B;
// End Sub
};

// [545] Sub SetRadio As VMInputControl 
_B.setradio=function() {
// [546]  typeOf = {17} 
_B._typeof="radio";
// [547]  Return Me 
return _B;
// End Sub
};

// [550] Sub SetRadioGroup As VMInputControl 
_B.setradiogroup=function() {
// [551]  typeOf = {18} 
_B._typeof="radiogroup";
// [552]  fieldType = {19} 
_B._fieldtype="string";
// [553]  Return Me 
return _B;
// End Sub
};

// [556] Sub SetCheckBoxGroup As VMInputControl 
_B.setcheckboxgroup=function() {
// [557]  typeOf = {20} 
_B._typeof="checkboxgroup";
// [558]  fieldType = {21} 
_B._fieldtype="string";
// [559]  Return Me 
return _B;
// End Sub
};

// [568] Sub SetChip As VMInputControl 
_B.setchip=function() {
// [569]  typeOf = {23} 
_B._typeof="chip";
// [570]  fieldType = {24} 
_B._fieldtype="string";
// [571]  InputType = {25} 
_B._inputtype="text";
// [572]  Return Me 
return _B;
// End Sub
};

// [575] Sub SetChips As VMInputControl 
_B.setchips=function() {
// [576]  typeOf = {26} 
_B._typeof="chips";
// [577]  fieldType = {27} 
_B._fieldtype="string";
// [578]  InputType = {28} 
_B._inputtype="text";
// [579]  Return Me 
return _B;
// End Sub
};

// [582] Sub SetCheckbox As VMInputControl 
_B.setcheckbox=function() {
// [583]  typeOf = {29} 
_B._typeof="checkbox";
// [584]  fieldType = {30} 
_B._fieldtype="bool";
// [585]  Return Me 
return _B;
// End Sub
};

// [588] Sub SetDatePicker As VMInputControl 
_B.setdatepicker=function() {
// [589]  typeOf = {31} 
_B._typeof="datepicker";
// [590]  fieldType = {32} 
_B._fieldtype="date";
// [591]  Return Me 
return _B;
// End Sub
};

// [594] Sub SetTimePicker As VMInputControl 
_B.settimepicker=function() {
// [595]  typeOf = {33} 
_B._typeof="timepicker";
// [596]  fieldType = {34} 
_B._fieldtype="string";
// [597]  Return Me 
return _B;
// End Sub
};

// [601] Sub SetSelect As VMInputControl 
_B.setselect=function() {
// [602]  typeOf = {35} 
_B._typeof="selectbox";
// [603]  Return Me 
return _B;
// End Sub
};

// [606] Sub SetSlider As VMInputControl 
_B.setslider=function() {
// [607]  typeOf = {36} 
_B._typeof="slide";
// [608]  Return Me 
return _B;
// End Sub
};

// [611] Sub SetTextArea As VMInputControl 
_B.settextarea=function() {
// [612]  typeOf = {37} 
_B._typeof="textarea";
// [613]  Return Me 
return _B;
// End Sub
};

// [616] Sub SetPassword As VMInputControl 
_B.setpassword=function() {
// [617]  typeOf = {38} 
_B._typeof="password";
// [618]  Return Me 
return _B;
// End Sub
};

// [621] Sub SetEmail As VMInputControl 
_B.setemail=function() {
// [622]  typeOf = {39} 
_B._typeof="email";
// [623]  Return Me 
return _B;
// End Sub
};

// [626] Sub SetTel As VMInputControl 
_B.settel=function() {
// [627]  typeOf = {40} 
_B._typeof="tel";
// [628]  Return Me 
return _B;
// End Sub
};

// [631] Sub SetDouble As VMInputControl 
_B.setdouble=function() {
// [632]  fieldType = {41} 
_B._fieldtype="dbl";
// [633]  Return Me 
return _B;
// End Sub
};

// [636] Sub SetString As VMInputControl 
_B.setstring=function() {
// [637]  fieldType = {42} 
_B._fieldtype="string";
// [638]  Return Me 
return _B;
// End Sub
};

// [641] Sub SetNumber As VMInputControl 
_B.setnumber=function() {
// [642]  typeOf = {43} 
_B._typeof="number";
// [643]  Return Me 
return _B;
// End Sub
};

// [646] Sub SetBool As VMInputControl 
_B.setbool=function() {
// [647]  fieldType = {44} 
_B._fieldtype="bool";
// [648]  Return Me 
return _B;
// End Sub
};

// [651] Sub SetInt As VMInputControl 
_B.setint=function() {
// [652]  fieldType = {45} 
_B._fieldtype="int";
// [653]  Return Me 
return _B;
// End Sub
};

// [656] Sub SetDate As VMInputControl 
_B.setdate=function() {
// [657]  fieldType = {46} 
_B._fieldtype="date";
// [658]  Return Me 
return _B;
// End Sub
};

// [661] Sub SetButton As VMInputControl 
_B.setbutton=function() {
// [662]  typeOf = {47} 
_B._typeof="button";
// [663]  Return Me 
return _B;
// End Sub
};

// [666] Sub SetList As VMInputControl 
_B.setlist=function() {
// [667]  typeOf = {48} 
_B._typeof="list";
// [668]  Return Me 
return _B;
// End Sub
};

// [672] Sub SetOptions(ssourceTable As String, soptions As Map, ssourceField As String, sdisplayField As String) As VMInputControl 
_B.setoptions=function(_ssourcetable,_soptions,_ssourcefield,_sdisplayfield) {
// [673]  UseOptions = True 
_B._useoptions=true;
// [674]  UseDataSource = False 
_B._usedatasource=false;
// [675]  sourceTable = ssourceTable 
_B._sourcetable=_ssourcetable;
// [676]  options = soptions 
_B._options=_soptions;
// [677]  sourceField = ssourceField 
_B._sourcefield=_ssourcefield;
// [678]  displayField = sdisplayField 
_B._displayfield=_sdisplayfield;
// [679]  Return Me 
return _B;
// End Sub
};

// [682] Sub SetDataSource(ssourceTable As String, ssourceField As String , sdisplayField As String) As VMInputControl 
_B.setdatasource=function(_ssourcetable,_ssourcefield,_sdisplayfield) {
// [683]  UseOptions = False 
_B._useoptions=false;
// [684]  UseDataSource = True 
_B._usedatasource=true;
// [685]  sourceTable = ssourceTable 
_B._sourcetable=_ssourcetable;
// [686]  sourceField = ssourceField 
_B._sourcefield=_ssourcefield;
// [687]  displayField = sdisplayField 
_B._displayfield=_sdisplayfield;
// [688]  Return Me 
return _B;
// End Sub
};

// [691] Sub SetLabel(lbl As String) As VMInputControl 
_B.setlabel=function(_lbl) {
// [692]  label = lbl 
_B._label=_lbl;
// [693]  Return Me 
return _B;
// End Sub
};

// [696] Sub SetType(stypeOf As String) As VMInputControl 
_B.settype=function(_stypeof) {
// [697]  typeOf = stypeOf 
_B._typeof=_stypeof;
// [698]  Return Me 
return _B;
// End Sub
};

// [701] Sub SetHelperText(txt As String) As VMInputControl 
_B.sethelpertext=function(_txt) {
// [702]  If txt = {49} Then Return Me 
if (_txt=="") { return _B;}
// [703]  helperText = txt 
_B._helpertext=_txt;
// [704]  Return Me 
return _B;
// End Sub
};

// [707] Sub SetErrorText(txt As String) As VMInputControl 
_B.seterrortext=function(_txt) {
// [708]  If txt = {50} Then Return Me 
if (_txt=="") { return _B;}
// [709]  errorText = txt 
_B._errortext=_txt;
// [710]  Return Me 
return _B;
// End Sub
};

// [713] Sub SetInvalidMessage(txt As String) As VMInputControl 
_B.setinvalidmessage=function(_txt) {
// [714]  If txt = {51} Then Return Me 
if (_txt=="") { return _B;}
// [715]  errorText = txt 
_B._errortext=_txt;
// [716]  Return Me 
return _B;
// End Sub
};

// [719] Sub SetMultiple(b As Boolean) As VMInputControl 
_B.setmultiple=function(_b) {
// [720]  multiple = b 
_B._multiple=_b;
// [721]  Return Me 
return _B;
// End Sub
};

// [724] Sub SetRequired(b As Boolean) As VMInputControl 
_B.setrequired=function(_b) {
// [725]  Required = b 
_B._required=_b;
// [726]  Return Me 
return _B;
// End Sub
};

// [729] Sub SetClearable(b As Boolean) As VMInputControl 
_B.setclearable=function(_b) {
// [730]  clearable = b 
_B._clearable=_b;
// [731]  Return Me 
return _B;
// End Sub
};

// [734] Sub SetSourceTable(ssourceTable As String) As VMInputControl 
_B.setsourcetable=function(_ssourcetable) {
// [735]  sourceTable = ssourceTable 
_B._sourcetable=_ssourcetable;
// [736]  Return Me 
return _B;
// End Sub
};

// [739] Sub SetSourceField(ssourceField As String) As VMInputControl 
_B.setsourcefield=function(_ssourcefield) {
// [740]  sourceField = ssourceField 
_B._sourcefield=_ssourcefield;
// [741]  Return Me 
return _B;
// End Sub
};

// [744] Sub SetDisplayField(sdisplayField As String) As VMInputControl 
_B.setdisplayfield=function(_sdisplayfield) {
// [745]  displayField = sdisplayField 
_B._displayfield=_sdisplayfield;
// [746]  Return Me 
return _B;
// End Sub
};

// [750] Sub SetFieldType(sfieldType As String) As VMInputControl 
_B.setfieldtype=function(_sfieldtype) {
// [751]  fieldType = sfieldType 
_B._fieldtype=_sfieldtype;
// [752]  Return Me 
return _B;
// End Sub
};

// [755] Sub SetVisible(b As Boolean) As VMInputControl 
_B.setvisible=function(_b) {
// [756]  Isvisible = b 
_B._isvisible=_b;
// [757]  Return Me 
return _B;
// End Sub
};

// [760] Sub SetHidden(b As Boolean) As VMInputControl 
_B.sethidden=function(_b) {
// [761]  If b = True Then 
if (_b==true) {
// [762]  SetVisible(False) 
_B.setvisible(false,_B);
// [763]  Else 
} else {
// [764]  SetVisible(True) 
_B.setvisible(true,_B);
// [765]  End If 
}
// [766]  Return Me 
return _B;
// End Sub
};

// [769] Sub SetDefaultValue(sdefaultValue As Object) As VMInputControl 
_B.setdefaultvalue=function(_sdefaultvalue) {
// [770]  defaultValue = sdefaultValue 
_B._defaultvalue=_sdefaultvalue;
// [771]  Return Me 
return _B;
// End Sub
};

// [774] Sub SetMinValue(sMinValue As Int) As VMInputControl 
_B.setminvalue=function(_sminvalue) {
// [775]  MinValue = sMinValue 
_B._minvalue=_sminvalue;
// [776]  Return Me 
return _B;
// End Sub
};

// [779] Sub SetMaxValue(sMaxValue As Int) As VMInputControl 
_B.setmaxvalue=function(_smaxvalue) {
// [780]  MaxValue = sMaxValue 
_B._maxvalue=_smaxvalue;
// [781]  Return Me 
return _B;
// End Sub
};

// [784] Sub SetMaxLength(sMaxValue As Int) As VMInputControl 
_B.setmaxlength=function(_smaxvalue) {
// [785]  MaxLength = sMaxValue 
_B._maxlength=_smaxvalue;
// [786]  Return Me 
return _B;
// End Sub
};

// [789] Sub SetModule(smodule As Object) As VMInputControl 
_B.setmodule=function(_smodule) {
// [790]  module = smodule 
_B._module=_smodule;
// [791]  Return Me 
return _B;
// End Sub
};

// [794] Sub SetMethodName(smethodName As String) As VMInputControl 
_B.setmethodname=function(_smethodname) {
// [795]  methodName = smethodName 
_B._methodname=_smethodname;
// [796]  Return Me 
return _B;
// End Sub
};

// [799] Sub SetIconName(sIconName As String) As VMInputControl 
_B.seticonname=function(_siconname) {
// [800]  IconName = sIconName 
_B._iconname=_siconname;
// [801]  Return Me 
return _B;
// End Sub
};

// [805] Sub SetPrimary(sIsPrimary As Boolean) As VMInputControl 
_B.setprimary=function(_sisprimary) {
// [806]  IsPrimary = sIsPrimary 
_B._isprimary=_sisprimary;
// [807]  Return Me 
return _B;
// End Sub
};

// [810] Sub SetAccent(sIsAccent As Boolean) As VMInputControl 
_B.setaccent=function(_sisaccent) {
// [811]  IsAccent = sIsAccent 
_B._isaccent=_sisaccent;
// [812]  Return Me 
return _B;
// End Sub
};

// [815] Sub SetDisabled(sIsDisabled As Boolean) As VMInputControl 
_B.setdisabled=function(_sisdisabled) {
// [816]  IsDisabled = sIsDisabled 
_B._isdisabled=_sisdisabled;
// [817]  Return Me 
return _B;
// End Sub
};

// [820] Sub SetText(sText As String) As VMInputControl 
_B.settext=function(_stext) {
// [821]  Text = sText 
_B._text=_stext;
// [822]  Return Me 
return _B;
// End Sub
};

// [825] Sub SetDescription(sDescription As String) As VMInputControl 
_B.setdescription=function(_sdescription) {
// [826]  Description = sDescription 
_B._description=_sdescription;
// [827]  Return Me 
return _B;
// End Sub
};

// [830] Sub SetThirdLine(sThirdLine As String) As VMInputControl 
_B.setthirdline=function(_sthirdline) {
// [831]  ThirdLine = sThirdLine 
_B._thirdline=_sthirdline;
// [832]  Return Me 
return _B;
// End Sub
};

// [835] Sub SetLines(sLines As Int) As VMInputControl 
_B.setlines=function(_slines) {
// [836]  Lines = sLines 
_B._lines=_slines;
// [837]  Return Me 
return _B;
// End Sub
};

// [840] Sub SetKey(sKey As String) As VMInputControl 
_B.setkey=function(_skey) {
// [841]  Key = sKey 
_B._key=_skey;
// [842]  Return Me 
return _B;
// End Sub
};

// [845] Sub SetSource(sSource As String) As VMInputControl 
_B.setsource=function(_ssource) {
// [846]  Source = sSource 
_B._source=_ssource;
// [847]  Return Me 
return _B;
// End Sub
};

// [850] Sub SetActionIcon(sActionIcon As String) As VMInputControl 
_B.setactionicon=function(_sactionicon) {
// [851]  ActionIcon = sActionIcon 
_B._actionicon=_sactionicon;
// [852]  Return Me 
return _B;
// End Sub
};

// [855] Sub SetMenuIcon(sMenuIcon As String) As VMInputControl 
_B.setmenuicon=function(_smenuicon) {
// [856]  MenuIcon = sMenuIcon 
_B._menuicon=_smenuicon;
// [857]  Return Me 
return _B;
// End Sub
};

// [860] Sub SetMenuClick(sMenuClick As Boolean) As VMInputControl 
_B.setmenuclick=function(_smenuclick) {
// [861]  MenuClick = sMenuClick 
_B._menuclick=_smenuclick;
// [862]  Return Me 
return _B;
// End Sub
};

// [865] Sub SetAddEdit(sAddEdit As Boolean) As VMInputControl 
_B.setaddedit=function(_saddedit) {
// [866]  AddEdit = sAddEdit 
_B._addedit=_saddedit;
// [867]  Return Me 
return _B;
// End Sub
};

// [870] Sub SetEditMethod(sEditMethod As String) As VMInputControl 
_B.seteditmethod=function(_seditmethod) {
// [871]  EditMethod = sEditMethod 
_B._editmethod=_seditmethod;
// [872]  Return Me 
return _B;
// End Sub
};

// [875] Sub SetDeleteMethod(sDeleteMethod As String) As VMInputControl 
_B.setdeletemethod=function(_sdeletemethod) {
// [876]  DeleteMethod = sDeleteMethod 
_B._deletemethod=_sdeletemethod;
// [877]  Return Me 
return _B;
// End Sub
};

// [880] Sub SetEditCaption(sEditCaption As String) As VMInputControl 
_B.seteditcaption=function(_seditcaption) {
// [881]  EditCaption = sEditCaption 
_B._editcaption=_seditcaption;
// [882]  Return Me 
return _B;
// End Sub
};

// [885] Sub SetDeleteCaption(sDeleteCaption As String) As VMInputControl 
_B.setdeletecaption=function(_sdeletecaption) {
// [886]  DeleteCaption = sDeleteCaption 
_B._deletecaption=_sdeletecaption;
// [887]  Return Me 
return _B;
// End Sub
};

// [890] Sub SetRow(sRow As String) As VMInputControl 
_B.setrow=function(_srow) {
// [891]  Row = sRow 
_B._row=_srow;
// [892]  Return Me 
return _B;
// End Sub
};

// [895] Sub SetCell(scell As String) As VMInputControl 
_B.setcell=function(_scell) {
// [896]  cell = scell 
_B._cell=_scell;
// [897]  Return Me 
return _B;
// End Sub
};

// [900] Sub SetVisibility(sVisibility As String) As VMInputControl 
_B.setvisibility=function(_svisibility) {
// [901]  Visibility = sVisibility 
_B._visibility=_svisibility;
// [902]  Return Me 
return _B;
// End Sub
};

// [905] Sub SetOffsets(sOffsetSmall As String, sOffsetMedium As String,sOffsetLarge As String,sOffsetXLarge As String) As VMInputControl 
_B.setoffsets=function(_soffsetsmall,_soffsetmedium,_soffsetlarge,_soffsetxlarge) {
// [906]  OffsetSmall = sOffsetSmall 
_B._offsetsmall=_soffsetsmall;
// [907]  OffsetMedium = sOffsetMedium 
_B._offsetmedium=_soffsetmedium;
// [908]  OffsetLarge = sOffsetLarge 
_B._offsetlarge=_soffsetlarge;
// [909]  OffsetXLarge = sOffsetXLarge 
_B._offsetxlarge=_soffsetxlarge;
// [910]  Return Me 
return _B;
// End Sub
};

// [913] Sub SetSizes(sSizeSmall As String, sSizeMedium As String, sSizeLarge As String, sSizeXLarge As String) As VMInputControl 
_B.setsizes=function(_ssizesmall,_ssizemedium,_ssizelarge,_ssizexlarge) {
// [914]  SizeSmall = sSizeSmall 
_B._sizesmall=_ssizesmall;
// [915]  SizeMedium = sSizeMedium 
_B._sizemedium=_ssizemedium;
// [916]  SizeLarge = sSizeLarge 
_B._sizelarge=_ssizelarge;
// [917]  SizeXLarge = sSizeXLarge 
_B._sizexlarge=_ssizexlarge;
// [918]  Return Me 
return _B;
// End Sub
};

// [921] Sub SetMargins(mt As Object, mb As Object, ml As Object, mr As Object) As VMInputControl 
_B.setmargins=function(_mt,_mb,_ml,_mr) {
// [922]  MarginTop = mt 
_B._margintop=_mt;
// [923]  MarginBottom = mb 
_B._marginbottom=_mb;
// [924]  MarginLeft = ml 
_B._marginleft=_ml;
// [925]  MarginRight = mr 
_B._marginright=_mr;
// [926]  Return Me 
return _B;
// End Sub
};

// [929] Sub SetPadding(pt As Object, pb As Object, pl As Object, pr As Object) As VMInputControl 
_B.setpadding=function(_pt,_pb,_pl,_pr) {
// [930]  PaddingTop = pt 
_B._paddingtop=_pt;
// [931]  PaddingBottom = pb 
_B._paddingbottom=_pb;
// [932]  PaddingLeft = pl 
_B._paddingleft=_pl;
// [933]  PaddingRight = pr 
_B._paddingright=_pr;
// [934]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMKnob  =========================== */
function banano_bananovuematerial_vmknob() {
var _B=this;
_B._knob= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [10] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMKnob 
_B.initialize=function(_v,_sid,_eventhandler) {
// [11]  BANano.DependsOnAsset( {0} ) 
;
// [12]  BANano.DependsOnAsset( {1} ) 
;
// [14]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [15]  vue = v 
_B._vue=_v;
// [16]  module = eventHandler 
_B._module=_eventhandler;
// [17]  Knob.Initialize(vue, ID).SetTag( {2} ).AddClass( {3} ).SetType( {4} ) 
_B._knob.initialize(_B._vue,_B._id).settag("input").addclass("knob").settype("text");
// [18]  Return Me 
return _B;
// End Sub
};

// [21] Sub SetName(name As String, bind As Boolean) As VMKnob 
_B.setname=function(_name,_bind) {
// [22]  Knob.SetName(name, bind) 
_B._knob.setname(_name,_bind);
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetVModel(vmodel As String) As VMKnob 
_B.setvmodel=function(_vmodel) {
// [27]  Knob.SetVModel(vmodel) 
_B._knob.setvmodel(_vmodel);
// [28]  Knob.SetValue(vmodel, True) 
_B._knob.setvalue(_vmodel,true);
// [29]  Return Me 
return _B;
// End Sub
};

// [32] Sub SetMin(minvalue As String) As VMKnob 
_B.setmin=function(_minvalue) {
// [33]  Knob.SetAttr(CreateMap( {5} : minvalue)) 
_B._knob.setattr({"data-min":_minvalue});
// [34]  Return Me 
return _B;
// End Sub
};

// [38] Sub SetStep(stepvalue As String) As VMKnob 
_B.setstep=function(_stepvalue) {
// [39]  Knob.SetAttr(CreateMap( {6} : stepvalue)) 
_B._knob.setattr({"data-step":_stepvalue});
// [40]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetAngleOffset(stepvalue As String) As VMKnob 
_B.setangleoffset=function(_stepvalue) {
// [45]  Knob.SetAttr(CreateMap( {7} : stepvalue)) 
_B._knob.setattr({"data-angleOffset":_stepvalue});
// [46]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetAngleArc(stepvalue As String) As VMKnob 
_B.setanglearc=function(_stepvalue) {
// [51]  Knob.SetAttr(CreateMap( {8} : stepvalue)) 
_B._knob.setattr({"data-angleArc":_stepvalue});
// [52]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetStopper(stepvalue As String) As VMKnob 
_B.setstopper=function(_stepvalue) {
// [57]  Knob.SetAttr(CreateMap( {9} : stepvalue)) 
_B._knob.setattr({"data-stopper":_stepvalue});
// [58]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetReadOnly(stepvalue As Boolean) As VMKnob 
_B.setreadonly=function(_stepvalue) {
// [63]  Knob.SetAttr(CreateMap( {10} : stepvalue)) 
_B._knob.setattr({"data-readOnly":_stepvalue});
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetRotation(stepvalue As String) As VMKnob 
_B.setrotation=function(_stepvalue) {
// [69]  Knob.SetAttr(CreateMap( {11} : stepvalue)) 
_B._knob.setattr({"data-rotation":_stepvalue});
// [70]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetFgColor(stepvalue As String) As VMKnob 
_B.setfgcolor=function(_stepvalue) {
// [75]  Knob.SetAttr(CreateMap( {12} : stepvalue)) 
_B._knob.setattr({"data-fgColor":_stepvalue});
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetSkin(skin As String) As VMKnob 
_B.setskin=function(_skin) {
// [81]  Knob.SetAttr(CreateMap( {13} : skin)) 
_B._knob.setattr({"data-skin":_skin});
// [82]  Return Me 
return _B;
// End Sub
};

// [86] Sub SetThickness(thickness As Double) As VMKnob 
_B.setthickness=function(_thickness) {
// [87]  Knob.SetAttr(CreateMap( {14} : thickness)) 
_B._knob.setattr({"data-thickness":_thickness});
// [88]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetRoundedCorners(b As Boolean) As VMKnob 
_B.setroundedcorners=function(_b) {
// [93]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [94]  Knob.SetAttr(CreateMap( {15} : {16} )) 
_B._knob.setattr({"data-linecap":"round"});
// [95]  Return Me 
return _B;
// End Sub
};

// [99] Sub SetWidth(skin As String) As VMKnob 
_B.setwidth=function(_skin) {
// [100]  Knob.SetAttr(CreateMap( {17} : skin)) 
_B._knob.setattr({"data-width":_skin});
// [101]  Return Me 
return _B;
// End Sub
};

// [105] Sub SetHeight(skin As String) As VMKnob 
_B.setheight=function(_skin) {
// [106]  Knob.SetAttr(CreateMap( {18} : skin)) 
_B._knob.setattr({"data-height":_skin});
// [107]  Return Me 
return _B;
// End Sub
};

// [111] Sub SetMax(minvalue As String) As VMKnob 
_B.setmax=function(_minvalue) {
// [112]  Knob.SetAttr(CreateMap( {19} : minvalue)) 
_B._knob.setattr({"data-max":_minvalue});
// [113]  Return Me 
return _B;
// End Sub
};

// [116] Sub ToString As String 
_B.tostring=function() {
// [117]  Return Knob.tostring 
return _B._knob.tostring();
// End Sub
};

// [121] Sub SetStyle(sm As Map) As VMKnob 
_B.setstyle=function(_sm) {
// [122]  Knob.SetStyle(sm) 
_B._knob.setstyle(_sm);
// [123]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetVIf(vif As Object) As VMKnob 
_B.setvif=function(_vif) {
// [127]  Knob.SetVIf(vif) 
_B._knob.setvif(_vif);
// [128]  Return Me 
return _B;
// End Sub
};

// [131] Sub SetKey(k As String, bind As Boolean) As VMKnob 
_B.setkey=function(_k,_bind) {
// [132]  Knob.SetKey(k, bind) 
_B._knob.setkey(_k,_bind);
// [133]  Return Me 
return _B;
// End Sub
};

// [136] Sub SetVShow(vif As Object) As VMKnob 
_B.setvshow=function(_vif) {
// [137]  Knob.SetVShow(vif) 
_B._knob.setvshow(_vif);
// [138]  Return Me 
return _B;
// End Sub
};

// [142] Sub AddClass(c As String) As VMKnob 
_B.addclass=function(_c) {
// [143]  Knob.AddClass(c) 
_B._knob.addclass(_c);
// [144]  Return Me 
return _B;
// End Sub
};

// [148] Sub SetAttr(attr As Map) As VMKnob 
_B.setattr=function(_attr) {
// [149]  Knob.SetAttr(attr) 
_B._knob.setattr(_attr);
// [150]  Return Me 
return _B;
// End Sub
};

// [153] Sub SetDisabled(b As Boolean) As VMKnob 
_B.setdisabled=function(_b) {
// [154]  Knob.SetDisabled(b) 
_B._knob.setdisabled(_b);
// [155]  Return Me 
return _B;
// End Sub
};

// [158] Sub Render 
_B.render=function() {
// [159]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [162] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [163]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMLabel  =========================== */
function banano_bananovuematerial_vmlabel() {
var _B=this;
_B._label= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._showkey="";

_B._diskey="";

_B._reqkey="";

_B._errkey="";

// [12] Public Sub Initialize(v As BANanoVue, sid As String) As VMLabel 
_B.initialize=function(_v,_sid) {
// [13]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [14]  vue = v 
_B._vue=_v;
// [15]  Label.Initialize(vue, ID).SetTag( {4} ) 
_B._label.initialize(_B._vue,_B._id).settag("label");
// [16]  showKey = {0} 
_B._showkey="" + _B._id + "show";
// [17]  disKey = {1} 
_B._diskey="" + _B._id + "disabled";
// [18]  reqKey = {2} 
_B._reqkey="" + _B._id + "required";
// [19]  errKey = {3} 
_B._errkey="" + _B._id + "error";
// [21]  vue.SetStateSingle(showKey, True) 
_B._vue.setstatesingle(_B._showkey,true);
// [22]  vue.SetStateSingle(disKey, False) 
_B._vue.setstatesingle(_B._diskey,false);
// [23]  vue.SetStateSingle(reqKey, False) 
_B._vue.setstatesingle(_B._reqkey,false);
// [24]  vue.SetStateSingle(errKey, False) 
_B._vue.setstatesingle(_B._errkey,false);
// [26]  SetRequired(False) 
_B.setrequired(false,_B);
// [27]  SetVShow(showKey) 
_B.setvshow(_B._showkey,_B);
// [28]  SetDisabled(False) 
_B.setdisabled(false,_B);
// [29]  Label.RemoveAttr( {5} ) 
_B._label.removeattr(":required");
// [30]  Label.RemoveAttr( {6} ) 
_B._label.removeattr(":disabled");
// [31]  Return Me 
return _B;
// End Sub
};

// [35] public Sub RemoveAttr(sName As String) As VMLabel 
_B.removeattr=function(_sname) {
// [36]  Label.RemoveAttr(sName) 
_B._label.removeattr(_sname);
// [37]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetRequired(b As Boolean) As VMLabel 
_B.setrequired=function(_b) {
// [41]  vue.SetStateSingle(reqKey, b) 
_B._vue.setstatesingle(_B._reqkey,_b);
// [42]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetDisplay4(b As Boolean) As VMLabel 
_B.setdisplay4=function(_b) {
// [46]  Label.SetDisplay4(b) 
_B._label.setdisplay4(_b);
// [47]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetDisplay3(b As Boolean) As VMLabel 
_B.setdisplay3=function(_b) {
// [51]  Label.SetDisplay3(b) 
_B._label.setdisplay3(_b);
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetDisplay2(b As Boolean) As VMLabel 
_B.setdisplay2=function(_b) {
// [56]  Label.SetDisplay2(b) 
_B._label.setdisplay2(_b);
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetDisplay1(b As Boolean) As VMLabel 
_B.setdisplay1=function(_b) {
// [61]  Label.SetDisplay1(b) 
_B._label.setdisplay1(_b);
// [62]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetHeadline(b As Boolean) As VMLabel 
_B.setheadline=function(_b) {
// [66]  Label.SetHeadline(b) 
_B._label.setheadline(_b);
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetTitle(b As Boolean) As VMLabel 
_B.settitle=function(_b) {
// [71]  Label.SetTitle(b) 
_B._label.settitle(_b);
// [72]  Return Me 
return _B;
// End Sub
};

// [75] Sub SetTransparent(b As Boolean) As VMLabel 
_B.settransparent=function(_b) {
// [76]  Label.SetTransparent(b) 
_B._label.settransparent(_b);
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetVerticalAlignMiddle As VMLabel 
_B.setverticalalignmiddle=function() {
// [81]  Label.SetVerticalAlignMiddle 
_B._label.setverticalalignmiddle();
// [82]  Return Me 
return _B;
// End Sub
};

// [85] Sub SetSubHeading(b As Boolean) As VMLabel 
_B.setsubheading=function(_b) {
// [86]  Label.SetSubHeading(b) 
_B._label.setsubheading(_b);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetBody2(b As Boolean) As VMLabel 
_B.setbody2=function(_b) {
// [91]  Label.SetBody2(b) 
_B._label.setbody2(_b);
// [92]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetBody1(b As Boolean) As VMLabel 
_B.setbody1=function(_b) {
// [96]  Label.SetBody1(b) 
_B._label.setbody1(_b);
// [97]  Return Me 
return _B;
// End Sub
};

// [100] Sub SetCaption(b As Boolean) As VMLabel 
_B.setcaption=function(_b) {
// [101]  Label.SetCaption(b) 
_B._label.setcaption(_b);
// [102]  Return Me 
return _B;
// End Sub
};

// [105] Sub SetDisabled(b As Boolean) As VMLabel 
_B.setdisabled=function(_b) {
// [106]  Label.SetDisabled(b) 
_B._label.setdisabled(_b);
// [107]  Return Me 
return _B;
// End Sub
};

// [110] Sub SetVShow(vif As String) As VMLabel 
_B.setvshow=function(_vif) {
// [111]  If vif = {7} Then Return Me 
if (_vif=="") { return _B;}
// [112]  Label.SetVShow(vif) 
_B._label.setvshow(_vif);
// [113]  Return Me 
return _B;
// End Sub
};

// [117] Sub SetStyle(sm As Map) As VMLabel 
_B.setstyle=function(_sm) {
// [118]  Label.SetStyle(sm) 
_B._label.setstyle(_sm);
// [119]  Return Me 
return _B;
// End Sub
};

// [122] Sub SetText(t As String) As VMLabel 
_B.settext=function(_t) {
// [123]  Label.SetText(t) 
_B._label.settext(_t);
// [124]  Return Me 
return _B;
// End Sub
};

// [127] Sub SetParagraph As VMLabel 
_B.setparagraph=function() {
// [128]  Label.SetTag( {8} ) 
_B._label.settag("p");
// [129]  Return Me 
return _B;
// End Sub
};

// [132] Sub SetH1 As VMLabel 
_B.seth1=function() {
// [133]  Label.SetTag( {9} ) 
_B._label.settag("h1");
// [134]  Return Me 
return _B;
// End Sub
};

// [137] Sub SetTag(size As String) As VMLabel 
_B.settag=function(_size) {
// [138]  Label.SetTag(size) 
_B._label.settag(_size);
// [139]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetH2 As VMLabel 
_B.seth2=function() {
// [143]  Label.SetTag( {10} ) 
_B._label.settag("h2");
// [144]  Return Me 
return _B;
// End Sub
};

// [148] Sub SetH3 As VMLabel 
_B.seth3=function() {
// [149]  Label.SetTag( {11} ) 
_B._label.settag("h3");
// [150]  Return Me 
return _B;
// End Sub
};

// [153] Sub SetH4 As VMLabel 
_B.seth4=function() {
// [154]  Label.SetTag( {12} ) 
_B._label.settag("h4");
// [155]  Return Me 
return _B;
// End Sub
};

// [158] Sub SetSpan As VMLabel 
_B.setspan=function() {
// [159]  Label.SetTag( {13} ) 
_B._label.settag("span");
// [160]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetH5 As VMLabel 
_B.seth5=function() {
// [164]  Label.SetTag( {14} ) 
_B._label.settag("h5");
// [165]  Return Me 
return _B;
// End Sub
};

// [168] Sub SetH6 As VMLabel 
_B.seth6=function() {
// [169]  Label.SetTag( {15} ) 
_B._label.settag("h6");
// [170]  Return Me 
return _B;
// End Sub
};

// [173] Sub SetElevation(e As Int) As VMLabel 
_B.setelevation=function(_e) {
// [174]  Label.SetElevation(e) 
_B._label.setelevation(_e);
// [175]  Return Me 
return _B;
// End Sub
};

// [179] Sub AddClass(c As String) As VMLabel 
_B.addclass=function(_c) {
// [180]  Label.AddClass(c) 
_B._label.addclass(_c);
// [181]  Return Me 
return _B;
// End Sub
};

// [185] Sub AddChild(child As VMElement) As VMLabel 
_B.addchild=function(_child) {
var _childhtml;
// [186]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [187]  Label.SetText(childHTML) 
_B._label.settext(_childhtml);
// [188]  Return Me 
return _B;
// End Sub
};

// [192] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [193]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [194]  AddChild(childx) 
_B.addchild(_childx,_B);
// [195]  Next 
}
// End Sub
};

// [199] Sub SetAttr(attr As Map) As VMLabel 
_B.setattr=function(_attr) {
// [200]  Label.SetAttr(attr) 
_B._label.setattr(_attr);
// [201]  Return Me 
return _B;
// End Sub
};

// [209] Sub ToString As String 
_B.tostring=function() {
// [210]  Return Label.tostring 
return _B._label.tostring();
// End Sub
};

// [213] Sub Render 
_B.render=function() {
// [214]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [217] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [218]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [221] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [222]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMList  =========================== */
function banano_bananovuematerial_vmlist() {
var _B=this;
_B._list= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hascontent=false;

_B._eventhandler={};

_B._ispropertybag=false;

_B._expands="";

// [12] Public Sub Initialize(v As BANanoVue, sid As String, module As Object) As VMList 
_B.initialize=function(_v,_sid,_module) {
// [13]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [14]  vue = v 
_B._vue=_v;
// [15]  List.Initialize(vue, ID).SetTag( {13} ) 
_B._list.initialize(_B._vue,_B._id).settag("md-list");
// [16]  HasContent = False 
_B._hascontent=false;
// [17]  eventHandler = module 
_B._eventhandler=_module;
// [18]  isPropertyBag = False 
_B._ispropertybag=false;
// [19]  expandS = {0} 
_B._expands="" + _B._id + "expandsingle";
// [20]  vue.SetStateFalse(expandS) 
_B._vue.setstatefalse(_B._expands);
// [21]  SetExpandSingle(False) 
_B.setexpandsingle(false,_B);
// [22]  Return Me 
return _B;
// End Sub
};

// [25] Sub SetDisabled(b As Boolean) As VMList 
_B.setdisabled=function(_b) {
// [26]  List.SetDisabled(b) 
_B._list.setdisabled(_b);
// [27]  Return Me 
return _B;
// End Sub
};

// [31] Sub ExpandItem(sid As String, b As Boolean) As VMList 
_B.expanditem=function(_sid,_b) {
var _syncid;
// [32]  Dim syncid As String = {1} 
_syncid="" + _sid + "sync";
// [33]  vue.SetStateSingle(syncid, b) 
_B._vue.setstatesingle(_syncid,_b);
// [34]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetTabIndex(ti As String) As VMList 
_B.settabindex=function(_ti) {
// [38]  List.SetTabIndex(ti) 
_B._list.settabindex(_ti);
// [39]  Return Me 
return _B;
// End Sub
};

// [42] Sub SetVShow(vif As Object) As VMList 
_B.setvshow=function(_vif) {
// [43]  List.SetVShow(vif) 
_B._list.setvshow(_vif);
// [44]  Return Me 
return _B;
// End Sub
};

// [47] Sub AddLabel(txt As String) 
_B.addlabel=function(_txt) {
var _li;
// [48]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [49]  li.Initialize(vue, {14} ,eventHandler).AddLabel(txt) 
_li.initialize(_B._vue,"",_B._eventhandler).addlabel(_txt);
// [50]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [51]  li.SetStyle(CreateMap( {15} : {16} , {17} : {18} , {19} : {20} , {21} : {22} , {23} : {24} )) 
_li.setstyle({"height":"32px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"5px !important"});
// [54]  End If 
}
// [56]  HasContent = True 
_B._hascontent=true;
// [57]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [60] Sub AddIconButton(btnID As String, btnIcon As String) 
_B.addiconbutton=function(_btnid,_btnicon) {
var _li;
// [61]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [62]  li.Initialize(vue, {2} , eventHandler).AddIconButton(btnID, btnIcon) 
_li.initialize(_B._vue,"" + _btnid + "li",_B._eventhandler).addiconbutton(_btnid,_btnicon);
// [63]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [64]  li.SetStyle(CreateMap( {25} : {26} , {27} : {28} )) 
_li.setstyle({"height":"48px !important", "padding-top":"10px !important"});
// [65]  End If 
}
// [66]  HasContent = True 
_B._hascontent=true;
// [67]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [70] Sub AddInput(typeOf As String, vModel As String, vText As String, vIcon As String, vValue As String) 
_B.addinput=function(_typeof,_vmodel,_vtext,_vicon,_vvalue) {
var _li;
// [71]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [72]  li.Initialize(vue, {3} , eventHandler).AddInput(typeOf, vModel, vText, vIcon, vValue) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).addinput(_typeof,_vmodel,_vtext,_vicon,_vvalue);
// [73]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [74]  li.SetStyle(CreateMap( {29} : {30} , {31} : {32} , {33} : {34} , {35} : {36} , {37} : {38} )) 
_li.setstyle({"height":"48px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"10px !important"});
// [77]  End If 
}
// [78]  HasContent = True 
_B._hascontent=true;
// [79]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [82] Sub AddButton(btnID As String, btnText As String) 
_B.addbutton=function(_btnid,_btntext) {
var _li;
// [83]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [84]  li.Initialize(vue, {4} , eventHandler).AddButton(btnID, btnText) 
_li.initialize(_B._vue,"" + _btnid + "li",_B._eventhandler).addbutton(_btnid,_btntext);
// [85]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [86]  li.SetStyle(CreateMap( {39} : {40} , {41} : {42} )) 
_li.setstyle({"height":"48px !important", "padding-top":"10px !important"});
// [87]  End If 
}
// [88]  HasContent = True 
_B._hascontent=true;
// [89]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [93] Sub AddCheckBox(vmodel As String, vValue As Boolean, vText As String, bPrimary As Boolean) 
_B.addcheckbox=function(_vmodel,_vvalue,_vtext,_bprimary) {
var _li;
// [94]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [95]  li.Initialize(vue, {5} , eventHandler).AddCheckBox(vmodel, vValue, vText, bPrimary) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).addcheckbox(_vmodel,_vvalue,_vtext,_bprimary);
// [96]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [97]  li.SetStyle(CreateMap( {43} : {44} , {45} : {46} , {47} : {48} , {49} : {50} , {51} : {52} )) 
_li.setstyle({"height":"32px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"5px !important"});
// [100]  End If 
}
// [101]  HasContent = True 
_B._hascontent=true;
// [102]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [105] Sub AddDatePicker(vmodel As String, vText As String, vValue As String) 
_B.adddatepicker=function(_vmodel,_vtext,_vvalue) {
var _li;
// [106]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [107]  li.Initialize(vue, {6} , eventHandler).AddDatePicker(vmodel, vText, vValue) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).adddatepicker(_vmodel,_vtext,_vvalue);
// [108]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [109]  li.SetStyle(CreateMap( {53} : {54} , {55} : {56} , {57} : {58} , {59} : {60} , {61} : {62} )) 
_li.setstyle({"height":"48px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"5px !important"});
// [112]  End If 
}
// [113]  HasContent = True 
_B._hascontent=true;
// [114]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [117] Sub AddSelect(vmodel As String, vText As String, sourceName As String, options As Map, sourcefield As String, displayfield As String) 
_B.addselect=function(_vmodel,_vtext,_sourcename,_options,_sourcefield,_displayfield) {
var _li;
// [118]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [119]  li.Initialize(vue, {7} , eventHandler).AddSelect(vmodel, vText, sourceName, options, sourcefield, displayfield) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).addselect(_vmodel,_vtext,_sourcename,_options,_sourcefield,_displayfield);
// [120]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [121]  li.SetStyle(CreateMap( {63} : {64} , {65} : {66} , {67} : {68} , {69} : {70} , {71} : {72} )) 
_li.setstyle({"height":"48px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"5px !important"});
// [124]  End If 
}
// [125]  HasContent = True 
_B._hascontent=true;
// [126]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [144] Sub AddSlider(vmodel As String, Label As String, minValue As Int, maxValue As Int, value As Int, labelOnTop As Boolean) 
_B.addslider=function(_vmodel,_label,_minvalue,_maxvalue,_value,_labelontop) {
var _li;
// [145]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [146]  li.Initialize(vue, {8} , eventHandler).AddSlider(vmodel, Label, minValue, maxValue, value, labelOnTop) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).addslider(_vmodel,_label,_minvalue,_maxvalue,_value,_labelontop);
// [147]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [148]  li.SetStyle(CreateMap( {75} : {76} , {77} : {78} , {79} : {80} , {81} : {82} , {83} : {84} )) 
_li.setstyle({"height":"48px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"5px !important"});
// [151]  End If 
}
// [153]  HasContent = True 
_B._hascontent=true;
// [154]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [157] Sub AddTextArea(vmodel As String, vText As String, vValue As String) 
_B.addtextarea=function(_vmodel,_vtext,_vvalue) {
var _li;
// [158]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [159]  li.Initialize(vue, {9} , eventHandler).AddTextArea(vmodel, vText, vValue) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).addtextarea(_vmodel,_vtext,_vvalue);
// [160]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [161]  li.SetStyle(CreateMap( {85} : {86} , {87} : {88} )) 
_li.setstyle({"height":"130px !important", "padding-top":"10px !important"});
// [162]  End If 
}
// [163]  HasContent = True 
_B._hascontent=true;
// [164]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [167] Sub AddSwitch(vmodel As String, vText As String, bPrimary As Boolean, bValue As Boolean) 
_B.addswitch=function(_vmodel,_vtext,_bprimary,_bvalue) {
var _li;
// [168]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [169]  li.Initialize(vue, {10} , eventHandler).SetSwitch(vmodel, vText, bPrimary, bValue) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).setswitch(_vmodel,_vtext,_bprimary,_bvalue);
// [170]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [171]  li.SetStyle(CreateMap( {89} : {90} , {91} : {92} , {93} : {94} , {95} : {96} , {97} : {98} )) 
_li.setstyle({"height":"48px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"5px !important"});
// [174]  End If 
}
// [175]  HasContent = True 
_B._hascontent=true;
// [176]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [180] Sub AddRadio(vmodel As String, vValue As String, vText As String, bPrimary As Boolean, bDesignMode As Boolean) 
_B.addradio=function(_vmodel,_vvalue,_vtext,_bprimary,_bdesignmode) {
var _li;
// [181]  Dim li As VMListItem 
_li= new banano_bananovuematerial_vmlistitem();
// [182]  li.Initialize(vue, {11} , eventHandler).SetRadio(vmodel, vValue, vText, bPrimary, bDesignMode) 
_li.initialize(_B._vue,"" + _vmodel + "li",_B._eventhandler).setradio(_vmodel,_vvalue,_vtext,_bprimary,_bdesignmode);
// [183]  If isPropertyBag Then 
if (_B._ispropertybag) {
// [184]  li.SetStyle(CreateMap( {99} : {100} , {101} : {102} , {103} : {104} , {105} : {106} , {107} : {108} )) 
_li.setstyle({"height":"32px !important", "padding-top":"10px !important", "padding-bottom":"10px !important", "margin-top":"5px !important", "margin-bottom":"5px !important"});
// [187]  End If 
}
// [189]  HasContent = True 
_B._hascontent=true;
// [190]  li.Pop(Me) 
_li.pop(_B);
// End Sub
};

// [193] Sub SetDense(b As Boolean) As VMList 
_B.setdense=function(_b) {
// [194]  If b Then AddClass( {109} ) 
if (_b) {_B.addclass("md-dense",_B);}
// [195]  Return Me 
return _B;
// End Sub
};

// [198] Sub SetVIf(vif As Object) As VMList 
_B.setvif=function(_vif) {
// [199]  List.SetVIf(vif) 
_B._list.setvif(_vif);
// [200]  Return Me 
return _B;
// End Sub
};

// [203] Sub CreateItem(itemID As String) As VMListItem 
_B.createitem=function(_itemid) {
var _el;
// [204]  Dim el As VMListItem 
_el= new banano_bananovuematerial_vmlistitem();
// [205]  el.Initialize(vue, itemID, eventHandler) 
_el.initialize(_B._vue,_itemid,_B._eventhandler);
// [206]  If itemID = {110} Then 
if (_itemid=="") {
// [207]  Log( {111} ) 
console.log("VMList.CreateItem - please specify an item id!");
// [208]  Return el 
return _el;
// [209]  End If 
}
// [210]  itemID = itemID.tolowercase 
_itemid=_itemid.toLowerCase();
// [211]  If vue.HasState(itemID) = False Then 
if (_B._vue.hasstate(_itemid)==false) {
// [212]  vue.SetStateSingle(itemID, itemID) 
_B._vue.setstatesingle(_itemid,_itemid);
// [213]  End If 
}
// [214]  el.SetID(itemID,True) 
_el.setid(_itemid,true);
// [215]  el.SetKey(itemID,True) 
_el.setkey(_itemid,true);
// [216]  el.SetActionIcon( {112} ) 
_el.setactionicon("chevron_right");
// [217]  HasContent = True 
_B._hascontent=true;
// [218]  Return el 
return _el;
// End Sub
};

// [221] Sub CreateDivider(b As Boolean) As VMDivider 
_B.createdivider=function(_b) {
var _el;
// [222]  Dim el As VMDivider 
_el= new banano_bananovuematerial_vmdivider();
// [223]  el.Initialize(vue, {113} ) 
_el.initialize(_B._vue,"");
// [224]  HasContent = True 
_B._hascontent=true;
// [225]  Return el 
return _el;
// End Sub
};

// [228] Sub SetStyle(m As Map) As VMList 
_B.setstyle=function(_m) {
// [229]  List.SetStyle(m) 
_B._list.setstyle(_m);
// [230]  Return Me 
return _B;
// End Sub
};

// [233] Sub SetBorder(b As Boolean) As VMList 
_B.setborder=function(_b) {
// [234]  If b Then SetStyle(CreateMap( {114} : {115} )) 
if (_b) {_B.setstyle({"border":"1px solid rgba(#000, .12)"},_B);}
// [235]  Return Me 
return _B;
// End Sub
};

// [238] Sub SetElevation(e As Int) As VMList 
_B.setelevation=function(_e) {
// [239]  List.SetElevation(e) 
_B._list.setelevation(_e);
// [240]  Return Me 
return _B;
// End Sub
};

// [244] Sub AddClass(c As String) As VMList 
_B.addclass=function(_c) {
// [245]  List.AddClass(c) 
_B._list.addclass(_c);
// [246]  Return Me 
return _B;
// End Sub
};

// [250] Sub SetAttr(attr As Map) As VMList 
_B.setattr=function(_attr) {
// [251]  List.SetAttr(attr) 
_B._list.setattr(_attr);
// [252]  Return Me 
return _B;
// End Sub
};

// [255] Sub SetText(t As String) As VMList 
_B.settext=function(_t) {
// [256]  List.SetText(t) 
_B._list.settext(_t);
// [257]  HasContent = True 
_B._hascontent=true;
// [258]  Return Me 
return _B;
// End Sub
};

// [261] Sub SetSlotExpand(b As Boolean) As VMList 
_B.setslotexpand=function(_b) {
// [262]  If b Then List.SetAttr(CreateMap( {116} : {117} )) 
if (_b) {_B._list.setattr({"slot":"md-expand"});}
// [263]  Return Me 
return _B;
// End Sub
};

// [266] Sub SetDoubleLine(b As Boolean) As VMList 
_B.setdoubleline=function(_b) {
// [267]  If b Then List.SetDoubleLine(True) 
if (_b) {_B._list.setdoubleline(true);}
// [268]  Return Me 
return _B;
// End Sub
};

// [271] Sub SetExpandSingle(b As Boolean) As VMList 
_B.setexpandsingle=function(_b) {
// [272]  expandS = {12} 
_B._expands="" + _B._id + "expandsingle";
// [273]  vue.SetStateSingle(expandS, b) 
_B._vue.setstatesingle(_B._expands,_b);
// [274]  List.SetAttr(CreateMap( {118} : expandS)) 
_B._list.setattr({":md-expand-single":_B._expands});
// [275]  Return Me 
return _B;
// End Sub
};

// [278] Sub SetTripleLine(b As Boolean) As VMList 
_B.settripleline=function(_b) {
// [279]  If b Then AddClass( {119} ) 
if (_b) {_B.addclass("md-triple-line",_B);}
// [280]  Return Me 
return _B;
// End Sub
};

// [283] Sub AddSubHeader(t As Object) As VMList 
_B.addsubheader=function(_t) {
var _el;
// [284]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [285]  el.Initialize(vue, {120} ).SetTagSubHeader(True).SetText(t).Pop(List) 
_el.initialize(_B._vue,"").settagsubheader(true).settext(_t).pop(_B._list);
// [286]  HasContent = True 
_B._hascontent=true;
// [287]  Return Me 
return _B;
// End Sub
};

// [290] Sub AddDivider(bInset As Boolean) As VMList 
_B.adddivider=function(_binset) {
var _el;
// [291]  Dim el As VMDivider 
_el= new banano_bananovuematerial_vmdivider();
// [292]  el.Initialize(vue, {121} ).SetInset(bInset) 
_el.initialize(_B._vue,"").setinset(_binset);
// [293]  el.Pop(List) 
_el.pop(_B._list);
// [294]  HasContent = True 
_B._hascontent=true;
// [295]  Return Me 
return _B;
// End Sub
};

// [298] Sub ToString As String 
_B.tostring=function() {
// [299]  Return List.tostring 
return _B._list.tostring();
// End Sub
};

// [302] Sub Render 
_B.render=function() {
// [303]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [306] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [307]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [312] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [313]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMListItem  =========================== */
function banano_bananovuematerial_vmlistitem() {
var _B=this;
_B._listitem= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._txt= new banano_bananovuematerial_vmelement();

_B._hastext=false;

_B._hasaction=false;

_B._btn= new banano_bananovuematerial_vmbutton();

_B._hasicon=false;

_B._icn= new banano_bananovuematerial_vmicon();

_B._hasavatar=false;

_B._avatar= new banano_bananovuematerial_vmavatar();

_B._hasswitch=false;

_B._switch= new banano_bananovuematerial_vmswitch();

_B._hasbadge=false;

_B._badge= new banano_bananovuematerial_vmbadge();

_B._childlist= new banano_bananovuematerial_vmlist();

_B._span= new banano_bananovuematerial_vmelement();

_B._data=[];

_B._hasmenu=false;

_B._menu= new banano_bananovuematerial_vmmenu();

_B._syncid="";

_B._eventhandler={};

// [28] Sub SetElevation(e As Int) As VMListItem 
_B.setelevation=function(_e) {
// [29]  ListItem.SetElevation(e) 
_B._listitem.setelevation(_e);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub AddMenuItem(sid As String, iconName As String, Caption As String) 
_B.addmenuitem=function(_sid,_iconname,_caption) {
// [34]  menu.addicontext(sid, iconName, Caption) 
_B._menu.addicontext(_sid,_iconname,_caption);
// End Sub
};

// [37] Sub AddEditMenuItem(sid As String, caption As String) 
_B.addeditmenuitem=function(_sid,_caption) {
// [38]  menu.AddIconText(sid, {23} , caption) 
_B._menu.addicontext(_sid,"edit",_caption);
// End Sub
};

// [41] Sub AddDeleteMenuItem(sid As String, caption As String) 
_B.adddeletemenuitem=function(_sid,_caption) {
// [42]  menu.AddIconText(sid, {24} , caption) 
_B._menu.addicontext(_sid,"delete",_caption);
// End Sub
};

// [45] Sub SetMenuIcon(menuIcon As String) As VMListItem 
_B.setmenuicon=function(_menuicon) {
// [46]  hasMenu = True 
_B._hasmenu=true;
// [47]  menu.SetIcon(menuIcon) 
_B._menu.seticon(_menuicon);
// [48]  Return Me 
return _B;
// End Sub
};

// [51] Public Sub Initialize(v As BANanoVue, sid As String,module As Object) As VMListItem 
_B.initialize=function(_v,_sid,_module) {
// [52]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [53]  syncid = {0} 
_B._syncid="" + _B._id + "sync";
// [54]  vue = v 
_B._vue=_v;
// [55]  eventHandler = module 
_B._eventhandler=_module;
// [56]  ListItem.Initialize(vue, ID).SetTag( {25} ) 
_B._listitem.initialize(_B._vue,_B._id).settag("md-list-item");
// [57]  hasText = False 
_B._hastext=false;
// [58]  txt.Initialize(vue, {1} ).SetTag( {26} ).Addclass( {27} ) 
_B._txt.initialize(_B._vue,"" + _B._id + "text").settag("div").addclass("md-list-item-text");
// [59]  hasAction = False 
_B._hasaction=false;
// [60]  btn.Initialize(vue, {2} ,module).SetIconButton(True).SetListAction(True) 
_B._btn.initialize(_B._vue,"" + _B._id + "button",_module).seticonbutton(true).setlistaction(true);
// [61]  hasMenu = False 
_B._hasmenu=false;
// [62]  menu.Initialize(vue, {3} ,module).AddClass( {28} ).SetCloseOnClick(True).SetCloseOnSelect(True) 
_B._menu.initialize(_B._vue,"" + _B._id + "menu",_module).addclass("md-list-action").setcloseonclick(true).setcloseonselect(true);
// [63]  menu.SetAlignTrigger(True).SetSizeAuto(True) 
_B._menu.setaligntrigger(true).setsizeauto(true);
// [64]  hasIcon = False 
_B._hasicon=false;
// [65]  icn.Initialize(vue, {4} ) 
_B._icn.initialize(_B._vue,"" + _B._id + "icon");
// [66]  hasAvatar = False 
_B._hasavatar=false;
// [67]  avatar.Initialize(vue, {5} ,module) 
_B._avatar.initialize(_B._vue,"" + _B._id + "avatar",_module);
// [68]  hasSwitch = False 
_B._hasswitch=false;
// [69]  switch.Initialize(vue, {6} ,module) 
_B._switch.initialize(_B._vue,"" + _B._id + "switch",_module);
// [70]  hasBadge = False 
_B._hasbadge=false;
// [71]  badge.Initialize(vue, {7} ) 
_B._badge.initialize(_B._vue,"" + _B._id + "badge");
// [72]  childList.Initialize(vue, {8} , eventHandler) 
_B._childlist.initialize(_B._vue,"" + _B._id + "children",_B._eventhandler);
// [73]  span.Initialize(vue, {9} ).SetTag( {29} ) 
_B._span.initialize(_B._vue,"" + _B._id + "span").settag("span");
// [74]  vue.SetStateSingle(syncid, False) 
_B._vue.setstatesingle(_B._syncid,false);
// [75]  ListItem.SetOnClick(eventHandler, {10} ) 
_B._listitem.setonclick(_B._eventhandler,"" + _B._id + "_click");
// [76]  Return Me 
return _B;
// End Sub
};

// [79] Sub SetData(recs As List) 
_B.setdata=function(_recs) {
// [80]  data = recs 
_B._data=_recs;
// End Sub
};

// [83] Sub SetList(lst As VMList) As VMListItem 
_B.setlist=function(_lst) {
// [84]  SetExpand(True) 
_B.setexpand(true,_B);
// [85]  SetExpanded(syncid) 
_B.setexpanded(_B._syncid,_B);
// [86]  lst.SetSlotExpand(True) 
_lst.setslotexpand(true);
// [87]  lst.Pop(ListItem) 
_lst.pop(_B._listitem);
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetInset(b As Boolean) As VMListItem 
_B.setinset=function(_b) {
// [92]  If b Then AddClass( {30} ) 
if (_b) {_B.addclass("md-inset",_B);}
// [93]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetExpand(b As Boolean) As VMListItem 
_B.setexpand=function(_b) {
// [97]  ListItem.SetAttr(CreateMap( {31} : b)) 
_B._listitem.setattr({":md-expand":_b});
// [98]  Return Me 
return _B;
// End Sub
};

// [101] Sub SetExpanded(b As String) As VMListItem 
_B.setexpanded=function(_b) {
// [102]  b = b.tolowercase 
_b=_b.toLowerCase();
// [103]  If vue.HasState(b) = False Then 
if (_B._vue.hasstate(_b)==false) {
// [104]  Log( {11} ) 
console.log("VMListItem.SetExpanded: '" + _b + "' default state should be set!");
// [105]  End If 
}
// [106]  ListItem.SetAttr(CreateMap( {32} : b)) 
_B._listitem.setattr({":md-expanded.sync":_b});
// [107]  Return Me 
return _B;
// End Sub
};

// [110] Sub SetIcon(icon As String, primary As Boolean) As VMListItem 
_B.seticon=function(_icon,_primary) {
// [111]  If icon = {33} Then Return Me 
if (_icon=="") { return _B;}
// [112]  icn.SetText(icon) 
_B._icn.settext(_icon);
// [113]  If primary Then icn.SetPrimary(primary) 
if (_primary) {_B._icn.setprimary(_primary);}
// [114]  hasIcon = True 
_B._hasicon=true;
// [115]  Return Me 
return _B;
// End Sub
};

// [119] Sub AddClass(c As String) As VMListItem 
_B.addclass=function(_c) {
// [120]  ListItem.AddClass(c) 
_B._listitem.addclass(_c);
// [121]  Return Me 
return _B;
// End Sub
};

// [124] Sub SetStyle(m As Map) As VMListItem 
_B.setstyle=function(_m) {
// [125]  ListItem.SetStyle(m) 
_B._listitem.setstyle(_m);
// [126]  Return Me 
return _B;
// End Sub
};

// [130] Sub SetAttr(attr As Map) As VMListItem 
_B.setattr=function(_attr) {
// [131]  ListItem.SetAttr(attr) 
_B._listitem.setattr(_attr);
// [132]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetAvatar(img As String) As VMListItem 
_B.setavatar=function(_img) {
// [136]  avatar.SetID(ID) 
_B._avatar.setid(_B._id);
// [137]  avatar.SetValue(img) 
_B._avatar.setvalue(_img);
// [138]  hasAvatar = True 
_B._hasavatar=true;
// [139]  Return Me 
return _B;
// End Sub
};

// [142] Sub AddButton(btnID As String, btnText As String) As VMListItem 
_B.addbutton=function(_btnid,_btntext) {
var _btn;
// [143]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [144]  btn.Initialize(vue,btnID, eventHandler) 
_btn.initialize(_B._vue,_btnid,_B._eventhandler);
// [145]  btn.SetText(btnText) 
_btn.settext(_btntext);
// [146]  btn.SetRaised(True) 
_btn.setraised(true);
// [147]  btn.SetPrimary(True) 
_btn.setprimary(true);
// [148]  btn.SetAccent(False) 
_btn.setaccent(false);
// [149]  btn.SetDisabled(False) 
_btn.setdisabled(false);
// [150]  btn.SetStyle(CreateMap( {34} : {35} , {36} : {37} , {38} : {39} )) 
_btn.setstyle({"width":"100%", "margin-left":"0px", "margin-right":"0px"});
// [151]  btn.Pop(ListItem) 
_btn.pop(_B._listitem);
// [152]  Return Me 
return _B;
// End Sub
};

// [155] Sub AddIconButton(btnID As String, btnIcon As String) As VMListItem 
_B.addiconbutton=function(_btnid,_btnicon) {
var _btn;
// [156]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [157]  btn.Initialize(vue,btnID,eventHandler).SetIconButton(True).SetIcon(btnIcon) 
_btn.initialize(_B._vue,_btnid,_B._eventhandler).seticonbutton(true).seticon(_btnicon);
// [158]  btn.SetPrimary(True) 
_btn.setprimary(true);
// [159]  btn.SetDisabled(False) 
_btn.setdisabled(false);
// [160]  btn.Pop(ListItem) 
_btn.pop(_B._listitem);
// [161]  Return Me 
return _B;
// End Sub
};

// [164] Sub AddSlider(vmodel As String, Label As String, minValue As Int, maxValue As Int, value As Int, labelOnTop As Boolean) As VMListItem 
_B.addslider=function(_vmodel,_label,_minvalue,_maxvalue,_value,_labelontop) {
var _slid;
// [165]  vue.SetStateSingle(vmodel, value) 
_B._vue.setstatesingle(_vmodel,_value);
// [166]  Dim slid As VMSlider 
_slid= new banano_bananovuematerial_vmslider();
// [167]  slid.initialize(vue, {12} , eventHandler) 
_slid.initialize(_B._vue,"" + _vmodel + "sld",_B._eventhandler);
// [168]  slid.SetMin(minValue) 
_slid.setmin(_minvalue);
// [169]  slid.SetMax(maxValue) 
_slid.setmax(_maxvalue);
// [170]  slid.SetLabel(Label) 
_slid.setlabel(_label);
// [171]  slid.SetThumbLabel(False) 
_slid.setthumblabel(false);
// [172]  slid.SetVModel(vmodel) 
_slid.setvmodel(_vmodel);
// [173]  slid.SetName(vmodel,False) 
_slid.setname(_vmodel,false);
// [174]  slid.SetLabelOnTop(labelOnTop) 
_slid.setlabelontop(_labelontop);
// [175]  slid.Pop(ListItem) 
_slid.pop(_B._listitem);
// [176]  Return Me 
return _B;
// End Sub
};

// [179] Sub AddSelect(vmodel As String, vText As String, sourceName As String, options As Map, sourcefield As String, displayfield As String) As VMListItem 
_B.addselect=function(_vmodel,_vtext,_sourcename,_options,_sourcefield,_displayfield) {
var _sel;
// [180]  Dim sel As VMSelect 
_sel= new banano_bananovuematerial_vmselect();
// [181]  sel.Initialize(vue, {13} ,eventHandler) 
_sel.initialize(_B._vue,"" + _vmodel + "sel",_B._eventhandler);
// [182]  sel.SetLabel(vText) 
_sel.setlabel(_vtext);
// [183]  sel.SetVModel(vmodel) 
_sel.setvmodel(_vmodel);
// [184]  sel.SetOPtions(sourceName, options, sourcefield, displayfield) 
_sel.setoptions(_sourcename,_options,_sourcefield,_displayfield);
// [185]  sel.SetDense(True) 
_sel.setdense(true);
// [186]  sel.Pop(ListItem) 
_sel.pop(_B._listitem);
// [187]  Return Me 
return _B;
// End Sub
};

// [190] Sub AddRadioGroup(vmodel As String, vText As String, options As Map) As VMListItem 
_B.addradiogroup=function(_vmodel,_vtext,_options) {
var _sel;
// [191]  Dim sel As VMRadioGroup 
_sel= new banano_bananovuematerial_vmradiogroup();
// [192]  sel.Initialize(vue, {14} ,vText,eventHandler) 
_sel.initialize(_B._vue,"" + _vmodel + "rg",_vtext,_B._eventhandler);
// [193]  sel.SetVModel(vmodel) 
_sel.setvmodel(_vmodel);
// [194]  sel.SetOPtions(options) 
_sel.setoptions(_options);
// [195]  sel.Pop(ListItem) 
_sel.pop(_B._listitem);
// [196]  Return Me 
return _B;
// End Sub
};

// [225] Sub AddLabel(t As String) As VMListItem 
_B.addlabel=function(_t) {
var _el;
// [226]  Dim el As VMLabel 
_el= new banano_bananovuematerial_vmlabel();
// [227]  el.Initialize(vue, {15} ).SetText(t) 
_el.initialize(_B._vue,"" + _B._id + "lbl").settext(_t);
// [228]  el.Pop(ListItem) 
_el.pop(_B._listitem);
// [229]  Return Me 
return _B;
// End Sub
};

// [232] Sub AddDatePicker(vmodel As String, vText As String, value As String) As VMListItem 
_B.adddatepicker=function(_vmodel,_vtext,_value) {
var _datex;
// [233]  vue.SetStateSingle(vmodel, value) 
_B._vue.setstatesingle(_vmodel,_value);
// [234]  Dim datex As VMDatePicker 
_datex= new banano_bananovuematerial_vmdatepicker();
// [235]  datex.Initialize(vue, {16} ,eventHandler) 
_datex.initialize(_B._vue,"" + _vmodel + "dp",_B._eventhandler);
// [236]  datex.SetVModel(vmodel) 
_datex.setvmodel(_vmodel);
// [237]  datex.SetLabel(vText) 
_datex.setlabel(_vtext);
// [238]  datex.Pop(ListItem) 
_datex.pop(_B._listitem);
// [239]  Return Me 
return _B;
// End Sub
};

// [242] Sub AddTextArea(vModel As String, vText As String, vValue As String) As VMListItem 
_B.addtextarea=function(_vmodel,_vtext,_vvalue) {
var _input;
// [243]  vue.SetStateSingle(vModel, vValue) 
_B._vue.setstatesingle(_vmodel,_vvalue);
// [244]  Dim input As VMTextArea 
_input= new banano_bananovuematerial_vmtextarea();
// [245]  input.Initialize(vue, {17} , eventHandler) 
_input.initialize(_B._vue,"" + _vmodel + "ta",_B._eventhandler);
// [246]  input.SetLabel(vText) 
_input.setlabel(_vtext);
// [247]  input.SetVModel(vModel) 
_input.setvmodel(_vmodel);
// [248]  input.SetName(vModel,False) 
_input.setname(_vmodel,false);
// [249]  input.Pop(ListItem) 
_input.pop(_B._listitem);
// [250]  Return Me 
return _B;
// End Sub
};

// [254] Sub AddInput(typeOf As String, vModel As String, vText As String, vIcon As String, vValue As String) As VMListItem 
_B.addinput=function(_typeof,_vmodel,_vtext,_vicon,_vvalue) {
var _input;
// [255]  vue.SetStateSingle(vModel, vValue) 
_B._vue.setstatesingle(_vmodel,_vvalue);
// [256]  Dim input As VMInput 
_input= new banano_bananovuematerial_vminput();
// [257]  input.Initialize(vue, {18} ,eventHandler) 
_input.initialize(_B._vue,"" + _vmodel + "inp",_B._eventhandler);
// [258]  input.SetType(typeOf) 
_input.settype(_typeof);
// [259]  input.SetLabel(vText) 
_input.setlabel(_vtext);
// [260]  input.SetVModel(vModel) 
_input.setvmodel(_vmodel);
// [261]  input.SetName(vModel,False) 
_input.setname(_vmodel,false);
// [262]  input.SetAutoComplete(vModel) 
_input.setautocomplete(_vmodel);
// [263]  If vIcon <> {42} Then input.SetIcon(vIcon) 
if (_vicon!="") {_input.seticon(_vicon);}
// [264]  If typeOf <> {43} Then 
if (_typeof!="password") {
// [265]  input.SetClearable(True) 
_input.setclearable(true);
// [266]  End If 
}
// [267]  input.Pop(ListItem) 
_input.pop(_B._listitem);
// [268]  Return Me 
return _B;
// End Sub
};

// [271] Sub AddCheckBox(vmodel As String, bValue As Boolean, vText As String, bPrimary As Boolean) As VMListItem 
_B.addcheckbox=function(_vmodel,_bvalue,_vtext,_bprimary) {
var _cb;
// [272]  vue.SetStateSingle(vmodel, bValue) 
_B._vue.setstatesingle(_vmodel,_bvalue);
// [273]  Dim cb As VMCheckBox 
_cb= new banano_bananovuematerial_vmcheckbox();
// [274]  cb.Initialize(vue, {19} ,eventHandler).SetVModel(vmodel).SetPrimary(bPrimary) 
_cb.initialize(_B._vue,"" + _vmodel + "cb",_B._eventhandler).setvmodel(_vmodel).setprimary(_bprimary);
// [275]  cb.Pop(ListItem) 
_cb.pop(_B._listitem);
// [276]  SetText(vText) 
_B.settext(_vtext,_B);
// [277]  Return Me 
return _B;
// End Sub
};

// [280] Sub SetRadio(vmodel As String, vValue As String, vText As String, bPrimary As Boolean, bDesignMode As Boolean) As VMListItem 
_B.setradio=function(_vmodel,_vvalue,_vtext,_bprimary,_bdesignmode) {
var _cb;
// [281]  Dim cb As VMRadio 
_cb= new banano_bananovuematerial_vmradio();
// [282]  cb.Initialize(vue, {20} ,eventHandler).SetValue(vValue,False).SetName(vmodel,False).SetPrimary(bPrimary) 
_cb.initialize(_B._vue,"" + _vmodel + "rd",_B._eventhandler).setvalue(_vvalue,false).setname(_vmodel,false).setprimary(_bprimary);
// [283]  If bDesignMode = False Then cb.SetVModel(vmodel) 
if (_bdesignmode==false) {_cb.setvmodel(_vmodel);}
// [284]  cb.Pop(ListItem) 
_cb.pop(_B._listitem);
// [285]  SetText(vText) 
_B.settext(_vtext,_B);
// [286]  Return Me 
return _B;
// End Sub
};

// [289] Sub SetBadge(content As Int, bPrimary As Boolean, position As String, bDense As Boolean, bSquare As Boolean) As VMListItem 
_B.setbadge=function(_content,_bprimary,_position,_bdense,_bsquare) {
// [290]  badge.SetContent(content).SetPosition(position).SetDense(bDense).SetSquare(bSquare) 
_B._badge.setcontent(_content).setposition(_position).setdense(_bdense).setsquare(_bsquare);
// [291]  badge.SetPrimary(bPrimary) 
_B._badge.setprimary(_bprimary);
// [292]  hasBadge = True 
_B._hasbadge=true;
// [293]  Return Me 
return _B;
// End Sub
};

// [297] Sub SetSwitch(vmodel As String, text As String,bPrimary As Boolean, bValue As Boolean) As VMListItem 
_B.setswitch=function(_vmodel,_text,_bprimary,_bvalue) {
// [298]  vue.SetStateSingle(vmodel, bValue) 
_B._vue.setstatesingle(_vmodel,_bvalue);
// [299]  SetText(text) 
_B.settext(_text,_B);
// [300]  hasSwitch = True 
_B._hasswitch=true;
// [301]  switch.SetVModel(vmodel).SetPrimary(bPrimary) 
_B._switch.setvmodel(_vmodel).setprimary(_bprimary);
// [302]  Return Me 
return _B;
// End Sub
};

// [305] Sub SetText(t As String) As VMListItem 
_B.settext=function(_t) {
// [306]  span.SetText(t) 
_B._span.settext(_t);
// [307]  span.Pop(txt) 
_B._span.pop(_B._txt);
// [308]  hasText = True 
_B._hastext=true;
// [309]  avatar.SetAlt(t) 
_B._avatar.setalt(_t);
// [310]  Return Me 
return _B;
// End Sub
};

// [313] Sub SetDescription(t As String) As VMListItem 
_B.setdescription=function(_t) {
var _span;
// [314]  Dim span As VMElement 
_span= new banano_bananovuematerial_vmelement();
// [315]  span.Initialize(vue, {21} ).SetTag( {44} ).SetText(t) 
_span.initialize(_B._vue,"" + _B._id + "desc").settag("span").settext(_t);
// [316]  span.Pop(txt) 
_span.pop(_B._txt);
// [317]  hasText = True 
_B._hastext=true;
// [318]  Return Me 
return _B;
// End Sub
};

// [321] Sub SetThirdLine(t As String) As VMListItem 
_B.setthirdline=function(_t) {
var _p;
// [322]  Dim p As VMElement 
_p= new banano_bananovuematerial_vmelement();
// [323]  p.Initialize(vue, {22} ).SetTag( {45} ).SetText(t) 
_p.initialize(_B._vue,"" + _B._id + "third").settag("p").settext(_t);
// [324]  p.Pop(txt) 
_p.pop(_B._txt);
// [325]  hasText = True 
_B._hastext=true;
// [326]  Return Me 
return _B;
// End Sub
};

// [329] Sub SetActionIcon(icon As String) As VMListItem 
_B.setactionicon=function(_icon) {
// [330]  btn.SetIcon(icon) 
_B._btn.seticon(_icon);
// [331]  hasAction = True 
_B._hasaction=true;
// [332]  Return Me 
return _B;
// End Sub
};

// [335] Sub SetTo(t As Object) As VMListItem 
_B.setto=function(_t) {
// [336]  ListItem.SetTo(t) 
_B._listitem.setto(_t);
// [337]  Return Me 
return _B;
// End Sub
};

// [340] Sub SetHREF(h As Object) As VMListItem 
_B.sethref=function(_h) {
// [341]  ListItem.SetHREF(h) 
_B._listitem.sethref(_h);
// [342]  Return Me 
return _B;
// End Sub
};

// [345] Sub SetName(k As Object, bind As Boolean) As VMListItem 
_B.setname=function(_k,_bind) {
// [346]  ListItem.SetName(k, bind) 
_B._listitem.setname(_k,_bind);
// [347]  txt.SetName(k,bind) 
_B._txt.setname(_k,_bind);
// [348]  span.SetName(k,bind) 
_B._span.setname(_k,_bind);
// [349]  btn.setname(k,bind) 
_B._btn.setname(_k,_bind);
// [350]  Return Me 
return _B;
// End Sub
};

// [353] Sub SetID(k As String, bind As Boolean) As VMListItem 
_B.setid=function(_k,_bind) {
// [354]  ListItem.SetID(k, bind) 
_B._listitem.setid(_k,_bind);
// [355]  txt.SetID(k,bind) 
_B._txt.setid(_k,_bind);
// [356]  span.SetID(k,bind) 
_B._span.setid(_k,_bind);
// [357]  btn.setid(k,bind) 
_B._btn.setid(_k,_bind);
// [358]  Return Me 
return _B;
// End Sub
};

// [361] Sub SetKey(k As String, bind As Boolean) As VMListItem 
_B.setkey=function(_k,_bind) {
// [362]  ListItem.SetKey(k, bind) 
_B._listitem.setkey(_k,_bind);
// [363]  txt.SetKey(k,bind) 
_B._txt.setkey(_k,_bind);
// [364]  span.SetKey(k,bind) 
_B._span.setkey(_k,_bind);
// [365]  btn.setkey(k,bind) 
_B._btn.setkey(_k,_bind);
// [366]  Return Me 
return _B;
// End Sub
};

// [369] Sub SetTargetBlank(b As Boolean) As VMListItem 'ignore 
_B.settargetblank=function(_b) {
// [370]  ListItem.Element.SetAttrTARGET( {46} ) 
_B._listitem._element.setattrtarget("_blank");
// [371]  Return Me 
return _B;
// End Sub
};

// [374] Sub SetTargetSelf(b As Boolean) As VMListItem 'ignore 
_B.settargetself=function(_b) {
// [375]  ListItem.Element.SetAttrTARGET( {47} ) 
_B._listitem._element.setattrtarget("_self");
// [376]  Return Me 
return _B;
// End Sub
};

// [379] Sub SetTargetParent(b As Boolean) As VMListItem 'ignore 
_B.settargetparent=function(_b) {
// [380]  ListItem.Element.SetAttrTARGET( {48} ) 
_B._listitem._element.setattrtarget("_parent");
// [381]  Return Me 
return _B;
// End Sub
};

// [384] Sub SetTargetTop(b As Boolean) As VMListItem 'ignore 
_B.settargettop=function(_b) {
// [385]  ListItem.Element.SetAttrTARGET( {49} ) 
_B._listitem._element.setattrtarget("_top");
// [386]  Return Me 
return _B;
// End Sub
};

// [389] Sub SetVFor(item As String, dataSource As String) As VMListItem 
_B.setvfor=function(_item,_datasource) {
// [390]  ListItem.SetVFor(item, dataSource) 
_B._listitem.setvfor(_item,_datasource);
// [391]  Return Me 
return _B;
// End Sub
};

// [394] Sub ToString As String 
_B.tostring=function() {
// [395]  If hasIcon Then 
if (_B._hasicon) {
// [396]  icn.Pop(ListItem) 
_B._icn.pop(_B._listitem);
// [397]  End If 
}
// [398]  If hasAvatar Then 
if (_B._hasavatar) {
// [399]  avatar.Pop(ListItem) 
_B._avatar.pop(_B._listitem);
// [400]  End If 
}
// [401]  If hasText Then 
if (_B._hastext) {
// [402]  txt.Pop(ListItem) 
_B._txt.pop(_B._listitem);
// [403]  End If 
}
// [404]  If hasAction Then 
if (_B._hasaction) {
// [405]  btn.Pop(ListItem) 
_B._btn.pop(_B._listitem);
// [406]  End If 
}
// [407]  If hasMenu Then 
if (_B._hasmenu) {
// [408]  menu.Pop(ListItem) 
_B._menu.pop(_B._listitem);
// [409]  End If 
}
// [410]  If hasSwitch Then 
if (_B._hasswitch) {
// [411]  switch.Pop(ListItem) 
_B._switch.pop(_B._listitem);
// [412]  End If 
}
// [413]  If hasBadge Then 
if (_B._hasbadge) {
// [414]  badge.Pop(ListItem) 
_B._badge.pop(_B._listitem);
// [415]  End If 
}
// [416]  Return ListItem.ToString 
return _B._listitem.tostring();
// End Sub
};

// [419] Sub Pop(p As VMList) 
_B.pop=function(_p) {
// [420]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMListView  =========================== */
function banano_bananovuematerial_vmlistview() {
var _B=this;
_B._listview= new banano_bananovuematerial_vmlist();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hascontent=false;

_B._eventhandler={};

_B._items={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, module As Object) As VMListView 
_B.initialize=function(_v,_sid,_module) {
// [12]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [13]  vue = v 
_B._vue=_v;
// [14]  ListView.Initialize(vue, ID,module) 
_B._listview.initialize(_B._vue,_B._id,_module);
// [15]  items.Initialize 
_B._items={};
// [16]  HasContent = False 
_B._hascontent=false;
// [17]  eventHandler = module 
_B._eventhandler=_module;
// [18]  Return Me 
return _B;
// End Sub
};

// [22] Sub SetDisabled(b As Boolean) As VMListView 
_B.setdisabled=function(_b) {
// [23]  ListView.SetDisabled(b) 
_B._listview.setdisabled(_b);
// [24]  Return Me 
return _B;
// End Sub
};

// [28] Sub AddAvatar(key As String, imgURL As String, text As String, badge As Object) 
_B.addavatar=function(_key,_imgurl,_text,_badge) {
var _item;
// [29]  key = key.tolowercase 
_key=_key.toLowerCase();
// [30]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [31]  item.Initialize(vue, key,eventHandler) 
_item.initialize(_B._vue,_key,_B._eventhandler);
// [32]  item.SetAvatar(imgURL) 
_item.setavatar(_imgurl);
// [33]  item.SetText(text) 
_item.settext(_text);
// [34]  If badge <> Null Then item.SetBadge(badge,True, {1} ,True,False) 
if (_badge!=null) {_item.setbadge(_badge,true,"top",true,false);}
// [35]  items.Put(key, item) 
_B._items[_key]=_item;
// End Sub
};

// [38] Sub AddSubAvatar(parent As String, key As String, imgURL As String, text As String) 
_B.addsubavatar=function(_parent,_key,_imgurl,_text) {
var _li,_pl,_item;
// [39]  If items.ContainsKey(parent) Then 
if ((_parent in _B._items)) {
// [40]  Dim li As VMListItem = items.Get(parent) 
_li=_B._items[_parent];
// [41]  Dim pl As VMList = li.childList 
_pl=_li._childlist;
// [42]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [43]  item.Initialize(vue, key,eventHandler) 
_item.initialize(_B._vue,_key,_B._eventhandler);
// [44]  item.SetAvatar(imgURL) 
_item.setavatar(_imgurl);
// [45]  item.SetText(text) 
_item.settext(_text);
// [46]  item.Pop(pl) 
_item.pop(_pl);
// [47]  End If 
}
// End Sub
};

// [50] Sub AddItem(key As String, icon As String, text As String, badge As Object) 
_B.additem=function(_key,_icon,_text,_badge) {
var _item;
// [51]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [52]  item.Initialize(vue, key,eventHandler) 
_item.initialize(_B._vue,_key,_B._eventhandler);
// [53]  item.SetIcon(icon, False) 
_item.seticon(_icon,false);
// [54]  item.SetText(text) 
_item.settext(_text);
// [55]  If badge <> Null Then item.SetBadge(badge,True, {2} ,True,False) 
if (_badge!=null) {_item.setbadge(_badge,true,"top",true,false);}
// [56]  items.Put(key, item) 
_B._items[_key]=_item;
// End Sub
};

// [59] Sub AddSubItem(parent As String, key As String, icon As String, text As String) 
_B.addsubitem=function(_parent,_key,_icon,_text) {
var _li,_pl,_item;
// [60]  If items.ContainsKey(parent) Then 
if ((_parent in _B._items)) {
// [61]  Dim li As VMListItem = items.Get(parent) 
_li=_B._items[_parent];
// [62]  Dim pl As VMList = li.childList 
_pl=_li._childlist;
// [63]  Dim item As VMListItem 
_item= new banano_bananovuematerial_vmlistitem();
// [64]  item.Initialize(vue, key, eventHandler) 
_item.initialize(_B._vue,_key,_B._eventhandler);
// [65]  item.SetIcon(icon, False) 
_item.seticon(_icon,false);
// [66]  item.SetText(text) 
_item.settext(_text);
// [67]  item.SetInset(True) 
_item.setinset(true);
// [68]  item.Pop(pl) 
_item.pop(_pl);
// [69]  End If 
}
// End Sub
};

// [73] Sub ExpandItem(sid As String, b As Boolean) As VMListView 
_B.expanditem=function(_sid,_b) {
var _syncid;
// [74]  Dim syncid As String = {0} 
_syncid="" + _B._id + "sync";
// [75]  vue.SetStateSingle(syncid, b) 
_B._vue.setstatesingle(_syncid,_b);
// [76]  Return Me 
return _B;
// End Sub
};

// [79] Sub SetTabIndex(ti As String) As VMListView 
_B.settabindex=function(_ti) {
// [80]  ListView.SetTabIndex(ti) 
_B._listview.settabindex(_ti);
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub SetVShow(vif As Object) As VMListView 
_B.setvshow=function(_vif) {
// [85]  ListView.SetVShow(vif) 
_B._listview.setvshow(_vif);
// [86]  Return Me 
return _B;
// End Sub
};

// [89] Sub SetDense(b As Boolean) As VMListView 
_B.setdense=function(_b) {
// [90]  If b Then AddClass( {3} ) 
if (_b) {_B.addclass("md-dense",_B);}
// [91]  Return Me 
return _B;
// End Sub
};

// [94] Sub SetVIf(vif As Object) As VMListView 
_B.setvif=function(_vif) {
// [95]  ListView.SetVIf(vif) 
_B._listview.setvif(_vif);
// [96]  Return Me 
return _B;
// End Sub
};

// [99] Sub SetStyle(m As Map) As VMListView 
_B.setstyle=function(_m) {
// [100]  ListView.SetStyle(m) 
_B._listview.setstyle(_m);
// [101]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetBorder(b As Boolean) As VMListView 
_B.setborder=function(_b) {
// [105]  If b Then SetStyle(CreateMap( {4} : {5} )) 
if (_b) {_B.setstyle({"border":"1px solid rgba(#000, .12)"},_B);}
// [106]  Return Me 
return _B;
// End Sub
};

// [109] Sub SetElevation(e As Int) As VMListView 
_B.setelevation=function(_e) {
// [110]  ListView.SetElevation(e) 
_B._listview.setelevation(_e);
// [111]  Return Me 
return _B;
// End Sub
};

// [115] Sub AddClass(c As String) As VMListView 
_B.addclass=function(_c) {
// [116]  ListView.AddClass(c) 
_B._listview.addclass(_c);
// [117]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetAttr(attr As Map) As VMListView 
_B.setattr=function(_attr) {
// [122]  ListView.SetAttr(attr) 
_B._listview.setattr(_attr);
// [123]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetText(t As String) As VMListView 
_B.settext=function(_t) {
// [127]  ListView.SetText(t) 
_B._listview.settext(_t);
// [128]  HasContent = True 
_B._hascontent=true;
// [129]  Return Me 
return _B;
// End Sub
};

// [132] Sub ToString As String 
_B.tostring=function() {
var _item,_cl;
// [133]  For Each item As VMListItem In items.Values 
for (_itemKEY in _B._items) {
var _item=_B._items[_itemKEY];
// [134]  Dim cl As VMList = item.childList 
_cl=_item._childlist;
// [135]  If cl.HasContent Then item.SetList(cl) 
if (_cl._hascontent) {_item.setlist(_cl);}
// [136]  item.Pop(ListView) 
_item.pop(_B._listview);
// [137]  Next 
}
// [138]  Return ListView.tostring 
return _B._listview.tostring();
// End Sub
};

// [141] Sub Render 
_B.render=function() {
// [142]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [145] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [146]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [150] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [151]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMLoader  =========================== */
function banano_bananovuematerial_vmloader() {
var _B=this;
_B._loader= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [10] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMLoader 
_B.initialize=function(_v,_sid,_eventhandler) {
// [11]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [12]  vue = v 
_B._vue=_v;
// [13]  Loader.Initialize(vue, ID).SetTag( {7} ) 
_B._loader.initialize(_B._vue,_B._id).settag("loading");
// [14]  module = eventHandler 
_B._module=_eventhandler;
// [15]  SetOnCancel 
_B.setoncancel(_B);
// [16]  SetFullPage(True) 
_B.setfullpage(true,_B);
// [17]  SetIsLoading(False) 
_B.setisloading(false,_B);
// [18]  SetCanCancel(False) 
_B.setcancancel(false,_B);
// [19]  SetColor( {8} ) 
_B.setcolor("blue",_B);
// [20]  SetLoaderBars 
_B.setloaderbars(_B);
// [21]  Return Me 
return _B;
// End Sub
};

// [24] Sub SetIsLoading(b As Boolean) As VMLoader 
_B.setisloading=function(_b) {
var _isloading;
// [25]  Dim isloading As String = {0} 
_isloading="" + _B._id + "loading";
// [26]  vue.SetStateSingle(isloading, b) 
_B._vue.setstatesingle(_isloading,_b);
// [27]  Loader.SetAttr1( {9} , isloading) 
_B._loader.setattr1(":active.sync",_isloading);
// [28]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetCanCancel(b As Boolean) As VMLoader 
_B.setcancancel=function(_b) {
// [32]  Loader.setattr1( {10} , b) 
_B._loader.setattr1(":can-cancel",_b);
// [33]  Return Me 
return _B;
// End Sub
};

// [36] Sub SetFullPage(b As Boolean) As VMLoader 
_B.setfullpage=function(_b) {
var _fpage;
// [37]  Dim fPage As String = {1} 
_fpage="" + _B._id + "fullpage";
// [38]  vue.SetStateSingle(fPage, b) 
_B._vue.setstatesingle(_fpage,_b);
// [39]  Loader.SetAttr1( {11} , fPage) 
_B._loader.setattr1(":is-full-page",_fpage);
// [40]  Return Me 
return _B;
// End Sub
};

// [43] Sub SetColor(scolor As String) As VMLoader 
_B.setcolor=function(_scolor) {
var _xcolor;
// [44]  Dim xcolor As String = {2} 
_xcolor="" + _B._id + "color";
// [45]  vue.SetStateSingle(xcolor, scolor) 
_B._vue.setstatesingle(_xcolor,_scolor);
// [46]  Loader.SetAttr1( {12} , xcolor) 
_B._loader.setattr1(":color",_xcolor);
// [47]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetBackgroundColor(scolor As String) As VMLoader 
_B.setbackgroundcolor=function(_scolor) {
var _xcolor;
// [51]  Dim xcolor As String = {3} 
_xcolor="" + _B._id + "backgroundcolor";
// [52]  vue.SetStateSingle(xcolor, scolor) 
_B._vue.setstatesingle(_xcolor,_scolor);
// [53]  Loader.SetAttr1( {13} , xcolor) 
_B._loader.setattr1(":background-color",_xcolor);
// [54]  Return Me 
return _B;
// End Sub
};

// [57] Sub SetOpacity(opac As Double) As VMLoader 
_B.setopacity=function(_opac) {
var _xcolor;
// [58]  Dim xcolor As String = {4} 
_xcolor="" + _B._id + "opacity";
// [59]  vue.SetStateSingle(xcolor, opac) 
_B._vue.setstatesingle(_xcolor,_opac);
// [60]  Loader.SetAttr1( {14} , xcolor) 
_B._loader.setattr1(":opacity",_xcolor);
// [61]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetLoader(sloader As String) As VMLoader 
_B.setloader=function(_sloader) {
var _xloader;
// [65]  Dim xloader As String = {5} 
_xloader="" + _B._id + "loader";
// [66]  vue.SetStateSingle(xloader, sloader) 
_B._vue.setstatesingle(_xloader,_sloader);
// [67]  Loader.SetAttr1( {15} , xloader) 
_B._loader.setattr1(":loader",_xloader);
// [68]  Return Me 
return _B;
// End Sub
};

// [71] Sub SetLoaderSpinner As VMLoader 
_B.setloaderspinner=function() {
// [72]  SetLoader( {16} ) 
_B.setloader("spinner",_B);
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub SetLoaderDots As VMLoader 
_B.setloaderdots=function() {
// [77]  SetLoader( {17} ) 
_B.setloader("dots",_B);
// [78]  Return Me 
return _B;
// End Sub
};

// [81] Sub SetLoaderBars As VMLoader 
_B.setloaderbars=function() {
// [82]  SetLoader( {18} ) 
_B.setloader("bars",_B);
// [83]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetOnCancel As VMLoader 
_B.setoncancel=function() {
var _e,_oncancel,_cb;
// [88]  Dim e As BANanoEvent 
_e=null;
// [89]  Dim onCancel As String = {6} 
_oncancel="" + _B._id + "_oncancel";
// [90]  If SubExists(module, onCancel) = False Then Return Me 
if ((typeof _B._module[(_oncancel).toLowerCase()]==="function")==false) { return _B;}
// [91]  Dim cb As BANanoObject = BANano.CallBack(module, onCancel, Array(e)) 
_cb=function(_e) {if (typeof _B._module[(_oncancel).toLowerCase()]==="function") {return _B._module[(_oncancel).toLowerCase()](_e,_B)};};
// [92]  vue.SetCallBack(onCancel, cb) 
_B._vue.setcallback(_oncancel,_cb);
// [93]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetStyle(m As Map) As VMLoader 
_B.setstyle=function(_m) {
// [97]  Loader.SetStyle(m) 
_B._loader.setstyle(_m);
// [98]  Return Me 
return _B;
// End Sub
};

// [101] Sub SetMargin(p As String) As VMLoader 
_B.setmargin=function(_p) {
// [102]  Loader.SetStyle(CreateMap( {19} :p)) 
_B._loader.setstyle({"margin":_p});
// [103]  Return Me 
return _B;
// End Sub
};

// [106] Sub SetPadding(p As String) As VMLoader 
_B.setpadding=function(_p) {
// [107]  Loader.SetStyle(CreateMap( {20} :p)) 
_B._loader.setstyle({"padding":_p});
// [108]  Return Me 
return _B;
// End Sub
};

// [112] Sub AddClass(c As String) As VMLoader 
_B.addclass=function(_c) {
// [113]  Loader.AddClass(c) 
_B._loader.addclass(_c);
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetAttr(attr As Map) As VMLoader 
_B.setattr=function(_attr) {
// [119]  Loader.SetAttr(attr) 
_B._loader.setattr(_attr);
// [120]  Return Me 
return _B;
// End Sub
};

// [123] Sub ToString As String 
_B.tostring=function() {
// [124]  Return Loader.tostring 
return _B._loader.tostring();
// End Sub
};

// [127] Sub Render 
_B.render=function() {
// [128]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [131] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [132]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [135] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [136]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMMediaCardCover  =========================== */
function banano_bananovuematerial_vmmediacardcover() {
var _B=this;
_B._mediacardcover= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMMediaCardCover 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  MediaCardCover.Initialize(v, ID) 
_B._mediacardcover.initialize(_v,_B._id);
// [13]  MediaCardCover.SetTag( {0} ) 
_B._mediacardcover.settag("md-card-media-cover");
// [14]  vue = v 
_B._vue=_v;
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub ToString As String 
_B.tostring=function() {
// [20]  Return MediaCardCover.ToString 
return _B._mediacardcover.tostring();
// End Sub
};

// [23] Sub SetVModel(k As String) As VMMediaCardCover 
_B.setvmodel=function(_k) {
// [24]  MediaCardCover.SetVModel(k) 
_B._mediacardcover.setvmodel(_k);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetVIf(vif As Object) As VMMediaCardCover 
_B.setvif=function(_vif) {
// [29]  MediaCardCover.SetVIf(vif) 
_B._mediacardcover.setvif(_vif);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetVShow(vif As Object) As VMMediaCardCover 
_B.setvshow=function(_vif) {
// [34]  MediaCardCover.SetVShow(vif) 
_B._mediacardcover.setvshow(_vif);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub Render 
_B.render=function() {
// [40]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [44] Sub AddChild(child As VMElement) As VMMediaCardCover 
_B.addchild=function(_child) {
var _childhtml;
// [45]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [46]  MediaCardCover.SetText(childHTML) 
_B._mediacardcover.settext(_childhtml);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetText(t As Object) As VMMediaCardCover 
_B.settext=function(_t) {
// [52]  MediaCardCover.SetText(t) 
_B._mediacardcover.settext(_t);
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [58]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [62] Sub AddClass(c As String) As VMMediaCardCover 
_B.addclass=function(_c) {
// [63]  MediaCardCover.AddClass(c) 
_B._mediacardcover.addclass(_c);
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetAttr(attr As Map) As VMMediaCardCover 
_B.setattr=function(_attr) {
// [69]  MediaCardCover.SetAttr(attr) 
_B._mediacardcover.setattr(_attr);
// [70]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetStyle(sm As Map) As VMMediaCardCover 
_B.setstyle=function(_sm) {
// [75]  MediaCardCover.SetStyle(sm) 
_B._mediacardcover.setstyle(_sm);
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [81]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [82]  AddChild(childx) 
_B.addchild(_childx,_B);
// [83]  Next 
}
// End Sub
};

// [87] Sub SetPadding(p As Object) As VMMediaCardCover 
_B.setpadding=function(_p) {
// [88]  MediaCardCover.SetPaddingAll(p) 
_B._mediacardcover.setpaddingall(_p);
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetTextScrim(varText As Boolean) As VMMediaCardCover 
_B.settextscrim=function(_vartext) {
// [94] SetAttr(CreateMap( {1} : varText)) 
_B.setattr({":md-text-scrim":_vartext},_B);
// [95] Return Me 
return _B;
// End Sub
};

// [99] Sub SetSolid(varSolid As Boolean) As VMMediaCardCover 
_B.setsolid=function(_varsolid) {
// [100] SetAttr(CreateMap( {2} : varSolid)) 
_B.setattr({":md-solid":_varsolid},_B);
// [101] Return Me 
return _B;
// End Sub
};

}
/* =========================== VMMenu  =========================== */
function banano_bananovuematerial_vmmenu() {
var _B=this;
_B._menu= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._menucontent= new banano_bananovuematerial_vmelement();

_B._bactive=false;

_B._eventhandler={};

// [13] Public Sub Initialize(v As BANanoVue, sid As String, module As Object) As VMMenu 
_B.initialize=function(_v,_sid,_module) {
// [14]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [15]  Menu.Initialize(v, ID) 
_B._menu.initialize(_v,_B._id);
// [16]  Menu.SetTag( {6} ) 
_B._menu.settag("md-menu");
// [17]  vue = v 
_B._vue=_v;
// [18]  MenuContent.Initialize(vue, {0} ).SetTag( {7} ) 
_B._menucontent.initialize(_B._vue,"" + _B._id + "content").settag("md-menu-content");
// [19]  bActive = False 
_B._bactive=false;
// [20]  eventHandler = module 
_B._eventhandler=_module;
// [21]  Return Me 
return _B;
// End Sub
};

// [25] Sub SetIcon(icon As String) As VMMenu 
_B.seticon=function(_icon) {
var _btn;
// [26]  If icon = {8} Then Return Me 
if (_icon=="") { return _B;}
// [27]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [28]  btn.Initialize(vue, {1} , eventHandler).SetMenuTrigger(True) 
_btn.initialize(_B._vue,"" + _B._id + "icon",_B._eventhandler).setmenutrigger(true);
// [29]  btn.SetIcon(icon).SetIconButton(True) 
_btn.seticon(_icon).seticonbutton(true);
// [30]  btn.Pop(Menu) 
_btn.pop(_B._menu);
// [31]  SetDirectionBottomEnd(True) 
_B.setdirectionbottomend(true,_B);
// [32]  SetAlignTrigger(True) 
_B.setaligntrigger(true,_B);
// [33]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetImage(imgURL As String, txt As String) As VMMenu 
_B.setimage=function(_imgurl,_txt) {
var _avt;
// [38]  Dim avt As VMAvatar 
_avt= new banano_bananovuematerial_vmavatar();
// [39]  avt.Initialize(vue, {2} ,eventHandler).SetAlt(txt).setmenutrigger(True) 
_avt.initialize(_B._vue,"" + _B._id + "image",_B._eventhandler).setalt(_txt).setmenutrigger(true);
// [40]  avt.SetValue(imgURL) 
_avt.setvalue(_imgurl);
// [41]  avt.Pop(Menu) 
_avt.pop(_B._menu);
// [42]  SetDirectionBottomEnd(True) 
_B.setdirectionbottomend(true,_B);
// [43]  SetAlignTrigger(True) 
_B.setaligntrigger(true,_B);
// [44]  Return Me 
return _B;
// End Sub
};

// [48] Sub SetButton(iconName As String, text As String) As VMMenu 
_B.setbutton=function(_iconname,_text) {
var _btn;
// [49]  If text = {9} Then Return Me 
if (_text=="") { return _B;}
// [50]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [51]  btn.Initialize(vue, {3} ,eventHandler).SetMenuTrigger(True) 
_btn.initialize(_B._vue,"" + _B._id + "button",_B._eventhandler).setmenutrigger(true);
// [52]  If iconName <> {10} Then 
if (_iconname!="") {
// [53]  btn.SetIcon(iconName) 
_btn.seticon(_iconname);
// [54]  End If 
}
// [55]  btn.SetText(text) 
_btn.settext(_text);
// [56]  btn.Pop(Menu) 
_btn.pop(_B._menu);
// [57]  Return Me 
return _B;
// End Sub
};

// [61] Sub AddMenuItem(itemID As String, iconName As String, itemText As String) 
_B.addmenuitem=function(_itemid,_iconname,_itemtext) {
// [62]  AddIconText(itemID, iconName, itemText) 
_B.addicontext(_itemid,_iconname,_itemtext,_B);
// End Sub
};

// [66] Sub AddIconText(itemID As String, iconName As String, Text As String) 
_B.addicontext=function(_itemid,_iconname,_text) {
var _mi,_icn,_span;
// [67]  Dim mi As VMMenuItem 
_mi= new banano_bananovuematerial_vmmenuitem();
// [68]  mi.Initialize(vue,itemID, eventHandler) 
_mi.initialize(_B._vue,_itemid,_B._eventhandler);
// [70]  If iconName <> {11} Then 
if (_iconname!="") {
// [71]  Dim icn As VMIcon 
_icn= new banano_bananovuematerial_vmicon();
// [72]  icn.Initialize(vue, {4} ).SetText(iconName) 
_icn.initialize(_B._vue,"" + _itemid + "icon").settext(_iconname);
// [73]  icn.Pop(mi.MenuItem) 
_icn.pop(_mi._menuitem);
// [74]  End If 
}
// [76]  Dim span As VMElement 
_span= new banano_bananovuematerial_vmelement();
// [77]  span.Initialize(vue, {5} ).SetTag( {12} ).SetText(Text) 
_span.initialize(_B._vue,"" + _itemid + "text").settag("span").settext(_text);
// [78]  span.Pop(mi.MenuItem) 
_span.pop(_mi._menuitem);
// [79]  mi.Pop(MenuContent) 
_mi.pop(_B._menucontent);
// [80]  MenuContent.hasContent = True 
_B._menucontent._hascontent=true;
// End Sub
};

// [85] Sub ToString As String 
_B.tostring=function() {
// [86]  If MenuContent.hasContent Then MenuContent.Pop(Menu) 
if (_B._menucontent._hascontent) {_B._menucontent.pop(_B._menu);}
// [87]  Return Menu.ToString 
return _B._menu.tostring();
// End Sub
};

// [90] Sub SetVModel(k As String) As VMMenu 
_B.setvmodel=function(_k) {
// [91]  Menu.SetVModel(k) 
_B._menu.setvmodel(_k);
// [92]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetVIf(vif As Object) As VMMenu 
_B.setvif=function(_vif) {
// [96]  Menu.SetVIf(vif) 
_B._menu.setvif(_vif);
// [97]  Return Me 
return _B;
// End Sub
};

// [100] Sub SetVShow(vif As Object) As VMMenu 
_B.setvshow=function(_vif) {
// [101]  Menu.SetVShow(vif) 
_B._menu.setvshow(_vif);
// [102]  Return Me 
return _B;
// End Sub
};

// [105] Sub SetActiveSync(v As String) As VMMenu 
_B.setactivesync=function(_v) {
// [106]  Menu.SetActiveSync(v) 
_B._menu.setactivesync(_v);
// [107]  bActive = True 
_B._bactive=true;
// [108]  Return Me 
return _B;
// End Sub
};

// [112] Sub Render 
_B.render=function() {
// [113]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [117] Sub AddChild(child As VMElement) As VMMenu 
_B.addchild=function(_child) {
var _childhtml;
// [118]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [119]  Menu.SetText(childHTML) 
_B._menu.settext(_childhtml);
// [120]  Return Me 
return _B;
// End Sub
};

// [124] Sub SetText(t As Object) As VMMenu 
_B.settext=function(_t) {
// [125]  Menu.SetText(t) 
_B._menu.settext(_t);
// [126]  Return Me 
return _B;
// End Sub
};

// [129] Sub SetPrimary(b As Boolean) As VMMenu 
_B.setprimary=function(_b) {
// [130]  Menu.SetPrimary(True) 
_B._menu.setprimary(true);
// [131]  Return Me 
return _B;
// End Sub
};

// [134] Sub SetAccent(b As Boolean) As VMMenu 
_B.setaccent=function(_b) {
// [135]  Menu.SetAccent(True) 
_B._menu.setaccent(true);
// [136]  Return Me 
return _B;
// End Sub
};

// [140] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [141]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [145] Sub AddClass(c As String) As VMMenu 
_B.addclass=function(_c) {
// [146]  Menu.AddClass(c) 
_B._menu.addclass(_c);
// [147]  Return Me 
return _B;
// End Sub
};

// [151] Sub SetAttr(attr As Map) As VMMenu 
_B.setattr=function(_attr) {
// [152]  Menu.SetAttr(attr) 
_B._menu.setattr(_attr);
// [153]  Return Me 
return _B;
// End Sub
};

// [157] Sub SetStyle(sm As Map) As VMMenu 
_B.setstyle=function(_sm) {
// [158]  Menu.SetStyle(sm) 
_B._menu.setstyle(_sm);
// [159]  Return Me 
return _B;
// End Sub
};

// [163] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [164]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [165]  AddChild(childx) 
_B.addchild(_childx,_B);
// [166]  Next 
}
// End Sub
};

// [170] Sub SetPadding(p As Object) As VMMenu 
_B.setpadding=function(_p) {
// [171]  Menu.SetPaddingAll(p) 
_B._menu.setpaddingall(_p);
// [172]  Return Me 
return _B;
// End Sub
};

// [176] Sub SetActive(varActive As Object) As VMMenu 
_B.setactive=function(_varactive) {
// [177]  SetAttr(CreateMap( {13} : varActive)) 
_B.setattr({"md-active":_varactive},_B);
// [178]  Return Me 
return _B;
// End Sub
};

// [182] Sub SetCloseOnClick(varCloseOnClick As Boolean) As VMMenu 
_B.setcloseonclick=function(_varcloseonclick) {
// [183]  SetAttr(CreateMap( {14} : varCloseOnClick)) 
_B.setattr({":md-close-on-click":_varcloseonclick},_B);
// [184]  Return Me 
return _B;
// End Sub
};

// [188] Sub SetCloseOnSelect(varCloseOnSelect As Boolean) As VMMenu 
_B.setcloseonselect=function(_varcloseonselect) {
// [189]  SetAttr(CreateMap( {15} : varCloseOnSelect)) 
_B.setattr({":md-close-on-select":_varcloseonselect},_B);
// [190]  Return Me 
return _B;
// End Sub
};

// [194] Sub SetDirection(varDirection As Object) As VMMenu 
_B.setdirection=function(_vardirection) {
// [195]  SetAttr(CreateMap( {16} : varDirection)) 
_B.setattr({"md-direction":_vardirection},_B);
// [196]  Return Me 
return _B;
// End Sub
};

// [200] Sub SetDirectionBottomStart(b As Boolean) As VMMenu 'ignore 
_B.setdirectionbottomstart=function(_b) {
// [201]  SetAttr(CreateMap( {17} : {18} )) 
_B.setattr({"md-direction":"bottom-start"},_B);
// [202]  Return Me 
return _B;
// End Sub
};

// [206] Sub SetDirectionBottomEnd(b As Boolean) As VMMenu 'ignore 
_B.setdirectionbottomend=function(_b) {
// [207]  SetAttr(CreateMap( {19} : {20} )) 
_B.setattr({"md-direction":"bottom-end"},_B);
// [208]  Return Me 
return _B;
// End Sub
};

// [212] Sub SetDirectionTopStart(b As Boolean) As VMMenu 'ignore 
_B.setdirectiontopstart=function(_b) {
// [213]  SetAttr(CreateMap( {21} : {22} )) 
_B.setattr({"md-direction":"top-start"},_B);
// [214]  Return Me 
return _B;
// End Sub
};

// [218] Sub SetDirectionTopEnd(b As Boolean) As VMMenu 'ignore 
_B.setdirectiontopend=function(_b) {
// [219]  SetAttr(CreateMap( {23} : {24} )) 
_B.setattr({"md-direction":"top-end"},_B);
// [220]  Return Me 
return _B;
// End Sub
};

// [224] Sub SetAlignTrigger(varAlignTrigger As Object) As VMMenu 
_B.setaligntrigger=function(_varaligntrigger) {
// [225]  SetAttr(CreateMap( {25} : varAlignTrigger)) 
_B.setattr({"md-align-trigger":_varaligntrigger},_B);
// [226]  Return Me 
return _B;
// End Sub
};

// [230] Sub SetOffsetX(varOffsetX As Object) As VMMenu 
_B.setoffsetx=function(_varoffsetx) {
// [231]  SetAttr(CreateMap( {26} : varOffsetX)) 
_B.setattr({"md-offset-x":_varoffsetx},_B);
// [232]  Return Me 
return _B;
// End Sub
};

// [236] Sub SetOffsetY(varOffsetY As Object) As VMMenu 
_B.setoffsety=function(_varoffsety) {
// [237]  SetAttr(CreateMap( {27} : varOffsetY)) 
_B.setattr({"md-offset-y":_varoffsety},_B);
// [238]  Return Me 
return _B;
// End Sub
};

// [242] Sub SetSize(varSize As Object) As VMMenu 
_B.setsize=function(_varsize) {
// [243]  SetAttr(CreateMap( {28} : varSize)) 
_B.setattr({"md-size":_varsize},_B);
// [244]  Return Me 
return _B;
// End Sub
};

// [248] Sub SetSizeSmall(b As Boolean) As VMMenu 'ignore 
_B.setsizesmall=function(_b) {
// [249]  SetAttr(CreateMap( {29} : {30} )) 
_B.setattr({"md-size":"small"},_B);
// [250]  Return Me 
return _B;
// End Sub
};

// [254] Sub SetSizeMedium(b As Boolean) As VMMenu 'ignore 
_B.setsizemedium=function(_b) {
// [255]  SetAttr(CreateMap( {31} : {32} )) 
_B.setattr({"md-size":"medium"},_B);
// [256]  Return Me 
return _B;
// End Sub
};

// [260] Sub SetSizeBig(b As Boolean) As VMMenu 'ignore 
_B.setsizebig=function(_b) {
// [261]  SetAttr(CreateMap( {33} : {34} )) 
_B.setattr({"md-size":"big"},_B);
// [262]  Return Me 
return _B;
// End Sub
};

// [266] Sub SetSizeHuge(b As Boolean) As VMMenu 'ignore 
_B.setsizehuge=function(_b) {
// [267]  SetAttr(CreateMap( {35} : {36} )) 
_B.setattr({"md-size":"huge"},_B);
// [268]  Return Me 
return _B;
// End Sub
};

// [272] Sub SetSizeAuto(b As Boolean) As VMMenu 'ignore 
_B.setsizeauto=function(_b) {
// [273]  SetAttr(CreateMap( {37} : {38} )) 
_B.setattr({"md-size":"auto"},_B);
// [274]  Return Me 
return _B;
// End Sub
};

// [279] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [280]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMMenuItem  =========================== */
function banano_bananovuematerial_vmmenuitem() {
var _B=this;
_B._menuitem= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMMenuItem 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  MenuItem.Initialize(v, ID) 
_B._menuitem.initialize(_v,_B._id);
// [14]  MenuItem.SetTag( {1} ) 
_B._menuitem.settag("md-menu-item");
// [15]  module = eventHandler 
_B._module=_eventhandler;
// [16]  MenuItem.SetOnClick(module, {0} ) 
_B._menuitem.setonclick(_B._module,"" + _B._id + "_click");
// [17]  vue = v 
_B._vue=_v;
// [18]  Return Me 
return _B;
// End Sub
};

// [21] Sub SetKey(k As Object, bind As Boolean) As VMMenuItem 
_B.setkey=function(_k,_bind) {
// [22]  MenuItem.SetKey(k, bind) 
_B._menuitem.setkey(_k,_bind);
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetID(n As String, bind As Boolean) As VMMenuItem 
_B.setid=function(_n,_bind) {
// [27]  MenuItem.SetID(n, bind) 
_B._menuitem.setid(_n,_bind);
// [28]  Return Me 
return _B;
// End Sub
};

// [32] Sub ToString As String 
_B.tostring=function() {
// [33]  Return MenuItem.ToString 
return _B._menuitem.tostring();
// End Sub
};

// [36] Sub SetVModel(k As String) As VMMenuItem 
_B.setvmodel=function(_k) {
// [37]  MenuItem.SetVModel(k) 
_B._menuitem.setvmodel(_k);
// [38]  Return Me 
return _B;
// End Sub
};

// [41] Sub SetVIf(vif As Object) As VMMenuItem 
_B.setvif=function(_vif) {
// [42]  MenuItem.SetVIf(vif) 
_B._menuitem.setvif(_vif);
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetVShow(vif As Object) As VMMenuItem 
_B.setvshow=function(_vif) {
// [47]  MenuItem.SetVShow(vif) 
_B._menuitem.setvshow(_vif);
// [48]  Return Me 
return _B;
// End Sub
};

// [52] Sub Render 
_B.render=function() {
// [53]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [57] Sub AddChild(child As VMElement) As VMMenuItem 
_B.addchild=function(_child) {
var _childhtml;
// [58]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [59]  MenuItem.SetText(childHTML) 
_B._menuitem.settext(_childhtml);
// [60]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetText(t As Object) As VMMenuItem 
_B.settext=function(_t) {
// [65]  MenuItem.SetText(t) 
_B._menuitem.settext(_t);
// [66]  Return Me 
return _B;
// End Sub
};

// [69] Sub SetPrimary(b As Boolean) As VMMenuItem 
_B.setprimary=function(_b) {
// [70]  MenuItem.SetPrimary(True) 
_B._menuitem.setprimary(true);
// [71]  Return Me 
return _B;
// End Sub
};

// [74] Sub SetAccent(b As Boolean) As VMMenuItem 
_B.setaccent=function(_b) {
// [75]  MenuItem.SetAccent(True) 
_B._menuitem.setaccent(true);
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [81]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [85] Sub AddClass(c As String) As VMMenuItem 
_B.addclass=function(_c) {
// [86]  MenuItem.AddClass(c) 
_B._menuitem.addclass(_c);
// [87]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetAttr(attr As Map) As VMMenuItem 
_B.setattr=function(_attr) {
// [92]  MenuItem.SetAttr(attr) 
_B._menuitem.setattr(_attr);
// [93]  Return Me 
return _B;
// End Sub
};

// [97] Sub SetStyle(sm As Map) As VMMenuItem 
_B.setstyle=function(_sm) {
// [98]  MenuItem.SetStyle(sm) 
_B._menuitem.setstyle(_sm);
// [99]  Return Me 
return _B;
// End Sub
};

// [103] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [104]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [105]  AddChild(childx) 
_B.addchild(_childx,_B);
// [106]  Next 
}
// End Sub
};

// [110] Sub SetPadding(p As Object) As VMMenuItem 
_B.setpadding=function(_p) {
// [111]  MenuItem.SetPaddingAll(p) 
_B._menuitem.setpaddingall(_p);
// [112]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMPDF  =========================== */
function banano_bananovuematerial_vmpdf() {
var _B=this;
_B._pdf= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._dockey="";

_B._docvisible="";

_B._options={};

_B._jq=null;

// [14] Public Sub Initialize(v As BANanoVue, sid As String, URL As String) 
_B.initialize=function(_v,_sid,_url) {
// [15]  options.Initialize 
_B._options={};
// [16]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [17]  vue = v 
_B._vue=_v;
// [18]  JQ = vue.jquery 
_B._jq=_B._vue._jquery;
// [19]  PDF.Initialize(vue, sid) 
_B._pdf.initialize(_B._vue,_sid);
// [20]  PDF.SetTag( {3} ) 
_B._pdf.settag("iframe");
// [21]  PDF.SetAttr(CreateMap( {4} : {5} )) 
_B._pdf.setattr({"type":"application/pdf"});
// [22]  PDF.SetAttr(CreateMap( {6} : {7} )) 
_B._pdf.setattr({"frameborder":"0"});
// [23]  PDF.SetAttr(CreateMap( {8} : {9} )) 
_B._pdf.setattr({"scrolling":"no"});
// [24]  PDF.SetAttr(CreateMap( {10} :True)) 
_B._pdf.setattr({"allowfullscreen":true});
// [25]  SetURL(URL) 
_B.seturl(_url,_B);
// [26]  docVisible = {0} 
_B._docvisible="" + _B._id + "visible";
// [27]  SetVIf(docVisible) 
_B.setvif(_B._docvisible,_B);
// [28]  SetVisible(True) 
_B.setvisible(true,_B);
// [29]  SetWidth( {11} ) 
_B.setwidth("100%",_B);
// [30]  SetHeight( {12} ) 
_B.setheight("80vh",_B);
// End Sub
};

// [34] Sub SetWidth(w As String) As VMPDF 
_B.setwidth=function(_w) {
// [35]  PDF.SetStyle(CreateMap( {13} :w & {14} )) 
_B._pdf.setstyle({"width":_w+" !important"});
// [36]  options.Put( {15} , w) 
_B._options["width"]=_w;
// [37]  Return Me 
return _B;
// End Sub
};

// [41] Sub SetHeight(h As String) As VMPDF 
_B.setheight=function(_h) {
// [42]  PDF.SetStyle(CreateMap( {16} :h & {17} )) 
_B._pdf.setstyle({"height":_h+" !important"});
// [43]  options.Put( {18} , h) 
_B._options["height"]=_h;
// [44]  Return Me 
return _B;
// End Sub
};

// [47] Sub SetElevation(e As Int) As VMPDF 
_B.setelevation=function(_e) {
// [48]  PDF.SetElevation(e) 
_B._pdf.setelevation(_e);
// [49]  Return Me 
return _B;
// End Sub
};

// [52] Sub SetVisible(b As Boolean) 
_B.setvisible=function(_b) {
// [53]  vue.SetStateSingle(docVisible, b) 
_B._vue.setstatesingle(_B._docvisible,_b);
// End Sub
};

// [56] Sub SetVIf(vif As Object) As VMPDF 
_B.setvif=function(_vif) {
// [57]  PDF.SetVIf(vif) 
_B._pdf.setvif(_vif);
// [58]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetVShow(vif As Object) As VMPDF 
_B.setvshow=function(_vif) {
// [62]  PDF.SetVShow(vif) 
_B._pdf.setvshow(_vif);
// [63]  Return Me 
return _B;
// End Sub
};

// [66] Sub SetURL(url As String) 
_B.seturl=function(_url) {
// [67]  docKey = {1} 
_B._dockey="" + _B._id + "doc";
// [68]  vue.SetStateSingle(docKey, url) 
_B._vue.setstatesingle(_B._dockey,_url);
// [69]  PDF.SetAttr(CreateMap( {19} :docKey)) 
_B._pdf.setattr({":src":_B._dockey});
// End Sub
};

// [73] Sub SetURL1(url As String) 
_B.seturl1=function(_url) {
var _ikey;
// [74]  Dim iKey As String = {2} 
_ikey="#" + _B._id + "";
// [75]  BANano.GetElement(iKey).SetAttr( {20} , url).AddClass( {21} ) 
u(_ikey).attr("href",_url).addClass("media");
// [76]  JQ.Selector(iKey).RunMethod( {22} , options) 
_B._jq(_ikey)["media"](_B._options);
// End Sub
};

// [79] Sub ToString As String 
_B.tostring=function() {
// [80]  Return PDF.tostring 
return _B._pdf.tostring();
// End Sub
};

// [83] Sub Render 
_B.render=function() {
// [84]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [87] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [88]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMPrettyPrint  =========================== */
function banano_bananovuematerial_vmprettyprint() {
var _B=this;
_B._pp= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._codename="";

_B._codevisible="";

_B._codeel= new banano_bananovuematerial_vmelement();

// [13] Public Sub Initialize(v As BANanoVue, sid As String, lang As String) As VMPrettyPrint 
_B.initialize=function(_v,_sid,_lang) {
// [14]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [15]  PP.Initialize(v, ID).SetTag( {4} ).AddClass( {5} ).AddClass( {6} ) 
_B._pp.initialize(_v,_B._id).settag("pre").addclass("prettyprint").addclass("linenums");
// [16]  vue = v 
_B._vue=_v;
// [17]  PP.SetStyle(CreateMap( {7} : {8} , {9} : {10} )) 
_B._pp.setstyle({"width":"100% !important", "height":"80vh !important"});
// [19]  codeName = {0} 
_B._codename="" + _B._id + "code";
// [20]  CodeEL.Initialize(v, codeName).SetTag( {11} ) 
_B._codeel.initialize(_v,_B._codename).settag("code");
// [21]  CodeEL.SetText( {1} ) 
_B._codeel.settext("{{ " + _B._codename + " }}");
// [22]  CodeEL.AddClass( {12} ).AddClass( {13} ) 
_B._codeel.addclass("col s12").addclass("prettyprint");
// [23]  CodeEL.AddClass( {2} ) 
_B._codeel.addclass("language-" + _lang + "");
// [25]  codevisible = {3} 
_B._codevisible="" + _B._id + "visible";
// [26]  SetVIf(codevisible) 
_B.setvif(_B._codevisible,_B);
// [27]  SetVisible(True) 
_B.setvisible(true,_B);
// [28]  SetText( {14} ) 
_B.settext("",_B);
// [29]  Return Me 
return _B;
// End Sub
};

// [32] Sub SetElevation(e As Int) As VMPrettyPrint 
_B.setelevation=function(_e) {
// [33]  PP.SetElevation(e) 
_B._pp.setelevation(_e);
// [34]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetVisible(b As Boolean) 
_B.setvisible=function(_b) {
// [38]  vue.SetStateSingle(codevisible, b) 
_B._vue.setstatesingle(_B._codevisible,_b);
// End Sub
};

// [41] Sub SetVIf(vif As String) As VMPrettyPrint 
_B.setvif=function(_vif) {
// [42]  PP.SetVIf(vif) 
_B._pp.setvif(_vif);
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetVShow(vif As String) As VMPrettyPrint 
_B.setvshow=function(_vif) {
// [47]  PP.SetVShow(vif) 
_B._pp.setvshow(_vif);
// [48]  Return Me 
return _B;
// End Sub
};

// [52] Sub SetText(sText As String) As VMPrettyPrint 
_B.settext=function(_stext) {
// [53]  vue.SetStateSingle(codeName, sText) 
_B._vue.setstatesingle(_B._codename,_stext);
// [54]  Return Me 
return _B;
// End Sub
};

// [57] Sub Refresh 
_B.refresh=function() {
var _pr;
// [58]  Dim PR As BANanoObject 
_pr=null;
// [59]  PR.Initialize( {15} ) 
_pr=PR;
// [60]  PR.RunMethod( {16} , Null) 
_pr["prettyPrint"]();
// End Sub
};

// [64] Sub ToString As String 
_B.tostring=function() {
// [65]  PP.AddElement(CodeEL) 
_B._pp.addelement(_B._codeel);
// [66]  Return PP.ToString 
return _B._pp.tostring();
// End Sub
};

// [70] Sub Render 
_B.render=function() {
// [71]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [75] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [76]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [80] Sub AddClass(c As String) As VMPrettyPrint 
_B.addclass=function(_c) {
// [81]  PP.AddClass(c) 
_B._pp.addclass(_c);
// [82]  Return Me 
return _B;
// End Sub
};

// [86] Sub SetAttr(attr As Map) As VMPrettyPrint 
_B.setattr=function(_attr) {
// [87]  PP.SetAttr(attr) 
_B._pp.setattr(_attr);
// [88]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetStyle(sm As Map) As VMPrettyPrint 
_B.setstyle=function(_sm) {
// [93]  PP.SetStyle(sm) 
_B._pp.setstyle(_sm);
// [94]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetPadding(p As Object) As VMPrettyPrint 
_B.setpadding=function(_p) {
// [99]  PP.SetPaddingAll(p) 
_B._pp.setpaddingall(_p);
// [100]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMProgress  =========================== */
function banano_bananovuematerial_vmprogress() {
var _B=this;
_B._progress= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

_B._bindvalue="";

_B._buffervalue="";

// [12] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMProgress 
_B.initialize=function(_v,_sid,_eventhandler) {
// [13]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [14]  vue = v 
_B._vue=_v;
// [15]  Progress.Initialize(vue, ID).SetTag( {2} ) 
_B._progress.initialize(_B._vue,_B._id).settag("md-progress-bar");
// [16]  module = eventHandler 
_B._module=_eventhandler;
// [17]  bindvalue = {0} 
_B._bindvalue="" + _B._id + "value";
// [18]  buffervalue = {1} 
_B._buffervalue="" + _B._id + "buffer";
// [19]  SetValue(Null) 
_B.setvalue(null,_B);
// [20]  SetBuffer(Null) 
_B.setbuffer(null,_B);
// [21]  Return Me 
return _B;
// End Sub
};

// [24] Sub SetStyle(m As Map) As VMProgress 
_B.setstyle=function(_m) {
// [25]  Progress.SetStyle(m) 
_B._progress.setstyle(_m);
// [26]  Return Me 
return _B;
// End Sub
};

// [29] Sub SetMargin(p As String) As VMProgress 
_B.setmargin=function(_p) {
// [30]  Progress.SetStyle(CreateMap( {3} :p)) 
_B._progress.setstyle({"margin":_p});
// [31]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetPadding(p As String) As VMProgress 
_B.setpadding=function(_p) {
// [35]  Progress.SetStyle(CreateMap( {4} :p)) 
_B._progress.setstyle({"padding":_p});
// [36]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetMode(varMode As String) As VMProgress 
_B.setmode=function(_varmode) {
// [41]  Progress.SetAttr1( {5} , varMode) 
_B._progress.setattr1("md-mode",_varmode);
// [42]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetModeDeterminate(b As Boolean) As VMProgress 
_B.setmodedeterminate=function(_b) {
// [46]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [47]  SetMode( {6} ) 
_B.setmode("determinate",_B);
// [48]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetModeInDeterminate(b As Boolean) As VMProgress 
_B.setmodeindeterminate=function(_b) {
// [52]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [53]  SetMode( {7} ) 
_B.setmode("indeterminate",_B);
// [54]  Return Me 
return _B;
// End Sub
};

// [57] Sub SetModeQuery(b As Boolean) As VMProgress 
_B.setmodequery=function(_b) {
// [58]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [59]  SetMode( {8} ) 
_B.setmode("query",_B);
// [60]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetModeBuffer(b As Boolean) As VMProgress 
_B.setmodebuffer=function(_b) {
// [65]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [66]  SetMode( {9} ) 
_B.setmode("buffer",_B);
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetBuffer(bValue As Int) As VMProgress 
_B.setbuffer=function(_bvalue) {
// [71]  vue.SetStateSingle(buffervalue, bValue) 
_B._vue.setstatesingle(_B._buffervalue,_bvalue);
// [72]  Progress.SetAttr1( {10} , buffervalue) 
_B._progress.setattr1(":md-buffer",_B._buffervalue);
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub SetTabIndex(ti As String) As VMProgress 
_B.settabindex=function(_ti) {
// [77]  Progress.SetTabIndex(ti) 
_B._progress.settabindex(_ti);
// [78]  Return Me 
return _B;
// End Sub
};

// [81] Sub SetVShow(vshow As String) As VMProgress 
_B.setvshow=function(_vshow) {
// [82]  Progress.SetVShow(vshow) 
_B._progress.setvshow(_vshow);
// [83]  Return Me 
return _B;
// End Sub
};

// [86] Sub SetVIf(vshow As String) As VMProgress 
_B.setvif=function(_vshow) {
// [87]  Progress.SetVif(vshow) 
_B._progress.setvif(_vshow);
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetPrimary(b As Boolean) As VMProgress 
_B.setprimary=function(_b) {
// [92]  Progress.SetPrimary(b) 
_B._progress.setprimary(_b);
// [93]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetAccent(b As Boolean) As VMProgress 
_B.setaccent=function(_b) {
// [97]  Progress.SetAccent(b) 
_B._progress.setaccent(_b);
// [98]  Return Me 
return _B;
// End Sub
};

// [102] Sub SetName(varName As Object, bind As Boolean) As VMProgress 
_B.setname=function(_varname,_bind) {
// [103]  Progress.SetName(varName, bind) 
_B._progress.setname(_varname,_bind);
// [104]  Return Me 
return _B;
// End Sub
};

// [108] Sub SetValue(valueInt As Int) As VMProgress 
_B.setvalue=function(_valueint) {
// [109]  Progress.SetAttr1( {11} , bindvalue) 
_B._progress.setattr1(":md-value",_B._bindvalue);
// [110]  vue.SetStateSingle(bindvalue, valueInt) 
_B._vue.setstatesingle(_B._bindvalue,_valueint);
// [111]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetDisabled(b As Boolean) As VMProgress 
_B.setdisabled=function(_b) {
// [115]  Progress.SetDisabled(b) 
_B._progress.setdisabled(_b);
// [116]  Return Me 
return _B;
// End Sub
};

// [120] Sub AddClass(c As String) As VMProgress 
_B.addclass=function(_c) {
// [121]  Progress.AddClass(c) 
_B._progress.addclass(_c);
// [122]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetAttr(attr As Map) As VMProgress 
_B.setattr=function(_attr) {
// [127]  Progress.SetAttr(attr) 
_B._progress.setattr(_attr);
// [128]  Return Me 
return _B;
// End Sub
};

// [131] Sub ToString As String 
_B.tostring=function() {
// [132]  Return Progress.tostring 
return _B._progress.tostring();
// End Sub
};

// [135] Sub Render 
_B.render=function() {
// [136]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [139] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [140]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [143] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [144]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMProgressCircle  =========================== */
function banano_bananovuematerial_vmprogresscircle() {
var _B=this;
_B._progresscircle= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._jq=null;

// [10] Public Sub Initialize(v As BANanoVue, sid As String, Width As String, Height As String) As VMProgressCircle 
_B.initialize=function(_v,_sid,_width,_height) {
// [11]  BANano.DependsOnAsset( {1} ) 
;
// [12]  BANano.DependsOnAsset( {2} ) 
;
// [14]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [15]  vue = v 
_B._vue=_v;
// [16]  JQ = vue.jquery 
_B._jq=_B._vue._jquery;
// [17]  ProgressCircle.Initialize(vue, ID).SetTag( {3} ) 
_B._progresscircle.initialize(_B._vue,_B._id).settag("div");
// [18]  ProgressCircle.AddClass(ID) 
_B._progresscircle.addclass(_B._id);
// [19]  Width = ProgressCircle.MakePx(Width) 
_width=_B._progresscircle.makepx(_width);
// [20]  Height = ProgressCircle.MakePx(Height) 
_height=_B._progresscircle.makepx(_height);
// [21]  ProgressCircle.SetWidth(Width).SetHeight(Height) 
_B._progresscircle.setwidth(_width).setheight(_height);
// [22]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetDisabled(b As Boolean) As VMProgressCircle 
_B.setdisabled=function(_b) {
// [27]  ProgressCircle.SetDisabled(b) 
_B._progresscircle.setdisabled(_b);
// [28]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetTabIndex(ti As String) As VMProgressCircle 
_B.settabindex=function(_ti) {
// [32]  If ti = {4} Then Return Me 
if (_ti=="") { return _B;}
// [33]  ProgressCircle.SetTabIndex(ti) 
_B._progresscircle.settabindex(_ti);
// [34]  Return Me 
return _B;
// End Sub
};

// [38] Sub SetStyle(sm As Map) As VMProgressCircle 
_B.setstyle=function(_sm) {
// [39]  ProgressCircle.SetStyle(sm) 
_B._progresscircle.setstyle(_sm);
// [40]  Return Me 
return _B;
// End Sub
};

// [43] Sub SetVIf(vif As String) As VMProgressCircle 
_B.setvif=function(_vif) {
// [44]  ProgressCircle.SetVIf(vif) 
_B._progresscircle.setvif(_vif);
// [45]  Return Me 
return _B;
// End Sub
};

// [48] Sub SetID(iID As String, bind As Boolean) As VMProgressCircle 
_B.setid=function(_iid,_bind) {
// [49]  ProgressCircle.SetID(iID,bind) 
_B._progresscircle.setid(_iid,_bind);
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetName(nam As String, bind As Boolean) As VMProgressCircle 
_B.setname=function(_nam,_bind) {
// [54]  ProgressCircle.SetName(nam, bind) 
_B._progresscircle.setname(_nam,_bind);
// [55]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetKey(k As String, bind As Boolean) As VMProgressCircle 
_B.setkey=function(_k,_bind) {
// [59]  ProgressCircle.SetKey(k, bind) 
_B._progresscircle.setkey(_k,_bind);
// [60]  Return Me 
return _B;
// End Sub
};

// [63] Sub SetVShow(vif As String) As VMProgressCircle 
_B.setvshow=function(_vif) {
// [64]  ProgressCircle.SetVShow(vif) 
_B._progresscircle.setvshow(_vif);
// [65]  Return Me 
return _B;
// End Sub
};

// [69] Sub AddClass(c As String) As VMProgressCircle 
_B.addclass=function(_c) {
// [70]  ProgressCircle.AddClass(c) 
_B._progresscircle.addclass(_c);
// [71]  Return Me 
return _B;
// End Sub
};

// [75] Sub SetAttr(attr As Map) As VMProgressCircle 
_B.setattr=function(_attr) {
// [76]  ProgressCircle.SetAttr(attr) 
_B._progresscircle.setattr(_attr);
// [77]  Return Me 
return _B;
// End Sub
};

// [81] Sub ToString As String 
_B.tostring=function() {
// [82]  Return ProgressCircle.tostring 
return _B._progresscircle.tostring();
// End Sub
};

// [85] Sub Render 
_B.render=function() {
// [86]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [89] Sub Pop(px As VMElement) 
_B.pop=function(_px) {
// [90]  px.SetText(ToString) 
_px.settext(_B.tostring(_B));
// End Sub
};

// [93] Sub SetValue(vl As Int) As VMProgressCircle 
_B.setvalue=function(_vl) {
// [94]  ProgressCircle.SetAttr(CreateMap( {5} :vl)) 
_B._progresscircle.setattr({"data-percentage":_vl});
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetLabel(lbl As String) As VMProgressCircle 
_B.setlabel=function(_lbl) {
// [99]  ProgressCircle.SetText(lbl) 
_B._progresscircle.settext(_lbl);
// [100]  Return Me 
return _B;
// End Sub
};

// [104] Sub Refresh 
_B.refresh=function() {
var _loadingele;
// [106]  Dim loadingEle As BANanoObject = JQ.Selector( {0} ) 
_loadingele=_B._jq("#" + _B._id + "");
// [107]  loadingEle.RunMethod( {6} , Null) 
_loadingele["circlechart"]();
// End Sub
};

}
/* =========================== VMPrompt  =========================== */
function banano_bananovuematerial_vmprompt() {
var _B=this;
_B._prompt= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._bactive=false;

_B._module={};

_B._bstatic=false;

// [12] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMPrompt 
_B.initialize=function(_v,_sid,_eventhandler) {
// [13]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [14]  vue = v 
_B._vue=_v;
// [15]  Prompt.Initialize(vue, ID).SetTag( {2} ) 
_B._prompt.initialize(_B._vue,_B._id).settag("md-dialog-prompt");
// [16]  bActive = False 
_B._bactive=false;
// [17]  If ID <> {3} Then 
if (_B._id!="") {
// [18]  SetActiveSync(ID) 
_B.setactivesync(_B._id,_B);
// [19]  End If 
}
// [20]  module = eventHandler 
_B._module=_eventhandler;
// [21]  Prompt.SetOnConfirm(module, {0} ) 
_B._prompt.setonconfirm(_B._module,"" + _B._id + "_ok");
// [22]  Prompt.SetOnCancel(module, {1} ) 
_B._prompt.setoncancel(_B._module,"" + _B._id + "_cancel");
// [23]  bStatic = False 
_B._bstatic=false;
// [24]  SetVModel( {4} ) 
_B.setvmodel("promptvalue",_B);
// [25]  vue.SetStateSingle( {5} ,Null) 
_B._vue.setstatesingle("promptvalue",null);
// [26]  Return Me 
return _B;
// End Sub
};

// [31] Sub Hide 
_B.hide=function() {
var _opt;
// [32]  Dim opt As Map = CreateMap() 
_opt={};
// [33]  opt.Put(ID, False) 
_opt[_B._id]=false;
// [34]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [37] Sub Show 
_B.show=function() {
var _opt;
// [38]  Dim opt As Map = CreateMap() 
_opt={};
// [39]  opt.Put(ID, True) 
_opt[_B._id]=true;
// [40]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [43] Sub SetStatic(b As Boolean) As VMPrompt 
_B.setstatic=function(_b) {
// [44]  bStatic = b 
_B._bstatic=_b;
// [45]  Return Me 
return _B;
// End Sub
};

// [49] Sub AddClass(c As String) As VMPrompt 
_B.addclass=function(_c) {
// [50]  Prompt.AddClass(c) 
_B._prompt.addclass(_c);
// [51]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetAttr(attr As Map) As VMPrompt 
_B.setattr=function(_attr) {
// [56]  Prompt.SetAttr(attr) 
_B._prompt.setattr(_attr);
// [57]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetVModel(k As String) As VMPrompt 
_B.setvmodel=function(_k) {
// [62]  Prompt.SetVModel(k) 
_B._prompt.setvmodel(_k);
// [63]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetInputName(n As Object) As VMPrompt 
_B.setinputname=function(_n) {
// [68]  Prompt.SetAttr(CreateMap( {6} : n)) 
_B._prompt.setattr({"md-input-name":_n});
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetInputID(n As Object) As VMPrompt 
_B.setinputid=function(_n) {
// [73]  Prompt.SetAttr(CreateMap( {7} : n)) 
_B._prompt.setattr({"md-input-id":_n});
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SetMaxLength(ml As Int) As VMPrompt 
_B.setmaxlength=function(_ml) {
// [78]  If ml < 0 Then Return Me 
if (_ml<0) { return _B;}
// [79]  If bStatic Then 
if (_B._bstatic) {
// [80]  Prompt.SetAttr(CreateMap( {8} : ml)) 
_B._prompt.setattr({"md-input-maxlength":_ml});
// [81]  Return Me 
return _B;
// [82]  End If 
}
// [83]  vue.SetState(CreateMap( {9} :ml)) 
_B._vue.setstate({"promptmaxlength":_ml});
// [84]  Prompt.SetAttr(CreateMap( {10} : {11} )) 
_B._prompt.setattr({":md-input-maxlength":"promptmaxlength"});
// [85]  Return Me 
return _B;
// End Sub
};

// [88] Sub SetPlaceHolder(ph As String) As VMPrompt 
_B.setplaceholder=function(_ph) {
// [89]  If bStatic Then 
if (_B._bstatic) {
// [90]  Prompt.SetAttr(CreateMap( {12} : ph)) 
_B._prompt.setattr({"md-input-placeholder":_ph});
// [91]  Return Me 
return _B;
// [92]  End If 
}
// [93]  vue.SetState(CreateMap( {13} :ph)) 
_B._vue.setstate({"promptplaceholder":_ph});
// [94]  Prompt.SetAttr(CreateMap( {14} : {15} )) 
_B._prompt.setattr({":md-input-placeholder":"promptplaceholder"});
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetCancelText(c As String) As VMPrompt 
_B.setcanceltext=function(_c) {
// [99]  If bStatic Then 
if (_B._bstatic) {
// [100]  Prompt.SetAttr(CreateMap( {16} : c)) 
_B._prompt.setattr({"md-cancel-text":_c});
// [101]  Return Me 
return _B;
// [102]  End If 
}
// [103]  vue.SetState(CreateMap( {17} :c)) 
_B._vue.setstate({"promptcanceltext":_c});
// [104]  Prompt.SetAttr(CreateMap( {18} : {19} )) 
_B._prompt.setattr({":md-cancel-text":"promptcanceltext"});
// [105]  Return Me 
return _B;
// End Sub
};

// [108] private Sub SetActiveSync(a As Object) As VMPrompt 
_B.setactivesync=function(_a) {
// [109]  Prompt.SetActiveSync(a) 
_B._prompt.setactivesync(_a);
// [110]  bActive = True 
_B._bactive=true;
// [111]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetContent(c As String) As VMPrompt 
_B.setcontent=function(_c) {
// [115]  If bStatic Then 
if (_B._bstatic) {
// [116]  Prompt.SetAttr(CreateMap( {20} : c)) 
_B._prompt.setattr({"md-content":_c});
// [117]  Return Me 
return _B;
// [118]  End If 
}
// [119]  vue.SetState(CreateMap( {21} :c)) 
_B._vue.setstate({"promptcontent":_c});
// [120]  Prompt.SetAttr(CreateMap( {22} : {23} )) 
_B._prompt.setattr({":md-content":"promptcontent"});
// [121]  Return Me 
return _B;
// End Sub
};

// [124] Sub SetConfirmText(t As String) As VMPrompt 
_B.setconfirmtext=function(_t) {
// [125]  If bStatic Then 
if (_B._bstatic) {
// [126]  Prompt.SetAttr(CreateMap( {24} :t)) 
_B._prompt.setattr({"md-confirm-text":_t});
// [127]  Return Me 
return _B;
// [128]  End If 
}
// [129]  vue.SetState(CreateMap( {25} :t)) 
_B._vue.setstate({"promptconfirmtext":_t});
// [130]  Prompt.SetAttr(CreateMap( {26} : {27} )) 
_B._prompt.setattr({":md-confirm-text":"promptconfirmtext"});
// [131]  Return Me 
return _B;
// End Sub
};

// [134] Sub SetTitle(t As String) As VMPrompt 
_B.settitle=function(_t) {
// [135]  If bStatic Then 
if (_B._bstatic) {
// [136]  Prompt.SetAttr(CreateMap( {28} :t)) 
_B._prompt.setattr({"md-title":_t});
// [137]  Return Me 
return _B;
// [138]  End If 
}
// [139]  vue.SetState(CreateMap( {29} :t)) 
_B._vue.setstate({"prompttitle":_t});
// [140]  Prompt.SetAttr(CreateMap( {30} : {31} )) 
_B._prompt.setattr({":md-title":"prompttitle"});
// [141]  Return Me 
return _B;
// End Sub
};

// [145] Sub ToString As String 
_B.tostring=function() {
// [146]  Return Prompt.tostring 
return _B._prompt.tostring();
// End Sub
};

// [149] Sub Render 
_B.render=function() {
// [150]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [153] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [154]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMProperty  =========================== */
function banano_bananovuematerial_vmproperty() {
var _B=this;
_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._labels={};

_B._bag= new banano_bananovuematerial_vmelement();

_B._lst= new banano_bananovuematerial_vmlist();

_B._controls={};

_B._eventhandler={};

_B._fields=[];

_B._booleans=[];

_B._strings=[];

_B._integers=[];

_B._doubles=[];

_B._dates=[];

_B._defaults={};

// [24] Public Sub Initialize(v As BANanoVue, module As Object, sid As String) As VMProperty 
_B.initialize=function(_v,_module,_sid) {
// [25]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [26]  vue = v 
_B._vue=_v;
// [27]  vue.SetStateSingle( {7} , True) 
_B._vue.setstatesingle("expandProp",true);
// [28]  eventHandler = module 
_B._eventhandler=_module;
// [29]  fields.Initialize 
_B._fields.length=0;
// [30]  Bag.Initialize(vue, ID) 
_B._bag.initialize(_B._vue,_B._id);
// [31]  Bag.SetKey(ID,False).AddClass( {8} ) 
_B._bag.setkey(_B._id,false).addclass("propertybag");
// [32]  Lst.Initialize(vue, {0} ,module) 
_B._lst.initialize(_B._vue,"" + _B._id + "list",_module);
// [33]  Lst.SetStyle(CreateMap( {9} : {10} , {11} : {12} )) 
_B._lst.setstyle({"width":"100%", "height":"100%"});
// [34]  Lst.SetStyle(CreateMap( {13} : {14} )) 
_B._lst.setstyle({"font-size":"14px"});
// [38]  Lst.isPropertyBag = True 
_B._lst._ispropertybag=true;
// [39]  Lst.SetExpandSingle( {23} ) 
_B._lst.setexpandsingle("expandProp");
// [40]  labels.Initialize 
_B._labels={};
// [41]  controls.Initialize 
_B._controls={};
// [42]  AddHeading( {24} , {25} ) 
_B.addheading("main","Main",_B);
// [43]  Booleans.Initialize 
_B._booleans.length=0;
// [44]  Strings.Initialize 
_B._strings.length=0;
// [45]  Integers.Initialize 
_B._integers.length=0;
// [46]  Doubles.Initialize 
_B._doubles.length=0;
// [47]  defaults.Initialize 
_B._defaults={};
// [48]  Dates.Initialize 
_B._dates.length=0;
// [49]  Return Me 
return _B;
// End Sub
};

// [52] Sub ExpandItem(sid As String, b As Boolean) As VMProperty 
_B.expanditem=function(_sid,_b) {
// [53]  Lst.ExpandItem(sid, b) 
_B._lst.expanditem(_sid,_b);
// [54]  Return Me 
return _B;
// End Sub
};

// [57] Sub SetElevation(e As Int) As VMProperty 
_B.setelevation=function(_e) {
// [58]  Bag.SetElevation(e) 
_B._bag.setelevation(_e);
// [59]  Return Me 
return _B;
// End Sub
};

// [63] Sub AddIntegers(i As List) As VMProperty 
_B.addintegers=function(_i) {
var _s;
// [64]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [65]  Integers.Add(s) 
_B._integers.push(_s);
// [66]  Next 
}
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub AddStrings(i As List) As VMProperty 
_B.addstrings=function(_i) {
var _s;
// [71]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [72]  Strings.Add(s) 
_B._strings.push(_s);
// [73]  Next 
}
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub AddBooleans(i As List) As VMProperty 
_B.addbooleans=function(_i) {
var _s;
// [78]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [79]  Booleans.Add(s) 
_B._booleans.push(_s);
// [80]  Next 
}
// [81]  Return Me 
return _B;
// End Sub
};

// [84] Sub AddDoubles(i As List) As VMProperty 
_B.adddoubles=function(_i) {
var _s;
// [85]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [86]  Doubles.Add(s) 
_B._doubles.push(_s);
// [87]  Next 
}
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub AddDates(i As List) As VMProperty 
_B.adddates=function(_i) {
var _s;
// [92]  For Each s As String In i 
for (var _sindex=0;_sindex<_i.length;_sindex++) {
_s=_i[_sindex];
// [93]  Dates.Add(s) 
_B._dates.push(_s);
// [94]  Next 
}
// [95]  Return Me 
return _B;
// End Sub
};

// [99] Sub setProperties(m As Map) 
_B.setproperties=function(_m) {
// [100]  If Doubles.Size > 0 Then vue.MakeDouble(m, Doubles) 
if (_B._doubles.length>0) {_B._vue.makedouble(_m,_B._doubles);}
// [101]  If Integers.Size > 0 Then vue.MakeInteger(m, Integers) 
if (_B._integers.length>0) {_B._vue.makeinteger(_m,_B._integers);}
// [102]  If Strings.Size > 0 Then vue.MakeTrim(m, Strings) 
if (_B._strings.length>0) {_B._vue.maketrim(_m,_B._strings);}
// [103]  If Dates.Size > 0 Then vue.MakeDate(m, Dates) 
if (_B._dates.length>0) {_B._vue.makedate(_m,_B._dates);}
// [104]  If Booleans.Size > 0 Then vue.MakeBoolean(m, Booleans) 
if (_B._booleans.length>0) {_B._vue.makeboolean(_m,_B._booleans);}
// [105]  vue.SetState(m) 
_B._vue.setstate(_m);
// End Sub
};

// [108] Sub SetVIf(vif As Object) As VMProperty 
_B.setvif=function(_vif) {
// [109]  Bag.SetVIf(vif) 
_B._bag.setvif(_vif);
// [110]  Return Me 
return _B;
// End Sub
};

// [113] Sub SetVShow(vif As Object) As VMProperty 
_B.setvshow=function(_vif) {
// [114]  Bag.SetVShow(vif) 
_B._bag.setvshow(_vif);
// [115]  Return Me 
return _B;
// End Sub
};

// [118] Sub AddSelect(parent As String, vmodel As String, vText As String, sourceName As String, options As Map, sourcefield As String, displayfield As String) 
_B.addselect=function(_parent,_vmodel,_vtext,_sourcename,_options,_sourcefield,_displayfield) {
var _existing,_nc;
// [119]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [120]  If parent = {26} Then parent = {27} 
if (_parent=="") {_parent="main";}
// [121]  Dim existing As List 
_existing=[];
// [122]  If controls.ContainsKey(parent) Then 
if ((_parent in _B._controls)) {
// [123]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [124]  Else 
} else {
// [125]  existing.Initialize 
_existing.length=0;
// [126]  End If 
}
// [128]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [129]  nc.Initialize 
_nc.initialize();
// [130]  nc.vmodel = vmodel 
_nc._vmodel=_vmodel;
// [131]  nc.text = vText 
_nc._text=_vtext;
// [132]  nc.value = {28} 
_nc._value="";
// [133]  nc.typeOf = {29} 
_nc._typeof="select";
// [134]  nc.sourceName = sourceName 
_nc._sourcename=_sourcename;
// [135]  nc.options = options 
_nc._options=_options;
// [136]  nc.sourcefield = sourcefield 
_nc._sourcefield=_sourcefield;
// [137]  nc.displayfield = displayfield 
_nc._displayfield=_displayfield;
// [138]  existing.Add(nc) 
_existing.push(_nc);
// [139]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [140]  fields.Add(vmodel) 
_B._fields.push(_vmodel);
// [141]  Strings.Add(vmodel) 
_B._strings.push(_vmodel);
// [142]  defaults.Put(vmodel, {30} ) 
_B._defaults[_vmodel]="";
// End Sub
};

// [198] Sub SetBorder(b As Boolean) As VMProperty 
_B.setborder=function(_b) {
// [199]  Lst.SetBorder(b) 
_B._lst.setborder(_b);
// [200]  Return Me 
return _B;
// End Sub
};

// [203] Sub SetStyle(m As Map) As VMProperty 
_B.setstyle=function(_m) {
// [204]  Bag.SetStyle(m) 
_B._bag.setstyle(_m);
// [205]  Return Me 
return _B;
// End Sub
};

// [209] Sub getProperties As Map 
_B.getproperties=function() {
var _rec,_k,_v;
// [210]  Dim rec As Map = CreateMap() 
_rec={};
// [211]  For Each k As String In fields 
for (var _kindex=0;_kindex<_B._fields.length;_kindex++) {
_k=_B._fields[_kindex];
// [212]  Dim v As Object = vue.GetState(k, {41} ) 
_v=_B._vue.getstate(_k,"");
// [213]  If v = BANano.UNDEFINED Then v = {42} 
if (_v=='undefined') {_v="";}
// [214]  rec.Put(k, v) 
_rec[_k]=_v;
// [215]  Next 
}
// [216]  If Booleans.Size > 0 Then vue.MakeBoolean(rec, Booleans) 
if (_B._booleans.length>0) {_B._vue.makeboolean(_rec,_B._booleans);}
// [217]  If Doubles.Size > 0 Then vue.MakeDouble(rec, Doubles) 
if (_B._doubles.length>0) {_B._vue.makedouble(_rec,_B._doubles);}
// [218]  If Integers.Size > 0 Then vue.MakeInteger(rec, Integers) 
if (_B._integers.length>0) {_B._vue.makeinteger(_rec,_B._integers);}
// [219]  If Strings.Size > 0 Then vue.MakeTrim(rec, Strings) 
if (_B._strings.length>0) {_B._vue.maketrim(_rec,_B._strings);}
// [220]  Return rec 
return _rec;
// End Sub
};

// [224] Sub Clear 
_B.clear=function() {
var _k;
// [225]  For Each k As String In fields 
for (var _kindex=0;_kindex<_B._fields.length;_kindex++) {
_k=_B._fields[_kindex];
// [226]  vue.SetStateSingle(k, Null) 
_B._vue.setstatesingle(_k,null);
// [227]  Next 
}
// End Sub
};

// [231] Sub getJSON As String 
_B.getjson=function() {
var _them,_sjson;
// [232]  Dim them As Map = getProperties 
_them=_B.getproperties(_B);
// [233]  Dim sjson As String = BANano.ToJson(them) 
_sjson=JSON.stringify(_them);
// [234]  Return sjson 
return _sjson;
// End Sub
};

// [237] Sub AddButton(parent As String, btnID As String, btnText As String, methodName As String) 
_B.addbutton=function(_parent,_btnid,_btntext,_methodname) {
var _existing,_nc;
// [238]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [239]  If parent = {43} Then parent = {44} 
if (_parent=="") {_parent="main";}
// [240]  Dim existing As List 
_existing=[];
// [241]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [243]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [244]  nc.Initialize 
_nc.initialize();
// [245]  nc.vmodel = {45} 
_nc._vmodel="";
// [246]  nc.text = btnText 
_nc._text=_btntext;
// [247]  nc.value = btnID 
_nc._value=_btnid;
// [248]  nc.typeOf = {46} 
_nc._typeof="btn";
// [249]  nc.module = eventHandler 
_nc._module=_B._eventhandler;
// [250]  nc.methodName = methodName 
_nc._methodname=_methodname;
// [251]  existing.Add(nc) 
_existing.push(_nc);
// [252]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// End Sub
};

// [255] Sub AddSlider(parent As String, vmodel As String, Label As String, minValue As Int, maxValue As Int, value As Int) 
_B.addslider=function(_parent,_vmodel,_label,_minvalue,_maxvalue,_value) {
var _existing,_nc;
// [256]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [257]  If parent = {47} Then parent = {48} 
if (_parent=="") {_parent="main";}
// [258]  Dim existing As List 
_existing=[];
// [259]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [261]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [262]  nc.Initialize 
_nc.initialize();
// [263]  nc.vmodel = vmodel 
_nc._vmodel=_vmodel;
// [264]  nc.text = Label 
_nc._text=_label;
// [265]  nc.value = value 
_nc._value=_value;
// [266]  nc.typeOf = {49} 
_nc._typeof="slider";
// [267]  nc.MinValue = minValue 
_nc._minvalue=_minvalue;
// [268]  nc.MaxValue = maxValue 
_nc._maxvalue=_maxvalue;
// [269]  existing.Add(nc) 
_existing.push(_nc);
// [270]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [271]  fields.Add(vmodel) 
_B._fields.push(_vmodel);
// [272]  Integers.Add(vmodel) 
_B._integers.push(_vmodel);
// [273]  defaults.Put(vmodel,value) 
_B._defaults[_vmodel]=_value;
// End Sub
};

// [276] Sub AddNumberInput(parent As String, vmodel As String, Label As String, minValue As Int, maxValue As Int, value As Int) 
_B.addnumberinput=function(_parent,_vmodel,_label,_minvalue,_maxvalue,_value) {
var _existing,_nc;
// [277]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [278]  If parent = {50} Then parent = {51} 
if (_parent=="") {_parent="main";}
// [279]  Dim existing As List 
_existing=[];
// [280]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [282]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [283]  nc.Initialize 
_nc.initialize();
// [284]  nc.vmodel = vmodel 
_nc._vmodel=_vmodel;
// [285]  nc.text = Label 
_nc._text=_label;
// [286]  nc.value = value 
_nc._value=_value;
// [287]  nc.typeOf = {52} 
_nc._typeof="numberinput";
// [288]  nc.MinValue = minValue 
_nc._minvalue=_minvalue;
// [289]  nc.MaxValue = maxValue 
_nc._maxvalue=_maxvalue;
// [290]  existing.Add(nc) 
_existing.push(_nc);
// [291]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [292]  fields.Add(vmodel) 
_B._fields.push(_vmodel);
// [293]  Integers.Add(vmodel) 
_B._integers.push(_vmodel);
// [294]  defaults.Put(vmodel,value) 
_B._defaults[_vmodel]=_value;
// End Sub
};

// [298] Sub AddLabel(parent As String, txt As String) 
_B.addlabel=function(_parent,_txt) {
var _existing,_nc;
// [299]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [300]  If parent = {53} Then parent = {54} 
if (_parent=="") {_parent="main";}
// [301]  Dim existing As List 
_existing=[];
// [302]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [304]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [305]  nc.Initialize 
_nc.initialize();
// [306]  nc.vmodel = {55} 
_nc._vmodel="";
// [307]  nc.text = txt 
_nc._text=_txt;
// [308]  nc.value = {56} 
_nc._value="";
// [309]  nc.typeOf = {57} 
_nc._typeof="lbl";
// [310]  existing.Add(nc) 
_existing.push(_nc);
// [311]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// End Sub
};

// [315] Sub AddHeading(sectName As String, sectHeading As String) As VMProperty 
_B.addheading=function(_sectname,_sectheading) {
var _items;
// [316]  sectName = sectName.tolowercase 
_sectname=_sectname.toLowerCase();
// [317]  labels.Put(sectName, sectHeading) 
_B._labels[_sectname]=_sectheading;
// [319]  Dim items As List 
_items=[];
// [320]  items.Initialize 
_items.length=0;
// [321]  controls.Put(sectName, items) 
_B._controls[_sectname]=_items;
// [322]  Return Me 
return _B;
// End Sub
};

// [325] Sub AddSwitch(parent As String, vModel As String, text As String, bValue As Boolean) 
_B.addswitch=function(_parent,_vmodel,_text,_bvalue) {
var _existing,_nc;
// [326]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [327]  If parent = {58} Then parent = {59} 
if (_parent=="") {_parent="main";}
// [328]  Dim existing As List 
_existing=[];
// [329]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [331]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [332]  nc.Initialize 
_nc.initialize();
// [333]  nc.vmodel = vModel 
_nc._vmodel=_vmodel;
// [334]  nc.text = text 
_nc._text=_text;
// [335]  nc.value = bValue 
_nc._value=_bvalue;
// [336]  nc.typeOf = {60} 
_nc._typeof="swt";
// [337]  existing.Add(nc) 
_existing.push(_nc);
// [338]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [339]  fields.Add(vModel) 
_B._fields.push(_vmodel);
// [340]  Booleans.Add(vModel) 
_B._booleans.push(_vmodel);
// [341]  defaults.Put(vModel,bValue) 
_B._defaults[_vmodel]=_bvalue;
// End Sub
};

// [344] Sub AddIconButton(parent As String, btnID As String, btnIcon As String, methodName As String) 
_B.addiconbutton=function(_parent,_btnid,_btnicon,_methodname) {
var _existing,_nc;
// [345]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [346]  If parent = {61} Then parent = {62} 
if (_parent=="") {_parent="main";}
// [347]  Dim existing As List 
_existing=[];
// [348]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [350]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [351]  nc.Initialize 
_nc.initialize();
// [352]  nc.iconName = btnIcon 
_nc._iconname=_btnicon;
// [353]  nc.value = btnID 
_nc._value=_btnid;
// [354]  nc.typeOf = {63} 
_nc._typeof="btnicon";
// [355]  nc.module = eventHandler 
_nc._module=_B._eventhandler;
// [356]  nc.methodName = methodName 
_nc._methodname=_methodname;
// [357]  existing.Add(nc) 
_existing.push(_nc);
// [358]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// End Sub
};

// [361] Sub AddPassword(parent As String, vModel As String, vText As String, vValue As String) 
_B.addpassword=function(_parent,_vmodel,_vtext,_vvalue) {
// [362]  AddInput(parent, {64} , vModel, vText, {65} , vValue) 
_B.addinput(_parent,"password",_vmodel,_vtext,"",_vvalue,_B);
// [363]  Strings.Add(vModel) 
_B._strings.push(_vmodel);
// End Sub
};

// [366] Sub AddText(parent As String, vModel As String, vText As String, vIcon As String, vValue As String) 
_B.addtext=function(_parent,_vmodel,_vtext,_vicon,_vvalue) {
// [367]  AddInput(parent, {66} , vModel, vText, vIcon, vValue) 
_B.addinput(_parent,"text",_vmodel,_vtext,_vicon,_vvalue,_B);
// [368]  Strings.add(vModel) 
_B._strings.push(_vmodel);
// End Sub
};

// [371] Sub AddTel(parent As String, vModel As String, vText As String, vIcon As String,vValue As String) 
_B.addtel=function(_parent,_vmodel,_vtext,_vicon,_vvalue) {
// [372]  AddInput(parent, {67} , vModel, vText, vIcon, vValue) 
_B.addinput(_parent,"tel",_vmodel,_vtext,_vicon,_vvalue,_B);
// [373]  Integers.add(vModel) 
_B._integers.push(_vmodel);
// End Sub
};

// [376] Sub AddNumber(parent As String, vModel As String, vText As String, vIcon As String, vValue As String) 
_B.addnumber=function(_parent,_vmodel,_vtext,_vicon,_vvalue) {
// [377]  AddInput(parent, {68} , vModel, vText, vIcon, vValue) 
_B.addinput(_parent,"number",_vmodel,_vtext,_vicon,_vvalue,_B);
// [378]  Integers.Add(vModel) 
_B._integers.push(_vmodel);
// End Sub
};

// [381] Sub AddEmail(parent As String, vModel As String, vText As String, vIcon As String, vValue As String) 
_B.addemail=function(_parent,_vmodel,_vtext,_vicon,_vvalue) {
// [382]  AddInput(parent, {69} , vModel, vText, vIcon, vValue) 
_B.addinput(_parent,"email",_vmodel,_vtext,_vicon,_vvalue,_B);
// [383]  Strings.Add(vModel) 
_B._strings.push(_vmodel);
// End Sub
};

// [386] private Sub AddInput(parent As String, typeOf As String, vModel As String, vText As String, vIcon As String, vValue As String) 
_B.addinput=function(_parent,_typeof,_vmodel,_vtext,_vicon,_vvalue) {
var _existing,_nc;
// [387]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [388]  If parent = {70} Then parent = {71} 
if (_parent=="") {_parent="main";}
// [389]  Dim existing As List 
_existing=[];
// [390]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [392]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [393]  nc.Initialize 
_nc.initialize();
// [394]  nc.vmodel = vModel 
_nc._vmodel=_vmodel;
// [395]  nc.text = vText 
_nc._text=_vtext;
// [396]  nc.value = vValue 
_nc._value=_vvalue;
// [397]  nc.typeOf = typeOf 
_nc._typeof=_typeof;
// [398]  nc.iconName = vIcon 
_nc._iconname=_vicon;
// [399]  existing.Add(nc) 
_existing.push(_nc);
// [400]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [401]  fields.Add(vModel) 
_B._fields.push(_vmodel);
// [402]  defaults.Put(vModel,vValue) 
_B._defaults[_vmodel]=_vvalue;
// End Sub
};

// [405] Sub SetDefaults 
_B.setdefaults=function() {
// [406]  vue.SetState(defaults) 
_B._vue.setstate(_B._defaults);
// End Sub
};

// [409] Sub AddCheck(parent As String, vModel As String, text As String, bvalue As Boolean) 
_B.addcheck=function(_parent,_vmodel,_text,_bvalue) {
var _existing,_nc;
// [410]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [411]  If parent = {72} Then parent = {73} 
if (_parent=="") {_parent="main";}
// [412]  Dim existing As List 
_existing=[];
// [413]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [415]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [416]  nc.Initialize 
_nc.initialize();
// [417]  nc.vmodel = vModel 
_nc._vmodel=_vmodel;
// [418]  nc.text = text 
_nc._text=_text;
// [419]  nc.value = bvalue 
_nc._value=_bvalue;
// [420]  nc.typeOf = {74} 
_nc._typeof="chk";
// [421]  existing.Add(nc) 
_existing.push(_nc);
// [422]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [423]  fields.Add(vModel) 
_B._fields.push(_vmodel);
// [424]  Booleans.Add(vModel) 
_B._booleans.push(_vmodel);
// [425]  defaults.Put(vModel,bvalue) 
_B._defaults[_vmodel]=_bvalue;
// End Sub
};

// [429] Sub AddDatePicker(parent As String, vModel As String, text As String, vValue As String) 
_B.adddatepicker=function(_parent,_vmodel,_text,_vvalue) {
var _existing,_nc;
// [430]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [431]  If parent = {75} Then parent = {76} 
if (_parent=="") {_parent="main";}
// [432]  Dim existing As List 
_existing=[];
// [433]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [435]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [436]  nc.Initialize 
_nc.initialize();
// [437]  nc.vmodel = vModel 
_nc._vmodel=_vmodel;
// [438]  nc.text = text 
_nc._text=_text;
// [439]  nc.value = vValue 
_nc._value=_vvalue;
// [440]  nc.typeOf = {77} 
_nc._typeof="dp";
// [441]  existing.Add(nc) 
_existing.push(_nc);
// [442]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [443]  fields.Add(vModel) 
_B._fields.push(_vmodel);
// [444]  Strings.Add(vModel) 
_B._strings.push(_vmodel);
// [445]  defaults.Put(vModel,vValue) 
_B._defaults[_vmodel]=_vvalue;
// End Sub
};

// [448] Sub AddTextArea(parent As String, vModel As String, text As String, vValue As String) 
_B.addtextarea=function(_parent,_vmodel,_text,_vvalue) {
var _existing,_nc;
// [449]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [450]  If parent = {78} Then parent = {79} 
if (_parent=="") {_parent="main";}
// [451]  Dim existing As List 
_existing=[];
// [452]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [454]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [455]  nc.Initialize 
_nc.initialize();
// [456]  nc.vmodel = vModel 
_nc._vmodel=_vmodel;
// [457]  nc.text = text 
_nc._text=_text;
// [458]  nc.value = vValue 
_nc._value=_vvalue;
// [459]  nc.typeOf = {80} 
_nc._typeof="textarea";
// [460]  existing.Add(nc) 
_existing.push(_nc);
// [461]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [462]  fields.Add(vModel) 
_B._fields.push(_vmodel);
// [463]  Strings.Add(vModel) 
_B._strings.push(_vmodel);
// [464]  defaults.Put(vModel,vValue) 
_B._defaults[_vmodel]=_vvalue;
// End Sub
};

// [477] Sub AddRadioGroup(parent As String, vmodel As String, vText As String, sourceName As String, options As Map, sourcefield As String, displayfield As String) 
_B.addradiogroup=function(_parent,_vmodel,_vtext,_sourcename,_options,_sourcefield,_displayfield) {
var _existing,_nc;
// [478]  parent = parent.tolowercase 
_parent=_parent.toLowerCase();
// [479]  If parent = {82} Then parent = {83} 
if (_parent=="") {_parent="main";}
// [480]  Dim existing As List 
_existing=[];
// [481]  If controls.ContainsKey(parent) Then 
if ((_parent in _B._controls)) {
// [482]  existing = controls.Get(parent) 
_existing=_B._controls[_parent];
// [483]  Else 
} else {
// [484]  existing.Initialize 
_existing.length=0;
// [485]  End If 
}
// [487]  Dim nc As PropControls 
_nc= new banano_bananovuematerial_propcontrols();
// [488]  nc.Initialize 
_nc.initialize();
// [489]  nc.vmodel = vmodel 
_nc._vmodel=_vmodel;
// [490]  nc.text = vText 
_nc._text=_vtext;
// [491]  nc.value = {84} 
_nc._value="";
// [492]  nc.typeOf = {85} 
_nc._typeof="radiogroup";
// [493]  nc.sourceName = sourceName 
_nc._sourcename=_sourcename;
// [494]  nc.options = options 
_nc._options=_options;
// [495]  nc.sourcefield = sourcefield 
_nc._sourcefield=_sourcefield;
// [496]  nc.displayfield = displayfield 
_nc._displayfield=_displayfield;
// [497]  existing.Add(nc) 
_existing.push(_nc);
// [498]  controls.Put(parent, existing) 
_B._controls[_parent]=_existing;
// [499]  fields.Add(vmodel) 
_B._fields.push(_vmodel);
// [500]  Strings.Add(vmodel) 
_B._strings.push(_vmodel);
// [501]  defaults.Put(vmodel, {86} ) 
_B._defaults[_vmodel]="";
// End Sub
};

// [522] Sub ToString As String 
_B.tostring=function() {
var _k,_v,_items,_item,_lix,_childlist;
// [524]  For Each k As String In labels.keys 
var _kKeys = Object.keys(_B._labels);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [525]  Dim v As String = labels.Get(k) 
_v=_B._labels[_k];
// [526]  Dim items As List = controls.Get(k) 
_items=_B._controls[_k];
// [527]  Select Case k 
switch ("" + _k) {
// [528]  Case {90} 
case "" + "main":
// [529]  For Each item As PropControls In items 
for (var _itemindex=0;_itemindex<_items.length;_itemindex++) {
_item=_items[_itemindex];
// [530]  Select Case item.typeOf 
switch ("" + _item._typeof) {
// [531]  Case {91} , {92} , {93} , {94} , {95} 
case "" + "number":
case "" + "text":
case "" + "tel":
case "" + "email":
case "" + "password":
// [532]  Lst.AddInput(item.typeOf, item.vmodel, item.text, item.iconName, item.value) 
_B._lst.addinput(_item._typeof,_item._vmodel,_item._text,_item._iconname,_item._value);
// [533]  Case {96} 
break;
case "" + "chk":
// [534]  Lst.AddCheckBox(item.vmodel, item.value, item.text, True) 
_B._lst.addcheckbox(_item._vmodel,_item._value,_item._text,true);
// [535]  Case {97} 
break;
case "" + "swt":
// [536]  Lst.addswitch(item.vmodel, item.text, True, item.value) 
_B._lst.addswitch(_item._vmodel,_item._text,true,_item._value);
// [537]  Case {98} 
break;
case "" + "rad":
// [538]  Lst.AddRadio(item.vmodel, item.value, item.text, True,False) 
_B._lst.addradio(_item._vmodel,_item._value,_item._text,true,false);
// [539]  Case {99} 
break;
case "" + "dp":
// [540]  Lst.AddDatePicker(item.vmodel, item.text, item.value) 
_B._lst.adddatepicker(_item._vmodel,_item._text,_item._value);
// [541]  Case {100} 
break;
case "" + "btn":
// [542]  Lst.AddButton(item.value, item.text) 
_B._lst.addbutton(_item._value,_item._text);
// [543]  Case {101} 
break;
case "" + "btnicon":
// [544]  Lst.AddIconButton(item.value, item.iconName) 
_B._lst.addiconbutton(_item._value,_item._iconname);
// [545]  Case {102} 
break;
case "" + "textarea":
// [546]  Lst.AddTextArea(item.vmodel, item.text, item.value) 
_B._lst.addtextarea(_item._vmodel,_item._text,_item._value);
// [547]  Case {103} 
break;
case "" + "slider":
// [548]  Lst.AddSlider(item.vmodel, item.text, item.MinValue, item.maxvalue, item.value, True) 
_B._lst.addslider(_item._vmodel,_item._text,_item._minvalue,_item._maxvalue,_item._value,true);
// [549]  Case {104} 
break;
case "" + "select":
// [550]  Lst.addselect(item.vmodel, item.text, item.sourceName, item.options, item.sourcefield, item.displayfield) 
_B._lst.addselect(_item._vmodel,_item._text,_item._sourcename,_item._options,_item._sourcefield,_item._displayfield);
// [551]  Case {105} 
break;
case "" + "autocomplete":
// [554]  Case {106} 
break;
case "" + "lbl":
// [555]  Lst.AddLabel(item.text) 
_B._lst.addlabel(_item._text);
// [556]  End Select 
break;
}
// [557]  Next 
}
// [558]  Case Else 
break;
default:
// [559]  Dim lix As VMListItem = Lst.CreateItem(k) 
_lix=_B._lst.createitem(_k);
// [560]  lix.SetText(v) 
_lix.settext(_v);
// [561]  lix.SetStyle(CreateMap( {107} : {108} , {109} : {110} , {111} : {112} )) 
_lix.setstyle({"padding-top":"5px !important", "padding-bottom":"5px !important", "margin-bottom":"10px !important"});
// [563]  Dim items As List = controls.Get(k) 
_items=_B._controls[_k];
// [564]  Dim childList As VMList 
_childlist= new banano_bananovuematerial_vmlist();
// [565]  childList.Initialize(vue, {1} ,eventHandler).AddClass( {113} ) 
_childlist.initialize(_B._vue,"" + _k + "children",_B._eventhandler).addclass("propertybag");
// [566]  childList.isPropertyBag = True 
_childlist._ispropertybag=true;
// [567]  childList.SetStyle(CreateMap( {114} : {115} , {116} : {117} )) 
_childlist.setstyle({"width":"100%", "height":"100%"});
// [568]  childList.SetStyle(CreateMap( {118} : {119} )) 
_childlist.setstyle({"font-size":"14px"});
// [569]  childList.SetStyle(CreateMap( {120} : {121} )) 
_childlist.setstyle({"margin-bottom":"5px !important"});
// [574]  For Each item As PropControls In items 
for (var _itemindex=0;_itemindex<_items.length;_itemindex++) {
_item=_items[_itemindex];
// [575]  Select Case item.typeOf 
switch ("" + _item._typeof) {
// [576]  Case {130} , {131} , {132} , {133} , {134} 
case "" + "number":
case "" + "text":
case "" + "tel":
case "" + "email":
case "" + "password":
// [577]  childList.AddInput(item.typeOf, item.vmodel, item.text, item.iconName, item.value) 
_childlist.addinput(_item._typeof,_item._vmodel,_item._text,_item._iconname,_item._value);
// [578]  Case {135} 
break;
case "" + "chk":
// [579]  childList.AddCheckBox(item.vmodel, item.value, item.text, True) 
_childlist.addcheckbox(_item._vmodel,_item._value,_item._text,true);
// [580]  Case {136} 
break;
case "" + "swt":
// [581]  childList.addswitch(item.vmodel, item.text, True, item.value) 
_childlist.addswitch(_item._vmodel,_item._text,true,_item._value);
// [582]  Case {137} 
break;
case "" + "rad":
// [583]  childList.AddRadio(item.vmodel, item.value, item.text, True,False) 
_childlist.addradio(_item._vmodel,_item._value,_item._text,true,false);
// [584]  Case {138} 
break;
case "" + "dp":
// [585]  childList.AddDatePicker(item.vmodel, item.text, item.value) 
_childlist.adddatepicker(_item._vmodel,_item._text,_item._value);
// [586]  Case {139} 
break;
case "" + "btn":
// [587]  childList.AddButton(item.value, item.text) 
_childlist.addbutton(_item._value,_item._text);
// [588]  Case {140} 
break;
case "" + "btnicon":
// [589]  childList.AddIconButton(item.value, item.iconName) 
_childlist.addiconbutton(_item._value,_item._iconname);
// [590]  Case {141} 
break;
case "" + "textarea":
// [591]  childList.AddTextArea(item.vmodel, item.text, item.value) 
_childlist.addtextarea(_item._vmodel,_item._text,_item._value);
// [592]  Case {142} 
break;
case "" + "slider":
// [593]  childList.AddSlider(item.vmodel, item.text, item.MinValue, item.maxvalue, item.value, True) 
_childlist.addslider(_item._vmodel,_item._text,_item._minvalue,_item._maxvalue,_item._value,true);
// [594]  Case {143} 
break;
case "" + "select":
// [595]  childList.addselect(item.vmodel, item.text, item.sourceName, item.options, item.sourcefield, item.displayfield) 
_childlist.addselect(_item._vmodel,_item._text,_item._sourcename,_item._options,_item._sourcefield,_item._displayfield);
// [596]  Case {144} 
break;
case "" + "autocomplete":
// [599]  Case {145} 
break;
case "" + "lbl":
// [600]  childList.AddLabel(item.text) 
_childlist.addlabel(_item._text);
// [601]  End Select 
break;
}
// [602]  Next 
}
// [603]  lix.SetList(childList) 
_lix.setlist(_childlist);
// [604]  lix.SetExpand(True) 
_lix.setexpand(true);
// [605]  lix.Pop(Lst) 
_lix.pop(_B._lst);
// [606]  End Select 
break;
}
// [607]  Next 
}
// [608]  Lst.Pop(Bag) 
_B._lst.pop(_B._bag);
// [609]  Return Bag.tostring 
return _B._bag.tostring();
// End Sub
};

// [612] Sub GetCode As String 
_B.getcode=function() {
var _sb,_k,_items,_item;
// [613]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [614]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [616]  For Each k As String In controls.Keys 
var _kKeys = Object.keys(_B._controls);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [617]  Dim items As List = controls.Get(k) 
_items=_B._controls[_k];
// [618]  For Each item As PropControls In items 
for (var _itemindex=0;_itemindex<_items.length;_itemindex++) {
_item=_items[_itemindex];
// [619]  Select Case item.typeOf 
switch ("" + _item._typeof) {
// [620]  Case {146} , {147} , {148} , {149} , {150} , {151} 
case "" + "number":
case "" + "text":
case "" + "email":
case "" + "password":
case "" + "dp":
case "" + "textarea":
// [621]  sb.Append( {2} ).Append(CRLF) 
_sb.append("Dim s" + _item._vmodel + " As String = rec.Get(\"" + _item._vmodel + "\")").append("\n");
// [622]  Case {152} , {153} 
break;
case "" + "chk":
case "" + "swt":
// [623]  sb.Append( {3} ).Append(CRLF) 
_sb.append("Dim b" + _item._vmodel + " As Boolean = rec.Get(\"" + _item._vmodel + "\")").append("\n");
// [624]  Case {154} 
break;
case "" + "rad":
// [625]  sb.Append( {4} ).Append(CRLF) 
_sb.append("Dim s" + _item._vmodel + " As String = rec.Get(\"" + _item._vmodel + "\")").append("\n");
// [626]  Case {155} , {156} 
break;
case "" + "slider":
case "" + "tel":
// [627]  sb.Append( {5} ).Append(CRLF) 
_sb.append("Dim i" + _item._vmodel + " As Int = rec.Get(\"" + _item._vmodel + "\")").append("\n");
// [628]  Case {157} , {158} 
break;
case "" + "select":
case "" + "autocomplete":
// [629]  sb.Append( {6} ).Append(CRLF) 
_sb.append("Dim s" + _item._vmodel + " As String = rec.Get(\"" + _item._vmodel + "\")").append("\n");
// [630]  End Select 
break;
}
// [631]  Next 
}
// [632]  Next 
}
// [633]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [636] Sub Render 
_B.render=function() {
// [637]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [640] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [641]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMRadio  =========================== */
function banano_bananovuematerial_vmradio() {
var _B=this;
_B._radio= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [10] Sub SetTabIndex(ti As String) As VMRadio 
_B.settabindex=function(_ti) {
// [11]  Radio.SetTabIndex(ti) 
_B._radio.settabindex(_ti);
// [12]  Return Me 
return _B;
// End Sub
};

// [15] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMRadio 
_B.initialize=function(_v,_sid,_eventhandler) {
// [16]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [17]  vue = v 
_B._vue=_v;
// [18]  module = eventHandler 
_B._module=_eventhandler;
// [19]  Radio.Initialize(vue, ID).SetTag( {1} ) 
_B._radio.initialize(_B._vue,_B._id).settag("md-radio");
// [20]  SetOnChange(ID) 
_B.setonchange(_B._id,_B);
// [21]  Return Me 
return _B;
// End Sub
};

// [24] Sub SetVShow(vif As String) As VMRadio 
_B.setvshow=function(_vif) {
// [25]  If vif = {2} Then Return Me 
if (_vif=="") { return _B;}
// [26]  Radio.SetVShow(vif) 
_B._radio.setvshow(_vif);
// [27]  Return Me 
return _B;
// End Sub
};

// [30] Sub SetText(t As String) As VMRadio 
_B.settext=function(_t) {
// [31]  Radio.SetText(t) 
_B._radio.settext(_t);
// [32]  Return Me 
return _B;
// End Sub
};

// [35] Sub SetPrimary(b As Boolean) As VMRadio 
_B.setprimary=function(_b) {
// [36]  Radio.SetPrimary(b) 
_B._radio.setprimary(_b);
// [37]  Return Me 
return _B;
// End Sub
};

// [41] Sub SetName(varName As Object, bind As Boolean) As VMRadio 
_B.setname=function(_varname,_bind) {
// [42]  Radio.SetName(varName, bind) 
_B._radio.setname(_varname,_bind);
// [43]  Return Me 
return _B;
// End Sub
};

// [47] Sub SetValue(varName As Object, bind As Boolean) As VMRadio 
_B.setvalue=function(_varname,_bind) {
// [48]  Radio.SetValue(varName, bind) 
_B._radio.setvalue(_varname,_bind);
// [49]  Return Me 
return _B;
// End Sub
};

// [53] Sub AddClass(c As String) As VMRadio 
_B.addclass=function(_c) {
// [54]  Radio.AddClass(c) 
_B._radio.addclass(_c);
// [55]  Return Me 
return _B;
// End Sub
};

// [59] Sub SetAttr(attr As Map) As VMRadio 
_B.setattr=function(_attr) {
// [60]  Radio.SetAttr(attr) 
_B._radio.setattr(_attr);
// [61]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetDisabled(b As Boolean) As VMRadio 
_B.setdisabled=function(_b) {
// [65]  Radio.SetDisabled(b) 
_B._radio.setdisabled(_b);
// [66]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetOnChange(source As String) As VMRadio 
_B.setonchange=function(_source) {
var _methodname,_sval,_cb;
// [71]  source = source.tolowercase 
_source=_source.toLowerCase();
// [72]  Dim methodName As String = {0} 
_methodname="" + _source + "_change";
// [73]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [74]  Dim sval As String 
_sval="";
// [75]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(sval)) 
_cb=function(_sval) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_sval,_B)};};
// [76]  SetAttr(CreateMap( {3} : methodName)) 
_B.setattr({"v-on:change":_methodname},_B);
// [78]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [79]  Return Me 
return _B;
// End Sub
};

// [82] Sub SetVModel(k As String) As VMRadio 
_B.setvmodel=function(_k) {
// [83]  Radio.SetVModel(k) 
_B._radio.setvmodel(_k);
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub ToString As String 
_B.tostring=function() {
// [88]  Return Radio.tostring 
return _B._radio.tostring();
// End Sub
};

// [91] Sub Render 
_B.render=function() {
// [92]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [95] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [96]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [99] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [100]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMRadioGroup  =========================== */
function banano_bananovuematerial_vmradiogroup() {
var _B=this;
_B._radiogroup= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._vmodel="";

_B._module={};

_B._designmode=false;

// [14] Public Sub Initialize(v As BANanoVue, sid As String, caption As String, eventHandler As Object) As VMRadioGroup 
_B.initialize=function(_v,_sid,_caption,_eventhandler) {
// [15]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [16]  vue = v 
_B._vue=_v;
// [17]  module = eventHandler 
_B._module=_eventhandler;
// [18]  RadioGroup.Initialize(vue, ID).SetTag( {4} ) 
_B._radiogroup.initialize(_B._vue,_B._id).settag("div");
// [19]  lbl.Initialize(vue, {0} ).SetText( {1} ).SetCaption(True) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label").settext("" + _caption + "<br/>").setcaption(true);
// [20]  lbl.Pop(RadioGroup) 
_B._lbl.pop(_B._radiogroup);
// [21]  designMode = False 
_B._designmode=false;
// [22]  vmodel = {5} 
_B._vmodel="";
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetOptions(options As Map) 
_B.setoptions=function(_options) {
var _k,_v;
// [27]  For Each k As String In options.Keys 
var _kKeys = Object.keys(_options);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [28]  Dim v As String = options.Get(k) 
_v=_options[_k];
// [29]  AddItem(k, v) 
_B.additem(_k,_v,_B);
// [30]  Next 
}
// End Sub
};

// [33] Sub SetDesignMode(b As Boolean) As VMRadioGroup 
_B.setdesignmode=function(_b) {
// [34]  designMode = b 
_B._designmode=_b;
// [35]  Return Me 
return _B;
// End Sub
};

// [38] Sub SetValue(v As Object) As VMRadioGroup 
_B.setvalue=function(_v) {
// [39]  If vmodel = {6} Then 
if (_B._vmodel=="") {
// [40]  Log( {2} ) 
console.log("VMRadioGroup.SetValue: '" + _B._id + "' - the vModel has not been set!");
// [41]  End If 
}
// [42]  vue.SetStateSingle(vmodel,v) 
_B._vue.setstatesingle(_B._vmodel,_v);
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetTabIndex(ti As String) As VMRadioGroup 
_B.settabindex=function(_ti) {
// [47]  RadioGroup.SetTabIndex(ti) 
_B._radiogroup.settabindex(_ti);
// [48]  Return Me 
return _B;
// End Sub
};

// [52] Sub AddClass(c As String) As VMRadioGroup 
_B.addclass=function(_c) {
// [53]  RadioGroup.AddClass(c) 
_B._radiogroup.addclass(_c);
// [54]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetAttr(attr As Map) As VMRadioGroup 
_B.setattr=function(_attr) {
// [59]  RadioGroup.SetAttr(attr) 
_B._radiogroup.setattr(_attr);
// [60]  Return Me 
return _B;
// End Sub
};

// [63] Sub SetVModel(k As String) As VMRadioGroup 
_B.setvmodel=function(_k) {
// [64]  vmodel = k.tolowercase 
_B._vmodel=_k.toLowerCase();
// [65]  Return Me 
return _B;
// End Sub
};

// [68] Sub AddItems(m As Map) As VMRadioGroup 
_B.additems=function(_m) {
var _k,_v;
// [69]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [70]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [71]  AddItem(k, v) 
_B.additem(_k,_v,_B);
// [72]  Next 
}
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub AddItem(k As String, v As String) As VMRadioGroup 
_B.additem=function(_k,_v) {
var _el;
// [77]  If vmodel = {7} Then 
if (_B._vmodel=="") {
// [78]  Log( {3} ) 
console.log("VMRadioGroup.AddItem: '" + _B._id + "' - the vModel has not been set!");
// [79]  End If 
}
// [80]  Dim el As VMRadio 
_el= new banano_bananovuematerial_vmradio();
// [81]  el.Initialize(vue, k, module) 
_el.initialize(_B._vue,_k,_B._module);
// [82]  el.SetText(v) 
_el.settext(_v);
// [83]  el.SetValue(k,False) 
_el.setvalue(_k,false);
// [84]  el.SetPrimary(True) 
_el.setprimary(true);
// [85]  el.SetOnChange(ID) 
_el.setonchange(_B._id);
// [86]  If designMode = False Then 
if (_B._designmode==false) {
// [87]  el.SetVModel(vmodel) 
_el.setvmodel(_B._vmodel);
// [88]  End If 
}
// [89]  el.Pop(RadioGroup) 
_el.pop(_B._radiogroup);
// [90]  Return Me 
return _B;
// End Sub
};

// [93] Sub ToString As String 
_B.tostring=function() {
// [94]  Return RadioGroup.tostring 
return _B._radiogroup.tostring();
// End Sub
};

// [97] Sub Render 
_B.render=function() {
// [98]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [101] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [102]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [105] Sub SetVIf(vif As String) As VMRadioGroup 
_B.setvif=function(_vif) {
// [106]  If vif = {8} Then Return Me 
if (_vif=="") { return _B;}
// [107]  RadioGroup.SetVIf(vif) 
_B._radiogroup.setvif(_vif);
// [108]  Return Me 
return _B;
// End Sub
};

// [111] Sub SetVShow(vif As String) As VMRadioGroup 
_B.setvshow=function(_vif) {
// [112]  If vif = {9} Then Return Me 
if (_vif=="") { return _B;}
// [113]  RadioGroup.SetVShow(vif) 
_B._radiogroup.setvshow(_vif);
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub AddChild(child As VMElement) As VMRadioGroup 
_B.addchild=function(_child) {
var _childhtml;
// [119]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [120]  RadioGroup.SetText(childHTML) 
_B._radiogroup.settext(_childhtml);
// [121]  Return Me 
return _B;
// End Sub
};

// [125] Sub SetStyle(sm As Map) As VMRadioGroup 
_B.setstyle=function(_sm) {
// [126]  RadioGroup.SetStyle(sm) 
_B._radiogroup.setstyle(_sm);
// [127]  Return Me 
return _B;
// End Sub
};

// [131] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [132]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [133]  AddChild(childx) 
_B.addchild(_childx,_B);
// [134]  Next 
}
// End Sub
};

// [137] Sub SetDisabled(b As Boolean) As VMRadioGroup 
_B.setdisabled=function(_b) {
// [138]  RadioGroup.SetDisabled(b) 
_B._radiogroup.setdisabled(_b);
// [139]  Return Me 
return _B;
// End Sub
};

// [144] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [145]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMRow  =========================== */
function banano_bananovuematerial_vmrow() {
var _B=this;
_B._row= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMRow 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  Row.Initialize(v, ID) 
_B._row.initialize(_v,_B._id);
// [13]  Row.SetTag( {0} ).AddClass( {1} ) 
_B._row.settag("div").addclass("md-layout");
// [14]  vue = v 
_B._vue=_v;
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub AddBR 
_B.addbr=function() {
// [20]  SetText( {2} ) 
_B.settext("<br>",_B);
// End Sub
};

// [24] Sub AddHR 
_B.addhr=function() {
// [25]  SetText( {3} ) 
_B.settext("<hr>",_B);
// End Sub
};

// [28] Sub AddElements(lst As List) As VMRow 
_B.addelements=function(_lst) {
// [29]  Row.AddElements(lst) 
_B._row.addelements(_lst);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetGutter(b As Boolean) As VMRow 
_B.setgutter=function(_b) {
// [34]  Row.SetGutter(True) 
_B._row.setgutter(true);
// [35]  Return Me 
return _B;
// End Sub
};

// [38] Sub SetNoWrap(b As Boolean) As VMRow 
_B.setnowrap=function(_b) {
// [39]  If b Then Row.AddClass( {4} ) 
if (_b) {_B._row.addclass("md-layout-nowrap");}
// [40]  Return Me 
return _B;
// End Sub
};

// [43] Sub SetAlignment(a As String) As VMRow 
_B.setalignment=function(_a) {
// [44]  Row.AddClass(a) 
_B._row.addclass(_a);
// [45]  Return Me 
return _B;
// End Sub
};

// [48] Sub SetAlignmentTopCenter(b As Boolean) As VMRow 
_B.setalignmenttopcenter=function(_b) {
// [49]  SetAlignment( {5} ) 
_B.setalignment("md-alignment-top-center",_B);
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetAlignmentTopLeft(b As Boolean) As VMRow 
_B.setalignmenttopleft=function(_b) {
// [54]  SetAlignment( {6} ) 
_B.setalignment("md-alignment-top-left",_B);
// [55]  Return Me 
return _B;
// End Sub
};

// [59] Sub ToString As String 
_B.tostring=function() {
// [60]  Return Row.ToString 
return _B._row.tostring();
// End Sub
};

// [63] Sub SetVModel(k As String) As VMRow 
_B.setvmodel=function(_k) {
// [64]  Row.SetVModel(k) 
_B._row.setvmodel(_k);
// [65]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetVIf(vif As Object) As VMRow 
_B.setvif=function(_vif) {
// [69]  Row.SetVIf(vif) 
_B._row.setvif(_vif);
// [70]  Return Me 
return _B;
// End Sub
};

// [73] Sub SetVShow(vif As Object) As VMRow 
_B.setvshow=function(_vif) {
// [74]  Row.SetVShow(vif) 
_B._row.setvshow(_vif);
// [75]  Return Me 
return _B;
// End Sub
};

// [79] Sub Render 
_B.render=function() {
// [80]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [84] Sub AddChild(child As VMElement) As VMRow 
_B.addchild=function(_child) {
var _childhtml;
// [85]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [86]  Row.SetText(childHTML) 
_B._row.settext(_childhtml);
// [87]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetText(t As Object) As VMRow 
_B.settext=function(_t) {
// [92]  Row.SetText(t) 
_B._row.settext(_t);
// [93]  Return Me 
return _B;
// End Sub
};

// [96] Sub SetPrimary(b As Boolean) As VMRow 
_B.setprimary=function(_b) {
// [97]  Row.SetPrimary(True) 
_B._row.setprimary(true);
// [98]  Return Me 
return _B;
// End Sub
};

// [101] Sub SetAccent(b As Boolean) As VMRow 
_B.setaccent=function(_b) {
// [102]  Row.SetAccent(True) 
_B._row.setaccent(true);
// [103]  Return Me 
return _B;
// End Sub
};

// [107] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [108]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [112] Sub AddClass(c As String) As VMRow 
_B.addclass=function(_c) {
// [113]  Row.AddClass(c) 
_B._row.addclass(_c);
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetAttr(attr As Map) As VMRow 
_B.setattr=function(_attr) {
// [119]  Row.SetAttr(attr) 
_B._row.setattr(_attr);
// [120]  Return Me 
return _B;
// End Sub
};

// [124] Sub SetStyle(sm As Map) As VMRow 
_B.setstyle=function(_sm) {
// [125]  Row.SetStyle(sm) 
_B._row.setstyle(_sm);
// [126]  Return Me 
return _B;
// End Sub
};

// [129] Sub SetHidden(xsmall As Boolean, small As Boolean, medium As Boolean, large As Boolean, xlarge As Boolean) As VMRow 
_B.sethidden=function(_xsmall,_small,_medium,_large,_xlarge) {
// [130]  Row.SetHidden(xsmall, small, medium, large, xlarge) 
_B._row.sethidden(_xsmall,_small,_medium,_large,_xlarge);
// [131]  Return Me 
return _B;
// End Sub
};

// [134] Sub SetSizes(xsmall As Int, small As Int, medium As Int, large As Int, xlarge As Int) As VMRow 
_B.setsizes=function(_xsmall,_small,_medium,_large,_xlarge) {
// [135]  Row.SetSizes(xsmall, small, medium, large, xlarge) 
_B._row.setsizes(_xsmall,_small,_medium,_large,_xlarge);
// [136]  Return Me 
return _B;
// End Sub
};

// [140] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [141]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [142]  AddChild(childx) 
_B.addchild(_childx,_B);
// [143]  Next 
}
// End Sub
};

// [147] Sub SetPadding(p As Object) As VMRow 
_B.setpadding=function(_p) {
// [148]  Row.SetPaddingAll(p) 
_B._row.setpaddingall(_p);
// [149]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMSelect  =========================== */
function banano_bananovuematerial_vmselect() {
var _B=this;
_B._combo= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._comboint= new banano_bananovuematerial_vmfield();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._hashelp=false;

_B._ht= new banano_bananovuematerial_vmelement();

_B._et= new banano_bananovuematerial_vmelement();

_B._haserror=false;

_B._xname="";

_B._xmodel="";

_B._module={};

// [18] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMSelect 
_B.initialize=function(_v,_sid,_eventhandler) {
var _sval;
// [19]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [20]  vue = v 
_B._vue=_v;
// [21]  module = eventHandler 
_B._module=_eventhandler;
// [22]  Combo.Initialize(vue, ID).SetTag( {23} ) 
_B._combo.initialize(_B._vue,_B._id).settag("md-select");
// [23]  ComboInt.Initialize(v, ID, {0} , module) 
_B._comboint.initialize(_v,_B._id,"" + _B._id + "field",_B._module);
// [24]  lbl.Initialize(vue, {1} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label");
// [25]  SetName(sid) 
_B.setname(_sid,_B);
// [26]  hasHelp = False 
_B._hashelp=false;
// [27]  hasError = False 
_B._haserror=false;
// [28]  xname = {24} 
_B._xname="";
// [29]  xmodel = {25} 
_B._xmodel="";
// [30]  Dim sval As String 
_sval="";
// [31]  SetOnSelected(sval) 
_B.setonselected(_sval,_B);
// [32]  SetOnOpened 
_B.setonopened(_B);
// [33]  SetOnClosed 
_B.setonclosed(_B);
// [34]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetTabIndex(ti As String) As VMSelect 
_B.settabindex=function(_ti) {
// [38]  Combo.SetTabIndex(ti) 
_B._combo.settabindex(_ti);
// [39]  Return Me 
return _B;
// End Sub
};

// [44] Sub AddClass(c As String) As VMSelect 
_B.addclass=function(_c) {
// [45]  Combo.AddClass(c) 
_B._combo.addclass(_c);
// [46]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetAttr(attr As Map) As VMSelect 
_B.setattr=function(_attr) {
// [51]  Combo.SetAttr(attr) 
_B._combo.setattr(_attr);
// [52]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetVModel(k As String) As VMSelect 
_B.setvmodel=function(_k) {
// [57]  k = k.ToLowerCase 
_k=_k.toLowerCase();
// [58]  xmodel = k 
_B._xmodel=_k;
// [59]  Combo.SetVModel(k) 
_B._combo.setvmodel(_k);
// [60]  Return Me 
return _B;
// End Sub
};

// [63] Sub SetLabel(l As Object) As VMSelect 
_B.setlabel=function(_l) {
// [64]  lbl.SetText(l) 
_B._lbl.settext(_l);
// [65]  Return Me 
return _B;
// End Sub
};

// [68] Sub AddItems(m As Map) As VMSelect 
_B.additems=function(_m) {
var _k,_v;
// [69]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [70]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [71]  AddItem(k, v) 
_B.additem(_k,_v,_B);
// [72]  Next 
}
// [73]  Return Me 
return _B;
// End Sub
};

// [76] Sub AddItem(k As String, v As String) As VMSelect 
_B.additem=function(_k,_v) {
var _el;
// [77]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [78]  el.Initialize(vue,k).SetTag( {26} ).SetName(k,False).SetKey(k,False).SetValue(k,False).SetText(v) 
_el.initialize(_B._vue,_k).settag("md-option").setname(_k,false).setkey(_k,false).setvalue(_k,false).settext(_v);
// [79]  el.Pop(Combo) 
_el.pop(_B._combo);
// [80]  Return Me 
return _B;
// End Sub
};

// [83] Sub AddItem1(k As String, v As String,disabled As Boolean) As VMSelect 
_B.additem1=function(_k,_v,_disabled) {
var _el;
// [84]  Dim el As VMElement 
_el= new banano_bananovuematerial_vmelement();
// [85]  el.Initialize(vue,k).SetTag( {27} ).SetName(k,False).SetKey(k,False).SetValue(k,False).SetText(v).SetDisabled(disabled) 
_el.initialize(_B._vue,_k).settag("md-option").setname(_k,false).setkey(_k,false).setvalue(_k,false).settext(_v).setdisabled(_disabled);
// [86]  el.Pop(Combo) 
_el.pop(_B._combo);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetOptions(sourceName As String, options As Map, sourcefield As String, displayfield As String) 
_B.setoptions=function(_sourcename,_options,_sourcefield,_displayfield) {
var _recs,_k,_v,_nrec,_krow,_drow,_option;
// [91]  sourceName = sourceName.tolowercase 
_sourcename=_sourcename.toLowerCase();
// [92]  Dim recs As List 
_recs=[];
// [93]  recs.Initialize 
_recs.length=0;
// [94]  For Each k As String In options.Keys 
var _kKeys = Object.keys(_options);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [95]  Dim v As String = options.Get(k) 
_v=_options[_k];
// [96]  Dim nrec As Map = CreateMap() 
_nrec={};
// [97]  nrec.Put(sourcefield, k) 
_nrec[_sourcefield]=_k;
// [98]  nrec.Put(displayfield, v) 
_nrec[_displayfield]=_v;
// [99]  recs.Add(nrec) 
_recs.push(_nrec);
// [100]  Next 
}
// [102]  vue.SetStateSingle(sourceName, recs) 
_B._vue.setstatesingle(_sourcename,_recs);
// [103]  Dim kRow As String = {2} 
_krow="row." + _sourcefield + "";
// [104]  Dim dRow As String = {3} 
_drow="row." + _displayfield + "";
// [106]  Dim option As VMElement 
_option= new banano_bananovuematerial_vmelement();
// [107]  option.Initialize(vue, {28} ) 
_option.initialize(_B._vue,"");
// [108]  option.SetTag( {29} ) 
_option.settag("md-option");
// [109]  option.SetVFor( {30} , sourceName) 
_option.setvfor("row",_sourcename);
// [110]  option.SetID( {4} ,True) 
_option.setid("" + _krow + "",true);
// [111]  option.SetKey( {5} ,True) 
_option.setkey("" + _krow + "",true);
// [112]  option.SetValue( {6} ,True) 
_option.setvalue("" + _krow + "",true);
// [113]  option.SetName( {7} ,True) 
_option.setname("" + _krow + "",true);
// [114]  option.SetText( {8} ) 
_option.settext("{{ " + _drow + " }}");
// [115]  option.RemoveAttr( {31} ) 
_option.removeattr(":required");
// [116]  option.RemoveAttr( {32} ) 
_option.removeattr(":disabled");
// [117]  option.RemoveAttr( {33} ) 
_option.removeattr("v-show");
// [118]  option.Pop(Combo) 
_option.pop(_B._combo);
// End Sub
};

// [122] Sub SetDataSource(sourceTable As String, sourceField As String, displayField As String) 
_B.setdatasource=function(_sourcetable,_sourcefield,_displayfield) {
var _intsel,_krow,_drow,_option;
// [123]  sourceTable = sourceTable.ToLowerCase 
_sourcetable=_sourcetable.toLowerCase();
// [124]  sourceField = sourceField.ToLowerCase 
_sourcefield=_sourcefield.toLowerCase();
// [125]  displayField = displayField.tolowercase 
_displayfield=_displayfield.toLowerCase();
// [127]  Dim intSel As Int = 0 
_intsel=0;
// [128]  If sourceTable <> {34} Then intSel = BANano.parseInt(intSel) + 1 
if (_sourcetable!="") {_intsel=parseInt(_intsel)+1;}
// [129]  If sourceField <> {35} Then intSel = BANano.parseInt(intSel) + 1 
if (_sourcefield!="") {_intsel=parseInt(_intsel)+1;}
// [130]  If displayField <> {36} Then intSel = BANano.parseInt(intSel) + 1 
if (_displayfield!="") {_intsel=parseInt(_intsel)+1;}
// [132]  If intSel = 3 Then 
if (_intsel==3) {
// [133]  Dim kRow As String = {9} 
_krow="row." + _sourcefield + "";
// [134]  Dim dRow As String = {10} 
_drow="row." + _displayfield + "";
// [135]  Dim option As VMElement 
_option= new banano_bananovuematerial_vmelement();
// [136]  option.Initialize(vue, {37} ) 
_option.initialize(_B._vue,"");
// [137]  option.SetTag( {38} ) 
_option.settag("md-option");
// [138]  option.SetVFor( {39} , sourceTable) 
_option.setvfor("row",_sourcetable);
// [139]  option.SetID( {11} ,True) 
_option.setid("" + _krow + "",true);
// [140]  option.SetKey( {12} ,True) 
_option.setkey("" + _krow + "",true);
// [141]  option.SetValue( {13} ,True) 
_option.setvalue("" + _krow + "",true);
// [142]  option.SetName( {14} ,True) 
_option.setname("" + _krow + "",true);
// [143]  option.SetText( {15} ) 
_option.settext("{{ " + _drow + " }}");
// [144]  option.RemoveAttr( {40} ) 
_option.removeattr(":required");
// [145]  option.RemoveAttr( {41} ) 
_option.removeattr(":disabled");
// [146]  option.RemoveAttr( {42} ) 
_option.removeattr("v-show");
// [147]  option.Pop(Combo) 
_option.pop(_B._combo);
// [148]  End If 
}
// End Sub
};

// [152] Sub SetHelperText(t As String) As VMSelect 
_B.sethelpertext=function(_t) {
// [153]  If t = {43} Then Return Me 
if (_t=="") { return _B;}
// [154]  hasHelp = True 
_B._hashelp=true;
// [155]  ht = Combo.SetHelperText(t) 
_B._ht=_B._combo.sethelpertext(_t);
// [156]  Return Me 
return _B;
// End Sub
};

// [159] Sub SetErrorText(txt As String) As VMSelect 
_B.seterrortext=function(_txt) {
// [160]  If txt = {44} Then Return Me 
if (_txt=="") { return _B;}
// [161]  hasError = True 
_B._haserror=true;
// [162]  et = Combo.SetErrorText(txt) 
_B._et=_B._combo.seterrortext(_txt);
// [163]  Return Me 
return _B;
// End Sub
};

// [166] Sub ToString As String 
_B.tostring=function() {
// [167]  If xname = {45} Then 
if (_B._xname=="") {
// [168]  Log( {16} ) 
console.log("VMSelect.ToString." + _B._id + " - name is not set!");
// [169]  End If 
}
// [170]  If xmodel = {46} Then 
if (_B._xmodel=="") {
// [171]  Log( {17} ) 
console.log("VMSelect.ToString." + _B._id + " - model is not set!");
// [172]  End If 
}
// [173]  lbl.Pop(ComboInt.Field) 
_B._lbl.pop(_B._comboint._field);
// [174]  Combo.Pop(ComboInt.Field) 
_B._combo.pop(_B._comboint._field);
// [175]  If hasHelp Then 
if (_B._hashelp) {
// [176]  ht.Pop(ComboInt.Field) 
_B._ht.pop(_B._comboint._field);
// [177]  End If 
}
// [178]  If hasError Then 
if (_B._haserror) {
// [179]  et.Pop(ComboInt.Field) 
_B._et.pop(_B._comboint._field);
// [180]  End If 
}
// [181]  Return ComboInt.tostring 
return _B._comboint.tostring();
// End Sub
};

// [184] Sub Render 
_B.render=function() {
// [185]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [188] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [189]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [192] Sub SetVIf(vif As String) As VMSelect 
_B.setvif=function(_vif) {
// [193]  If vif = {47} Then Return Me 
if (_vif=="") { return _B;}
// [194]  ComboInt.SetVIf(vif) 
_B._comboint.setvif(_vif);
// [195]  Return Me 
return _B;
// End Sub
};

// [198] Sub SetVShow(vif As String) As VMSelect 
_B.setvshow=function(_vif) {
// [199]  If vif = {48} Then Return Me 
if (_vif=="") { return _B;}
// [200]  ComboInt.SetVShow(vif) 
_B._comboint.setvshow(_vif);
// [201]  Return Me 
return _B;
// End Sub
};

// [205] Sub AddChild(child As VMElement) As VMSelect 
_B.addchild=function(_child) {
var _childhtml;
// [206] Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [207]  Combo.SetText(childHTML) 
_B._combo.settext(_childhtml);
// [208] Return Me 
return _B;
// End Sub
};

// [212] Sub SetText(t As Object) As VMSelect 
_B.settext=function(_t) {
// [213]  Combo.SetText(t) 
_B._combo.settext(_t);
// [214] Return Me 
return _B;
// End Sub
};

// [217] Sub SetPrimary(b As Boolean) As VMSelect 
_B.setprimary=function(_b) {
// [218]  Combo.SetPrimary(True) 
_B._combo.setprimary(true);
// [219] Return Me 
return _B;
// End Sub
};

// [222] Sub SetAccent(b As Boolean) As VMSelect 
_B.setaccent=function(_b) {
// [223]  Combo.SetAccent(True) 
_B._combo.setaccent(true);
// [224] Return Me 
return _B;
// End Sub
};

// [228] Sub SetStyle(sm As Map) As VMSelect 
_B.setstyle=function(_sm) {
// [229]  Combo.SetStyle(sm) 
_B._combo.setstyle(_sm);
// [230] Return Me 
return _B;
// End Sub
};

// [234] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [235] For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [236] AddChild(childx) 
_B.addchild(_childx,_B);
// [237] Next 
}
// End Sub
};

// [241] Sub SetPadding(p As Object) As VMSelect 
_B.setpadding=function(_p) {
// [242]  Combo.SetPaddingAll(p) 
_B._combo.setpaddingall(_p);
// [243] Return Me 
return _B;
// End Sub
};

// [247] Sub SetPlaceholder(varPlaceholder As String) As VMSelect 
_B.setplaceholder=function(_varplaceholder) {
// [248]  If varPlaceholder = {49} Then Return Me 
if (_varplaceholder=="") { return _B;}
// [249]  SetAttr(CreateMap( {50} : varPlaceholder)) 
_B.setattr({"placeholder":_varplaceholder},_B);
// [250]  Return Me 
return _B;
// End Sub
};

// [254] Sub SetRequired(varRequired As Boolean) As VMSelect 
_B.setrequired=function(_varrequired) {
// [255]  Combo.SetRequired(varRequired) 
_B._combo.setrequired(_varrequired);
// [256]  Return Me 
return _B;
// End Sub
};

// [259] Sub SetValue(valx As String) As VMSelect 
_B.setvalue=function(_valx) {
// [260]  If xmodel = {51} Then 
if (_B._xmodel=="") {
// [261]  Log( {18} ) 
console.log("VMSelect.SetValue." + _B._id + " - vmodel is not set!");
// [262]  End If 
}
// [263]  vue.SetStateSingle(xmodel, valx) 
_B._vue.setstatesingle(_B._xmodel,_valx);
// [264]  Return Me 
return _B;
// End Sub
};

// [268] Sub SetDisabled(b As Boolean) As VMSelect 
_B.setdisabled=function(_b) {
// [269]  Combo.SetDisabled(b) 
_B._combo.setdisabled(_b);
// [270]  Return Me 
return _B;
// End Sub
};

// [274] Sub SetName(varName As String) As VMSelect 
_B.setname=function(_varname) {
// [275]  varName = varName.tolowercase 
_varname=_varname.toLowerCase();
// [276]  xname = varName 
_B._xname=_varname;
// [277]  Combo.SetName(varName, False) 
_B._combo.setname(_varname,false);
// [278] Return Me 
return _B;
// End Sub
};

// [282] Sub SetID(varName As Object, bind As Boolean) As VMSelect 
_B.setid=function(_varname,_bind) {
// [283]  Combo.SetID(varName, bind) 
_B._combo.setid(_varname,_bind);
// [284] Return Me 
return _B;
// End Sub
};

// [288] Sub SetMultiple(varMultiple As Boolean) As VMSelect 
_B.setmultiple=function(_varmultiple) {
var _nlist;
// [289]  If varMultiple = False Then Return Me 
if (_varmultiple==false) { return _B;}
// [290]  If xmodel = {52} Then 
if (_B._xmodel=="") {
// [291]  Log( {19} ) 
console.log("VMSelect.SetMultiple." + _B._id + " - vmodel is not set!");
// [292]  End If 
}
// [293]  Dim nList As List 
_nlist=[];
// [294]  nList.Initialize 
_nlist.length=0;
// [295]  vue.SetStateSingle(xmodel, nList) 
_B._vue.setstatesingle(_B._xmodel,_nlist);
// [296]  SetAttr(CreateMap( {53} : varMultiple)) 
_B.setattr({":multiple":_varmultiple},_B);
// [297]  Return Me 
return _B;
// End Sub
};

// [301] Sub SetDense(varDense As Boolean) As VMSelect 
_B.setdense=function(_vardense) {
// [302]  If varDense = False Then Return Me 
if (_vardense==false) { return _B;}
// [303]  If varDense Then SetAttr(CreateMap( {54} : varDense)) 
if (_vardense) {_B.setattr({":md-dense":_vardense},_B);}
// [304] Return Me 
return _B;
// End Sub
};

// [308] private Sub SetOnSelected(value As String) As VMSelect 
_B.setonselected=function(_value) {
var _methodname,_cb;
// [309] Dim methodName As String = {20} 
_methodname="" + _B._id + "_change";
// [310]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [311]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(value)) 
_cb=function(_value) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_value,_B)};};
// [312] SetAttr(CreateMap( {55} : methodName)) 
_B.setattr({"v-on:md-selected":_methodname},_B);
// [314]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [315]  Return Me 
return _B;
// End Sub
};

// [319] private Sub SetOnOpened As VMSelect 
_B.setonopened=function() {
var _methodname,_e,_cb;
// [320] Dim methodName As String = {21} 
_methodname="" + _B._id + "_opened";
// [321]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [322] Dim e As BANanoEvent 
_e=null;
// [323]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [324] SetAttr(CreateMap( {56} : methodName)) 
_B.setattr({"v-on:md-opened":_methodname},_B);
// [326]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [327]  Return Me 
return _B;
// End Sub
};

// [331] private Sub SetOnClosed As VMSelect 
_B.setonclosed=function() {
var _methodname,_e,_cb;
// [332] Dim methodName As String = {22} 
_methodname="" + _B._id + "_closed";
// [333]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [334] Dim e As BANanoEvent 
_e=null;
// [335]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [336] SetAttr(CreateMap( {57} : methodName)) 
_B.setattr({"v-on:md-closed":_methodname},_B);
// [338]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [339]  Return Me 
return _B;
// End Sub
};

// [343] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [344]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMSlider  =========================== */
function banano_bananovuematerial_vmslider() {
var _B=this;
_B._slider= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._inputint= new banano_bananovuematerial_vmelement();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._labeltext="";

_B._vmodeltext="";

_B._labelontop=false;

_B._module={};

// [16] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMSlider 
_B.initialize=function(_v,_sid,_eventhandler) {
// [17]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [18]  vue = v 
_B._vue=_v;
// [19]  module = eventHandler 
_B._module=_eventhandler;
// [20]  Slider.Initialize(vue, ID).SetTag( {4} ) 
_B._slider.initialize(_B._vue,_B._id).settag("vue-material-slider");
// [21]  InputInt.Initialize(v, {0} ).SetTag( {5} ) 
_B._inputint.initialize(_v,"" + _B._id + "parent").settag("div");
// [22]  lbl.Initialize(vue, {1} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label");
// [23]  labelText = {6} 
_B._labeltext="";
// [24]  labelOnTop = False 
_B._labelontop=false;
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetTabIndex(ti As String) As VMSlider 
_B.settabindex=function(_ti) {
// [29]  Slider.SetTabIndex(ti) 
_B._slider.settabindex(_ti);
// [30]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetLabelOnTop(b As Boolean) As VMSlider 
_B.setlabelontop=function(_b) {
// [35]  labelOnTop = b 
_B._labelontop=_b;
// [36]  Return Me 
return _B;
// End Sub
};

// [39] Sub SetLabel(lblText As Object) As VMSlider 
_B.setlabel=function(_lbltext) {
// [40]  labelText = lblText 
_B._labeltext=_lbltext;
// [41]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetName(varName As Object, bind As Boolean) As VMSlider 
_B.setname=function(_varname,_bind) {
// [46]  Slider.SetName(varName, bind) 
_B._slider.setname(_varname,_bind);
// [47]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetThumbLabel(b As Boolean) As VMSlider 
_B.setthumblabel=function(_b) {
// [51]  SetAttr(CreateMap( {7} : b)) 
_B.setattr({":thumbLabel":_b},_B);
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetInvert(b As Boolean) As VMSlider 
_B.setinvert=function(_b) {
// [56]  SetAttr(CreateMap( {8} : b)) 
_B.setattr({":invert":_b},_B);
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub SetVertical(b As Boolean) As VMSlider 
_B.setvertical=function(_b) {
// [61]  SetAttr(CreateMap( {9} : b)) 
_B.setattr({":vertical":_b},_B);
// [62]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetID(varName As Object, bind As Boolean) As VMSlider 
_B.setid=function(_varname,_bind) {
// [68]  Slider.SetID(varName, bind) 
_B._slider.setid(_varname,_bind);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetMin(m As Int) As VMSlider 
_B.setmin=function(_m) {
// [73]  SetAttr(CreateMap( {10} : m)) 
_B.setattr({":min":_m},_B);
// [74]  Return Me 
return _B;
// End Sub
};

// [78] Sub SetMax(m As Int) As VMSlider 
_B.setmax=function(_m) {
// [79]  SetAttr(CreateMap( {11} : m)) 
_B.setattr({":max":_m},_B);
// [80]  Return Me 
return _B;
// End Sub
};

// [83] Sub SetDisabled(b As Boolean) As VMSlider 
_B.setdisabled=function(_b) {
// [84]  Slider.SetDisabled(b) 
_B._slider.setdisabled(_b);
// [85]  Return Me 
return _B;
// End Sub
};

// [88] Sub SetVIf(vif As Object) As VMSlider 
_B.setvif=function(_vif) {
// [89]  Slider.SetVIf(vif) 
_B._slider.setvif(_vif);
// [90]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetVShow(vif As Object) As VMSlider 
_B.setvshow=function(_vif) {
// [94]  Slider.SetVShow(vif) 
_B._slider.setvshow(_vif);
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetValue(v As Object) As VMSlider 
_B.setvalue=function(_v) {
// [99]  SetAttr(CreateMap( {12} : v)) 
_B.setattr({"value":_v},_B);
// [100]  Return Me 
return _B;
// End Sub
};

// [103] Sub SetVModel(k As String) As VMSlider 
_B.setvmodel=function(_k) {
// [104]  Slider.SetVModel(k) 
_B._slider.setvmodel(_k);
// [105]  vmodelText = k 
_B._vmodeltext=_k;
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub AddClass(c As String) As VMSlider 
_B.addclass=function(_c) {
// [111]  Slider.AddClass(c) 
_B._slider.addclass(_c);
// [112]  Return Me 
return _B;
// End Sub
};

// [116] Sub SetStyle(m As Map) As VMSlider 
_B.setstyle=function(_m) {
// [117]  InputInt.SetStyle(m) 
_B._inputint.setstyle(_m);
// [118]  Return Me 
return _B;
// End Sub
};

// [122] Sub SetAttr(attr As Map) As VMSlider 
_B.setattr=function(_attr) {
// [123]  Slider.SetAttr(attr) 
_B._slider.setattr(_attr);
// [124]  Return Me 
return _B;
// End Sub
};

// [127] Sub ToString As String 
_B.tostring=function() {
var _mmodel;
// [128]  Dim mModel As String = {2} 
_mmodel="{{ " + _B._vmodeltext + " }}";
// [129]  lbl.SetText( {3} ) 
_B._lbl.settext("" + _B._labeltext + ": " + _mmodel + "");
// [130]  If labelOnTop Then InputInt.AddClass( {13} ) 
if (_B._labelontop) {_B._inputint.addclass("dontwrap");}
// [131]  lbl.Pop(InputInt) 
_B._lbl.pop(_B._inputint);
// [132]  Slider.Pop(InputInt) 
_B._slider.pop(_B._inputint);
// [133]  Return InputInt.tostring 
return _B._inputint.tostring();
// End Sub
};

// [136] Sub Render 
_B.render=function() {
// [137]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [140] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [141]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMSnackbar  =========================== */
function banano_bananovuematerial_vmsnackbar() {
var _B=this;
_B._snackbar= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._bactive=false;

_B._module={};

_B._mkey="";

_B._button= new banano_bananovuematerial_vmbutton();

_B._mname="";

// [15] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMSnackbar 
_B.initialize=function(_v,_sid,_eventhandler) {
// [16]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [17]  Snackbar.Initialize(v, ID) 
_B._snackbar.initialize(_v,_B._id);
// [18]  Snackbar.SetTag( {10} ) 
_B._snackbar.settag("md-snackbar");
// [19]  module = eventHandler 
_B._module=_eventhandler;
// [20]  vue = v 
_B._vue=_v;
// [21]  bActive = False 
_B._bactive=false;
// [22]  If ID <> {11} Then 
if (_B._id!="") {
// [23]  SetActiveSync(ID) 
_B.setactivesync(_B._id,_B);
// [24]  End If 
}
// [25]  SetOnOpened 
_B.setonopened(_B);
// [26]  SetOnClosed 
_B.setonclosed(_B);
// [27]  mKey = {0} 
_B._mkey="" + _B._id + "message";
// [28]  vue.SetStateSingle(mKey, Null) 
_B._vue.setstatesingle(_B._mkey,null);
// [29]  SetText1( {1} ) 
_B.settext1("{{ " + _B._mkey + " }}",_B);
// [30]  Button.Initialize(vue, {12} , Me) 
_B._button.initialize(_B._vue,"snackbutton",_B);
// [31]  mName = {13} 
_B._mname="";
// [32]  Hide 
_B.hide(_B);
// [33]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetOnClick(methodName As String) As VMSnackbar 
_B.setonclick=function(_methodname) {
// [38]  mName = methodName.ToLowerCase 
_B._mname=_methodname.toLowerCase();
// [39]  Return Me 
return _B;
// End Sub
};

// [42] Sub snackbutton_click(e As BANanoEvent) 
_B.snackbutton_click=function(_e) {
// [43]  If mName = {14} Then 
if (_B._mname=="") {
// [44]  Log( {2} ) 
console.log("VMSnackbar.snackbutton_click: 'SetOnClick' has not been set!");
// [45]  End If 
}
// [46]  Hide 
_B.hide(_B);
// [47]  BANano.CallSub(module, mName, Null) 
(function() {if (typeof _B._module[(_B._mname).toLowerCase()]==="function") {var CSr = _B._module[(_B._mname).toLowerCase()](_B);if(CSr!=null) {return CSr}}})();
// End Sub
};

// [51] Sub ToString As String 
_B.tostring=function() {
// [52]  If bActive = False Then 
if (_B._bactive==false) {
// [53]  Log( {3} ) 
console.log("VMSnackbar.SetActiveSync: '" + _B._id + "' has not been activated!");
// [54]  End If 
}
// [55]  Button.Pop(Snackbar) 
_B._button.pop(_B._snackbar);
// [56]  Return Snackbar.ToString 
return _B._snackbar.tostring();
// End Sub
};

// [59] private Sub SetActiveSync(v As String) As VMSnackbar 
_B.setactivesync=function(_v) {
// [60]  Snackbar.SetActiveSync(v) 
_B._snackbar.setactivesync(_v);
// [61]  bActive = True 
_B._bactive=true;
// [62]  Return Me 
return _B;
// End Sub
};

// [66] Sub Render 
_B.render=function() {
// [67]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [70] Sub Hide 
_B.hide=function() {
var _opt;
// [71]  Dim opt As Map = CreateMap() 
_opt={};
// [72]  opt.Put(ID, False) 
_opt[_B._id]=false;
// [73]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [76] Sub Show 
_B.show=function() {
var _opt;
// [77]  Dim opt As Map = CreateMap() 
_opt={};
// [78]  opt.Put(ID, True) 
_opt[_B._id]=true;
// [79]  vue.SetState(opt) 
_B._vue.setstate(_opt);
// End Sub
};

// [83] Sub AddChild(child As VMElement) As VMSnackbar 
_B.addchild=function(_child) {
var _childhtml;
// [84]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [85]  Snackbar.SetText(childHTML) 
_B._snackbar.settext(_childhtml);
// [86]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetText(t As String) As VMSnackbar 
_B.settext=function(_t) {
// [91]  vue.SetStateSingle(mKey, t) 
_B._vue.setstatesingle(_B._mkey,_t);
// [92]  Return Me 
return _B;
// End Sub
};

// [96] private Sub SetText1(t As String) As VMSnackbar 
_B.settext1=function(_t) {
var _span;
// [97]  Dim span As VMElement 
_span= new banano_bananovuematerial_vmelement();
// [98]  span.Initialize(vue, {4} ).SetTag( {15} ).SetText(t) 
_span.initialize(_B._vue,"" + _B._id + "text").settag("span").settext(_t);
// [99]  span.Pop(Snackbar) 
_span.pop(_B._snackbar);
// [100]  Return Me 
return _B;
// End Sub
};

// [104] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [105]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [109] Sub AddClass(c As String) As VMSnackbar 
_B.addclass=function(_c) {
// [110]  Snackbar.AddClass(c) 
_B._snackbar.addclass(_c);
// [111]  Return Me 
return _B;
// End Sub
};

// [115] Sub SetAttr(attr As Map) As VMSnackbar 
_B.setattr=function(_attr) {
// [116]  Snackbar.SetAttr(attr) 
_B._snackbar.setattr(_attr);
// [117]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetStyle(sm As Map) As VMSnackbar 
_B.setstyle=function(_sm) {
// [122]  Snackbar.SetStyle(sm) 
_B._snackbar.setstyle(_sm);
// [123]  Return Me 
return _B;
// End Sub
};

// [127] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [128]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [129]  AddChild(childx) 
_B.addchild(_childx,_B);
// [130]  Next 
}
// End Sub
};

// [134] Sub SetPadding(p As Object) As VMSnackbar 
_B.setpadding=function(_p) {
// [135]  Snackbar.SetPaddingAll(p) 
_B._snackbar.setpaddingall(_p);
// [136]  Return Me 
return _B;
// End Sub
};

// [140] Sub SetDuration(varDuration As Int) As VMSnackbar 
_B.setduration=function(_varduration) {
var _pp;
// [141]  Dim pp As String = {5} 
_pp="" + _B._id + "duration";
// [142]  vue.SetStateSingle(pp, varDuration) 
_B._vue.setstatesingle(_pp,_varduration);
// [143]  SetAttr(CreateMap( {16} : pp)) 
_B.setattr({":md-duration":_pp},_B);
// [144]  Return Me 
return _B;
// End Sub
};

// [148] Sub SetPersistent(varPersistent As Boolean) As VMSnackbar 
_B.setpersistent=function(_varpersistent) {
var _pp;
// [149]  Dim pp As String = {6} 
_pp="" + _B._id + "persistent";
// [150]  vue.SetStateSingle(pp, varPersistent) 
_B._vue.setstatesingle(_pp,_varpersistent);
// [151]  SetAttr(CreateMap( {17} : pp)) 
_B.setattr({":md-persistent":_pp},_B);
// [152]  Return Me 
return _B;
// End Sub
};

// [156] Sub SetPosition(varPosition As Object) As VMSnackbar 
_B.setposition=function(_varposition) {
var _pp;
// [157]  Dim pp As String = {7} 
_pp="" + _B._id + "position";
// [158]  vue.SetStateSingle(pp, varPosition) 
_B._vue.setstatesingle(_pp,_varposition);
// [159]  SetAttr(CreateMap( {18} : pp)) 
_B.setattr({":md-position":_pp},_B);
// [160]  Return Me 
return _B;
// End Sub
};

// [164] Sub SetPositionCenter(b As Boolean) As VMSnackbar 'ignore 
_B.setpositioncenter=function(_b) {
// [165]  SetPosition( {19} ) 
_B.setposition("center",_B);
// [166]  Return Me 
return _B;
// End Sub
};

// [170] Sub SetPositionLeft(b As Boolean) As VMSnackbar 'ignore 
_B.setpositionleft=function(_b) {
// [171]  SetPosition( {20} ) 
_B.setposition("left",_B);
// [172]  Return Me 
return _B;
// End Sub
};

// [176] private Sub SetOnOpened As VMSnackbar 
_B.setonopened=function() {
var _methodname,_e,_cb;
// [177]  Dim methodName As String = {8} 
_methodname="" + _B._id + "_opened";
// [178]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [179]  Dim e As BANanoEvent 
_e=null;
// [180]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [181]  SetAttr(CreateMap( {21} : methodName)) 
_B.setattr({"v-on:md-opened":_methodname},_B);
// [183]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [184]  Return Me 
return _B;
// End Sub
};

// [188] private Sub SetOnClosed As VMSnackbar 
_B.setonclosed=function() {
var _methodname,_e,_cb;
// [189]  Dim methodName As String = {9} 
_methodname="" + _B._id + "_closed";
// [190]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [191]  Dim e As BANanoEvent 
_e=null;
// [192]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [193]  SetAttr(CreateMap( {22} : methodName)) 
_B.setattr({"v-on:md-closed":_methodname},_B);
// [195]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [196]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMSpeedDial  =========================== */
function banano_bananovuematerial_vmspeeddial() {
var _B=this;
_B._speeddial= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._target= new banano_bananovuematerial_vmelement();

_B._content= new banano_bananovuematerial_vmelement();

_B._hasbuttons=false;

_B._module={};

// [14] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMSpeedDial 
_B.initialize=function(_v,_sid,_eventhandler) {
// [15]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [16]  module = eventHandler 
_B._module=_eventhandler;
// [17]  SpeedDial.Initialize(v, ID).SetTag( {4} ) 
_B._speeddial.initialize(_v,_B._id).settag("md-speed-dial");
// [18]  target.Initialize(v, {5} ).SetTag( {6} ).SetRipple(True) 
_B._target.initialize(_v,"").settag("md-speed-dial-target").setripple(true);
// [19]  content.Initialize(v, {7} ).SetTag( {8} ) 
_B._content.initialize(_v,"").settag("md-speed-dial-content");
// [20]  vue = v 
_B._vue=_v;
// [21]  hasButtons = False 
_B._hasbuttons=false;
// [22]  SpeedDial.SetOnClick(eventHandler, {0} ) 
_B._speeddial.setonclick(_eventhandler,"" + _B._id + "_click");
// [23]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetInitialIcon(i As String) As VMSpeedDial 
_B.setinitialicon=function(_i) {
var _icn;
// [28]  Dim icn As VMIcon 
_icn= new banano_bananovuematerial_vmicon();
// [29]  icn.Initialize(vue, {1} ).SetText(i).AddClass( {9} ) 
_icn.initialize(_B._vue,"" + _B._id + "initicon").settext(_i).addclass("md-morph-initial");
// [30]  icn.Pop(target) 
_icn.pop(_B._target);
// [31]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetPrimary(b As Boolean) As VMSpeedDial 
_B.setprimary=function(_b) {
// [35]  target.AddClass( {10} ) 
_B._target.addclass("md-primary");
// [36]  Return Me 
return _B;
// End Sub
};

// [39] Sub SetAccent(b As Boolean) As VMSpeedDial 
_B.setaccent=function(_b) {
// [40]  target.AddClass( {11} ) 
_B._target.addclass("md-accent");
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetFinalIcon(i As String) As VMSpeedDial 
_B.setfinalicon=function(_i) {
var _icn;
// [45]  Dim icn As VMIcon 
_icn= new banano_bananovuematerial_vmicon();
// [46]  icn.Initialize(vue, {2} ).SetText(i).AddClass( {12} ) 
_icn.initialize(_B._vue,"" + _B._id + "finalicon").settext(_i).addclass("md-morph-final");
// [47]  icn.Pop(target) 
_icn.pop(_B._target);
// [48]  Return Me 
return _B;
// End Sub
};

// [52] Sub SetIcon(i As String) As VMSpeedDial 
_B.seticon=function(_i) {
var _icn;
// [53]  If i = {13} Then Return Me 
if (_i=="") { return _B;}
// [54]  Dim icn As VMIcon 
_icn= new banano_bananovuematerial_vmicon();
// [55]  icn.Initialize(vue, {3} ).SetText(i) 
_icn.initialize(_B._vue,"" + _B._id + "icon").settext(_i);
// [56]  icn.Pop(target) 
_icn.pop(_B._target);
// [57]  Return Me 
return _B;
// End Sub
};

// [60] Sub AddButton(btnID As String, btnIcon As String) As VMSpeedDial 
_B.addbutton=function(_btnid,_btnicon) {
var _btn;
// [61]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [62]  btn.Initialize(vue,btnID,module).SetIcon(btnIcon).SetIconButton(True) 
_btn.initialize(_B._vue,_btnid,_B._module).seticon(_btnicon).seticonbutton(true);
// [63]  btn.Pop(content) 
_btn.pop(_B._content);
// [64]  hasButtons = True 
_B._hasbuttons=true;
// [65]  Return Me 
return _B;
// End Sub
};

// [69] Sub ToString As String 
_B.tostring=function() {
// [70]  target.Pop(SpeedDial) 
_B._target.pop(_B._speeddial);
// [71]  If hasButtons Then content.Pop(SpeedDial) 
if (_B._hasbuttons) {_B._content.pop(_B._speeddial);}
// [72]  Return SpeedDial.ToString 
return _B._speeddial.tostring();
// End Sub
};

// [75] Sub SetVModel(k As String) As VMSpeedDial 
_B.setvmodel=function(_k) {
// [76]  SpeedDial.SetVModel(k) 
_B._speeddial.setvmodel(_k);
// [77]  Return Me 
return _B;
// End Sub
};

// [81] Sub Render 
_B.render=function() {
// [82]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [86] Sub AddChild(child As VMElement) As VMSpeedDial 
_B.addchild=function(_child) {
var _childhtml;
// [87]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [88]  SpeedDial.SetText(childHTML) 
_B._speeddial.settext(_childhtml);
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetText(t As Object) As VMSpeedDial 
_B.settext=function(_t) {
// [94]  SpeedDial.SetText(t) 
_B._speeddial.settext(_t);
// [95]  Return Me 
return _B;
// End Sub
};

// [99] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [100]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [105] Sub AddClass(c As String) As VMSpeedDial 
_B.addclass=function(_c) {
// [106]  SpeedDial.AddClass(c) 
_B._speeddial.addclass(_c);
// [107]  Return Me 
return _B;
// End Sub
};

// [111] Sub SetAttr(attr As Map) As VMSpeedDial 
_B.setattr=function(_attr) {
// [112]  SpeedDial.SetAttr(attr) 
_B._speeddial.setattr(_attr);
// [113]  Return Me 
return _B;
// End Sub
};

// [117] Sub SetStyle(sm As Map) As VMSpeedDial 
_B.setstyle=function(_sm) {
// [118]  SpeedDial.SetStyle(sm) 
_B._speeddial.setstyle(_sm);
// [119]  Return Me 
return _B;
// End Sub
};

// [123] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [124]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [125]  AddChild(childx) 
_B.addchild(_childx,_B);
// [126]  Next 
}
// End Sub
};

// [130] Sub SetPadding(p As Object) As VMSpeedDial 
_B.setpadding=function(_p) {
// [131]  SpeedDial.SetPaddingAll(p) 
_B._speeddial.setpaddingall(_p);
// [132]  Return Me 
return _B;
// End Sub
};

// [136] Sub SetDirection(varDirection As Object) As VMSpeedDial 
_B.setdirection=function(_vardirection) {
// [137]  SpeedDial.Element.SetAttr( {14} , varDirection) 
_B._speeddial._element.setattr("md-direction",_vardirection);
// [138]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetDirectionTop(b As Boolean) As VMSpeedDial 'ignore 
_B.setdirectiontop=function(_b) {
// [143]  SpeedDial.Element.SetAttr( {15} , {16} ) 
_B._speeddial._element.setattr("md-direction","top");
// [144]  Return Me 
return _B;
// End Sub
};

// [148] Sub SetDirectionBottom(b As Boolean) As VMSpeedDial 'ignore 
_B.setdirectionbottom=function(_b) {
// [149]  SpeedDial.Element.SetAttr( {17} , {18} ) 
_B._speeddial._element.setattr("md-direction","bottom");
// [150]  Return Me 
return _B;
// End Sub
};

// [154] Sub SetEffect(varEffect As Object) As VMSpeedDial 
_B.seteffect=function(_vareffect) {
// [155]  SpeedDial.Element.SetAttr( {19} , varEffect) 
_B._speeddial._element.setattr("md-effect",_vareffect);
// [156]  Return Me 
return _B;
// End Sub
};

// [160] Sub SetEffectFling(b As Boolean) As VMSpeedDial 'ignore 
_B.seteffectfling=function(_b) {
// [161]  SpeedDial.Element.SetAttr( {20} , {21} ) 
_B._speeddial._element.setattr("md-effect","fling");
// [162]  Return Me 
return _B;
// End Sub
};

// [166] Sub SetEffectScale(b As Boolean) As VMSpeedDial 'ignore 
_B.seteffectscale=function(_b) {
// [167]  SpeedDial.Element.SetAttr( {22} , {23} ) 
_B._speeddial._element.setattr("md-effect","scale");
// [168]  Return Me 
return _B;
// End Sub
};

// [172] Sub SetEffectOpacity(b As Boolean) As VMSpeedDial 'ignore 
_B.seteffectopacity=function(_b) {
// [173]  SpeedDial.Element.SetAttr( {24} , {25} ) 
_B._speeddial._element.setattr("md-effect","opacity");
// [174]  Return Me 
return _B;
// End Sub
};

// [178] Sub SetEvent(varEvent As Object) As VMSpeedDial 
_B.setevent=function(_varevent) {
// [179]  SpeedDial.Element.SetAttr( {26} , varEvent) 
_B._speeddial._element.setattr("md-event",_varevent);
// [180]  Return Me 
return _B;
// End Sub
};

// [184] Sub SetEventHover(b As Boolean) As VMSpeedDial 'ignore 
_B.seteventhover=function(_b) {
// [185]  SpeedDial.Element.SetAttr( {27} , {28} ) 
_B._speeddial._element.setattr("md-event","hover");
// [186]  Return Me 
return _B;
// End Sub
};

// [190] Sub SetEventClick(b As Boolean) As VMSpeedDial 'ignore 
_B.seteventclick=function(_b) {
// [191]  SpeedDial.Element.SetAttr( {29} , {30} ) 
_B._speeddial._element.setattr("md-event","click");
// [192]  Return Me 
return _B;
// End Sub
};

// [196] Sub SetPositionTopRight(b As Boolean) As VMSpeedDial 'ignore 
_B.setpositiontopright=function(_b) {
// [197]  AddClass( {31} ) 
_B.addclass("md-top-right",_B);
// [198]  Return Me 
return _B;
// End Sub
};

// [202] Sub SetPositionTopCenter(b As Boolean) As VMSpeedDial 'ignore 
_B.setpositiontopcenter=function(_b) {
// [203]  AddClass( {32} ) 
_B.addclass("md-top-center",_B);
// [204]  Return Me 
return _B;
// End Sub
};

// [208] Sub SetPositionTopLeft(b As Boolean) As VMSpeedDial 'ignore 
_B.setpositiontopleft=function(_b) {
// [209]  AddClass( {33} ) 
_B.addclass("md-top-left",_B);
// [210]  Return Me 
return _B;
// End Sub
};

// [214] Sub SetPositionBottomRight(b As Boolean) As VMSpeedDial 'ignore 
_B.setpositionbottomright=function(_b) {
// [215]  AddClass( {34} ) 
_B.addclass("md-bottom-right",_B);
// [216]  Return Me 
return _B;
// End Sub
};

// [220] Sub SetPositionBottomCenter(b As Boolean) As VMSpeedDial 'ignore 
_B.setpositionbottomcenter=function(_b) {
// [221]  AddClass( {35} ) 
_B.addclass("md-bottom-center",_B);
// [222]  Return Me 
return _B;
// End Sub
};

// [226] Sub SetPositionBottomLeft(b As Boolean) As VMSpeedDial 'ignore 
_B.setpositionbottomleft=function(_b) {
// [227]  AddClass( {36} ) 
_B.addclass("md-bottom-left",_B);
// [228]  Return Me 
return _B;
// End Sub
};

// [232] Sub SetPositionFixed(b As Boolean) As VMSpeedDial 'ignore 
_B.setpositionfixed=function(_b) {
// [233]  AddClass( {37} ) 
_B.addclass("md-fixed",_B);
// [234]  Return Me 
return _B;
// End Sub
};

// [237] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [238]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMSpinner  =========================== */
function banano_bananovuematerial_vmspinner() {
var _B=this;
_B._spinner= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

_B._bindvalue="";

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMSpinner 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [13]  vue = v 
_B._vue=_v;
// [14]  Spinner.Initialize(vue, ID).SetTag( {1} ) 
_B._spinner.initialize(_B._vue,_B._id).settag("md-progress-spinner");
// [15]  module = eventHandler 
_B._module=_eventhandler;
// [16]  bindvalue = {0} 
_B._bindvalue="" + _B._id + "value";
// [17]  SetValue(Null) 
_B.setvalue(null,_B);
// [18]  Return Me 
return _B;
// End Sub
};

// [22] Sub SetValue(valueInt As Int) As VMSpinner 
_B.setvalue=function(_valueint) {
// [23]  Spinner.SetAttr1( {2} , bindvalue) 
_B._spinner.setattr1(":md-value",_B._bindvalue);
// [24]  vue.SetStateSingle(bindvalue, valueInt) 
_B._vue.setstatesingle(_B._bindvalue,_valueint);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetStyle(m As Map) As VMSpinner 
_B.setstyle=function(_m) {
// [29]  Spinner.SetStyle(m) 
_B._spinner.setstyle(_m);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetMargin(p As String) As VMSpinner 
_B.setmargin=function(_p) {
// [34]  Spinner.SetStyle(CreateMap( {3} :p)) 
_B._spinner.setstyle({"margin":_p});
// [35]  Return Me 
return _B;
// End Sub
};

// [38] Sub SetPadding(p As String) As VMSpinner 
_B.setpadding=function(_p) {
// [39]  Spinner.SetStyle(CreateMap( {4} :p)) 
_B._spinner.setstyle({"padding":_p});
// [40]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetMode(varMode As String) As VMSpinner 
_B.setmode=function(_varmode) {
// [45]  Spinner.SetAttr1( {5} , varMode) 
_B._spinner.setattr1("md-mode",_varmode);
// [46]  Return Me 
return _B;
// End Sub
};

// [49] Sub SetModeDeterminate(b As Boolean) As VMSpinner 
_B.setmodedeterminate=function(_b) {
// [50]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [51]  SetMode( {6} ) 
_B.setmode("determinate",_B);
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub SetModeInDeterminate(b As Boolean) As VMSpinner 
_B.setmodeindeterminate=function(_b) {
// [56]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [57]  SetMode( {7} ) 
_B.setmode("indeterminate",_B);
// [58]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetStroke(bValue As Int) As VMSpinner 
_B.setstroke=function(_bvalue) {
// [62]  Spinner.SetAttr1( {8} , bValue) 
_B._spinner.setattr1(":md-stroke",_bvalue);
// [63]  Return Me 
return _B;
// End Sub
};

// [66] Sub SetDiameter(bValue As Int) As VMSpinner 
_B.setdiameter=function(_bvalue) {
// [67]  Spinner.SetAttr1( {9} , bValue) 
_B._spinner.setattr1(":md-diameter",_bvalue);
// [68]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetTabIndex(ti As String) As VMSpinner 
_B.settabindex=function(_ti) {
// [73]  Spinner.SetTabIndex(ti) 
_B._spinner.settabindex(_ti);
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SetVShow(vshow As String) As VMSpinner 
_B.setvshow=function(_vshow) {
// [78]  Spinner.SetVShow(vshow) 
_B._spinner.setvshow(_vshow);
// [79]  Return Me 
return _B;
// End Sub
};

// [82] Sub SetVIf(vshow As String) As VMSpinner 
_B.setvif=function(_vshow) {
// [83]  Spinner.SetVif(vshow) 
_B._spinner.setvif(_vshow);
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetPrimary(b As Boolean) As VMSpinner 
_B.setprimary=function(_b) {
// [88]  Spinner.SetPrimary(b) 
_B._spinner.setprimary(_b);
// [89]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetAccent(b As Boolean) As VMSpinner 
_B.setaccent=function(_b) {
// [93]  Spinner.SetAccent(b) 
_B._spinner.setaccent(_b);
// [94]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetName(varName As Object, bind As Boolean) As VMSpinner 
_B.setname=function(_varname,_bind) {
// [99]  Spinner.SetName(varName, bind) 
_B._spinner.setname(_varname,_bind);
// [100]  Return Me 
return _B;
// End Sub
};

// [104] Sub AddClass(c As String) As VMSpinner 
_B.addclass=function(_c) {
// [105]  Spinner.AddClass(c) 
_B._spinner.addclass(_c);
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub SetAttr(attr As Map) As VMSpinner 
_B.setattr=function(_attr) {
// [111]  Spinner.SetAttr(attr) 
_B._spinner.setattr(_attr);
// [112]  Return Me 
return _B;
// End Sub
};

// [115] Sub ToString As String 
_B.tostring=function() {
// [116]  Return Spinner.tostring 
return _B._spinner.tostring();
// End Sub
};

// [119] Sub Render 
_B.render=function() {
// [120]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [123] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [124]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [127] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [128]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMStepItem  =========================== */
function banano_bananovuematerial_vmstepitem() {
var _B=this;
_B._stepitem= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMStepItem 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  StepItem.Initialize(v, ID) 
_B._stepitem.initialize(_v,_B._id);
// [14]  StepItem.SetTag( {5} ) 
_B._stepitem.settag("md-step");
// [15]  vue = v 
_B._vue=_v;
// [16]  SetId(ID) 
_B.setid(_B._id,_B);
// [17]  module = eventHandler 
_B._module=_eventhandler;
// [18]  SetDoneSync(False) 
_B.setdonesync(false,_B);
// [19]  SetError(Null) 
_B.seterror(null,_B);
// [20]  Return Me 
return _B;
// End Sub
};

// [23] Sub SetTabIndex(ti As String) As VMStepItem 
_B.settabindex=function(_ti) {
// [24]  StepItem.SetTabIndex(ti) 
_B._stepitem.settabindex(_ti);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetContent(content As String) As VMStepItem 
_B.setcontent=function(_content) {
// [29]  StepItem.SetText(content) 
_B._stepitem.settext(_content);
// [30]  Return Me 
return _B;
// End Sub
};

// [34] Sub ToString As String 
_B.tostring=function() {
// [35]  Return StepItem.ToString 
return _B._stepitem.tostring();
// End Sub
};

// [38] Sub SetVModel(k As String) As VMStepItem 
_B.setvmodel=function(_k) {
// [39]  StepItem.SetVModel(k) 
_B._stepitem.setvmodel(_k);
// [40]  Return Me 
return _B;
// End Sub
};

// [43] Sub SetVIf(vif As Object) As VMStepItem 
_B.setvif=function(_vif) {
// [44]  StepItem.SetVIf(vif) 
_B._stepitem.setvif(_vif);
// [45]  Return Me 
return _B;
// End Sub
};

// [48] Sub SetVShow(vif As Object) As VMStepItem 
_B.setvshow=function(_vif) {
// [49]  StepItem.SetVShow(vif) 
_B._stepitem.setvshow(_vif);
// [50]  Return Me 
return _B;
// End Sub
};

// [54] Sub Render 
_B.render=function() {
// [55]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [59] Sub AddChild(child As VMElement) As VMStepItem 
_B.addchild=function(_child) {
var _childhtml;
// [60]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [61]  StepItem.SetText(childHTML) 
_B._stepitem.settext(_childhtml);
// [62]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetPrimary(b As Boolean) As VMStepItem 
_B.setprimary=function(_b) {
// [66]  StepItem.SetPrimary(True) 
_B._stepitem.setprimary(true);
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetAccent(b As Boolean) As VMStepItem 
_B.setaccent=function(_b) {
// [71]  StepItem.SetAccent(True) 
_B._stepitem.setaccent(true);
// [72]  Return Me 
return _B;
// End Sub
};

// [76] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [77]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [81] Sub AddClass(c As String) As VMStepItem 
_B.addclass=function(_c) {
// [82]  StepItem.AddClass(c) 
_B._stepitem.addclass(_c);
// [83]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetAttr(attr As Map) As VMStepItem 
_B.setattr=function(_attr) {
// [88]  StepItem.SetAttr(attr) 
_B._stepitem.setattr(_attr);
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetStyle(sm As Map) As VMStepItem 
_B.setstyle=function(_sm) {
// [94]  StepItem.SetStyle(sm) 
_B._stepitem.setstyle(_sm);
// [95]  Return Me 
return _B;
// End Sub
};

// [99] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [100]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [101]  AddChild(childx) 
_B.addchild(_childx,_B);
// [102]  Next 
}
// End Sub
};

// [106] Sub SetPadding(p As Object) As VMStepItem 
_B.setpadding=function(_p) {
// [107]  StepItem.SetPaddingAll(p) 
_B._stepitem.setpaddingall(_p);
// [108]  Return Me 
return _B;
// End Sub
};

// [112] Sub SetId(varId As Object) As VMStepItem 
_B.setid=function(_varid) {
// [113]  SetAttr(CreateMap( {6} : varId)) 
_B.setattr({"id":_varid},_B);
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetHref(varHref As Object) As VMStepItem 
_B.sethref=function(_varhref) {
// [119]  SetAttr(CreateMap( {7} : varHref)) 
_B.setattr({"href":_varhref},_B);
// [120]  Return Me 
return _B;
// End Sub
};

// [124] Sub SetLabel(varLabel As String) As VMStepItem 
_B.setlabel=function(_varlabel) {
var _lblx;
// [125]  Dim lblx As String = {0} 
_lblx="" + _B._id + "label";
// [126]  vue.SetStateSingle(lblx, varLabel) 
_B._vue.setstatesingle(_lblx,_varlabel);
// [127]  SetAttr(CreateMap( {8} : lblx)) 
_B.setattr({"v-bind:md-label":_lblx},_B);
// [128]  Return Me 
return _B;
// End Sub
};

// [131] private Sub SetDoneSync(b As Boolean) As VMStepItem 
_B.setdonesync=function(_b) {
var _done;
// [132]  Dim done As String = {1} 
_done="" + _B._id + "done";
// [133]  vue.SetStateSingle(done, b) 
_B._vue.setstatesingle(_done,_b);
// [134]  SetAttr(CreateMap( {9} :done)) 
_B.setattr({":md-done.sync":_done},_B);
// [135]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetDescription(varDescription As Object) As VMStepItem 
_B.setdescription=function(_vardescription) {
var _dd;
// [140]  Dim dd As String = {2} 
_dd="" + _B._id + "description";
// [141]  vue.SetStateSingle(dd, varDescription) 
_B._vue.setstatesingle(_dd,_vardescription);
// [142]  SetAttr(CreateMap( {10} : dd)) 
_B.setattr({":md-description":_dd},_B);
// [143]  Return Me 
return _B;
// End Sub
};

// [147] Sub SetError(varError As String) As VMStepItem 
_B.seterror=function(_varerror) {
var _dd;
// [148]  Dim dd As String = {3} 
_dd="" + _B._id + "error";
// [149]  vue.SetStateSingle(dd, varError) 
_B._vue.setstatesingle(_dd,_varerror);
// [150]  SetAttr(CreateMap( {11} : dd)) 
_B.setattr({":md-error":_dd},_B);
// [151]  Return Me 
return _B;
// End Sub
};

// [155] Sub SetEditable(varEditable As Boolean) As VMStepItem 
_B.seteditable=function(_vareditable) {
var _dd;
// [156]  Dim dd As String = {4} 
_dd="" + _B._id + "editable";
// [157]  vue.SetStateSingle(dd, varEditable) 
_B._vue.setstatesingle(_dd,_vareditable);
// [158]  SetAttr(CreateMap( {12} : dd)) 
_B.setattr({":md-editable":_dd},_B);
// [159]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMSteppers  =========================== */
function banano_bananovuematerial_vmsteppers() {
var _B=this;
_B._steppers= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._actkey="";

_B._module={};

_B._steps={};

// [13] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMSteppers 
_B.initialize=function(_v,_sid,_eventhandler) {
// [14]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [15]  module = eventHandler 
_B._module=_eventhandler;
// [16]  Steppers.Initialize(v, ID) 
_B._steppers.initialize(_v,_B._id);
// [17]  Steppers.SetTag( {9} ) 
_B._steppers.settag("md-steppers");
// [18]  vue = v 
_B._vue=_v;
// [19]  actKey = {0} 
_B._actkey="" + _B._id + "active";
// [20]  SetOnChanged 
_B.setonchanged(_B);
// [21]  SetActiveStepSync 
_B.setactivestepsync(_B);
// [22]  steps.initialize 
_B._steps={};
// [23]  Return Me 
return _B;
// End Sub
};

// [26] Sub SetKey(mdlName As String) As VMSteppers 
_B.setkey=function(_mdlname) {
// [27]  mdlName = mdlName.tolowercase 
_mdlname=_mdlname.toLowerCase();
// [28]  SetAttr(CreateMap( {10} : mdlName)) 
_B.setattr({":key":_mdlname},_B);
// [29]  Return Me 
return _B;
// End Sub
};

// [32] private Sub SetActiveStepSync As VMSteppers 
_B.setactivestepsync=function() {
// [33]  vue.SetStateSingle(actKey, Null) 
_B._vue.setstatesingle(_B._actkey,null);
// [34]  SetAttr(CreateMap( {11} : actKey)) 
_B.setattr({":md-active-step.sync":_B._actkey},_B);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub AddStep(stepID As String, stepLabel As String, stepDescription As String, stepEditable As Boolean, stepContent As String) 
_B.addstep=function(_stepid,_steplabel,_stepdescription,_stepeditable,_stepcontent) {
var _stepitem;
// [40]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [41]  steps.put(stepID, stepID) 
_B._steps[_stepid]=_stepid;
// [42]  Dim stepitem As VMStepItem 
_stepitem= new banano_bananovuematerial_vmstepitem();
// [43]  stepitem.Initialize(vue, stepID, module) 
_stepitem.initialize(_B._vue,_stepid,_B._module);
// [44]  stepitem.SetLabel(stepLabel) 
_stepitem.setlabel(_steplabel);
// [45]  If stepContent <> Null Then 
if (_stepcontent!=null) {
// [46]  stepitem.SetContent(stepContent) 
_stepitem.setcontent(_stepcontent);
// [47]  End If 
}
// [48]  stepitem.SetDescription(stepDescription) 
_stepitem.setdescription(_stepdescription);
// [49]  stepitem.SetEditable(stepEditable) 
_stepitem.seteditable(_stepeditable);
// [50]  stepitem.Pop(Steppers) 
_stepitem.pop(_B._steppers);
// End Sub
};

// [53] Sub SetElevation(e As Int) As VMSteppers 
_B.setelevation=function(_e) {
// [54]  Steppers.SetElevation(e) 
_B._steppers.setelevation(_e);
// [55]  Return Me 
return _B;
// End Sub
};

// [59] Sub SetStepEditable(stepID As String, stepEditable As Boolean) As VMSteppers 
_B.setstepeditable=function(_stepid,_stepeditable) {
var _stepshow;
// [60]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [61]  Dim stepShow As String = {1} 
_stepshow="" + _stepid + "editable";
// [62]  vue.SetStateSingle(stepShow, stepEditable) 
_B._vue.setstatesingle(_stepshow,_stepeditable);
// [63]  Return Me 
return _B;
// End Sub
};

// [66] Sub SetStepDescription(stepID As String, stepEditable As String) As VMSteppers 
_B.setstepdescription=function(_stepid,_stepeditable) {
var _stepshow;
// [67]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [68]  Dim stepShow As String = {2} 
_stepshow="" + _stepid + "description";
// [69]  vue.SetStateSingle(stepShow, stepEditable) 
_B._vue.setstatesingle(_stepshow,_stepeditable);
// [70]  Return Me 
return _B;
// End Sub
};

// [73] Sub SetStepLabel(stepID As String, stepLabel As String) As VMSteppers 
_B.setsteplabel=function(_stepid,_steplabel) {
var _stepshow;
// [74]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [75]  Dim stepShow As String = {3} 
_stepshow="" + _stepid + "label";
// [76]  vue.SetStateSingle(stepShow, stepLabel) 
_B._vue.setstatesingle(_stepshow,_steplabel);
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub HideStep(stepID As String) As VMSteppers 
_B.hidestep=function(_stepid) {
var _stepshow;
// [81]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [82]  Dim stepShow As String = {4} 
_stepshow="" + _stepid + "show";
// [83]  vue.SetStateSingle(stepShow, False) 
_B._vue.setstatesingle(_stepshow,false);
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub ShowStep(stepID As String) As VMSteppers 
_B.showstep=function(_stepid) {
var _stepshow;
// [88]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [89]  Dim stepShow As String = {5} 
_stepshow="" + _stepid + "show";
// [90]  vue.SetStateSingle(stepShow, True) 
_B._vue.setstatesingle(_stepshow,true);
// [91]  Return Me 
return _B;
// End Sub
};

// [95] Sub ToString As String 
_B.tostring=function() {
// [96]  Return Steppers.ToString 
return _B._steppers.tostring();
// End Sub
};

// [99] Sub SetVIf(vif As Object) As VMSteppers 
_B.setvif=function(_vif) {
// [100]  Steppers.SetVIf(vif) 
_B._steppers.setvif(_vif);
// [101]  Return Me 
return _B;
// End Sub
};

// [104] Sub SetVShow(vif As Object) As VMSteppers 
_B.setvshow=function(_vif) {
// [105]  Steppers.SetVShow(vif) 
_B._steppers.setvshow(_vif);
// [106]  Return Me 
return _B;
// End Sub
};

// [110] Sub Render 
_B.render=function() {
// [111]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [115] Sub AddChild(child As VMElement) As VMSteppers 
_B.addchild=function(_child) {
var _childhtml;
// [116]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [117]  Steppers.SetText(childHTML) 
_B._steppers.settext(_childhtml);
// [118]  Return Me 
return _B;
// End Sub
};

// [122] Sub SetText(t As Object) As VMSteppers 
_B.settext=function(_t) {
// [123]  Steppers.SetText(t) 
_B._steppers.settext(_t);
// [124]  Return Me 
return _B;
// End Sub
};

// [128] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [129]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [133] Sub AddClass(c As String) As VMSteppers 
_B.addclass=function(_c) {
// [134]  Steppers.AddClass(c) 
_B._steppers.addclass(_c);
// [135]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetAttr(attr As Map) As VMSteppers 
_B.setattr=function(_attr) {
// [140]  Steppers.SetAttr(attr) 
_B._steppers.setattr(_attr);
// [141]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetStyle(sm As Map) As VMSteppers 
_B.setstyle=function(_sm) {
// [146]  Steppers.SetStyle(sm) 
_B._steppers.setstyle(_sm);
// [147]  Return Me 
return _B;
// End Sub
};

// [151] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [152]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [153]  AddChild(childx) 
_B.addchild(_childx,_B);
// [154]  Next 
}
// End Sub
};

// [158] Sub SetPadding(p As Object) As VMSteppers 
_B.setpadding=function(_p) {
// [159]  Steppers.SetPaddingAll(p) 
_B._steppers.setpaddingall(_p);
// [160]  Return Me 
return _B;
// End Sub
};

// [164] Sub SetMargin(p As Object) As VMSteppers 
_B.setmargin=function(_p) {
// [165]  Steppers.SetMarginAll(p) 
_B._steppers.setmarginall(_p);
// [166]  Return Me 
return _B;
// End Sub
};

// [169] Sub SetStepError(stepID As String, stepError As String) As VMSteppers 
_B.setsteperror=function(_stepid,_steperror) {
var _dd;
// [170]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [171]  Dim dd As String = {6} 
_dd="" + _stepid + "error";
// [172]  vue.SetStateSingle(dd, stepError) 
_B._vue.setstatesingle(_dd,_steperror);
// [173]  Return Me 
return _B;
// End Sub
};

// [176] Sub SetStepDone(stepDone As String, b As Boolean) As VMSteppers 
_B.setstepdone=function(_stepdone,_b) {
var _dd;
// [177]  stepDone = stepDone.tolowercase 
_stepdone=_stepdone.toLowerCase();
// [178]  Dim dd As String = {7} 
_dd="" + _stepdone + "done";
// [179]  vue.SetStateSingle(dd, b) 
_B._vue.setstatesingle(_dd,_b);
// [180]  Return Me 
return _B;
// End Sub
};

// [184] Sub SetStepActive(varActiveStep As String) As VMSteppers 
_B.setstepactive=function(_varactivestep) {
var _stepa;
// [185]  varActiveStep = varActiveStep.tolowercase 
_varactivestep=_varactivestep.toLowerCase();
// [186]  vue.SetStateSingle(actKey, varActiveStep) 
_B._vue.setstatesingle(_B._actkey,_varactivestep);
// [187]  for each stepa as string in steps.keys 
var _stepaKeys = Object.keys(_B._steps);
for (var _stepaindex=0;_stepaindex<_stepaKeys.length;_stepaindex++) {
_stepa=_stepaKeys[_stepaindex];
// [188]  if stepa = varactivestep then 
if (_stepa==_varactivestep) {
// [189]  else 
} else {
// [190]  SetStepDone(stepa, false) 
_B.setstepdone(_stepa,false,_B);
// [191]  end if 
}
// [192]  next 
}
// [193]  Return Me 
return _B;
// End Sub
};

// [197] Sub SetSyncRoute(varSyncRoute As Boolean) As VMSteppers 
_B.setsyncroute=function(_varsyncroute) {
// [198]  SetAttr(CreateMap( {12} : varSyncRoute)) 
_B.setattr({":md-sync-route":_varsyncroute},_B);
// [199]  Return Me 
return _B;
// End Sub
};

// [203] Sub SetAlternative(varAlternative As Boolean) As VMSteppers 
_B.setalternative=function(_varalternative) {
// [204]  SetAttr(CreateMap( {13} : varAlternative)) 
_B.setattr({":md-alternative":_varalternative},_B);
// [205]  Return Me 
return _B;
// End Sub
};

// [209] Sub SetVertical(varVertical As Boolean) As VMSteppers 
_B.setvertical=function(_varvertical) {
// [210]  SetAttr(CreateMap( {14} : varVertical)) 
_B.setattr({":md-vertical":_varvertical},_B);
// [211]  Return Me 
return _B;
// End Sub
};

// [215] Sub SetLinear(varLinear As Boolean) As VMSteppers 
_B.setlinear=function(_varlinear) {
// [216]  SetAttr(CreateMap( {15} : varLinear)) 
_B.setattr({":md-linear":_varlinear},_B);
// [217]  Return Me 
return _B;
// End Sub
};

// [221] Sub SetDynamicHeight(varDynamicHeight As Boolean) As VMSteppers 
_B.setdynamicheight=function(_vardynamicheight) {
// [222]  SetAttr(CreateMap( {16} : varDynamicHeight)) 
_B.setattr({":md-dynamic-height":_vardynamicheight},_B);
// [223]  Return Me 
return _B;
// End Sub
};

// [227] private Sub SetOnChanged As VMSteppers 
_B.setonchanged=function() {
var _stepid,_methodname,_cb;
// [228]  Dim stepID As String = {17} 
_stepid="";
// [229]  Dim methodName As String = {8} 
_methodname="" + _B._id + "_change";
// [230]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [231]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(stepID)) 
_cb=function(_stepid) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_stepid,_B)};};
// [232]  SetAttr(CreateMap( {18} : methodName)) 
_B.setattr({"v-on:md-changed":_methodname},_B);
// [234]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [235]  Return Me 
return _B;
// End Sub
};

// [239] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [240]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMSwitch  =========================== */
function banano_bananovuematerial_vmswitch() {
var _B=this;
_B._switch= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._xmodel="";

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMSwitch 
_B.initialize=function(_v,_sid,_eventhandler) {
var _sval;
// [12]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [13]  vue = v 
_B._vue=_v;
// [14]  module = eventHandler 
_B._module=_eventhandler;
// [15]  Switch.Initialize(vue, ID).SetTag( {1} ) 
_B._switch.initialize(_B._vue,_B._id).settag("md-switch");
// [16]  xmodel = {2} 
_B._xmodel="";
// [17]  Dim sval As String 
_sval="";
// [18]  SetOnChange(sval) 
_B.setonchange(_sval,_B);
// [19]  Return Me 
return _B;
// End Sub
};

// [22] Sub SetText(t As String) As VMSwitch 
_B.settext=function(_t) {
// [23]  Switch.SetText(t) 
_B._switch.settext(_t);
// [24]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetTabIndex(ti As String) As VMSwitch 
_B.settabindex=function(_ti) {
// [28]  Switch.SetTabIndex(ti) 
_B._switch.settabindex(_ti);
// [29]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetName(varName As Object, bind As Boolean) As VMSwitch 
_B.setname=function(_varname,_bind) {
// [35]  Switch.SetName(varName, bind) 
_B._switch.setname(_varname,_bind);
// [36]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetID(varName As Object, bind As Boolean) As VMSwitch 
_B.setid=function(_varname,_bind) {
// [41]  Switch.SetID(varName, bind) 
_B._switch.setid(_varname,_bind);
// [42]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetDisabled(b As Boolean) As VMSwitch 
_B.setdisabled=function(_b) {
// [46]  Switch.SetDisabled(b) 
_B._switch.setdisabled(_b);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub AddClass(c As String) As VMSwitch 
_B.addclass=function(_c) {
// [52]  Switch.AddClass(c) 
_B._switch.addclass(_c);
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub SetAttr(attr As Map) As VMSwitch 
_B.setattr=function(_attr) {
// [58]  Switch.SetAttr(attr) 
_B._switch.setattr(_attr);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetPrimary(b As Boolean) As VMSwitch 
_B.setprimary=function(_b) {
// [63]  If b Then Switch.SetPrimary(True) 
if (_b) {_B._switch.setprimary(true);}
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetAccent(b As Boolean) As VMSwitch 
_B.setaccent=function(_b) {
// [68]  If b Then Switch.SetAccent(True) 
if (_b) {_B._switch.setaccent(true);}
// [69]  Return Me 
return _B;
// End Sub
};

// [73] private Sub SetOnChange(value As Object) As VMSwitch 
_B.setonchange=function(_value) {
var _methodname,_cb;
// [74]  Private methodName As String = {0} 
_methodname="" + _B._id + "_change";
// [75]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [76]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(value)) 
_cb=function(_value) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_value,_B)};};
// [77]  SetAttr(CreateMap( {3} : methodName)) 
_B.setattr({"v-on:change":_methodname},_B);
// [79]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [80]  Return Me 
return _B;
// End Sub
};

// [83] Sub SetVIf(vif As Object) As VMSwitch 
_B.setvif=function(_vif) {
// [84]  Switch.SetVIf(vif) 
_B._switch.setvif(_vif);
// [85]  Return Me 
return _B;
// End Sub
};

// [88] Sub SetVShow(vif As Object) As VMSwitch 
_B.setvshow=function(_vif) {
// [89]  Switch.SetVShow(vif) 
_B._switch.setvshow(_vif);
// [90]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetValue(v As Object) As VMSwitch 
_B.setvalue=function(_v) {
// [94]  SetAttr(CreateMap( {4} : v)) 
_B.setattr({"value":_v},_B);
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetVModel(k As String) As VMSwitch 
_B.setvmodel=function(_k) {
// [99]  Switch.SetVModel(k) 
_B._switch.setvmodel(_k);
// [100]  xmodel = k.tolowercase 
_B._xmodel=_k.toLowerCase();
// [101]  Return Me 
return _B;
// End Sub
};

// [104] Sub ToString As String 
_B.tostring=function() {
// [105]  Return Switch.tostring 
return _B._switch.tostring();
// End Sub
};

// [108] Sub Render 
_B.render=function() {
// [109]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [112] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [113]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [117] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [118]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMTable  =========================== */
function banano_bananovuematerial_vmtable() {
var _B=this;
_B._table= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._toolbar= new banano_bananovuematerial_vmtoolbar();

_B._module={};

_B._tblrow= new banano_bananovuematerial_vmtr();

// [13] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMTable 
_B.initialize=function(_v,_sid,_eventhandler) {
var _pp;
// [14]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [15]  Table.Initialize(v, ID) 
_B._table.initialize(_v,_B._id);
// [16]  Table.SetTag( {5} ) 
_B._table.settag("md-table");
// [17]  vue = v 
_B._vue=_v;
// [18]  module = eventHandler 
_B._module=_eventhandler;
// [19]  SetOnSelected 
_B.setonselected(_B);
// [21]  ToolBar.Initialize(vue, {0} , eventHandler).SetTableToolbar(True) 
_B._toolbar.initialize(_B._vue,"" + _B._id + "table",_eventhandler).settabletoolbar(true);
// [22]  tblRow.Initialize(vue, {1} , ID) 
_B._tblrow.initialize(_B._vue,"" + _B._id + "row",_B._id);
// [23]  Table.RemoveAttr( {6} ) 
_B._table.removeattr(":required");
// [24]  Table.RemoveAttr( {7} ) 
_B._table.removeattr(":disabled");
// [25]  Table.RemoveAttr( {8} ) 
_B._table.removeattr("id");
// [26]  Table.RemoveAttr( {9} ) 
_B._table.removeattr("ref");
// [27]  Dim pp As String = {2} 
_pp="" + _B._id + "selection";
// [28]  vue.SetStateSingle(pp, Null) 
_B._vue.setstatesingle(_pp,null);
// [29]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetSelectableSingle(b As Boolean) As VMTable 
_B.setselectablesingle=function(_b) {
// [34]  tblRow.SetSelectableSingle(b) 
_B._tblrow.setselectablesingle(_b);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub SetSelectableMultiple(b As Boolean) As VMTable 
_B.setselectablemultiple=function(_b) {
// [40]  tblRow.SetSelectableMultiple(b) 
_B._tblrow.setselectablemultiple(_b);
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetAutoSelect(b As Boolean) As VMTable 
_B.setautoselect=function(_b) {
// [45]  tblRow.SetAutoSelect(b) 
_B._tblrow.setautoselect(_b);
// [46]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetElevation(e As Int) As VMTable 
_B.setelevation=function(_e) {
// [51]  Table.SetElevation(e) 
_B._table.setelevation(_e);
// [52]  Return Me 
return _B;
// End Sub
};

// [55] Sub AddColumn(colID As String, colLabel As String, colNumeric As Boolean, colVisible As Boolean) 
_B.addcolumn=function(_colid,_collabel,_colnumeric,_colvisible) {
var _tc;
// [56]  Dim tc As VMTD 
_tc= new banano_bananovuematerial_vmtd();
// [57]  tc.Initialize(vue, colID).SetLabel(colLabel).SetSortBy(colID).SetNumeric(colNumeric).SetText( {3} ) 
_tc.initialize(_B._vue,_colid).setlabel(_collabel).setsortby(_colid).setnumeric(_colnumeric).settext("{{ item." + _colid + " }}");
// [58]  tc.SetVShow(colVisible) 
_tc.setvshow(_colvisible);
// [59]  tc.Pop(tblRow.TR) 
_tc.pop(_B._tblrow._tr);
// End Sub
};

// [63] Sub ToString As String 
_B.tostring=function() {
// [64]  If ToolBar.HasContent Then 
if (_B._toolbar._hascontent) {
// [65]  ToolBar.Pop(Table) 
_B._toolbar.pop(_B._table);
// [66]  End If 
}
// [67]  If tblRow.hascontent Then 
if (_B._tblrow._hascontent) {
// [68]  tblRow.Pop(Table) 
_B._tblrow.pop(_B._table);
// [69]  End If 
}
// [70]  Return Table.ToString 
return _B._table.tostring();
// End Sub
};

// [73] Sub SetFixedHeaders(b As Boolean) As VMTable 
_B.setfixedheaders=function(_b) {
// [74]  If b Then SetAttr(CreateMap( {10} : {11} )) 
if (_b) {_B.setattr({"md-fixed-header":"true"},_B);}
// [75]  Return Me 
return _B;
// End Sub
};

// [78] Sub SetSort(columnName As String) As VMTable 
_B.setsort=function(_columnname) {
// [79]  SetAttr(CreateMap( {12} :columnName)) 
_B.setattr({"md-sort":_columnname},_B);
// [80]  Return Me 
return _B;
// End Sub
};

// [83] Sub SetCard(b As Boolean) As VMTable 
_B.setcard=function(_b) {
// [84]  If b Then SetAttr(CreateMap( {13} : True)) 
if (_b) {_B.setattr({"md-card":true},_B);}
// [85]  Return Me 
return _B;
// End Sub
};

// [88] Sub SetVModel(k As String) As VMTable 
_B.setvmodel=function(_k) {
// [89]  Table.SetVModel(k) 
_B._table.setvmodel(_k);
// [90]  Return Me 
return _B;
// End Sub
};

// [93] Sub SetVIf(vif As Object) As VMTable 
_B.setvif=function(_vif) {
// [94]  Table.SetVIf(vif) 
_B._table.setvif(_vif);
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetSortOrderAsc(b As Boolean) As VMTable 
_B.setsortorderasc=function(_b) {
// [99]  If b Then SetAttr(CreateMap( {14} : {15} )) 
if (_b) {_B.setattr({"md-sort-order":"asc"},_B);}
// [100]  Return Me 
return _B;
// End Sub
};

// [103] Sub SetSortOrderDesc(b As Boolean) As VMTable 
_B.setsortorderdesc=function(_b) {
// [104]  If b Then SetAttr(CreateMap( {16} : {17} )) 
if (_b) {_B.setattr({"md-sort-order":"desc"},_B);}
// [105]  Return Me 
return _B;
// End Sub
};

// [108] private Sub SetOnSelected As VMTable 
_B.setonselected=function() {
var _items,_methodname,_cb;
// [109]  Dim items As List 
_items=[];
// [110]  Dim methodName As String = {4} 
_methodname="" + _B._id + "_select";
// [111]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(items)) 
_cb=function(_items) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_items,_B)};};
// [112]  SetAttr(CreateMap( {18} : methodName)) 
_B.setattr({"@md-selected":_methodname},_B);
// [114]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [115]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetVShow(vif As Object) As VMTable 
_B.setvshow=function(_vif) {
// [119]  Table.SetVShow(vif) 
_B._table.setvshow(_vif);
// [120]  Return Me 
return _B;
// End Sub
};

// [124] Sub Render 
_B.render=function() {
// [125]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [129] Sub AddChild(child As VMElement) As VMTable 
_B.addchild=function(_child) {
var _childhtml;
// [130]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [131]  Table.SetText(childHTML) 
_B._table.settext(_childhtml);
// [132]  Return Me 
return _B;
// End Sub
};

// [136] Sub SetText(t As Object) As VMTable 
_B.settext=function(_t) {
// [137]  Table.SetText(t) 
_B._table.settext(_t);
// [138]  Return Me 
return _B;
// End Sub
};

// [141] Sub SetPrimary(b As Boolean) As VMTable 
_B.setprimary=function(_b) {
// [142]  If b Then Table.SetPrimary(True) 
if (_b) {_B._table.setprimary(true);}
// [143]  Return Me 
return _B;
// End Sub
};

// [146] Sub SetAccent(b As Boolean) As VMTable 
_B.setaccent=function(_b) {
// [147]  If b Then Table.SetAccent(True) 
if (_b) {_B._table.setaccent(true);}
// [148]  Return Me 
return _B;
// End Sub
};

// [152] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [153]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [157] Sub AddClass(c As String) As VMTable 
_B.addclass=function(_c) {
// [158]  Table.AddClass(c) 
_B._table.addclass(_c);
// [159]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetAttr(attr As Map) As VMTable 
_B.setattr=function(_attr) {
// [164]  Table.SetAttr(attr) 
_B._table.setattr(_attr);
// [165]  Return Me 
return _B;
// End Sub
};

// [169] Sub SetStyle(sm As Map) As VMTable 
_B.setstyle=function(_sm) {
// [170]  Table.SetStyle(sm) 
_B._table.setstyle(_sm);
// [171]  Return Me 
return _B;
// End Sub
};

// [175] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [176]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [177]  AddChild(childx) 
_B.addchild(_childx,_B);
// [178]  Next 
}
// End Sub
};

// [182] Sub SetPadding(p As Object) As VMTable 
_B.setpadding=function(_p) {
// [183]  Table.SetPaddingAll(p) 
_B._table.setpaddingall(_p);
// [184]  Return Me 
return _B;
// End Sub
};

// [188] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [189]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMTabs  =========================== */
function banano_bananovuematerial_vmtabs() {
var _B=this;
_B._tabs= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._atkey="" + _B._id + "active";

_B._module={};

// [12] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMTabs 
_B.initialize=function(_v,_sid,_eventhandler) {
// [13]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [14]  Tabs.Initialize(v, ID) 
_B._tabs.initialize(_v,_B._id);
// [15]  Tabs.SetTag( {11} ) 
_B._tabs.settag("md-tabs");
// [16]  vue = v 
_B._vue=_v;
// [17]  module = eventHandler 
_B._module=_eventhandler;
// [18]  SetOnChanged 
_B.setonchanged(_B);
// [19]  Return Me 
return _B;
// End Sub
};

// [23] Sub SetDisabled(b As Boolean) As VMTabs 
_B.setdisabled=function(_b) {
// [24]  Tabs.SetDisabled(b) 
_B._tabs.setdisabled(_b);
// [25]  Return Me 
return _B;
// End Sub
};

// [29] Sub SetTabLabel(stepID As String, stepLabel As String) As VMTabs 
_B.settablabel=function(_stepid,_steplabel) {
var _stepshow;
// [30]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [31]  Dim stepShow As String = {1} 
_stepshow="" + _stepid + "label";
// [32]  vue.SetStateSingle(stepShow, stepLabel) 
_B._vue.setstatesingle(_stepshow,_steplabel);
// [33]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetTabIcon(stepID As String, stepLabel As String) As VMTabs 
_B.settabicon=function(_stepid,_steplabel) {
var _stepshow;
// [38]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [39]  Dim stepShow As String = {2} 
_stepshow="" + _stepid + "icon";
// [40]  vue.SetStateSingle(stepShow, stepLabel) 
_B._vue.setstatesingle(_stepshow,_steplabel);
// [41]  Return Me 
return _B;
// End Sub
};

// [45] Sub SetTabDisabled(stepID As String, stepLabel As Boolean) As VMTabs 
_B.settabdisabled=function(_stepid,_steplabel) {
var _stepshow;
// [46]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [47]  Dim stepShow As String = {3} 
_stepshow="" + _stepid + "disabled";
// [48]  vue.SetStateSingle(stepShow, stepLabel) 
_B._vue.setstatesingle(_stepshow,_steplabel);
// [49]  Return Me 
return _B;
// End Sub
};

// [52] Sub HideTab(stepID As String) As VMTabs 
_B.hidetab=function(_stepid) {
var _stepshow;
// [53]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [54]  Dim stepShow As String = {4} 
_stepshow="" + _stepid + "show";
// [55]  vue.SetStateSingle(stepShow, False) 
_B._vue.setstatesingle(_stepshow,false);
// [56]  Return Me 
return _B;
// End Sub
};

// [59] Sub ShowTab(stepID As String) As VMTabs 
_B.showtab=function(_stepid) {
var _stepshow;
// [60]  stepID = stepID.tolowercase 
_stepid=_stepid.toLowerCase();
// [61]  Dim stepShow As String = {5} 
_stepshow="" + _stepid + "show";
// [62]  vue.SetStateSingle(stepShow, True) 
_B._vue.setstatesingle(_stepshow,true);
// [63]  Return Me 
return _B;
// End Sub
};

// [67] Sub AddTab(tabID As String, tabLabel As String, tabIcon As String, tabContent As String) 
_B.addtab=function(_tabid,_tablabel,_tabicon,_tabcontent) {
var _ti;
// [68]  tabID = tabID.tolowercase 
_tabid=_tabid.toLowerCase();
// [69]  Dim ti As VMTabsItem 
_ti= new banano_bananovuematerial_vmtabsitem();
// [70]  ti.Initialize(vue,tabID,module) 
_ti.initialize(_B._vue,_tabid,_B._module);
// [71]  ti.SetLabel(tabLabel) 
_ti.setlabel(_tablabel);
// [72]  ti.SetIcon(tabIcon) 
_ti.seticon(_tabicon);
// [74]  If tabContent <> Null Then 
if (_tabcontent!=null) {
// [75]  ti.SetText(tabContent) 
_ti.settext(_tabcontent);
// [76]  End If 
}
// [77]  ti.Pop(Tabs) 
_ti.pop(_B._tabs);
// End Sub
};

// [81] Sub ToString As String 
_B.tostring=function() {
// [82]  Return Tabs.ToString 
return _B._tabs.tostring();
// End Sub
};

// [85] Sub SetVModel(k As String) As VMTabs 
_B.setvmodel=function(_k) {
// [86]  Tabs.SetVModel(k) 
_B._tabs.setvmodel(_k);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetVIf(vif As Object) As VMTabs 
_B.setvif=function(_vif) {
// [91]  Tabs.SetVIf(vif) 
_B._tabs.setvif(_vif);
// [92]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetVShow(vif As Object) As VMTabs 
_B.setvshow=function(_vif) {
// [96]  Tabs.SetVShow(vif) 
_B._tabs.setvshow(_vif);
// [97]  Return Me 
return _B;
// End Sub
};

// [101] Sub Render 
_B.render=function() {
// [102]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [106] Sub AddChild(child As VMElement) As VMTabs 
_B.addchild=function(_child) {
var _childhtml;
// [107]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [108]  Tabs.SetText(childHTML) 
_B._tabs.settext(_childhtml);
// [109]  Return Me 
return _B;
// End Sub
};

// [113] Sub SetText(t As Object) As VMTabs 
_B.settext=function(_t) {
// [114]  Tabs.SetText(t) 
_B._tabs.settext(_t);
// [115]  Return Me 
return _B;
// End Sub
};

// [118] Sub SetPrimary(b As Boolean) As VMTabs 
_B.setprimary=function(_b) {
// [119]  Tabs.SetPrimary(True) 
_B._tabs.setprimary(true);
// [120]  Return Me 
return _B;
// End Sub
};

// [123] Sub SetAccent(b As Boolean) As VMTabs 
_B.setaccent=function(_b) {
// [124]  Tabs.SetAccent(True) 
_B._tabs.setaccent(true);
// [125]  Return Me 
return _B;
// End Sub
};

// [129] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [130]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [134] Sub AddClass(c As String) As VMTabs 
_B.addclass=function(_c) {
// [135]  Tabs.AddClass(c) 
_B._tabs.addclass(_c);
// [136]  Return Me 
return _B;
// End Sub
};

// [140] Sub SetAttr(attr As Map) As VMTabs 
_B.setattr=function(_attr) {
// [141]  Tabs.SetAttr(attr) 
_B._tabs.setattr(_attr);
// [142]  Return Me 
return _B;
// End Sub
};

// [146] Sub SetStyle(sm As Map) As VMTabs 
_B.setstyle=function(_sm) {
// [147]  Tabs.SetStyle(sm) 
_B._tabs.setstyle(_sm);
// [148]  Return Me 
return _B;
// End Sub
};

// [152] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [153]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [154]  AddChild(childx) 
_B.addchild(_childx,_B);
// [155]  Next 
}
// End Sub
};

// [159] Sub SetPadding(p As Object) As VMTabs 
_B.setpadding=function(_p) {
// [160]  Tabs.SetPaddingAll(p) 
_B._tabs.setpaddingall(_p);
// [161]  Return Me 
return _B;
// End Sub
};

// [171] Sub SetTabActive(varActiveTab As String) As VMTabs 
_B.settabactive=function(_varactivetab) {
// [172]  If varActiveTab = Null Then Return Me 
if (_varactivetab==null) { return _B;}
// [173]  varActiveTab = varActiveTab.tolowercase 
_varactivetab=_varactivetab.toLowerCase();
// [174]  vue.SetStateSingle(atKey, varActiveTab) 
_B._vue.setstatesingle(_B._atkey,_varactivetab);
// [175]  SetAttr(CreateMap( {12} : atKey)) 
_B.setattr({":md-active-tab":_B._atkey},_B);
// [176]  Return Me 
return _B;
// End Sub
};

// [180] Sub SetSwipeable(varSwipeable As Boolean) As VMTabs 
_B.setswipeable=function(_varswipeable) {
var _pp;
// [181]  Dim pp As String = {7} 
_pp="" + _B._id + "swipeable";
// [182]  vue.SetStateSingle(pp, varSwipeable) 
_B._vue.setstatesingle(_pp,_varswipeable);
// [183]  SetAttr(CreateMap( {13} : pp)) 
_B.setattr({":md-swipeable":_pp},_B);
// [184]  Return Me 
return _B;
// End Sub
};

// [188] Sub SetSyncRoute(varSyncRoute As Boolean) As VMTabs 
_B.setsyncroute=function(_varsyncroute) {
// [189]  SetAttr(CreateMap( {14} : varSyncRoute)) 
_B.setattr({":md-sync-route":_varsyncroute},_B);
// [190]  Return Me 
return _B;
// End Sub
};

// [194] Sub SetAlignment(varAlignment As String) As VMTabs 
_B.setalignment=function(_varalignment) {
var _pp;
// [195]  Dim pp As String = {8} 
_pp="" + _B._id + "alignment";
// [196]  vue.SetStateSingle(pp, varAlignment) 
_B._vue.setstatesingle(_pp,_varalignment);
// [197]  SetAttr(CreateMap( {15} : pp)) 
_B.setattr({":md-alignment":_pp},_B);
// [198]  Return Me 
return _B;
// End Sub
};

// [202] Sub SetAlignmentLeft(b As Boolean) As VMTabs 'ignore 
_B.setalignmentleft=function(_b) {
// [203]  SetAlignment( {16} ) 
_B.setalignment("left",_B);
// [204]  Return Me 
return _B;
// End Sub
};

// [208] Sub SetAlignmentCenter(b As Boolean) As VMTabs 'ignore 
_B.setalignmentcenter=function(_b) {
// [209]  SetAlignment( {17} ) 
_B.setalignment("centered",_B);
// [210]  Return Me 
return _B;
// End Sub
};

// [214] Sub SetAlignmentRight(b As Boolean) As VMTabs 'ignore 
_B.setalignmentright=function(_b) {
// [215]  SetAlignment( {18} ) 
_B.setalignment("right",_B);
// [216]  Return Me 
return _B;
// End Sub
};

// [220] Sub SetAlignmentFixed(b As Boolean) As VMTabs 'ignore 
_B.setalignmentfixed=function(_b) {
// [221]  SetAlignment( {19} ) 
_B.setalignment("fixed",_B);
// [222]  Return Me 
return _B;
// End Sub
};

// [226] Sub SetDynamicHeight(varDynamicHeight As Boolean) As VMTabs 
_B.setdynamicheight=function(_vardynamicheight) {
var _pp;
// [227]  Dim pp As String = {9} 
_pp="" + _B._id + "dynamicheight";
// [228]  vue.SetStateSingle(pp, varDynamicHeight) 
_B._vue.setstatesingle(_pp,_vardynamicheight);
// [229]  SetAttr(CreateMap( {20} : pp)) 
_B.setattr({":md-dynamic-height":_pp},_B);
// [230]  Return Me 
return _B;
// End Sub
};

// [234] Sub SetMargin(p As Object) As VMTabs 
_B.setmargin=function(_p) {
// [235]  Tabs.SetMarginAll(p) 
_B._tabs.setmarginall(_p);
// [236]  Return Me 
return _B;
// End Sub
};

// [240] Sub SetElevation(varElevation As Int) As VMTabs 
_B.setelevation=function(_varelevation) {
// [241]  Tabs.SetElevation(varElevation) 
_B._tabs.setelevation(_varelevation);
// [242]  Return Me 
return _B;
// End Sub
};

// [246] Sub SetSwipeThreshold(varSwipeThreshold As Object) As VMTabs 
_B.setswipethreshold=function(_varswipethreshold) {
// [247]  SetAttr(CreateMap( {21} : varSwipeThreshold)) 
_B.setattr({"md-swipe-threshold":_varswipethreshold},_B);
// [248]  Return Me 
return _B;
// End Sub
};

// [252] Sub SetSwipeRestraint(varSwipeRestraint As Object) As VMTabs 
_B.setswiperestraint=function(_varswiperestraint) {
// [253]  SetAttr(CreateMap( {22} : varSwipeRestraint)) 
_B.setattr({"md-swipe-restraint":_varswiperestraint},_B);
// [254]  Return Me 
return _B;
// End Sub
};

// [258] Sub SetSwipeTime(varSwipeTime As Object) As VMTabs 
_B.setswipetime=function(_varswipetime) {
// [259]  SetAttr(CreateMap( {23} : varSwipeTime)) 
_B.setattr({"md-swipe-time":_varswipetime},_B);
// [260]  Return Me 
return _B;
// End Sub
};

// [264] private Sub SetOnChanged As VMTabs 
_B.setonchanged=function() {
var _tabid,_methodname,_cb;
// [265]  Dim tabID As String 
_tabid="";
// [266]  Dim methodName As String = {10} 
_methodname="" + _B._id + "_change";
// [267]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [268]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(tabID)) 
_cb=function(_tabid) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_tabid,_B)};};
// [269]  SetAttr(CreateMap( {24} : methodName)) 
_B.setattr({"v-on:md-changed":_methodname},_B);
// [271]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [272]  Return Me 
return _B;
// End Sub
};

// [276] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [277]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMTabsItem  =========================== */
function banano_bananovuematerial_vmtabsitem() {
var _B=this;
_B._tabitem= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._module={};

// [11] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMTabsItem 
_B.initialize=function(_v,_sid,_eventhandler) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  TabItem.Initialize(v, ID) 
_B._tabitem.initialize(_v,_B._id);
// [14]  TabItem.SetTag( {3} ) 
_B._tabitem.settag("md-tab");
// [15]  vue = v 
_B._vue=_v;
// [16]  SetId(ID) 
_B.setid(_B._id,_B);
// [17]  module = eventHandler 
_B._module=_eventhandler;
// [18]  Return Me 
return _B;
// End Sub
};

// [22] Sub ToString As String 
_B.tostring=function() {
// [23]  Return TabItem.ToString 
return _B._tabitem.tostring();
// End Sub
};

// [26] Sub SetVIf(vif As String) As VMTabsItem 
_B.setvif=function(_vif) {
// [27]  TabItem.SetVIf(vif) 
_B._tabitem.setvif(_vif);
// [28]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetVShow(vif As String) As VMTabsItem 
_B.setvshow=function(_vif) {
// [32]  TabItem.SetVShow(vif) 
_B._tabitem.setvshow(_vif);
// [33]  Return Me 
return _B;
// End Sub
};

// [37] Sub Render 
_B.render=function() {
// [38]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [42] Sub AddChild(child As VMElement) As VMTabsItem 
_B.addchild=function(_child) {
var _childhtml;
// [43]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [44]  TabItem.SetText(childHTML) 
_B._tabitem.settext(_childhtml);
// [45]  Return Me 
return _B;
// End Sub
};

// [49] Sub SetText(t As String) As VMTabsItem 
_B.settext=function(_t) {
// [50]  TabItem.SetText(t) 
_B._tabitem.settext(_t);
// [51]  Return Me 
return _B;
// End Sub
};

// [55] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [56]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [60] Sub AddClass(c As String) As VMTabsItem 
_B.addclass=function(_c) {
// [61]  TabItem.AddClass(c) 
_B._tabitem.addclass(_c);
// [62]  Return Me 
return _B;
// End Sub
};

// [66] Sub SetAttr(attr As Map) As VMTabsItem 
_B.setattr=function(_attr) {
// [67]  TabItem.SetAttr(attr) 
_B._tabitem.setattr(_attr);
// [68]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetStyle(sm As Map) As VMTabsItem 
_B.setstyle=function(_sm) {
// [73]  TabItem.SetStyle(sm) 
_B._tabitem.setstyle(_sm);
// [74]  Return Me 
return _B;
// End Sub
};

// [78] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [79]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [80]  AddChild(childx) 
_B.addchild(_childx,_B);
// [81]  Next 
}
// End Sub
};

// [85] Sub SetPadding(p As Object) As VMTabsItem 
_B.setpadding=function(_p) {
// [86]  TabItem.SetPaddingAll(p) 
_B._tabitem.setpaddingall(_p);
// [87]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetId(varId As String) As VMTabsItem 
_B.setid=function(_varid) {
// [92]  If varId = {4} Then Return Me 
if (_varid=="") { return _B;}
// [93]  SetAttr(CreateMap( {5} : varId)) 
_B.setattr({"id":_varid},_B);
// [94]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetRef(varRef As String) As VMTabsItem 
_B.setref=function(_varref) {
// [99]  If varRef = {6} Then Return Me 
if (_varref=="") { return _B;}
// [100]  SetAttr(CreateMap( {7} : varRef)) 
_B.setattr({"ref":_varref},_B);
// [101]  Return Me 
return _B;
// End Sub
};

// [105] Sub SetLabel(varLabel As String) As VMTabsItem 
_B.setlabel=function(_varlabel) {
var _pp;
// [106]  Dim pp As String = {0} 
_pp="" + _B._id + "label";
// [107]  vue.SetStateSingle(pp, varLabel) 
_B._vue.setstatesingle(_pp,_varlabel);
// [108]  SetAttr(CreateMap( {8} : pp)) 
_B.setattr({":md-label":_pp},_B);
// [109]  Return Me 
return _B;
// End Sub
};

// [113] Sub SetIcon(varIcon As String) As VMTabsItem 
_B.seticon=function(_varicon) {
var _pp;
// [114]  Dim pp As String = {1} 
_pp="" + _B._id + "icon";
// [115]  vue.SetStateSingle(pp, varIcon) 
_B._vue.setstatesingle(_pp,_varicon);
// [116]  SetAttr(CreateMap( {9} : pp)) 
_B.setattr({":md-icon":_pp},_B);
// [117]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetDisabled(varDisabled As Boolean) As VMTabsItem 
_B.setdisabled=function(_vardisabled) {
var _pp;
// [122]  Dim pp As String = {2} 
_pp="" + _B._id + "disabled";
// [123]  vue.SetStateSingle(pp, varDisabled) 
_B._vue.setstatesingle(_pp,_vardisabled);
// [124]  SetAttr(CreateMap( {10} : pp)) 
_B.setattr({":md-disabled":_pp},_B);
// [125]  Return Me 
return _B;
// End Sub
};

// [129] Sub SetTemplateData(varTemplateData As Object) As VMTabsItem 
_B.settemplatedata=function(_vartemplatedata) {
// [130]  SetAttr(CreateMap( {11} : varTemplateData)) 
_B.setattr({"md-template-data":_vartemplatedata},_B);
// [131]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMTD  =========================== */
function banano_bananovuematerial_vmtd() {
var _B=this;
_B._td= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMTD 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  TD.Initialize(v, ID) 
_B._td.initialize(_v,_B._id);
// [13]  TD.SetTag( {1} ) 
_B._td.settag("md-table-cell");
// [14]  vue = v 
_B._vue=_v;
// [15]  TD.RemoveAttr( {2} ) 
_B._td.removeattr(":required");
// [16]  TD.RemoveAttr( {3} ) 
_B._td.removeattr(":disabled");
// [17]  TD.RemoveAttr( {4} ) 
_B._td.removeattr("v-show");
// [18]  TD.RemoveAttr( {5} ) 
_B._td.removeattr("ref");
// [19]  TD.RemoveAttr( {6} ) 
_B._td.removeattr("id");
// [20]  Return Me 
return _B;
// End Sub
};

// [24] Sub ToString As String 
_B.tostring=function() {
// [25]  TD.RemoveAttr( {7} ) 
_B._td.removeattr("v-show");
// [26]  Return TD.ToString 
return _B._td.tostring();
// End Sub
};

// [29] Sub SetVisible(b As Boolean) As VMTD 
_B.setvisible=function(_b) {
// [30]  TD.SetVisible(b) 
_B._td.setvisible(_b);
// [31]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetNumeric(b As Boolean) As VMTD 
_B.setnumeric=function(_b) {
// [35]  If b Then 
if (_b) {
// [36]  SetAttr(CreateMap( {8} : {9} )) 
_B.setattr({"md-numeric":"true"},_B);
// [37]  End If 
}
// [38]  Return Me 
return _B;
// End Sub
};

// [41] Sub SetSortBy(i As String) As VMTD 
_B.setsortby=function(_i) {
// [42]  SetAttr(CreateMap( {10} :i)) 
_B.setattr({"md-sort-by":_i},_B);
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetLabel(l As String) As VMTD 
_B.setlabel=function(_l) {
// [47]  SetAttr(CreateMap( {11} :l)) 
_B.setattr({"md-label":_l},_B);
// [48]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetVModel(k As String) As VMTD 
_B.setvmodel=function(_k) {
// [52]  TD.SetVModel(k) 
_B._td.setvmodel(_k);
// [53]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetVIf(vif As Object) As VMTD 
_B.setvif=function(_vif) {
// [57]  TD.SetVIf(vif) 
_B._td.setvif(_vif);
// [58]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetVShow(vif As Boolean) As VMTD 
_B.setvshow=function(_vif) {
var _colshow;
// [62]  Dim colShow As String = {0} 
_colshow="" + _B._id + "show";
// [63]  vue.SetStateSingle(colShow, vif) 
_B._vue.setstatesingle(_colshow,_vif);
// [64]  TD.SetVShow(colShow) 
_B._td.setvshow(_colshow);
// [65]  Return Me 
return _B;
// End Sub
};

// [69] Sub Render 
_B.render=function() {
// [70]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [74] Sub AddChild(child As VMElement) As VMTD 
_B.addchild=function(_child) {
var _childhtml;
// [75]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [76]  TD.SetText(childHTML) 
_B._td.settext(_childhtml);
// [77]  Return Me 
return _B;
// End Sub
};

// [81] Sub SetText(t As Object) As VMTD 
_B.settext=function(_t) {
// [82]  TD.SetText(t) 
_B._td.settext(_t);
// [83]  Return Me 
return _B;
// End Sub
};

// [86] Sub SetPrimary(b As Boolean) As VMTD 
_B.setprimary=function(_b) {
// [87]  TD.SetPrimary(True) 
_B._td.setprimary(true);
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetAccent(b As Boolean) As VMTD 
_B.setaccent=function(_b) {
// [92]  TD.SetAccent(True) 
_B._td.setaccent(true);
// [93]  Return Me 
return _B;
// End Sub
};

// [97] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [98]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [102] Sub AddClass(c As String) As VMTD 
_B.addclass=function(_c) {
// [103]  TD.AddClass(c) 
_B._td.addclass(_c);
// [104]  Return Me 
return _B;
// End Sub
};

// [108] Sub SetAttr(attr As Map) As VMTD 
_B.setattr=function(_attr) {
// [109]  TD.SetAttr(attr) 
_B._td.setattr(_attr);
// [110]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetStyle(sm As Map) As VMTD 
_B.setstyle=function(_sm) {
// [115]  TD.SetStyle(sm) 
_B._td.setstyle(_sm);
// [116]  Return Me 
return _B;
// End Sub
};

// [120] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [121]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [122]  AddChild(childx) 
_B.addchild(_childx,_B);
// [123]  Next 
}
// End Sub
};

// [127] Sub SetPadding(p As Object) As VMTD 
_B.setpadding=function(_p) {
// [128]  TD.SetPaddingAll(p) 
_B._td.setpaddingall(_p);
// [129]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMTextArea  =========================== */
function banano_bananovuematerial_vmtextarea() {
var _B=this;
_B._textarea= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._internal= new banano_bananovuematerial_vmfield();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._hashelp=false;

_B._ht= new banano_bananovuematerial_vmelement();

_B._haserror=false;

_B._he= new banano_bananovuematerial_vmelement();

_B._icon1= new banano_bananovuematerial_vmicon();

_B._module={};

// [18] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMTextArea 
_B.initialize=function(_v,_sid,_eventhandler) {
// [19]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [20]  module = eventHandler 
_B._module=_eventhandler;
// [21]  TextArea.Initialize(v, ID) 
_B._textarea.initialize(_v,_B._id);
// [22]  TextArea.SetTag( {3} ) 
_B._textarea.settag("md-textarea");
// [23]  vue = v 
_B._vue=_v;
// [24]  Internal.Initialize(v,ID, {0} , module) 
_B._internal.initialize(_v,_B._id,"" + _B._id + "field",_B._module);
// [25]  lbl.Initialize(vue, {1} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label");
// [26]  hasHelp = False 
_B._hashelp=false;
// [27]  hasError = False 
_B._haserror=false;
// [28]  icon1.Initialize(vue, {2} ) 
_B._icon1.initialize(_B._vue,"" + _B._id + "icon");
// [29]  Return Me 
return _B;
// End Sub
};

// [32] Sub SetCounterDisabled As VMTextArea 
_B.setcounterdisabled=function() {
// [33]  Internal.SetAttr(CreateMap( {4} : False)) 
_B._internal.setattr({":md-counter":false});
// [34]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetTabIndex(ti As String) As VMTextArea 
_B.settabindex=function(_ti) {
// [38]  TextArea.SetTabIndex(ti) 
_B._textarea.settabindex(_ti);
// [39]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetName(varName As Object, bind As Boolean) As VMTextArea 
_B.setname=function(_varname,_bind) {
// [45]  TextArea.SetName(varName, bind) 
_B._textarea.setname(_varname,_bind);
// [46]  Return Me 
return _B;
// End Sub
};

// [50] Sub SetIcon(strIcon As String) As VMTextArea 
_B.seticon=function(_stricon) {
// [51]  If strIcon <> {5} Then icon1.SetText(strIcon) 
if (_stricon!="") {_B._icon1.settext(_stricon);}
// [52]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetReadOnly(b As Boolean) As VMTextArea 
_B.setreadonly=function(_b) {
// [57]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [58]  TextArea.SetAttr(CreateMap( {6} : b)) 
_B._textarea.setattr({":readonly":_b});
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetLabel(l As String) As VMTextArea 
_B.setlabel=function(_l) {
// [63]  If l = {7} Then Return Me 
if (_l=="") { return _B;}
// [64]  lbl.SetText(l) 
_B._lbl.settext(_l);
// [65]  Return Me 
return _B;
// End Sub
};

// [69] Sub ToString As String 
_B.tostring=function() {
// [70]  lbl.Pop(Internal.Field) 
_B._lbl.pop(_B._internal._field);
// [71]  TextArea.Pop(Internal.Field) 
_B._textarea.pop(_B._internal._field);
// [72]  If hasHelp Then 
if (_B._hashelp) {
// [73]  ht.Pop(Internal.Field) 
_B._ht.pop(_B._internal._field);
// [74]  End If 
}
// [75]  If hasError Then 
if (_B._haserror) {
// [76]  he.Pop(Internal.field) 
_B._he.pop(_B._internal._field);
// [77]  End If 
}
// [78]  If icon1.hasContent Then 
if (_B._icon1._hascontent) {
// [79]  icon1.Pop(Internal.Field) 
_B._icon1.pop(_B._internal._field);
// [80]  End If 
}
// [81]  Return Internal.tostring 
return _B._internal.tostring();
// End Sub
};

// [84] Sub SetVModel(k As String) As VMTextArea 
_B.setvmodel=function(_k) {
// [85]  If k = {8} Then Return Me 
if (_k=="") { return _B;}
// [86]  TextArea.SetVModel(k) 
_B._textarea.setvmodel(_k);
// [87]  Return Me 
return _B;
// End Sub
};

// [91] Sub SetHelperText(t As String) As VMTextArea 
_B.sethelpertext=function(_t) {
// [92]  If t = {9} Then Return Me 
if (_t=="") { return _B;}
// [93]  hasHelp = True 
_B._hashelp=true;
// [94]  ht = TextArea.SetHelperText(t) 
_B._ht=_B._textarea.sethelpertext(_t);
// [95]  Return Me 
return _B;
// End Sub
};

// [98] Sub SetErrorText(t As String) As VMTextArea 
_B.seterrortext=function(_t) {
// [99]  hasError = True 
_B._haserror=true;
// [100]  he = TextArea.SetErrorText(t) 
_B._he=_B._textarea.seterrortext(_t);
// [101]  Return Me 
return _B;
// End Sub
};

// [105] Sub SetVIf(vif As String) As VMTextArea 
_B.setvif=function(_vif) {
// [106]  If vif = {10} Then Return Me 
if (_vif=="") { return _B;}
// [107]  Internal.SetVIf(vif) 
_B._internal.setvif(_vif);
// [108]  Return Me 
return _B;
// End Sub
};

// [111] Sub SetVShow(vif As String) As VMTextArea 
_B.setvshow=function(_vif) {
// [112]  If vif = {11} Then Return Me 
if (_vif=="") { return _B;}
// [113]  Internal.SetVShow(vif) 
_B._internal.setvshow(_vif);
// [114]  Return Me 
return _B;
// End Sub
};

// [118] Sub Render 
_B.render=function() {
// [119]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [123] Sub AddChild(child As VMElement) As VMTextArea 
_B.addchild=function(_child) {
var _childhtml;
// [124]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [125]  TextArea.SetText(childHTML) 
_B._textarea.settext(_childhtml);
// [126]  Return Me 
return _B;
// End Sub
};

// [130] Sub SetText(t As Object) As VMTextArea 
_B.settext=function(_t) {
// [131]  TextArea.SetText(t) 
_B._textarea.settext(_t);
// [132]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetPrimary(b As Boolean) As VMTextArea 
_B.setprimary=function(_b) {
// [136]  TextArea.SetPrimary(True) 
_B._textarea.setprimary(true);
// [137]  Return Me 
return _B;
// End Sub
};

// [140] Sub SetAccent(b As Boolean) As VMTextArea 
_B.setaccent=function(_b) {
// [141]  TextArea.SetAccent(True) 
_B._textarea.setaccent(true);
// [142]  Return Me 
return _B;
// End Sub
};

// [146] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [147]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [151] Sub AddClass(c As String) As VMTextArea 
_B.addclass=function(_c) {
// [152]  TextArea.AddClass(c) 
_B._textarea.addclass(_c);
// [153]  Return Me 
return _B;
// End Sub
};

// [157] Sub SetAttr(attr As Map) As VMTextArea 
_B.setattr=function(_attr) {
// [158]  TextArea.SetAttr(attr) 
_B._textarea.setattr(_attr);
// [159]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetStyle(sm As Map) As VMTextArea 
_B.setstyle=function(_sm) {
// [164]  TextArea.SetStyle(sm) 
_B._textarea.setstyle(_sm);
// [165]  Return Me 
return _B;
// End Sub
};

// [169] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [170]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [171]  AddChild(childx) 
_B.addchild(_childx,_B);
// [172]  Next 
}
// End Sub
};

// [176] Sub SetPadding(p As Object) As VMTextArea 
_B.setpadding=function(_p) {
// [177]  TextArea.SetPaddingAll(p) 
_B._textarea.setpaddingall(_p);
// [178]  Return Me 
return _B;
// End Sub
};

// [183] Sub SetPlaceholder(varPlaceholder As Object) As VMTextArea 
_B.setplaceholder=function(_varplaceholder) {
// [184] SetAttr(CreateMap( {12} : varPlaceholder)) 
_B.setattr({"placeholder":_varplaceholder},_B);
// [185] Return Me 
return _B;
// End Sub
};

// [189] Sub SetRequired(varRequired As Boolean) As VMTextArea 
_B.setrequired=function(_varrequired) {
// [190]  TextArea.SetRequired(varRequired) 
_B._textarea.setrequired(_varrequired);
// [191]  Return Me 
return _B;
// End Sub
};

// [195] Sub SetDisabled(b As Boolean) As VMTextArea 
_B.setdisabled=function(_b) {
// [196]  TextArea.SetDisabled(b) 
_B._textarea.setdisabled(_b);
// [197]  Return Me 
return _B;
// End Sub
};

// [201] Sub SetMaxLength(varMaxlength As String) As VMTextArea 
_B.setmaxlength=function(_varmaxlength) {
// [202]  If varMaxlength = {13} Then Return Me 
if (_varmaxlength=="") { return _B;}
// [203]  If varMaxlength = Null Then Return Me 
if (_varmaxlength==null) { return _B;}
// [204]  SetAttr(CreateMap( {14} : varMaxlength)) 
_B.setattr({"maxlength":_varmaxlength},_B);
// [205]  Return Me 
return _B;
// End Sub
};

// [209] Sub SetCounter(varCounter As String) As VMTextArea 
_B.setcounter=function(_varcounter) {
// [210]  If varCounter = {15} Then Return Me 
if (_varcounter=="") { return _B;}
// [211]  SetAttr(CreateMap( {16} : varCounter)) 
_B.setattr({":md-counter":_varcounter},_B);
// [212]  Return Me 
return _B;
// End Sub
};

// [216] Sub SetAutogrow(varAutogrow As Boolean) As VMTextArea 
_B.setautogrow=function(_varautogrow) {
// [217]  If varAutogrow = False Then Return Me 
if (_varautogrow==false) { return _B;}
// [218]  SetAttr(CreateMap( {17} : varAutogrow)) 
_B.setattr({":md-autogrow":_varautogrow},_B);
// [219]  Return Me 
return _B;
// End Sub
};

// [223] Sub SetInline(varInline As Boolean) As VMTextArea 
_B.setinline=function(_varinline) {
// [224]  If varInline = False Then Return Me 
if (_varinline==false) { return _B;}
// [225]  Internal.SetAttr(CreateMap( {18} : varInline)) 
_B._internal.setattr({":md-inline":_varinline});
// [226]  Return Me 
return _B;
// End Sub
};

// [230] Sub SetClearable(varClearable As Boolean) As VMTextArea 
_B.setclearable=function(_varclearable) {
// [231]  If varClearable Then Internal.SetAttr(CreateMap( {19} : varClearable)) 
if (_varclearable) {_B._internal.setattr({":md-clearable":_varclearable});}
// [232] Return Me 
return _B;
// End Sub
};

// [236] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [237]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMTH  =========================== */
function banano_bananovuematerial_vmth() {
var _B=this;
_B._th= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

// [10] Public Sub Initialize(v As BANanoVue, sid As String) As VMTH 
_B.initialize=function(_v,_sid) {
// [11]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [12]  TH.Initialize(v, ID) 
_B._th.initialize(_v,_B._id);
// [13]  TH.SetTag( {0} ) 
_B._th.settag("md-table-head");
// [14]  vue = v 
_B._vue=_v;
// [15]  Return Me 
return _B;
// End Sub
};

// [19] Sub ToString As String 
_B.tostring=function() {
// [20]  Return TH.ToString 
return _B._th.tostring();
// End Sub
};

// [23] Sub SetVModel(k As String) As VMTH 
_B.setvmodel=function(_k) {
// [24]  TH.SetVModel(k) 
_B._th.setvmodel(_k);
// [25]  Return Me 
return _B;
// End Sub
};

// [28] Sub SetVIf(vif As Object) As VMTH 
_B.setvif=function(_vif) {
// [29]  TH.SetVIf(vif) 
_B._th.setvif(_vif);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] Sub SetVShow(vif As Object) As VMTH 
_B.setvshow=function(_vif) {
// [34]  TH.SetVShow(vif) 
_B._th.setvshow(_vif);
// [35]  Return Me 
return _B;
// End Sub
};

// [39] Sub Render 
_B.render=function() {
// [40]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [44] Sub AddChild(child As VMElement) As VMTH 
_B.addchild=function(_child) {
var _childhtml;
// [45]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [46]  TH.SetText(childHTML) 
_B._th.settext(_childhtml);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetText(t As Object) As VMTH 
_B.settext=function(_t) {
// [52]  TH.SetText(t) 
_B._th.settext(_t);
// [53]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetPrimary(b As Boolean) As VMTH 
_B.setprimary=function(_b) {
// [57]  TH.SetPrimary(True) 
_B._th.setprimary(true);
// [58]  Return Me 
return _B;
// End Sub
};

// [61] Sub SetAccent(b As Boolean) As VMTH 
_B.setaccent=function(_b) {
// [62]  TH.SetAccent(True) 
_B._th.setaccent(true);
// [63]  Return Me 
return _B;
// End Sub
};

// [67] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [68]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [72] Sub AddClass(c As String) As VMTH 
_B.addclass=function(_c) {
// [73]  TH.AddClass(c) 
_B._th.addclass(_c);
// [74]  Return Me 
return _B;
// End Sub
};

// [78] Sub SetAttr(attr As Map) As VMTH 
_B.setattr=function(_attr) {
// [79]  TH.SetAttr(attr) 
_B._th.setattr(_attr);
// [80]  Return Me 
return _B;
// End Sub
};

// [84] Sub SetStyle(sm As Map) As VMTH 
_B.setstyle=function(_sm) {
// [85]  TH.SetStyle(sm) 
_B._th.setstyle(_sm);
// [86]  Return Me 
return _B;
// End Sub
};

// [90] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [91]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [92]  AddChild(childx) 
_B.addchild(_childx,_B);
// [93]  Next 
}
// End Sub
};

// [97] Sub SetPadding(p As Object) As VMTH 
_B.setpadding=function(_p) {
// [98]  TH.SetPaddingAll(p) 
_B._th.setpaddingall(_p);
// [99]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMTimePicker  =========================== */
function banano_bananovuematerial_vmtimepicker() {
var _B=this;
_B._timepicker= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._timepickerint= new banano_bananovuematerial_vmfield();

_B._lbl= new banano_bananovuematerial_vmlabel();

_B._hashelp=false;

_B._ht= new banano_bananovuematerial_vmelement();

_B._et= new banano_bananovuematerial_vmelement();

_B._haserror=false;

_B._module={};

// [16] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMTimePicker 
_B.initialize=function(_v,_sid,_eventhandler) {
var _sval;
// [17]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [18]  vue = v 
_B._vue=_v;
// [19]  module = eventHandler 
_B._module=_eventhandler;
// [20]  TimePicker.Initialize(vue, ID).SetTag( {13} ) 
_B._timepicker.initialize(_B._vue,_B._id).settag("md-select");
// [21]  TimePickerInt.Initialize(v,ID, {0} ,module) 
_B._timepickerint.initialize(_v,_B._id,"" + _B._id + "field",_B._module);
// [22]  lbl.Initialize(vue, {1} ) 
_B._lbl.initialize(_B._vue,"" + _B._id + "label");
// [23]  hasHelp = False 
_B._hashelp=false;
// [24]  hasError = False 
_B._haserror=false;
// [25]  SetTimes 
_B.settimes(_B);
// [26]  Dim sval As String 
_sval="";
// [27]  SetOnSelected(sval) 
_B.setonselected(_sval,_B);
// [28]  SetOnOpened 
_B.setonopened(_B);
// [29]  SetOnClosed 
_B.setonclosed(_B);
// [30]  Return Me 
return _B;
// End Sub
};

// [33] private Sub SetTimes 
_B.settimes=function() {
var _times;
// [34]  Dim times As List 
_times=[];
// [35]  times.Initialize 
_times.length=0;
// [36]  times.AddAll(Array( {14} , {15} , {16} , {17} , {18} , {19} , {20} , {21} , {22} , {23} , {24} , {25} , {26} )) 
_times.splice(_times.length,0,...["12:00","12:30","01:00","01:30","02:00","02:30","03:00","03:30","04:00","04:30","05:00","05:30","06:00"]);
// [37]  times.AddAll(Array( {27} , {28} , {29} , {30} , {31} , {32} , {33} , {34} , {35} , {36} , {37} , {38} , {39} )) 
_times.splice(_times.length,0,...["06:30","07:00","07:30","08:00","08:30","09:00","09:30","10:00","10:30","11:00","11:30","13:00","13:30"]);
// [38]  times.AddAll(Array( {40} , {41} , {42} , {43} , {44} , {45} , {46} , {47} , {48} , {49} , {50} , {51} , {52} )) 
_times.splice(_times.length,0,...["14:00","14:30","15:00","15:30","16:00","16:30","17:00","17:30","18:00","18:30","19:00","19:30","20:00"]);
// [39]  times.AddAll(Array( {53} , {54} , {55} , {56} , {57} , {58} , {59} , {60} , {61} , {62} )) 
_times.splice(_times.length,0,...["20:30","21:00","21:30","22:00","22:30","23:00","23:30","00:00","00:30",""]);
// [40]  times.Sort(True) 
if (!isNaN(parseFloat(_times[0])) && isFinite(_times[0])) {
_times.sort(function(a, b){return a - b});
} else {
_times.sort();
};
// [41]  SetOptions( {2} , times, {63} , {64} ) 
_B.setoptions("" + _B._id + "_times",_times,"id","text",_B);
// End Sub
};

// [44] Sub SetTabIndex(ti As String) As VMTimePicker 
_B.settabindex=function(_ti) {
// [45]  TimePicker.SetTabIndex(ti) 
_B._timepicker.settabindex(_ti);
// [46]  Return Me 
return _B;
// End Sub
};

// [51] Sub AddClass(c As String) As VMTimePicker 
_B.addclass=function(_c) {
// [52]  TimePicker.AddClass(c) 
_B._timepicker.addclass(_c);
// [53]  Return Me 
return _B;
// End Sub
};

// [57] Sub SetAttr(attr As Map) As VMTimePicker 
_B.setattr=function(_attr) {
// [58]  TimePicker.SetAttr(attr) 
_B._timepicker.setattr(_attr);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetVModel(k As String) As VMTimePicker 
_B.setvmodel=function(_k) {
// [63]  TimePicker.SetVModel(k) 
_B._timepicker.setvmodel(_k);
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetLabel(l As Object) As VMTimePicker 
_B.setlabel=function(_l) {
// [68]  lbl.SetText(l) 
_B._lbl.settext(_l);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] private Sub SetOptions(sourceName As String, options As List, sourcefield As String, displayfield As String) 
_B.setoptions=function(_sourcename,_options,_sourcefield,_displayfield) {
var _recs,_k,_nrec,_krow,_drow,_option;
// [73]  sourceName = sourceName.tolowercase 
_sourcename=_sourcename.toLowerCase();
// [74]  Dim recs As List 
_recs=[];
// [75]  recs.Initialize 
_recs.length=0;
// [76]  For Each k As String In options 
for (var _kindex=0;_kindex<_options.length;_kindex++) {
_k=_options[_kindex];
// [77]  Dim nrec As Map = CreateMap() 
_nrec={};
// [78]  nrec.Put(sourcefield, k) 
_nrec[_sourcefield]=_k;
// [79]  nrec.Put(displayfield, k) 
_nrec[_displayfield]=_k;
// [80]  recs.Add(nrec) 
_recs.push(_nrec);
// [81]  Next 
}
// [83]  vue.SetStateSingle(sourceName, recs) 
_B._vue.setstatesingle(_sourcename,_recs);
// [84]  Dim kRow As String = {3} 
_krow="row." + _sourcefield + "";
// [85]  Dim dRow As String = {4} 
_drow="row." + _displayfield + "";
// [86]  Dim option As VMElement 
_option= new banano_bananovuematerial_vmelement();
// [87]  option.Initialize(vue, {65} ) 
_option.initialize(_B._vue,"");
// [88]  option.SetTag( {66} ) 
_option.settag("md-option");
// [89]  option.SetVFor( {67} , sourceName) 
_option.setvfor("row",_sourcename);
// [90]  option.SetID( {5} ,True) 
_option.setid("" + _krow + "",true);
// [91]  option.SetKey( {6} ,True) 
_option.setkey("" + _krow + "",true);
// [92]  option.SetValue( {7} ,True) 
_option.setvalue("" + _krow + "",true);
// [93]  option.SetName( {8} ,True) 
_option.setname("" + _krow + "",true);
// [94]  option.SetText( {9} ) 
_option.settext("{{ " + _drow + " }}");
// [95]  option.Pop(TimePicker) 
_option.pop(_B._timepicker);
// End Sub
};

// [99] Sub SetHelperText(t As String) As VMTimePicker 
_B.sethelpertext=function(_t) {
// [100]  If t = {68} Then Return Me 
if (_t=="") { return _B;}
// [101]  hasHelp = True 
_B._hashelp=true;
// [102]  ht = TimePicker.SetHelperText(t) 
_B._ht=_B._timepicker.sethelpertext(_t);
// [103]  Return Me 
return _B;
// End Sub
};

// [106] Sub SetErrorText(txt As String) As VMTimePicker 
_B.seterrortext=function(_txt) {
// [107]  If txt = {69} Then Return Me 
if (_txt=="") { return _B;}
// [108]  hasError = True 
_B._haserror=true;
// [109]  et = TimePicker.SetErrorText(txt) 
_B._et=_B._timepicker.seterrortext(_txt);
// [110]  Return Me 
return _B;
// End Sub
};

// [113] Sub ToString As String 
_B.tostring=function() {
// [114]  lbl.Pop(TimePickerInt.Field) 
_B._lbl.pop(_B._timepickerint._field);
// [115]  TimePicker.Pop(TimePickerInt.Field) 
_B._timepicker.pop(_B._timepickerint._field);
// [116]  If hasHelp Then 
if (_B._hashelp) {
// [117]  ht.Pop(TimePickerInt.Field) 
_B._ht.pop(_B._timepickerint._field);
// [118]  End If 
}
// [119]  If hasError Then 
if (_B._haserror) {
// [120]  et.Pop(TimePickerInt.Field) 
_B._et.pop(_B._timepickerint._field);
// [121]  End If 
}
// [122]  Return TimePickerInt.tostring 
return _B._timepickerint.tostring();
// End Sub
};

// [125] Sub Render 
_B.render=function() {
// [126]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [129] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [130]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [133] Sub SetVIf(vif As String) As VMTimePicker 
_B.setvif=function(_vif) {
// [134]  If vif = {70} Then Return Me 
if (_vif=="") { return _B;}
// [135]  TimePickerInt.SetVIf(vif) 
_B._timepickerint.setvif(_vif);
// [136]  Return Me 
return _B;
// End Sub
};

// [139] Sub SetVShow(vif As String) As VMTimePicker 
_B.setvshow=function(_vif) {
// [140]  If vif = {71} Then Return Me 
if (_vif=="") { return _B;}
// [141]  TimePickerInt.SetVShow(vif) 
_B._timepickerint.setvshow(_vif);
// [142]  Return Me 
return _B;
// End Sub
};

// [146] Sub AddChild(child As VMElement) As VMTimePicker 
_B.addchild=function(_child) {
var _childhtml;
// [147]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [148]  TimePicker.SetText(childHTML) 
_B._timepicker.settext(_childhtml);
// [149]  Return Me 
return _B;
// End Sub
};

// [153] Sub SetText(t As Object) As VMTimePicker 
_B.settext=function(_t) {
// [154]  TimePicker.SetText(t) 
_B._timepicker.settext(_t);
// [155]  Return Me 
return _B;
// End Sub
};

// [158] Sub SetPrimary(b As Boolean) As VMTimePicker 
_B.setprimary=function(_b) {
// [159]  TimePicker.SetPrimary(True) 
_B._timepicker.setprimary(true);
// [160]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetAccent(b As Boolean) As VMTimePicker 
_B.setaccent=function(_b) {
// [164]  TimePicker.SetAccent(True) 
_B._timepicker.setaccent(true);
// [165]  Return Me 
return _B;
// End Sub
};

// [169] Sub SetStyle(sm As Map) As VMTimePicker 
_B.setstyle=function(_sm) {
// [170]  TimePicker.SetStyle(sm) 
_B._timepicker.setstyle(_sm);
// [171]  Return Me 
return _B;
// End Sub
};

// [175] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [176]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [177]  AddChild(childx) 
_B.addchild(_childx,_B);
// [178]  Next 
}
// End Sub
};

// [182] Sub SetPadding(p As Object) As VMTimePicker 
_B.setpadding=function(_p) {
// [183]  TimePicker.SetPaddingAll(p) 
_B._timepicker.setpaddingall(_p);
// [184]  Return Me 
return _B;
// End Sub
};

// [188] Sub SetPlaceholder(varPlaceholder As String) As VMTimePicker 
_B.setplaceholder=function(_varplaceholder) {
// [189]  If varPlaceholder = {72} Then Return Me 
if (_varplaceholder=="") { return _B;}
// [190]  SetAttr(CreateMap( {73} : varPlaceholder)) 
_B.setattr({"placeholder":_varplaceholder},_B);
// [191]  Return Me 
return _B;
// End Sub
};

// [195] Sub SetRequired(varRequired As Boolean) As VMTimePicker 
_B.setrequired=function(_varrequired) {
// [196]  TimePicker.SetRequired(varRequired) 
_B._timepicker.setrequired(_varrequired);
// [197]  Return Me 
return _B;
// End Sub
};

// [201] Sub SetName(varName As Object, bind As Boolean) As VMTimePicker 
_B.setname=function(_varname,_bind) {
// [202]  TimePicker.SetName(varName, bind) 
_B._timepicker.setname(_varname,_bind);
// [203]  Return Me 
return _B;
// End Sub
};

// [207] Sub SetID(varName As Object, bind As Boolean) As VMTimePicker 
_B.setid=function(_varname,_bind) {
// [208]  TimePicker.SetID(varName, bind) 
_B._timepicker.setid(_varname,_bind);
// [209]  Return Me 
return _B;
// End Sub
};

// [213] Sub SetDisabled(b As Boolean) As VMTimePicker 
_B.setdisabled=function(_b) {
// [214]  TimePicker.setdisabled(b) 
_B._timepicker.setdisabled(_b);
// [215]  Return Me 
return _B;
// End Sub
};

// [219] Sub SetMultiple(varMultiple As Boolean) As VMTimePicker 
_B.setmultiple=function(_varmultiple) {
// [220]  If varMultiple = False Then Return Me 
if (_varmultiple==false) { return _B;}
// [221]  SetAttr(CreateMap( {74} : varMultiple)) 
_B.setattr({":multiple":_varmultiple},_B);
// [222]  Return Me 
return _B;
// End Sub
};

// [226] Sub SetDense(varDense As Boolean) As VMTimePicker 
_B.setdense=function(_vardense) {
// [227]  If varDense = False Then Return Me 
if (_vardense==false) { return _B;}
// [228]  If varDense Then SetAttr(CreateMap( {75} : varDense)) 
if (_vardense) {_B.setattr({":md-dense":_vardense},_B);}
// [229]  Return Me 
return _B;
// End Sub
};

// [233] private Sub SetOnSelected(value As String) As VMTimePicker 
_B.setonselected=function(_value) {
var _methodname,_cb;
// [234]  Dim methodName As String = {10} 
_methodname="" + _B._id + "_change";
// [235]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [236]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(value)) 
_cb=function(_value) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_value,_B)};};
// [237]  SetAttr(CreateMap( {76} : methodName)) 
_B.setattr({"v-on:md-selected":_methodname},_B);
// [239]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [240]  Return Me 
return _B;
// End Sub
};

// [244] private Sub SetOnOpened As VMTimePicker 
_B.setonopened=function() {
var _methodname,_e,_cb;
// [245]  Dim methodName As String = {11} 
_methodname="" + _B._id + "_opened";
// [246]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [247]  Dim e As BANanoEvent 
_e=null;
// [248]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [249]  SetAttr(CreateMap( {77} : methodName)) 
_B.setattr({"v-on:md-opened":_methodname},_B);
// [251]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [252]  Return Me 
return _B;
// End Sub
};

// [256] Sub SetOnClosed As VMTimePicker 
_B.setonclosed=function() {
var _methodname,_e,_cb;
// [257]  Dim methodName As String = {12} 
_methodname="" + _B._id + "_closed";
// [258]  If SubExists(module, methodName) = False Then Return Me 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")==false) { return _B;}
// [259]  Dim e As BANanoEvent 
_e=null;
// [260]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [261]  SetAttr(CreateMap( {78} : methodName)) 
_B.setattr({"v-on:md-closed":_methodname},_B);
// [263]  vue.SetCallBack(methodName, cb) 
_B._vue.setcallback(_methodname,_cb);
// [264]  Return Me 
return _B;
// End Sub
};

// [267] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [268]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMToolBar  =========================== */
function banano_bananovuematerial_vmtoolbar() {
var _B=this;
_B._toolbar= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hascontent=false;

_B._endsection= new banano_bananovuematerial_vmelement();

_B._startsection= new banano_bananovuematerial_vmelement();

_B._module={};

// [12] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object) As VMToolBar 
_B.initialize=function(_v,_sid,_eventhandler) {
// [13]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [14]  vue = v 
_B._vue=_v;
// [15]  module = eventHandler 
_B._module=_eventhandler;
// [16]  ToolBar.Initialize(vue, ID).SetTag( {9} ) 
_B._toolbar.initialize(_B._vue,_B._id).settag("md-app-toolbar");
// [17]  HasContent = False 
_B._hascontent=false;
// [18]  EndSection.Initialize(vue, {0} ).SetTag( {10} ).AddClass( {11} ) 
_B._endsection.initialize(_B._vue,"" + _B._id + "end").settag("div").addclass("md-toolbar-section-end");
// [19]  StartSection.Initialize(vue, {1} ).SetTag( {12} ).AddClass( {13} ) 
_B._startsection.initialize(_B._vue,"" + _B._id + "start").settag("div").addclass("md-toolbar-section-start");
// [20]  ToolBar.RemoveAttr( {14} ) 
_B._toolbar.removeattr(":required");
// [21]  ToolBar.RemoveAttr( {15} ) 
_B._toolbar.removeattr(":disabled");
// [22]  SetToolbar(True) 
_B.settoolbar(true,_B);
// [23]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetHasLogo(b As Boolean) As VMToolBar 
_B.sethaslogo=function(_b) {
// [28]  vue.SetStateSingle( {16} , b) 
_B._vue.setstatesingle("logo",_b);
// [29]  Return Me 
return _B;
// End Sub
};

// [32] Sub SetLogo(url As String) As VMToolBar 
_B.setlogo=function(_url) {
var _img;
// [33]  Dim img As VMImage 
_img= new banano_bananovuematerial_vmimage();
// [34]  img.Initialize(vue, {2} , module) 
_img.initialize(_B._vue,"" + _B._id + "logo",_B._module);
// [35]  img.SetValue(url, True).SetStyle(CreateMap( {17} : {18} , {19} : {20} )) 
_img.setvalue(_url,true).setstyle({"height":"42px", "width":"56px"});
// [36]  img.SetVShow( {21} ) 
_img.setvshow("logo");
// [37]  img.Pop(StartSection) 
_img.pop(_B._startsection);
// [38]  vue.SetStateSingle( {22} , False) 
_B._vue.setstatesingle("logo",false);
// [39]  HasContent = True 
_B._hascontent=true;
// [40]  StartSection.hasContent = True 
_B._startsection._hascontent=true;
// End Sub
};

// [43] Sub UpdateLogo(URL As String) As VMToolBar 
_B.updatelogo=function(_url) {
var _pp;
// [44]  Dim pp As String = {3} 
_pp="" + _B._id + "logosrc";
// [45]  vue.SetStateSingle(pp, URL) 
_B._vue.setstatesingle(_pp,_url);
// [46]  SetHasLogo(True) 
_B.sethaslogo(true,_B);
// [47]  Return Me 
return _B;
// End Sub
};

// [51] Sub AddSearch(searchID As String, placeHolder As String, vmodel As String, width As String, options As List) 
_B.addsearch=function(_searchid,_placeholder,_vmodel,_width,_options) {
var _acs;
// [52]  searchID = searchID.tolowercase 
_searchid=_searchid.toLowerCase();
// [54]  Dim acs As VMAutoComplete 
_acs= new banano_bananovuematerial_vmautocomplete();
// [55]  acs.Initialize(vue, searchID, module) 
_acs.initialize(_B._vue,_searchid,_B._module);
// [56]  acs.SetVModel(vmodel).SetOptions(options).SetDense(True).SetLayoutBox(True) 
_acs.setvmodel(_vmodel).setoptions(_options).setdense(true).setlayoutbox(true);
// [57]  acs.SetStyleSingle( {23} , width) 
_acs.setstylesingle("width",_width);
// [58]  acs.SetInputPlaceholder(placeHolder) 
_acs.setinputplaceholder(_placeholder);
// [59]  acs.Pop(EndSection) 
_acs.pop(_B._endsection);
// [60]  EndSection.hasContent = True 
_B._endsection._hascontent=true;
// [61]  HasContent = True 
_B._hascontent=true;
// End Sub
};

// [64] Sub SetAppToolbar(b As Boolean) As VMToolBar 
_B.setapptoolbar=function(_b) {
// [65]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [66]  ToolBar.SetTag( {24} ) 
_B._toolbar.settag("md-app-toolbar");
// [67]  HasContent = True 
_B._hascontent=true;
// [68]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetToolbar(b As Boolean) As VMToolBar 
_B.settoolbar=function(_b) {
// [73]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [74]  ToolBar.SetTag( {25} ) 
_B._toolbar.settag("md-toolbar");
// [75]  HasContent = True 
_B._hascontent=true;
// [76]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetTableToolbar(b As Boolean) As VMToolBar 
_B.settabletoolbar=function(_b) {
// [81]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [82]  ToolBar.SetTag( {26} ) 
_B._toolbar.settag("md-table-toolbar");
// [83]  HasContent = True 
_B._hascontent=true;
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetDisabled(b As Boolean) As VMToolBar 
_B.setdisabled=function(_b) {
// [88]  ToolBar.SetDisabled(b) 
_B._toolbar.setdisabled(_b);
// [89]  Return Me 
return _B;
// End Sub
};

// [92] Sub HideBackButton 
_B.hidebackbutton=function() {
// [93]  SetHasBackButton(False) 
_B.sethasbackbutton(false,_B);
// End Sub
};

// [96] Sub ShowBackButton 
_B.showbackbutton=function() {
// [97]  SetHasBackButton(True) 
_B.sethasbackbutton(true,_B);
// End Sub
};

// [100] Sub ShowMenu 
_B.showmenu=function() {
// [101]  SetHasMenuButton(True) 
_B.sethasmenubutton(true,_B);
// End Sub
};

// [104] Sub HideMenu 
_B.hidemenu=function() {
// [105]  SetHasMenuButton(False) 
_B.sethasmenubutton(false,_B);
// End Sub
};

// [108] Sub SetMode(str As String) As VMToolBar 'ignore 
_B.setmode=function(_str) {
var _pp;
// [109]  Dim pp As String = {4} 
_pp="" + _B._id + "mode";
// [110]  vue.SetStateSingle(pp, str) 
_B._vue.setstatesingle(_pp,_str);
// [111]  Return Me 
return _B;
// End Sub
};

// [115] Sub SetModeFixed(b As Boolean) As VMToolBar 'ignore 
_B.setmodefixed=function(_b) {
// [116]  SetMode( {27} ) 
_B.setmode("fixed",_B);
// [117]  Return Me 
return _B;
// End Sub
};

// [120] Sub SetModeReveal(b As Boolean) As VMToolBar 'ignore 
_B.setmodereveal=function(_b) {
// [121]  SetMode( {28} ) 
_B.setmode("reveal",_B);
// [122]  Return Me 
return _B;
// End Sub
};

// [125] Sub SetModeFlexible(b As Boolean) As VMToolBar 'ignore 
_B.setmodeflexible=function(_b) {
// [126]  SetMode( {29} ) 
_B.setmode("flexible",_B);
// [127]  Return Me 
return _B;
// End Sub
};

// [130] Sub SetModeFixedLast(b As Boolean) As VMToolBar 'ignore 
_B.setmodefixedlast=function(_b) {
// [131]  SetMode( {30} ) 
_B.setmode("fixed-last",_B);
// [132]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetModeOverlap(b As Boolean) As VMToolBar 'ignore 
_B.setmodeoverlap=function(_b) {
// [136]  SetMode( {31} ) 
_B.setmode("overlap",_B);
// [137]  Return Me 
return _B;
// End Sub
};

// [141] Sub AddIcon(key As String, iconName As String, toolTip As String, badge As String) As VMToolBar 
_B.addicon=function(_key,_iconname,_tooltip,_badge) {
var _btn;
// [142]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [143]  btn.Initialize(vue, key, module).SetIcon(iconName).SetIconButton(True).SetToolTip(toolTip) 
_btn.initialize(_B._vue,_key,_B._module).seticon(_iconname).seticonbutton(true).settooltip(_tooltip);
// [144]  If badge <> {32} Then 
if (_badge!="") {
// [145]  btn.SetBadgeContent(badge) 
_btn.setbadgecontent(_badge);
// [146]  End If 
}
// [147]  btn.Pop(EndSection) 
_btn.pop(_B._endsection);
// [148]  EndSection.hasContent = True 
_B._endsection._hascontent=true;
// [149]  HasContent = True 
_B._hascontent=true;
// [150]  Return Me 
return _B;
// End Sub
};

// [153] Sub AddButton(key As String, iconName As String, text As String, toolTip As String, badge As String) As VMToolBar 
_B.addbutton=function(_key,_iconname,_text,_tooltip,_badge) {
var _btn;
// [154]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [155]  btn.Initialize(vue, key, module).SetToolTip(toolTip).SetIcon(iconName).SetText(text) 
_btn.initialize(_B._vue,_key,_B._module).settooltip(_tooltip).seticon(_iconname).settext(_text);
// [156]  If badge <> {33} Then 
if (_badge!="") {
// [157]  btn.SetBadgeContent(badge) 
_btn.setbadgecontent(_badge);
// [158]  End If 
}
// [159]  btn.Pop(EndSection) 
_btn.pop(_B._endsection);
// [160]  EndSection.hasContent = True 
_B._endsection._hascontent=true;
// [161]  HasContent = True 
_B._hascontent=true;
// [162]  Return Me 
return _B;
// End Sub
};

// [165] Sub AddButtonStart(key As String, iconName As String, text As String, toolTip As String, badge As String) As VMToolBar 
_B.addbuttonstart=function(_key,_iconname,_text,_tooltip,_badge) {
var _btn;
// [166]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [167]  btn.Initialize(vue, key, module).SetToolTip(toolTip).SetIcon(iconName).SetText(text) 
_btn.initialize(_B._vue,_key,_B._module).settooltip(_tooltip).seticon(_iconname).settext(_text);
// [168]  If badge <> {34} Then 
if (_badge!="") {
// [169]  btn.SetBadgeContent(badge) 
_btn.setbadgecontent(_badge);
// [170]  End If 
}
// [171]  btn.Pop(StartSection) 
_btn.pop(_B._startsection);
// [172]  StartSection.hasContent = True 
_B._startsection._hascontent=true;
// [173]  HasContent = True 
_B._hascontent=true;
// [174]  Return Me 
return _B;
// End Sub
};

// [178] Sub AddMenu(mnu As VMMenu) As VMToolBar 
_B.addmenu=function(_mnu) {
// [179]  mnu.Pop(EndSection) 
_mnu.pop(_B._endsection);
// [180]  EndSection.hasContent = True 
_B._endsection._hascontent=true;
// [181]  HasContent = True 
_B._hascontent=true;
// [182]  Return Me 
return _B;
// End Sub
};

// [185] Sub AddMenuStart(mnu As VMMenu) As VMToolBar 
_B.addmenustart=function(_mnu) {
// [186]  mnu.Pop(StartSection) 
_mnu.pop(_B._startsection);
// [187]  StartSection.hasContent = True 
_B._startsection._hascontent=true;
// [188]  HasContent = True 
_B._hascontent=true;
// [189]  Return Me 
return _B;
// End Sub
};

// [192] Sub AddAvatar(key As String, imgURL As String, txt As String, toolTip As String, badge As String) As VMToolBar 
_B.addavatar=function(_key,_imgurl,_txt,_tooltip,_badge) {
var _avt;
// [193]  Dim avt As VMAvatar 
_avt= new banano_bananovuematerial_vmavatar();
// [194]  avt.Initialize(vue, key,module) 
_avt.initialize(_B._vue,_key,_B._module);
// [195]  avt.SetValue(imgURL) 
_avt.setvalue(_imgurl);
// [196]  avt.SetAlt(txt) 
_avt.setalt(_txt);
// [197]  avt.SetToolTip(toolTip) 
_avt.settooltip(_tooltip);
// [198]  If badge <> {35} Then 
if (_badge!="") {
// [199]  avt.SetBadgeContent(badge) 
_avt.setbadgecontent(_badge);
// [200]  End If 
}
// [201]  avt.Pop(EndSection) 
_avt.pop(_B._endsection);
// [202]  EndSection.hasContent = True 
_B._endsection._hascontent=true;
// [203]  HasContent = True 
_B._hascontent=true;
// [204]  Return Me 
return _B;
// End Sub
};

// [207] Sub AddAvatarStart(key As String, imgURL As String, txt As String, toolTip As String, badge As String) As VMToolBar 
_B.addavatarstart=function(_key,_imgurl,_txt,_tooltip,_badge) {
var _avt;
// [208]  Dim avt As VMAvatar 
_avt= new banano_bananovuematerial_vmavatar();
// [209]  avt.Initialize(vue, key,module) 
_avt.initialize(_B._vue,_key,_B._module);
// [210]  avt.SetValue(imgURL) 
_avt.setvalue(_imgurl);
// [211]  avt.SetAlt(txt) 
_avt.setalt(_txt);
// [212]  avt.SetToolTip(toolTip) 
_avt.settooltip(_tooltip);
// [213]  If badge <> {36} Then 
if (_badge!="") {
// [214]  avt.SetBadgeContent(badge) 
_avt.setbadgecontent(_badge);
// [215]  End If 
}
// [216]  avt.Pop(StartSection) 
_avt.pop(_B._startsection);
// [217]  StartSection.hasContent = True 
_B._startsection._hascontent=true;
// [218]  HasContent = True 
_B._hascontent=true;
// [219]  Return Me 
return _B;
// End Sub
};

// [222] Sub AddIconStart(key As String, iconName As String, tooltip As String, badge As String) As VMToolBar 
_B.addiconstart=function(_key,_iconname,_tooltip,_badge) {
var _btn;
// [223]  Dim btn As VMButton 
_btn= new banano_bananovuematerial_vmbutton();
// [224]  btn.Initialize(vue, key, module).SetIcon(iconName).SetIconButton(True).SetToolTip(tooltip) 
_btn.initialize(_B._vue,_key,_B._module).seticon(_iconname).seticonbutton(true).settooltip(_tooltip);
// [225]  If badge <> {37} Then 
if (_badge!="") {
// [226]  btn.SetBadgeContent(badge) 
_btn.setbadgecontent(_badge);
// [227]  End If 
}
// [228]  btn.Pop(StartSection) 
_btn.pop(_B._startsection);
// [229]  StartSection.hasContent = True 
_B._startsection._hascontent=true;
// [230]  HasContent = True 
_B._hascontent=true;
// [231]  Return Me 
return _B;
// End Sub
};

// [234] Sub SetHasBackButton(b As Boolean) As VMToolBar 
_B.sethasbackbutton=function(_b) {
// [235]  vue.SetStateSingle( {38} , b) 
_B._vue.setstatesingle("backshow",_b);
// [236]  Return Me 
return _B;
// End Sub
};

// [240] Sub SetHasMenuButton(b As Boolean) As VMToolBar 
_B.sethasmenubutton=function(_b) {
// [241]  vue.SetStateSingle( {39} , b) 
_B._vue.setstatesingle("menushow",_b);
// [242]  Return Me 
return _B;
// End Sub
};

// [245] Sub ToggleMenu 
_B.togglemenu=function() {
var _bdrawer;
// [247]  Dim bDrawer As Boolean = vue.GetState( {40} ,False) 
_bdrawer=_B._vue.getstate("drawer",false);
// [248]  bDrawer = Not(bDrawer) 
_bdrawer=!(_bdrawer);
// [249]  vue.SetStateSingle( {41} , bDrawer) 
_B._vue.setstatesingle("menushow",_bdrawer);
// End Sub
};

// [252] Sub SetVisible(b As Boolean) As VMToolBar 
_B.setvisible=function(_b) {
// [253]  ToolBar.SetVisible(b) 
_B._toolbar.setvisible(_b);
// [254]  Return Me 
return _B;
// End Sub
};

// [257] Sub SetVShow(xshow As String) As VMToolBar 
_B.setvshow=function(_xshow) {
// [258]  ToolBar.SetVShow(xshow) 
_B._toolbar.setvshow(_xshow);
// [259]  Return Me 
return _B;
// End Sub
};

// [262] Sub SetVIf(xshow As String) As VMToolBar 
_B.setvif=function(_xshow) {
// [263]  ToolBar.SetVif(xshow) 
_B._toolbar.setvif(_xshow);
// [264]  Return Me 
return _B;
// End Sub
};

// [267] Sub CreateButton(btnID As String) As VMButton 
_B.createbutton=function(_btnid) {
var _el;
// [268]  Dim el As VMButton 
_el= new banano_bananovuematerial_vmbutton();
// [269]  el.Initialize(vue, btnID, module) 
_el.initialize(_B._vue,_btnid,_B._module);
// [270]  Return el 
return _el;
// End Sub
};

// [274] Sub Show 
_B.show=function() {
// [275]  SetVisible(True) 
_B.setvisible(true,_B);
// End Sub
};

// [279] Sub Hide 
_B.hide=function() {
// [280]  SetVisible(False) 
_B.setvisible(false,_B);
// End Sub
};

// [284] Sub AddClass(c As String) As VMToolBar 
_B.addclass=function(_c) {
// [285]  ToolBar.AddClass(c) 
_B._toolbar.addclass(_c);
// [286]  Return Me 
return _B;
// End Sub
};

// [290] Sub SetAttr(attr As Map) As VMToolBar 
_B.setattr=function(_attr) {
// [291]  ToolBar.SetAttr(attr) 
_B._toolbar.setattr(_attr);
// [292]  Return Me 
return _B;
// End Sub
};

// [295] Sub SetTitle(tt As String) As VMToolBar 
_B.settitle=function(_tt) {
var _pp,_page_title,_span;
// [296]  Dim pp As String = {5} 
_pp="" + _B._id + "title";
// [297]  vue.SetStateSingle(pp, tt) 
_B._vue.setstatesingle(_pp,_tt);
// [299]  Dim page_title As String = {6} 
_page_title="{{ " + _pp + " }}";
// [300]  Dim span As VMElement 
_span= new banano_bananovuematerial_vmelement();
// [301]  span.Initialize(vue, {7} ).SetTag( {42} ).SetTitle(True).SetText(page_title) 
_span.initialize(_B._vue,"" + _B._id + "title").settag("h1").settitle(true).settext(_page_title);
// [302]  span.Pop(StartSection) 
_span.pop(_B._startsection);
// [303]  HasContent = True 
_B._hascontent=true;
// [304]  StartSection.hasContent = True 
_B._startsection._hascontent=true;
// [305]  Return Me 
return _B;
// End Sub
};

// [308] Sub UpdateTitle(tt As String) As VMToolBar 
_B.updatetitle=function(_tt) {
var _pp;
// [309]  Dim pp As String = {8} 
_pp="" + _B._id + "title";
// [310]  vue.SetStateSingle(pp, tt) 
_B._vue.setstatesingle(_pp,_tt);
// [311]  Return Me 
return _B;
// End Sub
};

// [314] Sub SetDense(b As Boolean) As VMToolBar 
_B.setdense=function(_b) {
// [315]  ToolBar.SetDense(b) 
_B._toolbar.setdense(_b);
// [316]  Return Me 
return _B;
// End Sub
};

// [320] Sub SetLarge(b As Boolean) As VMToolBar 
_B.setlarge=function(_b) {
// [321]  ToolBar.SetLarge(b) 
_B._toolbar.setlarge(_b);
// [322]  Return Me 
return _B;
// End Sub
};

// [325] Sub SetMedium(b As Boolean) As VMToolBar 
_B.setmedium=function(_b) {
// [326]  ToolBar.SetMedium(b) 
_B._toolbar.setmedium(_b);
// [327]  Return Me 
return _B;
// End Sub
};

// [330] Sub SetTransparent(b As Boolean) As VMToolBar 
_B.settransparent=function(_b) {
// [331]  ToolBar.SetTransparent(b) 
_B._toolbar.settransparent(_b);
// [332]  Return Me 
return _B;
// End Sub
};

// [335] Sub SetElevation(e As Int) As VMToolBar 
_B.setelevation=function(_e) {
// [336]  ToolBar.SetElevation(e) 
_B._toolbar.setelevation(_e);
// [337]  Return Me 
return _B;
// End Sub
};

// [340] Sub SetPrimary(b As Boolean) As VMToolBar 
_B.setprimary=function(_b) {
// [341]  ToolBar.SetPrimary(True) 
_B._toolbar.setprimary(true);
// [342]  HasContent = True 
_B._hascontent=true;
// [343]  Return Me 
return _B;
// End Sub
};

// [346] Sub SetAccent(b As Boolean) As VMToolBar 
_B.setaccent=function(_b) {
// [347]  ToolBar.SetAccent(True) 
_B._toolbar.setaccent(true);
// [348]  HasContent = True 
_B._hascontent=true;
// [349]  Return Me 
return _B;
// End Sub
};

// [352] Sub SetText(t As String) As VMToolBar 
_B.settext=function(_t) {
// [353]  ToolBar.SetText(t) 
_B._toolbar.settext(_t);
// [354]  HasContent = True 
_B._hascontent=true;
// [355]  Return Me 
return _B;
// End Sub
};

// [360] Sub SetPaddingAll(p As String) As VMToolBar 
_B.setpaddingall=function(_p) {
// [361]  ToolBar.SetPaddingAll(p) 
_B._toolbar.setpaddingall(_p);
// [362]  Return Me 
return _B;
// End Sub
};

// [366] Sub SetMarginAll(p As String) As VMToolBar 
_B.setmarginall=function(_p) {
// [367]  ToolBar.SetMarginAll(p) 
_B._toolbar.setmarginall(_p);
// [368]  Return Me 
return _B;
// End Sub
};

// [371] Sub ToString As String 
_B.tostring=function() {
// [372]  If StartSection.hasContent Then 
if (_B._startsection._hascontent) {
// [373]  StartSection.Pop(ToolBar) 
_B._startsection.pop(_B._toolbar);
// [374]  End If 
}
// [375]  If EndSection.hasContent Then 
if (_B._endsection._hascontent) {
// [376]  EndSection.Pop(ToolBar) 
_B._endsection.pop(_B._toolbar);
// [377]  End If 
}
// [378]  Return ToolBar.tostring 
return _B._toolbar.tostring();
// End Sub
};

// [381] Sub Render 
_B.render=function() {
// [382]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [385] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [386]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [391] Sub AddToContainer(pCont As VMContainer, rowPos As Int, colPos As Int) 
_B.addtocontainer=function(_pcont,_rowpos,_colpos) {
// [392]  pCont.AddComponent(rowPos, colPos, ToString) 
_pcont.addcomponent(_rowpos,_colpos,_B.tostring(_B));
// End Sub
};

}
/* =========================== VMTooltip  =========================== */
function banano_bananovuematerial_vmtooltip() {
var _B=this;
_B._tooltip= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._bactive=false;

// [11] Public Sub Initialize(v As BANanoVue, sid As String) As VMTooltip 
_B.initialize=function(_v,_sid) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  Tooltip.Initialize(v, ID) 
_B._tooltip.initialize(_v,_B._id);
// [14]  Tooltip.SetTag( {0} ) 
_B._tooltip.settag("md-tooltip");
// [15]  vue = v 
_B._vue=_v;
// [16]  bActive = False 
_B._bactive=false;
// [17]  If ID <> {1} Then 
if (_B._id!="") {
// [18]  SetActiveSync(ID) 
_B.setactivesync(_B._id,_B);
// [19]  End If 
}
// [20]  Return Me 
return _B;
// End Sub
};

// [23] private Sub SetActiveSync(v As String) As VMTooltip 
_B.setactivesync=function(_v) {
// [24]  Tooltip.SetActiveSync(v) 
_B._tooltip.setactivesync(_v);
// [25]  bActive = True 
_B._bactive=true;
// [26]  Return Me 
return _B;
// End Sub
};

// [30] Sub ToString As String 
_B.tostring=function() {
// [31]  Return Tooltip.ToString 
return _B._tooltip.tostring();
// End Sub
};

// [34] Sub SetVModel(k As String) As VMTooltip 
_B.setvmodel=function(_k) {
// [35]  Tooltip.SetVModel(k) 
_B._tooltip.setvmodel(_k);
// [36]  Return Me 
return _B;
// End Sub
};

// [39] Sub SetVIf(vif As Object) As VMTooltip 
_B.setvif=function(_vif) {
// [40]  Tooltip.SetVIf(vif) 
_B._tooltip.setvif(_vif);
// [41]  Return Me 
return _B;
// End Sub
};

// [44] Sub SetVShow(vif As Object) As VMTooltip 
_B.setvshow=function(_vif) {
// [45]  Tooltip.SetVShow(vif) 
_B._tooltip.setvshow(_vif);
// [46]  Return Me 
return _B;
// End Sub
};

// [50] Sub Render 
_B.render=function() {
// [51]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [55] Sub AddChild(child As VMElement) As VMTooltip 
_B.addchild=function(_child) {
var _childhtml;
// [56]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [57]  Tooltip.SetText(childHTML) 
_B._tooltip.settext(_childhtml);
// [58]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetText(t As Object) As VMTooltip 
_B.settext=function(_t) {
// [63]  Tooltip.SetText(t) 
_B._tooltip.settext(_t);
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetPrimary(b As Boolean) As VMTooltip 
_B.setprimary=function(_b) {
// [68]  Tooltip.SetPrimary(True) 
_B._tooltip.setprimary(true);
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetAccent(b As Boolean) As VMTooltip 
_B.setaccent=function(_b) {
// [73]  Tooltip.SetAccent(True) 
_B._tooltip.setaccent(true);
// [74]  Return Me 
return _B;
// End Sub
};

// [78] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [79]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [83] Sub AddClass(c As String) As VMTooltip 
_B.addclass=function(_c) {
// [84]  Tooltip.AddClass(c) 
_B._tooltip.addclass(_c);
// [85]  Return Me 
return _B;
// End Sub
};

// [89] Sub SetAttr(attr As Map) As VMTooltip 
_B.setattr=function(_attr) {
// [90]  Tooltip.SetAttr(attr) 
_B._tooltip.setattr(_attr);
// [91]  Return Me 
return _B;
// End Sub
};

// [95] Sub SetStyle(sm As Map) As VMTooltip 
_B.setstyle=function(_sm) {
// [96]  Tooltip.SetStyle(sm) 
_B._tooltip.setstyle(_sm);
// [97]  Return Me 
return _B;
// End Sub
};

// [101] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [102]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [103]  AddChild(childx) 
_B.addchild(_childx,_B);
// [104]  Next 
}
// End Sub
};

// [108] Sub SetPadding(p As Object) As VMTooltip 
_B.setpadding=function(_p) {
// [109]  Tooltip.SetPaddingAll(p) 
_B._tooltip.setpaddingall(_p);
// [110]  Return Me 
return _B;
// End Sub
};

// [114] Sub SetDirection(varDirection As Object) As VMTooltip 
_B.setdirection=function(_vardirection) {
// [115]  SetAttr(CreateMap( {2} : varDirection)) 
_B.setattr({"md-direction":_vardirection},_B);
// [116]  Return Me 
return _B;
// End Sub
};

// [120] Sub SetDirectionTop(b As Boolean) As VMTooltip 'ignore 
_B.setdirectiontop=function(_b) {
// [121]  SetAttr(CreateMap( {3} : {4} )) 
_B.setattr({"md-direction":"top"},_B);
// [122]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetDirectionRight(b As Boolean) As VMTooltip 'ignore 
_B.setdirectionright=function(_b) {
// [127]  SetAttr(CreateMap( {5} : {6} )) 
_B.setattr({"md-direction":"right"},_B);
// [128]  Return Me 
return _B;
// End Sub
};

// [132] Sub SetDirectionBottom(b As Boolean) As VMTooltip 'ignore 
_B.setdirectionbottom=function(_b) {
// [133]  SetAttr(CreateMap( {7} : {8} )) 
_B.setattr({"md-direction":"bottom"},_B);
// [134]  Return Me 
return _B;
// End Sub
};

// [138] Sub SetDirectionLeft(b As Boolean) As VMTooltip 'ignore 
_B.setdirectionleft=function(_b) {
// [139]  SetAttr(CreateMap( {9} : {10} )) 
_B.setattr({"md-direction":"left"},_B);
// [140]  Return Me 
return _B;
// End Sub
};

// [144] Sub SetDelay(varDelay As Object) As VMTooltip 
_B.setdelay=function(_vardelay) {
// [145]  SetAttr(CreateMap( {11} : varDelay)) 
_B.setattr({"md-delay":_vardelay},_B);
// [146]  Return Me 
return _B;
// End Sub
};

// [150] Sub SetActive(varActive As Object) As VMTooltip 
_B.setactive=function(_varactive) {
// [151]  SetAttr(CreateMap( {12} : varActive)) 
_B.setattr({"md-active":_varactive},_B);
// [152]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMTR  =========================== */
function banano_bananovuematerial_vmtr() {
var _B=this;
_B._tr= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._hascontent=false;

// [11] Public Sub Initialize(v As BANanoVue, sid As String, parentID As String) As VMTR 
_B.initialize=function(_v,_sid,_parentid) {
// [12]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [13]  TR.Initialize(v, ID) 
_B._tr.initialize(_v,_B._id);
// [14]  TR.SetTag( {2} ) 
_B._tr.settag("md-table-row");
// [15]  vue = v 
_B._vue=_v;
// [16]  HasContent = False 
_B._hascontent=false;
// [17]  SetSlot( {3} ) 
_B.setslot("md-table-row",_B);
// [18]  SetSlotScope( {4} ) 
_B.setslotscope("{ item }",_B);
// [19]  TR.RemoveAttr( {5} ) 
_B._tr.removeattr(":required");
// [20]  TR.RemoveAttr( {6} ) 
_B._tr.removeattr(":disabled");
// [21]  TR.RemoveAttr( {7} ) 
_B._tr.removeattr("v-show");
// [22]  TR.RemoveAttr( {8} ) 
_B._tr.removeattr("ref");
// [23]  TR.RemoveAttr( {9} ) 
_B._tr.removeattr("id");
// [24]  Return Me 
return _B;
// End Sub
};

// [27] Sub SetSelectable(sel As String) As VMTR 
_B.setselectable=function(_sel) {
var _pp;
// [28]  Dim pp As String = {0} 
_pp="" + _B._id + "selectable";
// [29]  vue.SetStateSingle(pp, sel) 
_B._vue.setstatesingle(_pp,_sel);
// [30]  SetAttr(CreateMap( {10} :pp)) 
_B.setattr({":md-selectable":_pp},_B);
// [31]  Return Me 
return _B;
// End Sub
};

// [34] Sub SetSelectableSingle(b As Boolean) As VMTR 
_B.setselectablesingle=function(_b) {
// [35]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [36]  SetSelectable( {11} ) 
_B.setselectable("single",_B);
// [37]  Return Me 
return _B;
// End Sub
};

// [40] Sub SetSelectableMultiple(b As Boolean) As VMTR 
_B.setselectablemultiple=function(_b) {
// [41]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [42]  SetSelectable( {12} ) 
_B.setselectable("multiple",_B);
// [43]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetAutoSelect(b As Boolean) As VMTR 
_B.setautoselect=function(_b) {
var _pp;
// [47]  Dim pp As String = {1} 
_pp="" + _B._id + "autoselect";
// [48]  vue.SetStateSingle(pp, b) 
_B._vue.setstatesingle(_pp,_b);
// [49]  If b Then SetAttr(CreateMap( {13} :pp)) 
if (_b) {_B.setattr({":md-auto-select":_pp},_B);}
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetSlot(s As String) As VMTR 
_B.setslot=function(_s) {
// [54]  SetAttr(CreateMap( {14} :s)) 
_B.setattr({"slot":_s},_B);
// [55]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetSlotTableRow(b As Boolean) As VMTR 
_B.setslottablerow=function(_b) {
// [59]  If b Then SetSlot( {15} ) 
if (_b) {_B.setslot("md-table-row",_B);}
// [60]  Return Me 
return _B;
// End Sub
};

// [63] Sub SetSlotScope(sc As String) As VMTR 
_B.setslotscope=function(_sc) {
// [64]  SetAttr(CreateMap( {16} : sc)) 
_B.setattr({"slot-scope":_sc},_B);
// [65]  Return Me 
return _B;
// End Sub
};

// [69] Sub ToString As String 
_B.tostring=function() {
// [70]  TR.RemoveAttr( {17} ) 
_B._tr.removeattr("v-show");
// [71]  Return TR.ToString 
return _B._tr.tostring();
// End Sub
};

// [74] Sub SetVModel(k As String) As VMTR 
_B.setvmodel=function(_k) {
// [75]  TR.SetVModel(k) 
_B._tr.setvmodel(_k);
// [76]  HasContent = True 
_B._hascontent=true;
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetVIf(vif As Object) As VMTR 
_B.setvif=function(_vif) {
// [81]  TR.SetVIf(vif) 
_B._tr.setvif(_vif);
// [82]  HasContent = True 
_B._hascontent=true;
// [83]  Return Me 
return _B;
// End Sub
};

// [86] Sub SetVShow(vif As Object) As VMTR 
_B.setvshow=function(_vif) {
// [87]  TR.SetVShow(vif) 
_B._tr.setvshow(_vif);
// [88]  HasContent = True 
_B._hascontent=true;
// [89]  Return Me 
return _B;
// End Sub
};

// [93] Sub Render 
_B.render=function() {
// [94]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [98] Sub AddChild(child As VMElement) As VMTR 
_B.addchild=function(_child) {
var _childhtml;
// [99]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [100]  TR.SetText(childHTML) 
_B._tr.settext(_childhtml);
// [101]  HasContent = True 
_B._hascontent=true;
// [102]  Return Me 
return _B;
// End Sub
};

// [106] Sub SetText(t As Object) As VMTR 
_B.settext=function(_t) {
// [107]  TR.SetText(t) 
_B._tr.settext(_t);
// [108]  HasContent = True 
_B._hascontent=true;
// [109]  Return Me 
return _B;
// End Sub
};

// [112] Sub SetPrimary(b As Boolean) As VMTR 
_B.setprimary=function(_b) {
// [113]  TR.SetPrimary(True) 
_B._tr.setprimary(true);
// [114]  Return Me 
return _B;
// End Sub
};

// [117] Sub SetAccent(b As Boolean) As VMTR 
_B.setaccent=function(_b) {
// [118]  TR.SetAccent(True) 
_B._tr.setaccent(true);
// [119]  Return Me 
return _B;
// End Sub
};

// [123] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [124]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [128] Sub AddClass(c As String) As VMTR 
_B.addclass=function(_c) {
// [129]  TR.AddClass(c) 
_B._tr.addclass(_c);
// [130]  HasContent = True 
_B._hascontent=true;
// [131]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetAttr(attr As Map) As VMTR 
_B.setattr=function(_attr) {
// [136]  TR.SetAttr(attr) 
_B._tr.setattr(_attr);
// [137]  HasContent = True 
_B._hascontent=true;
// [138]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetStyle(sm As Map) As VMTR 
_B.setstyle=function(_sm) {
// [143]  TR.SetStyle(sm) 
_B._tr.setstyle(_sm);
// [144]  HasContent = True 
_B._hascontent=true;
// [145]  Return Me 
return _B;
// End Sub
};

// [149] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [150]  For Each childx As VMElement In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [151]  AddChild(childx) 
_B.addchild(_childx,_B);
// [152]  Next 
}
// [153]  HasContent = True 
_B._hascontent=true;
// End Sub
};

// [157] Sub SetPadding(p As Object) As VMTR 
_B.setpadding=function(_p) {
// [158]  TR.SetPaddingAll(p) 
_B._tr.setpaddingall(_p);
// [159]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VMTree  =========================== */
function banano_bananovuematerial_vmtree() {
var _B=this;
_B._tree= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._options={};

_B._eventhandler={};

_B._expandicon="";

_B._collapseicon="";

_B._treebo=null;

_B._iconslibrary="";

_B._imageurlfield="";

_B._imagehtmlfield="";

_B._jq=null;

// [19] Public Sub Initialize(v As BANanoVue, module As Object, sid As String, priKey As String) As VMTree 
_B.initialize=function(_v,_module,_sid,_prikey) {
// [20]  BANano.DependsOnAsset( {11} ) 
;
// [21]  BANano.DependsOnAsset( {12} ) 
;
// [22]  BANano.DependsOnAsset( {13} ) 
;
// [23]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [24]  Tree.Initialize(v, ID) 
_B._tree.initialize(_v,_B._id);
// [25]  vue = v 
_B._vue=_v;
// [26]  JQ = vue.jquery 
_B._jq=_B._vue._jquery;
// [27]  eventHandler = module 
_B._eventhandler=_module;
// [28]  options.Initialize 
_B._options={};
// [29]  SetUiLibrary( {14} ) 
_B.setuilibrary("materialdesign",_B);
// [30]  SetIconsLibrary( {15} ) 
_B.seticonslibrary("materialicons",_B);
// [31]  SetLazyLoading(True) 
_B.setlazyloading(true,_B);
// [32]  SetSelectionType( {16} ) 
_B.setselectiontype("single",_B);
// [33]  SetCheckedField( {17} ) 
_B.setcheckedfield("checked",_B);
// [34]  SetChildrenField( {18} ) 
_B.setchildrenfield("children",_B);
// [35]  SetDisabledField( {19} ) 
_B.setdisabledfield("disabled",_B);
// [36]  SetHasChildrenField( {20} ) 
_B.sethaschildrenfield("hasChildren",_B);
// [37]  SetImageCssClassField( {21} ) 
_B.setimagecssclassfield("imageCssClass",_B);
// [38]  SetImageHtmlField( {22} ) 
_B.setimagehtmlfield("imageHtml",_B);
// [39]  SetImageUrlField( {23} ) 
_B.setimageurlfield("imageUrl",_B);
// [40]  SetTextField( {24} ) 
_B.settextfield("text",_B);
// [41]  SetPrimaryKey(priKey) 
_B.setprimarykey(_prikey,_B);
// [42]  Return Me 
return _B;
// End Sub
};

// [46] Sub SetDisabled(b As Boolean) As VMTree 
_B.setdisabled=function(_b) {
// [47]  Tree.SetDisabled(b) 
_B._tree.setdisabled(_b);
// [48]  Return Me 
return _B;
// End Sub
};

// [51] Sub SetVShow(vif As String) As VMTree 
_B.setvshow=function(_vif) {
// [52]  If vif = {25} Then Return Me 
if (_vif=="") { return _B;}
// [53]  Tree.SetVShow(vif) 
_B._tree.setvshow(_vif);
// [54]  Return Me 
return _B;
// End Sub
};

// [57] Sub SetElevation(e As Int) As VMTree 
_B.setelevation=function(_e) {
// [58]  Tree.SetElevation(e) 
_B._tree.setelevation(_e);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetAutoLoad(b As Boolean) As VMTree 
_B.setautoload=function(_b) {
// [63]  options.Put( {26} , b) 
_B._options["autoLoad"]=_b;
// [64]  Return Me 
return _B;
// End Sub
};

// [67] Sub SetWidth(w As String) As VMTree 
_B.setwidth=function(_w) {
// [68]  options.Put( {27} , w) 
_B._options["width"]=_w;
// [69]  Return Me 
return _B;
// End Sub
};

// [72] Sub SetBorder(b As Boolean) As VMTree 
_B.setborder=function(_b) {
// [73]  options.Put( {28} , b) 
_B._options["border"]=_b;
// [74]  Return Me 
return _B;
// End Sub
};

// [77] Sub SetCascadeCheck(b As Boolean) As VMTree 
_B.setcascadecheck=function(_b) {
// [78]  options.Put( {29} , b) 
_B._options["cascadeCheck"]=_b;
// [79]  Return Me 
return _B;
// End Sub
};

// [82] Sub SetCheckboxes(b As Boolean) As VMTree 
_B.setcheckboxes=function(_b) {
// [83]  options.put( {30} , b) 
_B._options["checkboxes"]=_b;
// [84]  Return Me 
return _B;
// End Sub
};

// [87] Sub SetCheckedField(checkedField As String) As VMTree 
_B.setcheckedfield=function(_checkedfield) {
// [88]  options.Put( {31} , checkedField) 
_B._options["checkedField"]=_checkedfield;
// [89]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetChildrenField(childrenField As String) As VMTree 
_B.setchildrenfield=function(_childrenfield) {
// [93]  options.Put( {32} , childrenField) 
_B._options["childrenField"]=_childrenfield;
// [94]  Return Me 
return _B;
// End Sub
};

// [97] Sub SetDataSource(dataSource As List) As VMTree 
_B.setdatasource=function(_datasource) {
// [98]  options.Put( {33} , dataSource) 
_B._options["dataSource"]=_datasource;
// [99]  Return Me 
return _B;
// End Sub
};

// [102] Sub SetDisabledField(disabledField As String) As VMTree 
_B.setdisabledfield=function(_disabledfield) {
// [103]  options.Put( {34} , disabledField) 
_B._options["disabledField"]=_disabledfield;
// [104]  Return Me 
return _B;
// End Sub
};

// [107] Sub SetDragAndDrop(dragAndDrop As Boolean) As VMTree 
_B.setdraganddrop=function(_draganddrop) {
// [108]  options.Put( {35} , dragAndDrop) 
_B._options["dragAndDrop"]=_draganddrop;
// [109]  Return Me 
return _B;
// End Sub
};

// [112] Sub SetHasChildrenField(hasChildrenField As String) As VMTree 
_B.sethaschildrenfield=function(_haschildrenfield) {
// [113]  options.Put( {36} , hasChildrenField) 
_B._options["hasChildrenField"]=_haschildrenfield;
// [114]  Return Me 
return _B;
// End Sub
};

// [117] Sub SetIconsLibrary(sIconsLibrary As String) As VMTree 
_B.seticonslibrary=function(_siconslibrary) {
// [118]  IconsLibrary = sIconsLibrary 
_B._iconslibrary=_siconslibrary;
// [119]  options.Put( {37} , IconsLibrary) 
_B._options["iconsLibrary"]=_B._iconslibrary;
// [120]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [121]  Case {38} 
case "" + "materialicons":
// [122]  ExpandIcon = {0} 
_B._expandicon="<i class=\"material-icons\">keyboard_arrow_right</i>";
// [123]  CollapseIcon = {1} 
_B._collapseicon="<i class=\"material-icons\">keyboard_arrow_down</i>";
// [124]  Case {39} 
break;
case "" + "fontawesome":
// [125]  ExpandIcon = {2} 
_B._expandicon="<i class=\"fa fa-chevron-right\"></i>";
// [126]  CollapseIcon = {3} 
_B._collapseicon="<i class=\"fa fa-chevron-down\"></i>";
// [127]  End Select 
break;
}
// [128]  Return Me 
return _B;
// End Sub
};

// [131] Sub SetImageCssClassField(imageCssClassField As String) As VMTree 
_B.setimagecssclassfield=function(_imagecssclassfield) {
// [132]  options.Put( {40} , imageCssClassField) 
_B._options["imageCssClassField"]=_imagecssclassfield;
// [133]  Return Me 
return _B;
// End Sub
};

// [136] Sub SetImageHtmlField(sImageHtmlField As String) As VMTree 
_B.setimagehtmlfield=function(_simagehtmlfield) {
// [137]  ImageHtmlField = sImageHtmlField 
_B._imagehtmlfield=_simagehtmlfield;
// [138]  options.Put( {41} , ImageHtmlField) 
_B._options["imageHtmlField"]=_B._imagehtmlfield;
// [139]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetImageUrlField(sImageUrlField As String) As VMTree 
_B.setimageurlfield=function(_simageurlfield) {
// [143]  ImageUrlField = sImageUrlField 
_B._imageurlfield=_simageurlfield;
// [144]  options.Put( {42} , ImageUrlField) 
_B._options["imageUrlField"]=_B._imageurlfield;
// [145]  Return Me 
return _B;
// End Sub
};

// [148] Sub SetLazyLoading(lazyLoading As Boolean) As VMTree 
_B.setlazyloading=function(_lazyloading) {
// [149]  options.Put( {43} , lazyLoading) 
_B._options["lazyLoading"]=_lazyloading;
// [150]  Return Me 
return _B;
// End Sub
};

// [153] Sub SetPrimaryKey(primaryKey As String) As VMTree 
_B.setprimarykey=function(_primarykey) {
// [154]  options.Put( {44} , primaryKey) 
_B._options["primaryKey"]=_primarykey;
// [155]  Return Me 
return _B;
// End Sub
};

// [158] Sub SetSelectionType(selectionType As String) As VMTree 
_B.setselectiontype=function(_selectiontype) {
// [159]  options.Put( {45} , selectionType) 
_B._options["selectionType"]=_selectiontype;
// [160]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetTextField(textField As String) As VMTree 
_B.settextfield=function(_textfield) {
// [164]  options.Put( {46} , textField) 
_B._options["textField"]=_textfield;
// [165]  Return Me 
return _B;
// End Sub
};

// [168] Sub SetUiLibrary(uiLibrary As String) As VMTree 
_B.setuilibrary=function(_uilibrary) {
// [169]  options.Put( {47} , uiLibrary) 
_B._options["uiLibrary"]=_uilibrary;
// [170]  Return Me 
return _B;
// End Sub
};

// [175] Sub ToString As String 
_B.tostring=function() {
var _icn;
// [176]  Dim icn As Map 
_icn={};
// [177]  icn.Initialize 
_icn={};
// [178]  icn.Put( {48} , ExpandIcon) 
_icn["expand"]=_B._expandicon;
// [179]  icn.Put( {49} , CollapseIcon) 
_icn["collapse"]=_B._collapseicon;
// [180]  options.Put( {50} , icn) 
_B._options["icons"]=_icn;
// [181]  Return Tree.ToString 
return _B._tree.tostring();
// End Sub
};

// [184] Sub SetVModel(k As String) As VMTree 
_B.setvmodel=function(_k) {
// [185]  Tree.SetVModel(k) 
_B._tree.setvmodel(_k);
// [186]  Return Me 
return _B;
// End Sub
};

// [190] Sub Render 
_B.render=function() {
// [191]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [195] Sub Pop(p As VMElement) 
_B.pop=function(_p) {
// [196]  p.SetText(ToString) 
_p.settext(_B.tostring(_B));
// End Sub
};

// [200] Sub AddClass(c As String) As VMTree 
_B.addclass=function(_c) {
// [201]  Tree.AddClass(c) 
_B._tree.addclass(_c);
// [202]  Return Me 
return _B;
// End Sub
};

// [206] Sub SetAttr(attr As Map) As VMTree 
_B.setattr=function(_attr) {
// [207]  Tree.SetAttr(attr) 
_B._tree.setattr(_attr);
// [208]  Return Me 
return _B;
// End Sub
};

// [212] Sub SetStyle(sm As Map) As VMTree 
_B.setstyle=function(_sm) {
// [213]  Tree.SetStyle(sm) 
_B._tree.setstyle(_sm);
// [214]  Return Me 
return _B;
// End Sub
};

// [218] Sub SetPadding(p As Object) As VMTree 
_B.setpadding=function(_p) {
// [219]  Tree.SetPaddingAll(p) 
_B._tree.setpaddingall(_p);
// [220]  Return Me 
return _B;
// End Sub
};

// [224] Sub Destroy 
_B.destroy=function() {
// [225]  treeBO.runmethod( {51} ,Null) 
_B._treebo["destroy"]();
// End Sub
};

// [229] Sub Refresh 
_B.refresh=function() {
var _e,_node,_record,_sid,_state;
// [230]  If treeBO <> Null Then Destroy 
if (_B._treebo!=null) {_B.destroy(_B);}
// [232]  treeBO = JQ.Selector( {4} ).RunMethod( {52} , Array(options)) 
_B._treebo=_B._jq("#" + _B._id + "")["tree"](_B._options);
// [234]  Dim e, node, record, sID, state As Map 'ignore 
_e={};
_node={};
_record={};
_sid={};
_state={};
// [237]  treeBO.RunMethod( {56} , Array( {57} , BANano.Callback(eventHandler, ID & {58} , Array(e, node, sID)))) 
_B._treebo["bind"]("select",function(_e,_node,_sid) {if (typeof _B._eventhandler[(_B._id+"_select").toLowerCase()]==="function") {return _B._eventhandler[(_B._id+"_select").toLowerCase()](_e,_node,_sid,_B)};});
// End Sub
};

// [244] Sub AddNode(parentID As String, pk As String, Text As String, ImgURL As String, Icon As String, Tag As Map) 
_B.addnode=function(_parentid,_pk,_text,_imgurl,_icon,_tag) {
var _nod,_sicon,_strkey,_strval,_prnt;
// [245]  If treeBO = Null Then Refresh 
if (_B._treebo==null) {_B.refresh(_B);}
// [247]  Dim nod As Map = CreateMap( {68} :pk, {69} :Text) 
_nod={"id":_pk, "text":_text};
// [249]  If ImgURL <> {70} Then 
if (_imgurl!="") {
// [250]  nod.Put(ImageUrlField, ImgURL) 
_nod[_B._imageurlfield]=_imgurl;
// [251]  End If 
}
// [253]  If Icon <> {71} Then 
if (_icon!="") {
// [254]  Dim sIcon As String = {72} 
_sicon="";
// [255]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [256]  Case {73} 
case "" + "materialicons":
// [257]  sIcon = {5} 
_sicon="<i class=\"material-icons\">" + _icon + "</i>";
// [258]  Case {74} 
break;
case "" + "fontawesome":
// [259]  sIcon = {6} 
_sicon="<i class=\"" + _icon + "\"></i>";
// [260]  End Select 
break;
}
// [261]  nod.Put(ImageHtmlField, sIcon) 
_nod[_B._imagehtmlfield]=_sicon;
// [262]  End If 
}
// [264]  If Tag <> Null Then 
if (_tag!=null) {
// [265]  For Each strKey As String In Tag.Keys 
var _strkeyKeys = Object.keys(_tag);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [266]  Dim strVal As Object = Tag.Get(strKey) 
_strval=_tag[_strkey];
// [267]  nod.Put(strKey,strVal) 
_nod[_strkey]=_strval;
// [268]  Next 
}
// [269]  End If 
}
// [270]  If parentID = {75} Then 
if (_parentid=="") {
// [271]  treeBO.RunMethod( {76} ,Array(nod)) 
_B._treebo["addNode"](_nod);
// [272]  Else 
} else {
// [273]  Dim prnt As BANanoObject = GetNodeById(parentID) 
_prnt=_B.getnodebyid(_parentid,_B);
// [274]  If prnt <> Null Then 
if (_prnt!=null) {
// [275]  treeBO.RunMethod( {77} ,Array(nod,prnt)) 
_B._treebo["addNode"](_nod,_prnt);
// [276]  End If 
}
// [277]  End If 
}
// End Sub
};

// [281] Sub GetDataById(pk As String) As Map 
_B.getdatabyid=function(_pk) {
// [282]  Return treeBO.RunMethod( {78} , Array(pk)) 
return _B._treebo["getDataById"](_pk);
// End Sub
};

// [286] Sub GetNodeById(pk As String) As BANanoObject 
_B.getnodebyid=function(_pk) {
var _bo;
// [287]  Dim bo As BANanoObject = treeBO.RunMethod( {79} , Array(pk)) 
_bo=_B._treebo["getNodeById"](_pk);
// [288]  Return bo 
return _bo;
// End Sub
};

// [292] Sub GetNodeByText(pk As String) As BANanoObject 
_B.getnodebytext=function(_pk) {
var _bo;
// [293]  Dim bo As BANanoObject = treeBO.RunMethod( {80} , Array(pk)) 
_bo=_B._treebo["getNodeByText"](_pk);
// [294]  Return bo 
return _bo;
// End Sub
};

// [298] Sub GetDataByText(nodeText As String) As BANanoObject 
_B.getdatabytext=function(_nodetext) {
// [299]  Return treeBO.RunMethod( {81} , Array(nodeText)) 
return _B._treebo["getDataByText"](_nodetext);
// End Sub
};

// [303] Sub SetText(pk As String, Text As String) 
_B.settext=function(_pk,_text) {
var _nod;
// [304]  Dim nod As BANanoObject = GetDataById(pk) 
_nod=_B.getdatabyid(_pk,_B);
// [305]  If nod <> Null Then 
if (_nod!=null) {
// [306]  nod.SetField( {82} , Text) 
_nod["text"]=_text;
// [307]  treeBO.RunMethod( {83} , Array(pk, nod)) 
_B._treebo["updateNode"](_pk,_nod);
// [308]  End If 
}
// End Sub
};

// [312] Sub SetIcon(pk As String, Icon As String) 
_B.seticon=function(_pk,_icon) {
var _nod,_sicon;
// [313]  Dim nod As BANanoObject = GetDataById(pk) 
_nod=_B.getdatabyid(_pk,_B);
// [314]  If nod <> Null Then 
if (_nod!=null) {
// [315]  Dim sIcon As String = {84} 
_sicon="";
// [316]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [317]  Case {85} 
case "" + "materialicons":
// [318]  sIcon = {7} 
_sicon="<i class=\"material-icons\">" + _icon + "</i>";
// [319]  Case {86} 
break;
case "" + "fontawesome":
// [320]  sIcon = {8} 
_sicon="<i class=\"" + _icon + "\"></i>";
// [321]  End Select 
break;
}
// [322]  nod.SetField(ImageHtmlField, sIcon) 
_nod[_B._imagehtmlfield]=_sicon;
// [323]  treeBO.RunMethod( {87} , Array(pk, nod)) 
_B._treebo["updateNode"](_pk,_nod);
// [324]  End If 
}
// End Sub
};

// [328] Sub SetImage(pk As String, ImageURL As String) 
_B.setimage=function(_pk,_imageurl) {
var _nod;
// [329]  Dim nod As BANanoObject = GetDataById(pk) 
_nod=_B.getdatabyid(_pk,_B);
// [330]  If nod <> Null Then 
if (_nod!=null) {
// [331]  nod.SetField(ImageUrlField, ImageURL) 
_nod[_B._imageurlfield]=_imageurl;
// [332]  treeBO.RunMethod( {88} , Array(pk, nod)) 
_B._treebo["updateNode"](_pk,_nod);
// [333]  End If 
}
// End Sub
};

// [337] Sub SetData(pk As String, Tag As Map) 
_B.setdata=function(_pk,_tag) {
var _nod,_strkey,_strval;
// [338]  Dim nod As BANanoObject = GetDataById(pk) 
_nod=_B.getdatabyid(_pk,_B);
// [339]  If nod <> Null Then 
if (_nod!=null) {
// [340]  If Tag <> Null Then 
if (_tag!=null) {
// [341]  For Each strKey As String In Tag.Keys 
var _strkeyKeys = Object.keys(_tag);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [342]  Dim strVal As Object = Tag.Get(strKey) 
_strval=_tag[_strkey];
// [343]  nod.SetField(strKey, strVal) 
_nod[_strkey]=_strval;
// [344]  Next 
}
// [345]  End If 
}
// [346]  treeBO.RunMethod( {89} , Array(pk, nod)) 
_B._treebo["updateNode"](_pk,_nod);
// [347]  End If 
}
// End Sub
};

// [351] Sub UpdateNode(pk As String, Text As String, ImgURL As String, Icon As String, Tag As Map) 
_B.updatenode=function(_pk,_text,_imgurl,_icon,_tag) {
var _nod,_strkey,_strval,_sicon;
// [352]  Dim nod As BANanoObject = GetDataById(pk) 
_nod=_B.getdatabyid(_pk,_B);
// [353]  If nod <> Null Then 
if (_nod!=null) {
// [354]  nod.SetField( {90} , Text) 
_nod["text"]=_text;
// [355]  If Tag <> Null Then 
if (_tag!=null) {
// [356]  For Each strKey As String In Tag.Keys 
var _strkeyKeys = Object.keys(_tag);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [357]  Dim strVal As Object = Tag.Get(strKey) 
_strval=_tag[_strkey];
// [358]  nod.SetField(strKey, strVal) 
_nod[_strkey]=_strval;
// [359]  Next 
}
// [360]  End If 
}
// [361]  Dim sIcon As String = {91} 
_sicon="";
// [362]  Select Case IconsLibrary 
switch ("" + _B._iconslibrary) {
// [363]  Case {92} 
case "" + "materialicons":
// [364]  sIcon = {9} 
_sicon="<i class=\"material-icons\">" + _icon + "</i>";
// [365]  Case {93} 
break;
case "" + "fontawesome":
// [366]  sIcon = {10} 
_sicon="<i class=\"" + _icon + "\"></i>";
// [367]  End Select 
break;
}
// [368]  If ImgURL.Length > 0 Then nod.SetField(ImageUrlField, sIcon) 
if (_imgurl.length>0) {_nod[_B._imageurlfield]=_sicon;}
// [369]  If Icon.Length > 0 Then nod.SetField(ImageHtmlField, ImgURL) 
if (_icon.length>0) {_nod[_B._imagehtmlfield]=_imgurl;}
// [370]  treeBO.RunMethod( {94} , Array(pk, nod)) 
_B._treebo["updateNode"](_pk,_nod);
// [371]  End If 
}
// End Sub
};

// [375] Sub GetChildren(pk As String) As List 
_B.getchildren=function(_pk) {
// [376]  Return treeBO.RunMethod( {95} , Array(GetNodeById(pk))) 
return _B._treebo["getChildren"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [380] Sub GetCheckedNodes() As List 
_B.getcheckednodes=function() {
var _snodes;
// [381]  Dim snodes As List 
_snodes=[];
// [382]  snodes.Initialize 
_snodes.length=0;
// [383]  snodes = treeBO.RunMethod( {96} , {97} ) 
_snodes=_B._treebo["getCheckedNodes"]();
// [384]  Return snodes 
return _snodes;
// End Sub
};

// [388] Sub GetSelections() As List 
_B.getselections=function() {
// [389]  Return treeBO.RunMethod( {98} , {99} ) 
return _B._treebo["getSelections"]();
// End Sub
};

// [393] Sub GetAll() As String 
_B.getall=function() {
var _bo;
// [394]  Dim bo As BANanoObject = treeBO.RunMethod( {100} , {101} ) 
_bo=_B._treebo["getAll"]();
// [395]  Return BANano.ToJson(bo.Result) 
return JSON.stringify(_bo);
// End Sub
};

// [399] Sub RemoveNode(pk As String) 
_B.removenode=function(_pk) {
// [400]  Try 
try {
// [401]  treeBO.RunMethod( {102} , GetNodeById(pk)) 
_B._treebo["removeNode"](_B.getnodebyid(_pk,_B));
// [402]  Catch 
} catch(err) {
// [403]  Log( {103} ) 
console.log("Error removing node");
// [404]  End Try 
}
// End Sub
};

// [408] Sub Check(pk As String) 
_B.check=function(_pk) {
// [409]  treeBO.RunMethod( {104} , Array(GetNodeById(pk))) 
_B._treebo["check"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [413] Sub UnCheck(pk As String) 
_B.uncheck=function(_pk) {
// [414]  treeBO.RunMethod( {105} , Array(GetNodeById(pk))) 
_B._treebo["uncheck"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [418] Sub SelectNode(pk As String) 
_B.selectnode=function(_pk) {
var _rec;
// [419]  UnSelectAll 
_B.unselectall(_B);
// [420]  Dim rec As BANanoObject = GetNodeById(pk) 
_rec=_B.getnodebyid(_pk,_B);
// [421]  treeBO.RunMethod( {106} , Array(rec)) 
_B._treebo["select"](_rec);
// End Sub
};

// [425] Sub UnSelectNode(pk As String) 
_B.unselectnode=function(_pk) {
// [426]  treeBO.RunMethod( {107} , Array(GetNodeById(pk))) 
_B._treebo["unselect"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [430] Sub ExpandAll() 
_B.expandall=function() {
// [431]  treeBO.RunMethod( {108} , {109} ) 
_B._treebo["expandAll"]();
// End Sub
};

// [434] Sub Clear 
_B.clear=function() {
// [435]  SetDataSource(Array()) 
_B.setdatasource([],_B);
// [436]  Refresh 
_B.refresh(_B);
// End Sub
};

// [440] Sub Reload() 
_B.reload=function() {
// [441]  treeBO.RunMethod( {110} , {111} ) 
_B._treebo["reload"]();
// End Sub
};

// [445] Sub CollapseAll() 
_B.collapseall=function() {
// [446]  treeBO.RunMethod( {112} , {113} ) 
_B._treebo["collapseAll"]();
// End Sub
};

// [450] Sub CheckAll() 
_B.checkall=function() {
// [451]  treeBO.RunMethod( {114} , {115} ) 
_B._treebo["checkAll"]();
// End Sub
};

// [455] Sub UnCheckAll() 
_B.uncheckall=function() {
// [456]  treeBO.RunMethod( {116} , {117} ) 
_B._treebo["uncheckAll"]();
// End Sub
};

// [461] Sub Expand(pk As String) 
_B.expand=function(_pk) {
// [462]  treeBO.RunMethod( {118} , Array(GetNodeById(pk))) 
_B._treebo["expand"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [466] Sub Collapse(pk As String) 
_B.collapse=function(_pk) {
// [467]  treeBO.RunMethod( {119} , Array(GetNodeById(pk))) 
_B._treebo["collapse"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [471] Sub Enable(pk As String) 
_B.enable=function(_pk) {
// [472]  treeBO.RunMethod( {120} , Array(GetNodeById(pk))) 
_B._treebo["enable"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [476] Sub Disable(pk As String) 
_B.disable=function(_pk) {
// [477]  treeBO.RunMethod( {121} , Array(GetNodeById(pk))) 
_B._treebo["disable"](_B.getnodebyid(_pk,_B));
// End Sub
};

// [481] Sub RemoveChildren(parentID As String) 
_B.removechildren=function(_parentid) {
var _children,_tchild,_cchild,_strchild;
// [483]  Dim children As List = GetChildren(parentID) 
_children=_B.getchildren(_parentid,_B);
// [484]  Dim tChild As Int = children.Size - 1 
_tchild=_children.length-1;
// [485]  Dim cChild As Int 
_cchild=0;
// [486]  For cChild = tChild To 0 Step -1 
for (_cchild=_tchild;_cchild>=0;_cchild-=1) {
// [487]  Dim strChild As String = children.Get(cChild) 
_strchild=_children[_cchild];
// [488]  RemoveNode(strChild) 
_B.removenode(_strchild,_B);
// [489]  Next 
}
// End Sub
};

// [493] Sub GetData(pk As String) As Map 
_B.getdata=function(_pk) {
var _bo,_dm;
// [494]  Dim bo As BANanoObject = GetDataById(pk) 
_bo=_B.getdatabyid(_pk,_B);
// [495]  Dim dm As Map = bo.Result 
_dm=_bo;
// [496]  Return dm 
return _dm;
// End Sub
};

// [500] Sub UnSelectAll 
_B.unselectall=function() {
// [501]  treeBO.RunMethod( {122} , Null) 
_B._treebo["unselectAll"]();
// End Sub
};

}
/* =========================== VMVueCal  =========================== */
function banano_bananovuematerial_vmvuecal() {
var _B=this;
_B._vuecal= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._events=[];

_B._module={};

// [13] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object, Width As String, Height As String) As VMVueCal 
_B.initialize=function(_v,_sid,_eventhandler,_width,_height) {
var _event,_e;
// [14]  BANano.DependsOnAsset( {5} ) 
;
// [15]  BANano.DependsOnAsset( {6} ) 
;
// [16]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [17]  vue = v 
_B._vue=_v;
// [18]  module = eventHandler 
_B._module=_eventhandler;
// [19]  VueCal.Initialize(vue, ID).SetTag( {7} ) 
_B._vuecal.initialize(_B._vue,_B._id).settag("vue-cal");
// [20]  Width = VueCal.MakePx(Width) 
_width=_B._vuecal.makepx(_width);
// [21]  Height = VueCal.MakePx(Height) 
_height=_B._vuecal.makepx(_height);
// [22]  VueCal.SetWidth(Width) 
_B._vuecal.setwidth(_width);
// [23]  VueCal.SetHeight(Height) 
_B._vuecal.setheight(_height);
// [24]  events.Initialize 
_B._events.length=0;
// [25]  InitializeEvents 
_B.initializeevents(_B);
// [26]  Dim event As Object, e As BANanoEvent 
_event=null;
_event=null;
_e=null;
// [27]  SetOnEventClick(event, e) 
_B.setoneventclick(_event,_e,_B);
// [28]  Return Me 
return _B;
// End Sub
};

// [31] Sub SetEditableEvents(b As Boolean) As VMVueCal 
_B.seteditableevents=function(_b) {
// [32]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [33]  VueCal.SetAttr1( {8} , True) 
_B._vuecal.setattr1("editable-events",true);
// [34]  Return Me 
return _B;
// End Sub
};

// [37] Sub SetShowAllDayEvents(b As Boolean) As VMVueCal 
_B.setshowalldayevents=function(_b) {
// [38]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [39]  VueCal.SetAttr1( {9} , True) 
_B._vuecal.setattr1("show-all-day-events",true);
// [40]  Return Me 
return _B;
// End Sub
};

// [43] Sub SetHideTitleBar(b As Boolean) As VMVueCal 
_B.sethidetitlebar=function(_b) {
// [44]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [45]  VueCal.SetAttr1( {10} , True) 
_B._vuecal.setattr1("hide-title-bar",true);
// [46]  Return Me 
return _B;
// End Sub
};

// [49] private Sub SetOnEventClick(event As Object, e As BANanoEvent) As VMVueCal 
_B.setoneventclick=function(_event,_e) {
var _ekey,_cb;
// [50]  Dim eKey As String = {0} 
_ekey="" + _B._id + "_click";
// [51]  Dim cb As BANanoObject = BANano.CallBack(module, eKey, Array(event, e)) 
_cb=function(_event,_e) {if (typeof _B._module[(_ekey).toLowerCase()]==="function") {return _B._module[(_ekey).toLowerCase()](_event,_e,_B)};};
// [52]  VueCal.SetAttr1( {11} , cb) 
_B._vuecal.setattr1(":on-event-click",_cb);
// [53]  Return Me 
return _B;
// End Sub
};

// [56] Sub SetEventsCountOnYearView(b As Boolean) As VMVueCal 
_B.seteventscountonyearview=function(_b) {
// [57]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [58]  VueCal.SetAttr1( {12} , True) 
_B._vuecal.setattr1("events-count-on-year-view",true);
// [59]  Return Me 
return _B;
// End Sub
};

// [62] Sub SetEventsOnMonthView(eom As Object) As VMVueCal 
_B.seteventsonmonthview=function(_eom) {
// [63]  VueCal.SetAttr1( {13} , eom) 
_B._vuecal.setattr1("events-on-month-view",_eom);
// [64]  Return Me 
return _B;
// End Sub
};

// [68] Sub SetTime(b As Boolean) As VMVueCal 
_B.settime=function(_b) {
// [69]  VueCal.SetAttr1( {14} , b) 
_B._vuecal.setattr1(":time",_b);
// [70]  Return Me 
return _B;
// End Sub
};

// [73] Sub SetHideWeekends(b As Boolean) As VMVueCal 
_B.sethideweekends=function(_b) {
// [74]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [75]  VueCal.SetAttr1( {15} , True) 
_B._vuecal.setattr1("hide-weekends",true);
// [76]  Return Me 
return _B;
// End Sub
};

// [79] Sub SetHideViewSelector(b As Boolean) As VMVueCal 
_B.sethideviewselector=function(_b) {
// [80]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [81]  VueCal.SetAttr1( {16} , True) 
_B._vuecal.setattr1("hide-view-selector",true);
// [82]  Return Me 
return _B;
// End Sub
};

// [85] Sub SetShowWeekNumbers(b As Boolean) As VMVueCal 
_B.setshowweeknumbers=function(_b) {
// [86]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [87]  VueCal.SetAttr1( {17} , True) 
_B._vuecal.setattr1("show-week-numbers",true);
// [88]  Return Me 
return _B;
// End Sub
};

// [91] Sub AddEvent(eID As String, eStart As String, eEnd As String, eTitle As String, eIcon As String, eContent As String, eContentFull As String, eClass As String, eAllDay As Boolean) 
_B.addevent=function(_eid,_estart,_eend,_etitle,_eicon,_econtent,_econtentfull,_eclass,_eallday) {
var _event;
// [92]  Dim event As Map = CreateMap() 
_event={};
// [93]  event.Put( {18} , eID) 
_event["id"]=_eid;
// [94]  event.Put( {19} , eStart) 
_event["start"]=_estart;
// [95]  event.Put( {20} , eEnd) 
_event["end"]=_eend;
// [96]  event.Put( {21} , eTitle) 
_event["title"]=_etitle;
// [97]  If eIcon <> {22} Then event.Put( {23} , eIcon) 
if (_eicon!="") {_event["icon"]=_eicon;}
// [98]  If eContent <> {24} Then event.Put( {25} , eContent) 
if (_econtent!="") {_event["content"]=_econtent;}
// [99]  If eContentFull <> {26} Then event.Put( {27} , eContentFull) 
if (_econtentfull!="") {_event["contentFull"]=_econtentfull;}
// [100]  If eClass <> {28} Then event.Put( {29} , eClass) 
if (_eclass!="") {_event["class"]=_eclass;}
// [101]  If eAllDay Then event.Put( {30} , eAllDay) 
if (_eallday) {_event["allDay"]=_eallday;}
// [102]  events.Add(event) 
_B._events.push(_event);
// End Sub
};

// [105] Sub SetStartWeekOnSunday(b As Boolean) As VMVueCal 
_B.setstartweekonsunday=function(_b) {
// [106]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [107]  VueCal.SetAttr1( {31} , True) 
_B._vuecal.setattr1("start-week-on-sunday",true);
// [108]  Return Me 
return _B;
// End Sub
};

// [111] Sub SetTodayButton(b As Boolean) As VMVueCal 
_B.settodaybutton=function(_b) {
// [112]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [113]  VueCal.SetAttr1( {32} , True) 
_B._vuecal.setattr1("today-button",true);
// [114]  Return Me 
return _B;
// End Sub
};

// [117] Sub SetTimeStep(ts As String) As VMVueCal 
_B.settimestep=function(_ts) {
// [118]  If ts = {33} Then Return Me 
if (_ts=="") { return _B;}
// [119]  VueCal.SetAttr1( {34} ,ts) 
_B._vuecal.setattr1("time-step",_ts);
// [120]  Return Me 
return _B;
// End Sub
};

// [123] Sub SetDefaultView(v As String) As VMVueCal 
_B.setdefaultview=function(_v) {
// [124]  If v = {35} Then Return Me 
if (_v=="") { return _B;}
// [125]  VueCal.SetAttr1( {36} , v) 
_B._vuecal.setattr1("default-view",_v);
// [126]  Return Me 
return _B;
// End Sub
};

// [129] Sub SetDefaultViewMonth As VMVueCal 
_B.setdefaultviewmonth=function() {
// [130]  VueCal.SetAttr1( {37} , {38} ) 
_B._vuecal.setattr1("default-view","month");
// [131]  Return Me 
return _B;
// End Sub
};

// [135] Sub SetDefaultViewDay As VMVueCal 
_B.setdefaultviewday=function() {
// [136]  VueCal.SetAttr1( {39} , {40} ) 
_B._vuecal.setattr1("default-view","day");
// [137]  Return Me 
return _B;
// End Sub
};

// [140] private Sub InitializeEvents As VMVueCal 
_B.initializeevents=function() {
var _evename;
// [141]  Dim eveName As String = {1} 
_evename="" + _B._id + "events";
// [142]  vue.SetStateSingle(eveName, Array()) 
_B._vue.setstatesingle(_evename,[]);
// [143]  VueCal.SetAttr1( {41} , eveName) 
_B._vuecal.setattr1(":events",_evename);
// [144]  Return Me 
return _B;
// End Sub
};

// [147] Sub SetEvents(eveList As List) As VMVueCal 
_B.setevents=function(_evelist) {
var _evename;
// [148]  Dim eveName As String = {2} 
_evename="" + _B._id + "events";
// [149]  vue.SetStateSingle(eveName, eveList) 
_B._vue.setstatesingle(_evename,_evelist);
// [150]  Return Me 
return _B;
// End Sub
};

// [153] Sub Refresh 
_B.refresh=function() {
// [154]  SetEvents(events) 
_B.setevents(_B._events,_B);
// End Sub
};

// [157] Sub SetMinDate(minDate As String) As VMVueCal 
_B.setmindate=function(_mindate) {
var _mind;
// [158]  Dim mind As String = {3} 
_mind="" + _B._id + "mindate";
// [159]  vue.SetStateSingle(mind, minDate) 
_B._vue.setstatesingle(_mind,_mindate);
// [160]  VueCal.SetAttr1( {42} , mind) 
_B._vuecal.setattr1(":mindate",_mind);
// [161]  Return Me 
return _B;
// End Sub
};

// [164] Sub SetMaxDate(maxDate As String) As VMVueCal 
_B.setmaxdate=function(_maxdate) {
var _maxd;
// [165]  Dim maxd As String = {4} 
_maxd="" + _B._id + "maxdate";
// [166]  vue.SetStateSingle(maxd, maxDate) 
_B._vue.setstatesingle(_maxd,_maxdate);
// [167]  VueCal.SetAttr1( {43} , maxd) 
_B._vuecal.setattr1(":maxdate",_maxd);
// [168]  Return Me 
return _B;
// End Sub
};

// [172] Sub SetXSmall(b As Boolean) As VMVueCal 
_B.setxsmall=function(_b) {
// [173]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [174]  VueCal.SetAttr1( {44} , True) 
_B._vuecal.setattr1("xsmall",true);
// [175]  Return Me 
return _B;
// End Sub
};

// [178] Sub SetTabIndex(ti As String) As VMVueCal 
_B.settabindex=function(_ti) {
// [179]  If ti = {45} Then Return Me 
if (_ti=="") { return _B;}
// [180]  VueCal.SetTabIndex(ti) 
_B._vuecal.settabindex(_ti);
// [181]  Return Me 
return _B;
// End Sub
};

// [185] Sub SetStyle(sm As Map) As VMVueCal 
_B.setstyle=function(_sm) {
// [186]  VueCal.SetStyle(sm) 
_B._vuecal.setstyle(_sm);
// [187]  Return Me 
return _B;
// End Sub
};

// [190] Sub SetVIf(vif As String) As VMVueCal 
_B.setvif=function(_vif) {
// [191]  VueCal.SetVIf(vif) 
_B._vuecal.setvif(_vif);
// [192]  Return Me 
return _B;
// End Sub
};

// [195] Sub SetID(iID As String, bind As Boolean) As VMVueCal 
_B.setid=function(_iid,_bind) {
// [196]  VueCal.SetID(iID,bind) 
_B._vuecal.setid(_iid,_bind);
// [197]  Return Me 
return _B;
// End Sub
};

// [200] Sub SetName(nam As String, bind As Boolean) As VMVueCal 
_B.setname=function(_nam,_bind) {
// [201]  VueCal.SetName(nam, bind) 
_B._vuecal.setname(_nam,_bind);
// [202]  Return Me 
return _B;
// End Sub
};

// [205] Sub SetKey(k As String, bind As Boolean) As VMVueCal 
_B.setkey=function(_k,_bind) {
// [206]  VueCal.SetKey(k, bind) 
_B._vuecal.setkey(_k,_bind);
// [207]  Return Me 
return _B;
// End Sub
};

// [210] Sub SetVShow(vif As String) As VMVueCal 
_B.setvshow=function(_vif) {
// [211]  VueCal.SetVShow(vif) 
_B._vuecal.setvshow(_vif);
// [212]  Return Me 
return _B;
// End Sub
};

// [216] Sub AddClass(c As String) As VMVueCal 
_B.addclass=function(_c) {
// [217]  VueCal.AddClass(c) 
_B._vuecal.addclass(_c);
// [218]  Return Me 
return _B;
// End Sub
};

// [222] Sub SetAttr(attr As Map) As VMVueCal 
_B.setattr=function(_attr) {
// [223]  VueCal.SetAttr(attr) 
_B._vuecal.setattr(_attr);
// [224]  Return Me 
return _B;
// End Sub
};

// [228] Sub ToString As String 
_B.tostring=function() {
// [229]  Return VueCal.tostring 
return _B._vuecal.tostring();
// End Sub
};

// [232] Sub Render 
_B.render=function() {
// [233]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [236] Sub Pop(px As VMElement) 
_B.pop=function(_px) {
// [237]  px.SetText(ToString) 
_px.settext(_B.tostring(_B));
// End Sub
};

}
/* =========================== VMWaterBall  =========================== */
function banano_bananovuematerial_vmwaterball() {
var _B=this;
_B._waterball= new banano_bananovuematerial_vmelement();

_B._id="";

_B._vue= new banano_bananovuematerial_bananovue();

_B._isloading=false;

_B._vnowrange=0;

_B._vtargetrange=0;

_B._range1=0;

_B._range2=0;

_B._range3=0;

_B._wwidth=0;

_B._wheight=0;

_B._jq=null;

_B._module={};

// [20] Sub SetRanges(red As Int, orange As Int, green As Int) 
_B.setranges=function(_red,_orange,_green) {
// [21]  range1 = red 
_B._range1=_red;
// [22]  range2 = orange 
_B._range2=_orange;
// [23]  range3 = green 
_B._range3=_green;
// End Sub
};

// [27] Sub SetValues(nowRange As Int, targetRange As Int) 
_B.setvalues=function(_nowrange,_targetrange) {
// [28]  vnowRange = nowRange 
_B._vnowrange=_nowrange;
// [29]  vtargetRange = targetRange 
_B._vtargetrange=_targetrange;
// End Sub
};

// [32] Public Sub Initialize(v As BANanoVue, sid As String, eventHandler As Object, Width As String, Height As String) As VMWaterBall 
_B.initialize=function(_v,_sid,_eventhandler,_width,_height) {
// [33]  BANano.DependsOnAsset( {1} ) 
;
// [34]  BANano.DependsOnAsset( {2} ) 
;
// [35]  ID = sid.ToLowerCase 
_B._id=_sid.toLowerCase();
// [36]  vue = v 
_B._vue=_v;
// [37]  module = eventHandler 
_B._module=_eventhandler;
// [38]  JQ = vue.jquery 
_B._jq=_B._vue._jquery;
// [39]  WaterBall.Initialize(vue, ID).SetTag( {3} ) 
_B._waterball.initialize(_B._vue,_B._id).settag("div");
// [40]  range1 = 50 
_B._range1=50;
// [41]  range2 = 80 
_B._range2=80;
// [42]  range3 = 100 
_B._range3=100;
// [43]  wWidth = 0.02 
_B._wwidth=0.02;
// [44]  wHeight = 5 
_B._wheight=5;
// [45]  WaterBall.AddClass(ID) 
_B._waterball.addclass(_B._id);
// [46]  Width = WaterBall.MakePx(Width) 
_width=_B._waterball.makepx(_width);
// [47]  Height = WaterBall.MakePx(Height) 
_height=_B._waterball.makepx(_height);
// [48]  WaterBall.SetWidth(Width).SetHeight(Height) 
_B._waterball.setwidth(_width).setheight(_height);
// [49]  isLoading = False 
_B._isloading=false;
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub SetDisabled(b As Boolean) As VMWaterBall 
_B.setdisabled=function(_b) {
// [54]  WaterBall.SetDisabled(b) 
_B._waterball.setdisabled(_b);
// [55]  Return Me 
return _B;
// End Sub
};

// [58] Sub SetTabIndex(ti As String) As VMWaterBall 
_B.settabindex=function(_ti) {
// [59]  If ti = {4} Then Return Me 
if (_ti=="") { return _B;}
// [60]  WaterBall.SetTabIndex(ti) 
_B._waterball.settabindex(_ti);
// [61]  Return Me 
return _B;
// End Sub
};

// [65] Sub SetStyle(sm As Map) As VMWaterBall 
_B.setstyle=function(_sm) {
// [66]  WaterBall.SetStyle(sm) 
_B._waterball.setstyle(_sm);
// [67]  Return Me 
return _B;
// End Sub
};

// [70] Sub SetVIf(vif As String) As VMWaterBall 
_B.setvif=function(_vif) {
// [71]  WaterBall.SetVIf(vif) 
_B._waterball.setvif(_vif);
// [72]  Return Me 
return _B;
// End Sub
};

// [75] Sub SetID(iID As String, bind As Boolean) As VMWaterBall 
_B.setid=function(_iid,_bind) {
// [76]  WaterBall.SetID(iID,bind) 
_B._waterball.setid(_iid,_bind);
// [77]  Return Me 
return _B;
// End Sub
};

// [80] Sub SetName(nam As String, bind As Boolean) As VMWaterBall 
_B.setname=function(_nam,_bind) {
// [81]  WaterBall.SetName(nam, bind) 
_B._waterball.setname(_nam,_bind);
// [82]  Return Me 
return _B;
// End Sub
};

// [85] Sub SetKey(k As String, bind As Boolean) As VMWaterBall 
_B.setkey=function(_k,_bind) {
// [86]  WaterBall.SetKey(k, bind) 
_B._waterball.setkey(_k,_bind);
// [87]  Return Me 
return _B;
// End Sub
};

// [90] Sub SetVShow(vif As String) As VMWaterBall 
_B.setvshow=function(_vif) {
// [91]  WaterBall.SetVShow(vif) 
_B._waterball.setvshow(_vif);
// [92]  Return Me 
return _B;
// End Sub
};

// [96] Sub AddClass(c As String) As VMWaterBall 
_B.addclass=function(_c) {
// [97]  WaterBall.AddClass(c) 
_B._waterball.addclass(_c);
// [98]  Return Me 
return _B;
// End Sub
};

// [102] Sub SetAttr(attr As Map) As VMWaterBall 
_B.setattr=function(_attr) {
// [103]  WaterBall.SetAttr(attr) 
_B._waterball.setattr(_attr);
// [104]  Return Me 
return _B;
// End Sub
};

// [108] Sub ToString As String 
_B.tostring=function() {
// [109]  Return WaterBall.tostring 
return _B._waterball.tostring();
// End Sub
};

// [112] Sub Render 
_B.render=function() {
// [113]  vue.SetTemplate(ToString) 
_B._vue.settemplate(_B.tostring(_B));
// End Sub
};

// [116] Sub Pop(px As VMElement) 
_B.pop=function(_px) {
// [117]  px.SetText(ToString) 
_px.settext(_B.tostring(_B));
// End Sub
};

// [121] Sub Refresh 
_B.refresh=function() {
var _options,_loadingele,_loading_width,_loading_height,_data_range,_cvs_config,_wave_config;
// [123]  Dim options As Map = CreateMap() 
_options={};
// [124]  Dim loadingEle As BANanoObject = JQ.Selector( {0} ) 
_loadingele=_B._jq("#" + _B._id + "");
// [125]  Dim loading_width As Int = loadingEle.RunMethod( {5} ,Null).Result 
_loading_width=_loadingele["width"]();
// [126]  Dim loading_height As Int = loadingEle.RunMethod( {6} ,Null).Result 
_loading_height=_loadingele["height"]();
// [127]  Dim data_range As List 
_data_range=[];
// [128]  data_range.Initialize 
_data_range.length=0;
// [129]  data_range.Add(range1) 
_data_range.push(_B._range1);
// [130]  data_range.Add(range2) 
_data_range.push(_B._range2);
// [131]  data_range.Add(range3) 
_data_range.push(_B._range3);
// [133]  Dim cvs_config As Map = CreateMap() 
_cvs_config={};
// [134]  cvs_config.Put( {7} , loading_width) 
_cvs_config["width"]=_loading_width;
// [135]  cvs_config.Put( {8} , loading_height) 
_cvs_config["height"]=_loading_height;
// [137]  Dim wave_config As Map = CreateMap() 
_wave_config={};
// [138]  wave_config.Put( {9} , wWidth) 
_wave_config["waveWidth"]=_B._wwidth;
// [139]  wave_config.Put( {10} , wHeight) 
_wave_config["waveHeight"]=_B._wheight;
// [141]  options.Put( {11} , cvs_config) 
_options["cvs_config"]=_cvs_config;
// [142]  options.Put( {12} , wave_config) 
_options["wave_config"]=_wave_config;
// [143]  options.Put( {13} , data_range) 
_options["data_range"]=_data_range;
// [144]  options.Put( {14} , isLoading) 
_options["isLoading"]=_B._isloading;
// [145]  options.Put( {15} , vnowRange) 
_options["nowRange"]=_B._vnowrange;
// [146]  options.Put( {16} , vtargetRange) 
_options["targetRange"]=_B._vtargetrange;
// [147]  options.Put( {17} , 2) 
_options["lineWidth"]=2;
// [149]  loadingEle.RunMethod( {18} , options) 
_loadingele["createWaterBall"](_options);
// End Sub
};

}
/* =========================== VueComponent  =========================== */
function banano_bananovuematerial_vuecomponent() {
var _B=this;
_B._id="";

_B._methods={};

_B._data={};

_B._template= new banano_bananovuematerial_vuehtml();

_B._computed={};

_B._watches={};

_B._created=null;

_B._mounted=null;

_B._beforecreate=null;

_B._destroyed=null;

_B._beforemount=null;

_B._updated=null;

_B._beforedestroy=null;

_B._activated=null;

_B._deactivated=null;

_B._beforeupdate=null;

_B._opt={};

_B._url="";

_B._name="";

_B._hascontent=false;

_B._refs={};

_B._props=[];

_B._propfrom="";

_B._bovue=null;

_B._showkey="";

_B._diskey="";

_B._module={};

// [35] Sub Compile(html As String) As BANanoObject 
_B.compile=function(_html) {
var _bo;
// [36]  Dim bo As BANanoObject = boVUE.RunMethod( {9} , Array(html)) 
_bo=_B._bovue["compile"](_html);
// [37]  Return bo 
return _bo;
// End Sub
};

// [40] Sub SetFunctional(b As Boolean) As VueComponent 
_B.setfunctional=function(_b) {
// [41]  opt.Put( {10} , b) 
_B._opt["functional"]=_b;
// [42]  Return Me 
return _B;
// End Sub
};

// [45] Sub TemplateFromProperty(propName As String) As VueComponent 
_B.templatefromproperty=function(_propname) {
var _cb;
// [46]  propName = propName.ToLowerCase 
_propname=_propname.toLowerCase();
// [47]  propFrom = propName 
_B._propfrom=_propname;
// [48]  Dim cb As BANanoObject = BANano.CallBack(Me, {11} , Null) 
_cb=function() {if (typeof _B[("RenderIt").toLowerCase()]==="function") {return _B[("RenderIt").toLowerCase()](_B)};};
// [49]  opt.Put( {12} , cb) 
_B._opt["render"]=_cb;
// [50]  Return Me 
return _B;
// End Sub
};

// [53] Sub RenderIt As BANanoObject 
_B.renderit=function() {
var _option,_bo;
// [54]  Dim option As Map = CreateMap( {13} : {0} ) 
_option={"template":"{{ " + _B._propfrom + " }}"};
// [55]  Dim bo As BANanoObject = BANano.RunJavascriptMethod( {14} ,Array(option)) 
_bo=BANanoExec("createElement", window, _option);
// [56]  Return bo 
return _bo;
// End Sub
};

// [59] Sub SetVCloak As VueComponent 
_B.setvcloak=function() {
// [60]  Template.setvcloak 
_B._template.setvcloak();
// [61]  Return Me 
return _B;
// End Sub
};

// [64] Sub SetTabIndex(ti As String) As VueComponent 
_B.settabindex=function(_ti) {
// [65]  Template.SetTabIndex(ti) 
_B._template.settabindex(_ti);
// [66]  Return Me 
return _B;
// End Sub
};

// [69] Sub Pop(p As VueComponent) 
_B.pop=function(_p) {
var _sout;
// [70]  Dim sout As String = ToString 
_sout=_B.tostring(_B);
// [71]  p.SetText(sout) 
_p.settext(_sout);
// End Sub
};

// [74] Sub AddChild(child As String) 
_B.addchild=function(_child) {
// [75]  SetText(child) 
_B.settext(_child,_B);
// End Sub
};

// [78] Sub AddElement(el As VMElement) As VueComponent 
_B.addelement=function(_el) {
// [79]  AddChild(el.ToString) 
_B.addchild(_el.tostring(),_B);
// [80]  Return Me 
return _B;
// End Sub
};

// [83] Sub SetID(sid As String, bind As Boolean) As VueComponent 
_B.setid=function(_sid,_bind) {
// [84]  If bind Then 
if (_bind) {
// [85]  SetAttr(CreateMap( {15} :sid)) 
_B.setattr({":id":_sid},_B);
// [86]  Else 
} else {
// [87]  SetAttr(CreateMap( {16} :sid)) 
_B.setattr({"id":_sid},_B);
// [88]  End If 
}
// [89]  Return Me 
return _B;
// End Sub
};

// [92] Sub SetName(sid As String, bind As Boolean) As VueComponent 
_B.setname=function(_sid,_bind) {
// [93]  If bind Then 
if (_bind) {
// [94]  SetAttr(CreateMap( {17} :sid)) 
_B.setattr({":name":_sid},_B);
// [95]  Else 
} else {
// [96]  SetAttr(CreateMap( {18} :sid)) 
_B.setattr({"name":_sid},_B);
// [97]  End If 
}
// [98]  name = sid 
_B._name=_sid;
// [99]  Return Me 
return _B;
// End Sub
};

// [102] Sub AddChildren(lst As List) 
_B.addchildren=function(_lst) {
var _strline;
// [103]  For Each strLine As String In lst 
for (var _strlineindex=0;_strlineindex<_lst.length;_strlineindex++) {
_strline=_lst[_strlineindex];
// [104]  SetText(strLine) 
_B.settext(_strline,_B);
// [105]  Next 
}
// End Sub
};

// [108] Public Sub Initialize(sid As String, tag As String, eventHandler As Object) As VueComponent 
_B.initialize=function(_sid,_tag,_eventhandler) {
// [109]  ID = sid.tolowercase 
_B._id=_sid.toLowerCase();
// [110]  ID = ID.trim 
_B._id=_B._id.trim();
// [111]  name = sid 
_B._name=_sid;
// [112]  module = eventHandler 
_B._module=_eventhandler;
// [113]  props.Initialize 
_B._props.length=0;
// [114]  Template.Initialize(ID,tag) 
_B._template.initialize(_B._id,_tag);
// [115]  methods.Initialize 
_B._methods={};
// [116]  data.Initialize 
_B._data={};
// [117]  computed.Initialize 
_B._computed={};
// [118]  watches.Initialize 
_B._watches={};
// [119]  beforeMount = Null 
_B._beforemount=null;
// [120]  beforeUpdate = Null 
_B._beforeupdate=null;
// [121]  created = Null 
_B._created=null;
// [122]  mounted = Null 
_B._mounted=null;
// [123]  destroyed = Null 
_B._destroyed=null;
// [124]  updated = Null 
_B._updated=null;
// [125]  beforeCreate = Null 
_B._beforecreate=null;
// [126]  activated = Null 
_B._activated=null;
// [127]  deactivated = Null 
_B._deactivated=null;
// [128]  beforeDestroy = Null 
_B._beforedestroy=null;
// [129]  opt = CreateMap() 
_B._opt={};
// [130]  URL = {1} 
_B._url="/" + _B._id + "";
// [131]  hasContent = False 
_B._hascontent=false;
// [132]  boVUE.Initialize( {19} ) 
_B._bovue=Vue;
// [133]  showKey = {2} 
_B._showkey="" + _B._id + "show";
// [134]  disKey = {3} 
_B._diskey="" + _B._id + "disabled";
// [135]  SetStateSingle(showKey, True) 
_B.setstatesingle(_B._showkey,true,_B);
// [136]  SetVShow(showKey) 
_B.setvshow(_B._showkey,_B);
// [137]  SetStateSingle(disKey, False) 
_B.setstatesingle(_B._diskey,false,_B);
// [138]  SetDisabled(False) 
_B.setdisabled(false,_B);
// [139]  Return Me 
return _B;
// End Sub
};

// [142] Sub SetStateTrue(k As String) As VueComponent 
_B.setstatetrue=function(_k) {
// [143]  SetStateSingle(k,True) 
_B.setstatesingle(_k,true,_B);
// [144]  Return Me 
return _B;
// End Sub
};

// [147] Sub SetStateFalse(k As String) As VueComponent 
_B.setstatefalse=function(_k) {
// [148]  SetStateSingle(k,False) 
_B.setstatesingle(_k,false,_B);
// [149]  Return Me 
return _B;
// End Sub
};

// [152] Sub SetStateIncrement(k As String) As VueComponent 
_B.setstateincrement=function(_k) {
var _oldv;
// [153]  Dim oldV As String = GetState(k, {20} ) 
_oldv=_B.getstate(_k,"0",_B);
// [154]  oldV = BANano.parseInt(oldV) + 1 
_oldv=parseInt(_oldv)+1;
// [155]  SetStateSingle(k, oldV) 
_B.setstatesingle(_k,_oldv,_B);
// [156]  Return Me 
return _B;
// End Sub
};

// [159] Sub SetStateDecrement(k As String) As VueComponent 
_B.setstatedecrement=function(_k) {
var _oldv;
// [160]  Dim oldV As String = GetState(k, {21} ) 
_oldv=_B.getstate(_k,"0",_B);
// [161]  oldV = BANano.parseInt(oldV) - 1 
_oldv=parseInt(_oldv)-1;
// [162]  SetStateSingle(k, oldV) 
_B.setstatesingle(_k,_oldv,_B);
// [163]  Return Me 
return _B;
// End Sub
};

// [167] Sub SetStateSingle(k As String, v As Object) As VueComponent 
_B.setstatesingle=function(_k,_v) {
var _optx;
// [168]  Dim optx As Map = CreateMap() 
_optx={};
// [169]  optx.Put(k, v) 
_optx[_k]=_v;
// [170]  SetState(optx) 
_B.setstate(_optx,_B);
// [171]  Return Me 
return _B;
// End Sub
};

// [174] Sub ToggleState(stateName As String) As VueComponent 
_B.togglestate=function(_statename) {
var _bcurrent,_optx;
// [175]  Dim bcurrent As Boolean = GetState(stateName, {22} ) 
_bcurrent=_B.getstate(_statename,"",_B);
// [176]  bcurrent = Not(bcurrent) 
_bcurrent=!(_bcurrent);
// [177]  Dim optx As Map = CreateMap() 
_optx={};
// [178]  optx.Put(stateName, bcurrent) 
_optx[_statename]=_bcurrent;
// [179]  SetState(optx) 
_B.setstate(_optx,_B);
// [180]  Return Me 
return _B;
// End Sub
};

// [184] Sub StateExists(stateName As String) As Boolean 
_B.stateexists=function(_statename) {
// [185]  stateName = stateName.tolowercase 
_statename=_statename.toLowerCase();
// [186]  Return data.ContainsKey(stateName) 
return (_statename in _B._data);
// End Sub
};

// [189] Sub SetShowState(k As String, v As Boolean) 
_B.setshowstate=function(_k,_v) {
var _showkey;
// [190]  Dim showKey As String = {4} 
_showkey="" + _k + "show";
// [191]  SetStateSingle(showKey, v) 
_B.setstatesingle(_showkey,_v,_B);
// End Sub
};

// [194] Sub SetDisabledState(k As String, v As Boolean) 
_B.setdisabledstate=function(_k,_v) {
var _diskey;
// [195]  Dim disKey As String = {5} 
_diskey="" + _k + "disabled";
// [196]  SetStateSingle(disKey, v) 
_B.setstatesingle(_diskey,_v,_B);
// End Sub
};

// [200] Sub SetTemplate(tmp As String) As VueComponent 
_B.settemplate=function(_tmp) {
// [201]  Template.clear 
_B._template.clear();
// [202]  Template.SetText(tmp) 
_B._template.settext(_tmp);
// [203]  Return Me 
return _B;
// End Sub
};

// [206] Sub Component() As Map 
_B.component=function() {
var _tmp,_cb;
// [207]  Dim tmp As String = Template.tostring 
_tmp=_B._template.tostring();
// [208]  If data.Size > 0 Then 
if (Object.keys(_B._data).length>0) {
// [209]  Dim cb As BANanoObject = BANano.CallBack(Me, {23} , Null) 
_cb=function() {if (typeof _B[("returnData").toLowerCase()]==="function") {return _B[("returnData").toLowerCase()](_B)};};
// [210]  opt.Put( {24} , cb) 
_B._opt["data"]=_cb;
// [211]  End If 
}
// [212]  If methods.Size > 0 Then opt.Put( {25} , methods) 
if (Object.keys(_B._methods).length>0) {_B._opt["methods"]=_B._methods;}
// [213]  If computed.Size > 0 Then opt.Put( {26} , computed) 
if (Object.keys(_B._computed).length>0) {_B._opt["computed"]=_B._computed;}
// [214]  If watches.Size > 0 Then opt.Put( {27} , watches) 
if (Object.keys(_B._watches).length>0) {_B._opt["watch"]=_B._watches;}
// [215]  If props.Size <> 0 Then opt.Put( {28} , props) 
if (_B._props.length!=0) {_B._opt["props"]=_B._props;}
// [216]  If updated <> Null Then opt.Put( {29} , updated) 
if (_B._updated!=null) {_B._opt["updated"]=_B._updated;}
// [217]  If destroyed <> Null Then opt.Put( {30} , destroyed) 
if (_B._destroyed!=null) {_B._opt["destroyed"]=_B._destroyed;}
// [218]  If mounted <> Null Then opt.Put( {31} , mounted) 
if (_B._mounted!=null) {_B._opt["mounted"]=_B._mounted;}
// [219]  If beforeCreate <> Null Then opt.Put( {32} , beforeCreate) 
if (_B._beforecreate!=null) {_B._opt["beforeCreate"]=_B._beforecreate;}
// [220]  If created <> Null Then opt.Put( {33} , created) 
if (_B._created!=null) {_B._opt["created"]=_B._created;}
// [221]  If beforeMount <> Null Then opt.Put( {34} , beforeMount) 
if (_B._beforemount!=null) {_B._opt["beforeMount"]=_B._beforemount;}
// [222]  If beforeUpdate <> Null Then opt.Put( {35} , beforeUpdate) 
if (_B._beforeupdate!=null) {_B._opt["beforeUpdate"]=_B._beforeupdate;}
// [223]  If activated <> Null Then opt.Put( {36} , activated) 
if (_B._activated!=null) {_B._opt["activated"]=_B._activated;}
// [224]  If deactivated <> Null Then opt.Put( {37} , deactivated) 
if (_B._deactivated!=null) {_B._opt["deactivated"]=_B._deactivated;}
// [225]  If beforeDestroy <> Null Then opt.Put( {38} , beforeDestroy) 
if (_B._beforedestroy!=null) {_B._opt["beforeDestroy"]=_B._beforedestroy;}
// [226]  opt.Put( {39} , tmp) 
_B._opt["template"]=_tmp;
// [227]  Return opt 
return _B._opt;
// End Sub
};

// [231] Sub RenderTo(elID As String) 
_B.renderto=function(_elid) {
var _bovue,_dkey,_rkey;
// [232]  elID = elID.tolowercase 
_elid=_elid.toLowerCase();
// [233]  BANano.GetElement( {6} ).empty 
u("#" + _elid + "").empty();
// [235]  Dim boVUE As BANanoObject 
_bovue=null;
// [236]  opt.Put( {40} , {7} ) 
_B._opt["el"]="#" + _elid + "";
// [237]  Component 
_B.component(_B);
// [238]  boVUE.Initialize2( {41} , opt) 
_bovue=new Vue(_B._opt);
// [240]  Dim dKey As String = {42} 
_dkey="$data";
// [241]  data = boVUE.GetField(dKey).Result 
_B._data=_bovue[_dkey];
// [243]  Dim rKey As String = {43} 
_rkey="$refs";
// [244]  refs = boVUE.GetField(rKey).result 
_B._refs=_bovue[_rkey];
// End Sub
};

// [248] Sub SetMounted(methodName As String) As VueComponent 
_B.setmounted=function(_methodname) {
// [249]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [250]  mounted = BANano.CallBack(module, methodName, Null) 
_B._mounted=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [251]  Return Me 
return _B;
// End Sub
};

// [256] Sub SetDestroyed(methodName As String) As VueComponent 
_B.setdestroyed=function(_methodname) {
// [257]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [258]  destroyed = BANano.CallBack(module, methodName, Null) 
_B._destroyed=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [259]  Return Me 
return _B;
// End Sub
};

// [264] Sub SetActivated(methodName As String) As VueComponent 
_B.setactivated=function(_methodname) {
// [265]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [266]  activated = BANano.CallBack(module, methodName, Null) 
_B._activated=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [267]  Return Me 
return _B;
// End Sub
};

// [272] Sub SetDeActivated(methodName As String) As VueComponent 
_B.setdeactivated=function(_methodname) {
// [273]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [274]  deactivated = BANano.CallBack(module, methodName, Null) 
_B._deactivated=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [275]  Return Me 
return _B;
// End Sub
};

// [280] Sub SetUpdated(methodName As String) As VueComponent 
_B.setupdated=function(_methodname) {
// [281]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [282]  updated = BANano.CallBack(module, methodName, Null) 
_B._updated=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [283]  Return Me 
return _B;
// End Sub
};

// [287] Sub SetBeforeMount(methodName As String) As VueComponent 
_B.setbeforemount=function(_methodname) {
// [288]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [289]  beforeMount = BANano.CallBack(module, methodName, Null) 
_B._beforemount=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [290]  Return Me 
return _B;
// End Sub
};

// [294] Sub SetBeforeUpdate(methodName As String) As VueComponent 
_B.setbeforeupdate=function(_methodname) {
// [295]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [296]  beforeMount = BANano.CallBack(module, methodName, Null) 
_B._beforemount=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [297]  Return Me 
return _B;
// End Sub
};

// [301] Sub SetBeforeDestroy(methodName As String) As VueComponent 
_B.setbeforedestroy=function(_methodname) {
// [302]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [303]  beforeDestroy = BANano.CallBack(module, methodName, Null) 
_B._beforedestroy=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [304]  Return Me 
return _B;
// End Sub
};

// [307] Sub SetOnMouseOut(methodName As String) As VueComponent 
_B.setonmouseout=function(_methodname) {
// [308]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [309]  SetAttr(CreateMap( {44} : methodName)) 
_B.setattr({"v-on:mouseout":_methodname},_B);
// [310]  Return Me 
return _B;
// End Sub
};

// [313] Sub SetOnMouseOver(methodName As String) As VueComponent 
_B.setonmouseover=function(_methodname) {
// [314]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [315]  SetAttr(CreateMap( {45} : methodName)) 
_B.setattr({"v-on:mouseover":_methodname},_B);
// [316]  Return Me 
return _B;
// End Sub
};

// [320] Sub SetBeforeCreate(methodName As String) As VueComponent 
_B.setbeforecreate=function(_methodname) {
// [321]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [322]  beforeCreate = BANano.CallBack(module, methodName, Null) 
_B._beforecreate=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [323]  Return Me 
return _B;
// End Sub
};

// [328] Sub SetCreated(methodName As String) As VueComponent 
_B.setcreated=function(_methodname) {
// [329]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [330]  created = BANano.CallBack(module, methodName, Null) 
_B._created=function() {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_B)};};
// [331]  Return Me 
return _B;
// End Sub
};

// [335] Sub SetMethod(methodName As String) As VueComponent 
_B.setmethod=function(_methodname) {
var _e,_cb;
// [336]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [337]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [338]  Dim e As BANanoEvent 
_e=null;
// [339]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(e)) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [340]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [341]  End If 
}
// [342]  Return Me 
return _B;
// End Sub
};

// [345] private Sub ReturnData As Map 
_B.returndata=function() {
// [346]  Return data 
return _B._data;
// End Sub
};

// [350] Sub SetComputed(k As String, methodName As String) As VueComponent 
_B.setcomputed=function(_k,_methodname) {
var _e,_cb;
// [351]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [352]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [353]  k = k.tolowercase 
_k=_k.toLowerCase();
// [354]  If data.ContainsKey(k) Then 
if ((_k in _B._data)) {
// [355]  SetStateSingle(k, Null) 
_B.setstatesingle(_k,null,_B);
// [356]  End If 
}
// [357]  Dim e As BANanoEvent 
_e=null;
// [358]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(e)) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [359]  computed.Put(k, cb) 
_B._computed[_k]=_cb;
// [360]  End If 
}
// [361]  Return Me 
return _B;
// End Sub
};

// [365] Sub SetWatch(k As String, bImmediate As Boolean, bDeep As Boolean, methodName As String) As VueComponent 
_B.setwatch=function(_k,_bimmediate,_bdeep,_methodname) {
var _newval,_cb,_deepit;
// [366]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [367]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [368]  k = k.tolowercase 
_k=_k.toLowerCase();
// [369]  If data.ContainsKey(k) Then 
if ((_k in _B._data)) {
// [370]  SetStateSingle(k, Null) 
_B.setstatesingle(_k,null,_B);
// [371]  End If 
}
// [372]  Dim newVal As Object 
_newval={};
// [373]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, Array(newVal)) 
_cb=function(_newval) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_newval,_B)};};
// [374]  Dim deepit As Map = CreateMap() 
_deepit={};
// [375]  deepit.Put( {46} , methodName) 
_deepit["handler"]=_methodname;
// [376]  deepit.Put( {47} , bDeep) 
_deepit["deep"]=_bdeep;
// [377]  deepit.Put( {48} , bImmediate) 
_deepit["immediate"]=_bimmediate;
// [378]  watches.Put(k, deepit) 
_B._watches[_k]=_deepit;
// [379]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [380]  End If 
}
// [381]  Return Me 
return _B;
// End Sub
};

// [385] Sub SetStateMap(mapKey As String, mapValues As Map) As VueComponent 
_B.setstatemap=function(_mapkey,_mapvalues) {
var _opt;
// [386]  Dim opt As Map = CreateMap() 
_opt={};
// [387]  opt.Put(mapKey, mapValues) 
_opt[_mapkey]=_mapvalues;
// [388]  SetState(opt) 
_B.setstate(_opt,_B);
// [389]  Return Me 
return _B;
// End Sub
};

// [393] Sub SetStateList(mapKey As String, mapValues As List) As VueComponent 
_B.setstatelist=function(_mapkey,_mapvalues) {
var _opt;
// [394]  Dim opt As Map = CreateMap() 
_opt={};
// [395]  opt.Put(mapKey, mapValues) 
_opt[_mapkey]=_mapvalues;
// [396]  SetState(opt) 
_B.setstate(_opt,_B);
// [397]  Return Me 
return _B;
// End Sub
};

// [400] Sub SetStateListValues(mapValues As List) As VueComponent 
_B.setstatelistvalues=function(_mapvalues) {
var _lstvalue,_opt;
// [401]  For Each lstValue As String In mapValues 
for (var _lstvalueindex=0;_lstvalueindex<_mapvalues.length;_lstvalueindex++) {
_lstvalue=_mapvalues[_lstvalueindex];
// [402]  Dim opt As Map = CreateMap() 
_opt={};
// [403]  opt.Put(lstValue, {49} ) 
_opt[_lstvalue]="";
// [404]  SetState(opt) 
_B.setstate(_opt,_B);
// [405]  Next 
}
// [406]  Return Me 
return _B;
// End Sub
};

// [410] Sub SetState(m As Map) As VueComponent 
_B.setstate=function(_m) {
var _k,_v;
// [411]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [412]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [413]  k = k.tolowercase 
_k=_k.toLowerCase();
// [414]  data.Put(k, v) 
_B._data[_k]=_v;
// [415]  Next 
}
// [416]  Return Me 
return _B;
// End Sub
};

// [420] Sub HasState(k As String) As Boolean 
_B.hasstate=function(_k) {
// [421]  Return data.ContainsKey(k) 
return (_k in _B._data);
// End Sub
};

// [424] Sub GetStates(lst As List) As Map 
_B.getstates=function(_lst) {
var _sm,_lstrec,_state;
// [425]  Dim sm As Map = CreateMap() 
_sm={};
// [426]  For Each lstrec As String In lst 
for (var _lstrecindex=0;_lstrecindex<_lst.length;_lstrecindex++) {
_lstrec=_lst[_lstrecindex];
// [427]  lstrec = lstrec.tolowercase 
_lstrec=_lstrec.toLowerCase();
// [428]  Dim state As Object = GetState(lstrec, Null) 
_state=_B.getstate(_lstrec,null,_B);
// [429]  sm.Put(lstrec, state) 
_sm[_lstrec]=_state;
// [430]  Next 
}
// [431]  Return sm 
return _sm;
// End Sub
};

// [435] Sub GetState(k As String, v As Object) As Object 
_B.getstate=function(_k,_v) {
var _out;
// [436]  k = k.tolowercase 
_k=_k.toLowerCase();
// [437]  If data.ContainsKey(k) Then 
if ((_k in _B._data)) {
// [438]  Dim out As Object = data.GetDefault(k,v) 
_out=(_B._data[_k] || _v);
// [439]  Return out 
return _out;
// [440]  Else 
} else {
// [441]  Log( {50} & k) 
console.log("GetState: First set the v-model for "+_k);
// [442]  Return {51} 
return "";
// [443]  End If 
}
// End Sub
};

// [448] Sub SetColor(c As Object) As VueComponent 
_B.setcolor=function(_c) {
// [449]  SetStyle(CreateMap( {52} : c)) 
_B.setstyle({"color":_c},_B);
// [450]  Return Me 
return _B;
// End Sub
};

// [453] Sub SetStyle(m As Map) As VueComponent 
_B.setstyle=function(_m) {
// [454]  Template.SetStyles(m) 
_B._template.setstyles(_m);
// [455]  Return Me 
return _B;
// End Sub
};

// [460] Sub SetBackgroundColor(p As Object) As VueComponent 
_B.setbackgroundcolor=function(_p) {
// [461]  SetStyle(CreateMap( {53} :p)) 
_B.setstyle({"background-color":_p},_B);
// [462]  Return Me 
return _B;
// End Sub
};

// [465] Sub ToString As String 
_B.tostring=function() {
// [466]  Return Template.tostring 
return _B._template.tostring();
// End Sub
};

// [470] Sub SetOnInput(methodName As String) As VueComponent 
_B.setoninput=function(_methodname) {
var _e,_cb;
// [471]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [472]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [473]  Dim e As BANanoEvent 
_e=null;
// [474]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [475]  SetAttr(CreateMap( {54} : methodName)) 
_B.setattr({"v-on:input":_methodname},_B);
// [477]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [478]  End If 
}
// [479]  Return Me 
return _B;
// End Sub
};

// [483] Sub SetOnFocus(methodName As String) As VueComponent 
_B.setonfocus=function(_methodname) {
var _e,_cb;
// [484]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [485]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [486]  Dim e As BANanoEvent 
_e=null;
// [487]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [488]  SetAttr(CreateMap( {55} : methodName)) 
_B.setattr({"v-on:focus":_methodname},_B);
// [490]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [491]  End If 
}
// [492]  Return Me 
return _B;
// End Sub
};

// [496] Sub SetOnBlur(methodName As String) As VueComponent 
_B.setonblur=function(_methodname) {
var _e,_cb;
// [497]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [498]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [499]  Dim e As BANanoEvent 
_e=null;
// [500]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [501]  SetAttr(CreateMap( {56} : methodName)) 
_B.setattr({"v-on:blur":_methodname},_B);
// [503]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [504]  End If 
}
// [505]  Return Me 
return _B;
// End Sub
};

// [509] Sub SetPointer(b As Boolean) As VueComponent 
_B.setpointer=function(_b) {
// [510]  Template.SetPointer(True) 
_B._template.setpointer(true);
// [511]  Return Me 
return _B;
// End Sub
};

// [515] Sub SetOnClick(methodName As String) As VueComponent 
_B.setonclick=function(_methodname) {
var _e,_cb;
// [516]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [517]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [518]  Dim e As BANanoEvent 
_e=null;
// [519]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [520]  SetAttr(CreateMap( {57} : methodName)) 
_B.setattr({"v-on:click":_methodname},_B);
// [522]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [523]  SetPointer(True) 
_B.setpointer(true,_B);
// [524]  End If 
}
// [525]  Return Me 
return _B;
// End Sub
};

// [529] Sub SetOnChange(methodName As String) As VueComponent 
_B.setonchange=function(_methodname) {
var _e,_cb;
// [530]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [531]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [532]  Dim e As BANanoEvent 
_e=null;
// [533]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [534]  SetAttr(CreateMap( {58} : methodName)) 
_B.setattr({"v-on:change":_methodname},_B);
// [536]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [537]  End If 
}
// [538]  Return Me 
return _B;
// End Sub
};

// [542] Sub SetOnSelected(methodName As String) As VueComponent 
_B.setonselected=function(_methodname) {
var _e,_cb;
// [543]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [544]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [545]  Dim e As BANanoEvent 
_e=null;
// [546]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [547]  SetAttr(CreateMap( {59} : methodName)) 
_B.setattr({"v-on:selected":_methodname},_B);
// [549]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [550]  End If 
}
// [551]  Return Me 
return _B;
// End Sub
};

// [555] Sub SetOnTouchStart(methodName As String) As VueComponent 
_B.setontouchstart=function(_methodname) {
var _e,_cb;
// [556]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [557]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [558]  Dim e As BANanoEvent 
_e=null;
// [559]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [560]  SetAttr(CreateMap( {60} : methodName)) 
_B.setattr({"v-on:touchstart":_methodname},_B);
// [562]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// [563]  End If 
}
// [564]  Return Me 
return _B;
// End Sub
};

// [567] Sub SetVModel(k As String) As VueComponent 
_B.setvmodel=function(_k) {
var _opt;
// [568]  k = k.tolowercase 
_k=_k.toLowerCase();
// [569]  If HasState(k) = False Then 
if (_B.hasstate(_k,_B)==false) {
// [570]  Dim opt As Map = CreateMap() 
_opt={};
// [571]  opt.Put(k, Null) 
_opt[_k]=null;
// [572]  SetState(opt) 
_B.setstate(_opt,_B);
// [573]  End If 
}
// [574]  Template.SetAttr( {61} , k) 
_B._template.setattr("v-model",_k);
// [575]  Return Me 
return _B;
// End Sub
};

// [578] Sub SetMarginAll(p As Object) As VueComponent 
_B.setmarginall=function(_p) {
// [579]  SetStyle(CreateMap( {62} :p)) 
_B.setstyle({"margin":_p},_B);
// [580]  Return Me 
return _B;
// End Sub
};

// [583] Sub SetTag(t As String) As VueComponent 
_B.settag=function(_t) {
// [584]  Template.SetTag(t) 
_B._template.settag(_t);
// [585]  Return Me 
return _B;
// End Sub
};

// [589] Sub SetPaddingAll(p As Object) As VueComponent 
_B.setpaddingall=function(_p) {
// [590]  SetStyle(CreateMap( {63} :p)) 
_B.setstyle({"padding":_p},_B);
// [591]  Return Me 
return _B;
// End Sub
};

// [594] Sub SetSRC(s As String, bind As Boolean) As VueComponent 
_B.setsrc=function(_s,_bind) {
// [595]  If bind Then 
if (_bind) {
// [596]  SetAttr(CreateMap( {64} :s)) 
_B.setattr({":src":_s},_B);
// [597]  Else 
} else {
// [598]  Template.SetSrc(s) 
_B._template.setsrc(_s);
// [599]  End If 
}
// [600]  Return Me 
return _B;
// End Sub
};

// [603] Sub SetAlt(a As String) As VueComponent 
_B.setalt=function(_a) {
// [604]  Template.SetAlt(a) 
_B._template.setalt(_a);
// [605]  Return Me 
return _B;
// End Sub
};

// [609] Sub SetMaxWidth(mw As String) As VueComponent 
_B.setmaxwidth=function(_mw) {
// [610]  Template.SetStyle( {65} ,mw) 
_B._template.setstyle("max-width",_mw);
// [611]  Return Me 
return _B;
// End Sub
};

// [614] Sub SetTo(t As Object) As VueComponent 
_B.setto=function(_t) {
// [615]  Template.SetAttr( {66} , t) 
_B._template.setattr("to",_t);
// [616]  Return Me 
return _B;
// End Sub
};

// [619] Sub SetHREF(h As String) As VueComponent 
_B.sethref=function(_h) {
// [620]  Template.SetAttrHREF(h) 
_B._template.setattrhref(_h);
// [621]  Return Me 
return _B;
// End Sub
};

// [624] Sub SetDisabled(b As Boolean) As VueComponent 
_B.setdisabled=function(_b) {
// [625]  Template.SetAttr( {67} , b) 
_B._template.setattr(":disabled",_b);
// [626]  Return Me 
return _B;
// End Sub
};

// [629] Sub SetVerticalAlignMiddle As VueComponent 
_B.setverticalalignmiddle=function() {
// [630]  SetStyle(CreateMap( {68} : {69} )) 
_B.setstyle({"vertical-align":"middle"},_B);
// [631]  Return Me 
return _B;
// End Sub
};

// [634] Sub SetLineHeight(lh As Object) As VueComponent 
_B.setlineheight=function(_lh) {
// [635]  SetStyle(CreateMap( {70} : lh)) 
_B.setstyle({"line-height":_lh},_B);
// [636]  Return Me 
return _B;
// End Sub
};

// [639] Sub SetAttr(m As Map) As VueComponent 
_B.setattr=function(_m) {
var _k,_v;
// [640]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [641]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [642]  Template.SetAttr(k, v) 
_B._template.setattr(_k,_v);
// [643]  Next 
}
// [644]  Return Me 
return _B;
// End Sub
};

// [647] Sub SetVIf(vif As String) As VueComponent 
_B.setvif=function(_vif) {
var _opt;
// [648]  vif = vif.ToLowerCase 
_vif=_vif.toLowerCase();
// [649]  If HasState(vif) = False Then 
if (_B.hasstate(_vif,_B)==false) {
// [650]  Dim opt As Map = CreateMap() 
_opt={};
// [651]  opt.Put(vif, False) 
_opt[_vif]=false;
// [652]  SetState(opt) 
_B.setstate(_opt,_B);
// [653]  End If 
}
// [654]  SetVIf(vif) 
_B.setvif(_vif,_B);
// [655]  Return Me 
return _B;
// End Sub
};

// [658] Sub SetVShow(vif As String) As VueComponent 
_B.setvshow=function(_vif) {
var _opt;
// [659]  vif = vif.ToLowerCase 
_vif=_vif.toLowerCase();
// [660]  If HasState(vif) = False Then 
if (_B.hasstate(_vif,_B)==false) {
// [661]  Dim opt As Map = CreateMap() 
_opt={};
// [662]  opt.Put(vif, False) 
_opt[_vif]=false;
// [663]  SetState(opt) 
_B.setstate(_opt,_B);
// [664]  End If 
}
// [665]  SetVShow(vif) 
_B.setvshow(_vif,_B);
// [666]  Return Me 
return _B;
// End Sub
};

// [669] Sub SetText(txt As String) As VueComponent 
_B.settext=function(_txt) {
// [670]  Template.settext(txt) 
_B._template.settext(_txt);
// [671]  hasContent = True 
_B._hascontent=true;
// [672]  Return Me 
return _B;
// End Sub
};

// [676] Sub AddBR 
_B.addbr=function() {
// [677]  Template.SetText( {71} ) 
_B._template.settext("<br>");
// End Sub
};

// [681] Sub AddHR 
_B.addhr=function() {
// [682]  Template.SetText( {72} ) 
_B._template.settext("<hr>");
// End Sub
};

// [686] Sub AddClass(c As String) As VueComponent 
_B.addclass=function(_c) {
// [687]  Template.AddClass(c) 
_B._template.addclass(_c);
// [688]  Return Me 
return _B;
// End Sub
};

// [691] Sub SetChecked(b As Boolean) As VueComponent 
_B.setchecked=function(_b) {
// [692]  SetAttr(CreateMap( {73} :b)) 
_B.setattr({":checked":_b},_B);
// [693]  Return Me 
return _B;
// End Sub
};

// [696] Sub RemoveClass(className As String) As VueComponent 
_B.removeclass=function(_classname) {
// [697]  RemoveClass(className) 
_B.removeclass(_classname,_B);
// [698]  Return Me 
return _B;
// End Sub
};

// [701] Sub Clear(b As Boolean) As VueComponent 
_B.clear=function(_b) {
// [702]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [703]  Template.Clear 
_B._template.clear();
// [704]  Return Me 
return _B;
// End Sub
};

// [707] Sub SetIsHidden(b As Boolean) As VueComponent 
_B.setishidden=function(_b) {
// [708]  If b = False Then Return Me 
if (_b==false) { return _B;}
// [709]  AddClass( {74} ) 
_B.addclass("is-hidden",_B);
// [710]  Return Me 
return _B;
// End Sub
};

// [713] Sub SetType(t As String) As VueComponent 
_B.settype=function(_t) {
// [714]  Template.SetType(t) 
_B._template.settype(_t);
// [715]  Return Me 
return _B;
// End Sub
};

// [718] Sub SetKey(k As Object, bind As Boolean) As VueComponent 
_B.setkey=function(_k,_bind) {
// [719]  If bind Then 
if (_bind) {
// [720]  SetAttr(CreateMap( {75} : k)) 
_B.setattr({":key":_k},_B);
// [721]  Else 
} else {
// [722]  SetAttr(CreateMap( {76} : k)) 
_B.setattr({"key":_k},_B);
// [723]  End If 
}
// [724]  Return Me 
return _B;
// End Sub
};

// [727] Sub SetRef(varRef As String) As VueComponent 
_B.setref=function(_varref) {
// [728]  If varRef <> {77} Then 
if (_varref!="") {
// [729]  SetAttr(CreateMap( {78} : varRef)) 
_B.setattr({"ref":_varref},_B);
// [730]  End If 
}
// [731]  Return Me 
return _B;
// End Sub
};

// [734] Sub SetVText(t As Object) As VueComponent 
_B.setvtext=function(_t) {
// [735]  SetAttr(CreateMap( {79} : t)) 
_B.setattr({"v-text":_t},_B);
// [736]  Return Me 
return _B;
// End Sub
};

// [739] Sub SetVElse(t As Object) As VueComponent 
_B.setvelse=function(_t) {
// [740]  SetAttr(CreateMap( {80} : t)) 
_B.setattr({"v-else":_t},_B);
// [741]  Return Me 
return _B;
// End Sub
};

// [744] Sub SetVElseIf(t As Object) As VueComponent 
_B.setvelseif=function(_t) {
// [745]  SetAttr(CreateMap( {81} : t)) 
_B.setattr({"v-else-if":_t},_B);
// [746]  Return Me 
return _B;
// End Sub
};

// [749] Sub SetVOn(t As Object) As VueComponent 
_B.setvon=function(_t) {
// [750]  SetAttr(CreateMap( {82} : t)) 
_B.setattr({"v-on":_t},_B);
// [751]  Return Me 
return _B;
// End Sub
};

// [754] Sub SetVBind(t As String) As VueComponent 
_B.setvbind=function(_t) {
// [755]  t = t.tolowercase 
_t=_t.toLowerCase();
// [756]  SetAttr(CreateMap( {83} : t)) 
_B.setattr({"v-bind":_t},_B);
// [757]  Return Me 
return _B;
// End Sub
};

// [760] Sub SetIs(t As String) As VueComponent 
_B.setis=function(_t) {
// [761]  t = t.tolowercase 
_t=_t.toLowerCase();
// [762]  SetAttr(CreateMap( {84} : t)) 
_B.setattr({":is":_t},_B);
// [763]  Return Me 
return _B;
// End Sub
};

// [767] Sub SetVOnce(t As Object) As VueComponent 
_B.setvonce=function(_t) {
// [768]  SetAttr(CreateMap( {85} : t)) 
_B.setattr({"v-once":_t},_B);
// [769]  Return Me 
return _B;
// End Sub
};

// [773] Sub SetVFor(item As String, dataSource As String) As VueComponent 
_B.setvfor=function(_item,_datasource) {
var _sline;
// [774]  dataSource = dataSource.tolowercase 
_datasource=_datasource.toLowerCase();
// [775]  item = item.tolowercase 
_item=_item.toLowerCase();
// [776]  If StateExists(dataSource) = False Then 
if (_B.stateexists(_datasource,_B)==false) {
// [777]  Log( {86} ) 
console.log("VueComponent.SetVFor: The data source state has not been registered, register it first!");
// [778]  End If 
}
// [779]  Dim sline As String = {8} 
_sline="" + _item + " in " + _datasource + "";
// [780]  SetAttr(CreateMap( {87} : sline)) 
_B.setattr({"v-for":_sline},_B);
// [781]  Return Me 
return _B;
// End Sub
};

// [785] Sub SetValue(valueName As String, bind As Boolean) As VueComponent 
_B.setvalue=function(_valuename,_bind) {
// [786]  If bind Then 
if (_bind) {
// [787]  valueName = valueName.tolowercase 
_valuename=_valuename.toLowerCase();
// [788]  SetAttr(CreateMap( {88} :valueName)) 
_B.setattr({":value":_valuename},_B);
// [789]  Else 
} else {
// [790]  SetAttr(CreateMap( {89} :valueName)) 
_B.setattr({"value":_valuename},_B);
// [791]  End If 
}
// [792]  Return Me 
return _B;
// End Sub
};

// [795] Sub SetVHtml(h As String) As VueComponent 
_B.setvhtml=function(_h) {
// [796]  If h = {90} Then Return Me 
if (_h=="") { return _B;}
// [797]  h = h.tolowercase 
_h=_h.toLowerCase();
// [798]  SetAttr(CreateMap( {91} : h)) 
_B.setattr({"v-html":_h},_B);
// [799]  Return Me 
return _B;
// End Sub
};

// [802] Sub SetAutoComplete(auto As String, bind As Boolean) As VueComponent 
_B.setautocomplete=function(_auto,_bind) {
// [803]  If bind Then 
if (_bind) {
// [804]  SetAttr(CreateMap( {92} : auto)) 
_B.setattr({":autocomplete":_auto},_B);
// [805]  Else 
} else {
// [806]  SetAttr(CreateMap( {93} : auto)) 
_B.setattr({"autocomplete":_auto},_B);
// [807]  End If 
}
// [808]  Return Me 
return _B;
// End Sub
};

// [812] Sub SetBorder(width As String, color As String, bstyle As String) As VueComponent 
_B.setborder=function(_width,_color,_bstyle) {
var _b;
// [813]  Dim b As Map = CreateMap() 
_b={};
// [814]  b.Put( {94} , bstyle) 
_b["border-style"]=_bstyle;
// [815]  b.Put( {95} , width) 
_b["border-width"]=_width;
// [816]  b.Put( {96} , color) 
_b["border-color"]=_color;
// [817]  SetStyle(b) 
_B.setstyle(_b,_B);
// [818]  Return Me 
return _B;
// End Sub
};

// [822] Sub SetCursorMove As VueComponent 
_B.setcursormove=function() {
// [823]  SetStyle(CreateMap( {97} : {98} )) 
_B.setstyle({"cursor":"move"},_B);
// [824]  Return Me 
return _B;
// End Sub
};

// [828] Sub SetTextAlignCenter As VueComponent 
_B.settextaligncenter=function() {
// [829]  SetStyle(CreateMap( {99} : {100} )) 
_B.setstyle({"text-align":"center"},_B);
// [830]  Return Me 
return _B;
// End Sub
};

// [834] Sub SetDraggable(b As Boolean) As VueComponent 
_B.setdraggable=function(_b) {
// [835]  SetAttr(CreateMap( {101} :b)) 
_B.setattr({":draggable":_b},_B);
// [836]  Return Me 
return _B;
// End Sub
};

// [840] Sub SetDroppable(b As Boolean) As VueComponent 
_B.setdroppable=function(_b) {
// [841]  SetAttr(CreateMap( {102} :b)) 
_B.setattr({":droppable":_b},_B);
// [842]  Return Me 
return _B;
// End Sub
};

// [846] Sub SetWidth(w As String) As VueComponent 
_B.setwidth=function(_w) {
// [847]  SetStyle(CreateMap( {103} :w)) 
_B.setstyle({"width":_w},_B);
// [848]  Return Me 
return _B;
// End Sub
};

// [852] Sub SetHeight(h As String) As VueComponent 
_B.setheight=function(_h) {
// [853]  SetStyle(CreateMap( {104} :h)) 
_B.setstyle({"height":_h},_B);
// [854]  Return Me 
return _B;
// End Sub
};

// [858] Sub SetCallBack(methodName As String, cb As BANanoObject) 
_B.setcallback=function(_methodname,_cb) {
// [859]  methodName = methodName.ToLowerCase 
_methodname=_methodname.toLowerCase();
// [860]  methods.Put(methodName, cb) 
_B._methods[_methodname]=_cb;
// End Sub
};

// [864] Sub SetOnDragOver(methodName As String) As VueComponent 
_B.setondragover=function(_methodname) {
var _e,_cb;
// [865]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [866]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [867]  Dim e As BANanoEvent 
_e=null;
// [868]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [869]  SetAttr(CreateMap( {105} : methodName)) 
_B.setattr({"v-on:dragover":_methodname},_B);
// [871]  SetCallBack(methodName, cb) 
_B.setcallback(_methodname,_cb,_B);
// [872]  End If 
}
// [873]  Return Me 
return _B;
// End Sub
};

// [877] Sub SetOnDragStart(methodName As String) As VueComponent 
_B.setondragstart=function(_methodname) {
var _e,_cb;
// [878]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [879]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [880]  Dim e As BANanoEvent 
_e=null;
// [881]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [882]  SetAttr(CreateMap( {106} : methodName)) 
_B.setattr({"v-on:dragstart":_methodname},_B);
// [884]  SetCallBack(methodName, cb) 
_B.setcallback(_methodname,_cb,_B);
// [885]  End If 
}
// [886]  Return Me 
return _B;
// End Sub
};

// [890] Sub SetOnDragEnd(methodName As String) As VueComponent 
_B.setondragend=function(_methodname) {
var _e,_cb;
// [891]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [892]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [893]  Dim e As BANanoEvent 
_e=null;
// [894]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [895]  SetAttr(CreateMap( {107} : methodName)) 
_B.setattr({"v-on:dragend":_methodname},_B);
// [897]  SetCallBack(methodName, cb) 
_B.setcallback(_methodname,_cb,_B);
// [898]  End If 
}
// [899]  Return Me 
return _B;
// End Sub
};

// [903] Sub SetOnDragEnter(methodName As String) As VueComponent 
_B.setondragenter=function(_methodname) {
var _e,_cb;
// [904]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [905]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [906]  Dim e As BANanoEvent 
_e=null;
// [907]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [908]  SetAttr(CreateMap( {108} : methodName)) 
_B.setattr({"v-on:dragenter":_methodname},_B);
// [910]  SetCallBack(methodName, cb) 
_B.setcallback(_methodname,_cb,_B);
// [911]  End If 
}
// [912]  Return Me 
return _B;
// End Sub
};

// [916] Sub SetOnDrop(methodName As String) As VueComponent 
_B.setondrop=function(_methodname) {
var _e,_cb;
// [917]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [918]  If SubExists(module, methodName) Then 
if ((typeof _B._module[(_methodname).toLowerCase()]==="function")) {
// [919]  Dim e As BANanoEvent 
_e=null;
// [920]  Dim cb As BANanoObject = BANano.CallBack(module, methodName, e) 
_cb=function(_e) {if (typeof _B._module[(_methodname).toLowerCase()]==="function") {return _B._module[(_methodname).toLowerCase()](_e,_B)};};
// [921]  SetAttr(CreateMap( {109} : methodName)) 
_B.setattr({"v-on:drop":_methodname},_B);
// [923]  SetCallBack(methodName, cb) 
_B.setcallback(_methodname,_cb,_B);
// [924]  End If 
}
// [925]  Return Me 
return _B;
// End Sub
};

// [929] Sub SetMargins(mt As Object, mb As Object, ml As Object, mr As Object) As VueComponent 
_B.setmargins=function(_mt,_mb,_ml,_mr) {
// [930]  AddStyle( {110} , mt) 
_B.addstyle("margin-top",_mt,_B);
// [931]  AddStyle( {111} , mb) 
_B.addstyle("margin-bottom",_mb,_B);
// [932]  AddStyle( {112} , ml) 
_B.addstyle("margin-left",_ml,_B);
// [933]  AddStyle( {113} , mr) 
_B.addstyle("margin-right",_mr,_B);
// [934]  Return Me 
return _B;
// End Sub
};

// [938] Sub AddProp(propName As String) As VueComponent 
_B.addprop=function(_propname) {
// [939]  props.Add(propName) 
_B._props.push(_propname);
// [940]  Return Me 
return _B;
// End Sub
};

// [943] Sub AddProps(propsList As List) As VueComponent 
_B.addprops=function(_propslist) {
var _k;
// [944]  For Each k As String In propsList 
for (var _kindex=0;_kindex<_propslist.length;_kindex++) {
_k=_propslist[_kindex];
// [945]  AddProp(k) 
_B.addprop(_k,_B);
// [946]  Next 
}
// [947]  Return Me 
return _B;
// End Sub
};

// [951] Sub AddStyle(prop As String, val As Object) As VueComponent 
_B.addstyle=function(_prop,_val) {
var _m;
// [952]  If val = Null Then Return Me 
if (_val==null) { return _B;}
// [953]  Dim m As Map = CreateMap() 
_m={};
// [954]  m.Put(prop, val) 
_m[_prop]=_val;
// [955]  SetStyle(m) 
_B.setstyle(_m,_B);
// [956]  Return Me 
return _B;
// End Sub
};

// [960] Sub SetPadding(pt As Object, pb As Object, pl As Object, pr As Object) As VueComponent 
_B.setpadding=function(_pt,_pb,_pl,_pr) {
// [961]  AddStyle( {114} , pt) 
_B.addstyle("padding-top",_pt,_B);
// [962]  AddStyle( {115} , pb) 
_B.addstyle("padding-bottom",_pb,_B);
// [963]  AddStyle( {116} , pl) 
_B.addstyle("padding-left",_pl,_B);
// [964]  AddStyle( {117} , pr) 
_B.addstyle("padding-right",_pr,_B);
// [965]  Return Me 
return _B;
// End Sub
};

}
/* =========================== VueHTML  =========================== */
function banano_bananovuematerial_vuehtml() {
var _B=this;
_B._id="";

_B._tag="";

_B._properties={};

_B._contents=[];

_B._classes={};

_B._styles={};

_B._looseattributes={};

_B._dontbreak=[];

_B._prefix="";

_B._doaproperclose=false;

_B._cssrule={};

_B._singlequote=[];

_B._sbafter=new StringBuilder();

_B._sbbefore=new StringBuilder();

_B._isimportant=false;

_B._parentid="";

_B._ds="";

_B._hascontent=false;

// [26] Sub GetCssStyle(styleName As String) As String 
_B.getcssstyle=function(_stylename) {
// [27]  Return CSSRule.Get(styleName) 
return _B._cssrule[_stylename];
// End Sub
};

// [31] Sub AddCSSClassProperties(sProperties As String) As VueHTML 
_B.addcssclassproperties=function(_sproperties) {
// [32]  AddCssRule( {21} & ID,sProperties) 
_B.addcssrule("."+_B._id,_sproperties,_B);
// [33]  Return Me 
return _B;
// End Sub
};

// [36] Sub BuildCSSRules() As String 
_B.buildcssrules=function() {
var _sb,_strkey,_scontent,_spprops,_nlist,_strpropvalue,_strprop,_strvalue,_nline,_values;
// [37]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [38]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [40]  For Each strKey As String In CSSRule.Keys 
var _strkeyKeys = Object.keys(_B._cssrule);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [42]  Dim scontent As String = CSSRule.Get(strKey) 
_scontent=_B._cssrule[_strkey];
// [43]  Dim spProps As List = StrParse( {22} ,scontent) 
_spprops=_B.strparse(";",_scontent,_B);
// [44]  Dim nList As List 
_nlist=[];
// [45]  nList.initialize 
_nlist.length=0;
// [46]  For Each strPropValue As String In spProps 
for (var _strpropvalueindex=0;_strpropvalueindex<_spprops.length;_strpropvalueindex++) {
_strpropvalue=_spprops[_strpropvalueindex];
// [47]  strPropValue = strPropValue.Trim 
_strpropvalue=_strpropvalue.trim();
// [48]  If strPropValue <> {23} Then 
if (_strpropvalue!="") {
// [49]  Dim strProp As String = MvField(strPropValue,1, {24} ) 
_strprop=_B.mvfield(_strpropvalue,1,":",_B);
// [50]  Dim strValue As String = MvField(strPropValue,2, {25} ) 
_strvalue=_B.mvfield(_strpropvalue,2,":",_B);
// [51]  strProp = strProp.Trim 
_strprop=_strprop.trim();
// [52]  strValue = strValue.trim 
_strvalue=_strvalue.trim();
// [53]  If strValue.EndsWith( {26} ) = False And IsImportant = True Then 
if (_strvalue.endsWith("!important")==false && _B._isimportant==true) {
// [54]  strValue = strValue & {27} 
_strvalue=_strvalue+" !important";
// [55]  End If 
}
// [56]  Dim nLine As String = {0} 
_nline="" + _strprop + ":" + _strvalue + "";
// [57]  nList.Add(nLine) 
_nlist.push(_nline);
// [58]  End If 
}
// [59]  Next 
}
// [60]  scontent = Join( {28} ,nList) 
_scontent=_B.join(";",_nlist,_B);
// [61]  CSSRule.Put(strKey,scontent) 
_B._cssrule[_strkey]=_scontent;
// [62]  Next 
}
// [64]  For Each strKey As String In CSSRule.Keys 
var _strkeyKeys = Object.keys(_B._cssrule);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [65]  Dim values As String = CSSRule.Get(strKey) 
_values=_B._cssrule[_strkey];
// [66]  If values.StartsWith( {29} ) = False Then values = {30} & values 
if (_values.startsWith("{")==false) {_values="{"+_values;}
// [67]  If values.EndsWith( {31} ) = False Then values = values & {32} 
if (_values.endsWith("}")==false) {_values=_values+"}";}
// [68]  sb.Append(strKey).Append( {33} ).Append(values).Append(CRLF) 
_sb.append(_strkey).append(" ").append(_values).append("\n");
// [69]  Next 
}
// [70]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [74] Sub AddCssRule(styleName As String, content As String) As VueHTML 
_B.addcssrule=function(_stylename,_content) {
var _scontent,_themstyles,_strit;
// [75]  Dim scontent As String 
_scontent="";
// [77]  Dim themStyles As List = StrParse( {34} ,styleName) 
_themstyles=_B.strparse(",",_stylename,_B);
// [78]  For Each strIT As String In themStyles 
for (var _stritindex=0;_stritindex<_themstyles.length;_stritindex++) {
_strit=_themstyles[_stritindex];
// [79]  strIT = strIT.Replace(CRLF, {35} ) 
_strit=_strit.split("\n").join("");
// [80]  If CSSRule.ContainsKey(strIT) Then 
if ((_strit in _B._cssrule)) {
// [81]  scontent = CSSRule.Get(strIT) 
_scontent=_B._cssrule[_strit];
// [82]  scontent = scontent & {36} & content 
_scontent=_scontent+";"+_content;
// [83]  CSSRule.Put(strIT,scontent) 
_B._cssrule[_strit]=_scontent;
// [84]  Else 
} else {
// [85]  CSSRule.Put(strIT,content) 
_B._cssrule[_strit]=_content;
// [86]  End If 
}
// [87]  Next 
}
// [88]  Return Me 
return _B;
// End Sub
};

// [92] Sub RemoveCssRule(styleName As String, styleProp As String) 
_B.removecssrule=function(_stylename,_styleprop) {
var _scontent,_spprops,_nlist,_strpropvalue,_strprop,_strvalue,_nline;
// [93]  Dim scontent As String 
_scontent="";
// [94]  If CSSRule.ContainsKey(styleName) Then 
if ((_stylename in _B._cssrule)) {
// [95]  scontent = CSSRule.Get(styleName) 
_scontent=_B._cssrule[_stylename];
// [96]  scontent = scontent.trim 
_scontent=_scontent.trim();
// [97]  Dim spProps As List = StrParse( {37} ,scontent) 
_spprops=_B.strparse(";",_scontent,_B);
// [98]  Dim nList As List 
_nlist=[];
// [99]  nList.initialize 
_nlist.length=0;
// [100]  For Each strPropValue As String In spProps 
for (var _strpropvalueindex=0;_strpropvalueindex<_spprops.length;_strpropvalueindex++) {
_strpropvalue=_spprops[_strpropvalueindex];
// [101]  strPropValue = strPropValue.Trim 
_strpropvalue=_strpropvalue.trim();
// [102]  Dim strProp As String = MvField(strPropValue,1, {38} ) 
_strprop=_B.mvfield(_strpropvalue,1,":",_B);
// [103]  Dim strValue As String = MvField(strPropValue,2, {39} ) 
_strvalue=_B.mvfield(_strpropvalue,2,":",_B);
// [104]  strProp = strProp.Trim 
_strprop=_strprop.trim();
// [105]  strValue = strValue.trim 
_strvalue=_strvalue.trim();
// [106]  If styleProp.EqualsIgnoreCase(strProp) = False Then 
if (_styleprop.equalsIgnoreCase(_strprop)==false) {
// [107]  Dim nLine As String = {1} 
_nline="" + _strprop + ":" + _strvalue + "";
// [108]  nList.Add(nLine) 
_nlist.push(_nline);
// [109]  End If 
}
// [110]  Next 
}
// [111]  scontent = Join( {40} ,nList) 
_scontent=_B.join(";",_nlist,_B);
// [112]  CSSRule.Put(styleName,scontent) 
_B._cssrule[_stylename]=_scontent;
// [113]  End If 
}
// End Sub
};

// [116] Sub SetVCloak As VueHTML 
_B.setvcloak=function() {
// [117]  SetAttr( {41} , {42} ) 
_B.setattr("v-cloak","true",_B);
// [118]  Return Me 
return _B;
// End Sub
};

// [121] Sub SetTabIndex(ti As String) As VueHTML 
_B.settabindex=function(_ti) {
// [122]  SetAttr( {43} , ti) 
_B.setattr("tabindex",_ti,_B);
// [123]  Return Me 
return _B;
// End Sub
};

// [126] Sub SetOnMouseOut(methodName As String) As VueHTML 
_B.setonmouseout=function(_methodname) {
// [127]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [128]  SetAttr( {44} , methodName) 
_B.setattr("v-on:mouseout",_methodname,_B);
// [129]  Return Me 
return _B;
// End Sub
};

// [132] Sub SetOnMouseOver(methodName As String) As VueHTML 
_B.setonmouseover=function(_methodname) {
// [133]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [134]  SetAttr( {45} , methodName) 
_B.setattr("v-on:mouseover",_methodname,_B);
// [135]  Return Me 
return _B;
// End Sub
};

// [139] Sub RemoveBorder(b As Boolean) As VueHTML 
_B.removeborder=function(_b) {
// [140]  SetStyle( {46} , {47} ) 
_B.setstyle("border","none none double none",_B);
// [141]  Return Me 
return _B;
// End Sub
};

// [145] Sub SetPointer(b As Boolean) As VueHTML 
_B.setpointer=function(_b) {
// [146]  SetStyle( {48} , {49} ) 
_B.setstyle("cursor","pointer",_B);
// [147]  Return Me 
return _B;
// End Sub
};

// [151] Sub CenterItems(b As Boolean) As VueHTML 
_B.centeritems=function(_b) {
// [152]  SetStyle( {50} , {51} ) 
_B.setstyle("justify-content","center",_B);
// [153]  Return Me 
return _B;
// End Sub
};

// [157] Sub CenterText(b As Boolean) As VueHTML 
_B.centertext=function(_b) {
// [158]  SetStyle( {52} , {53} ) 
_B.setstyle("text-align","center",_B);
// [159]  Return Me 
return _B;
// End Sub
};

// [163] Sub SetURL(u As Object) As VueHTML 
_B.seturl=function(_u) {
// [164]  SetAttr( {54} , u) 
_B.setattr("url",_u,_B);
// [165]  Return Me 
return _B;
// End Sub
};

// [169] Sub SetTo(t As Object) As VueHTML 
_B.setto=function(_t) {
// [170]  SetAttr( {55} , t) 
_B.setattr("to",_t,_B);
// [171]  Return Me 
return _B;
// End Sub
};

// [175] Sub SetColor(c As Object) As VueHTML 
_B.setcolor=function(_c) {
// [176]  SetAttr( {56} , c) 
_B.setattr("color",_c,_B);
// [177]  Return Me 
return _B;
// End Sub
};

// [181] Sub SetPadding(p As Object) As VueHTML 
_B.setpadding=function(_p) {
// [182]  SetStyleMulti(CreateMap( {57} :p)) 
_B.setstylemulti({"padding":_p},_B);
// [183]  Return Me 
return _B;
// End Sub
};

// [188] Sub SetBackgroundColor(p As Object) As VueHTML 
_B.setbackgroundcolor=function(_p) {
// [189]  SetStyleMulti(CreateMap( {58} :p)) 
_B.setstylemulti({"background-color":_p},_B);
// [190]  Return Me 
return _B;
// End Sub
};

// [194] Sub SetTemplate(tmp As Object) As VueHTML 
_B.settemplate=function(_tmp) {
// [195]  Clear 
_B.clear(_B);
// [196]  SetText(tmp) 
_B.settext(_tmp,_B);
// [197]  Return Me 
return _B;
// End Sub
};

// [201] Sub SetSrc(bind As String) As VueHTML 
_B.setsrc=function(_bind) {
// [202]  SetAttr( {59} , bind) 
_B.setattr(":src",_bind,_B);
// [203]  Return Me 
return _B;
// End Sub
};

// [206] Sub SetAlt(a As String) As VueHTML 
_B.setalt=function(_a) {
// [207]  SetAttr( {60} , a) 
_B.setattr("alt",_a,_B);
// [208]  Return Me 
return _B;
// End Sub
};

// [212] Sub SetRef(r As String) As VueHTML 
_B.setref=function(_r) {
// [213]  If r = {61} Then Return Me 
if (_r=="") { return _B;}
// [214]  SetAttr( {62} , r) 
_B.setattr("ref",_r,_B);
// [215]  Return Me 
return _B;
// End Sub
};

// [219] Sub SetData(dsx As Object) As VueHTML 
_B.setdata=function(_dsx) {
// [220]  ds = dsx 
_B._ds=_dsx;
// [221]  SetVFor( {63} , dsx) 
_B.setvfor("row",_dsx,_B);
// [222]  SetKey( {64} ) 
_B.setkey("id",_B);
// [223]  SetValue( {65} ) 
_B.setvalue("value",_B);
// [224]  Return Me 
return _B;
// End Sub
};

// [228] private Sub SetValue(l As Object) As VueHTML 
_B.setvalue=function(_l) {
var _valuename,_txt;
// [229]  If ds = {66} Then 
if (_B._ds=="") {
// [230]  Log( {67} ) 
console.log("VueHTML.SetValue, you need to run VueHTML.SetData first before you set value!");
// [231]  End If 
}
// [232]  Dim valueName As String = {2} 
_valuename="row." + _l + "";
// [233]  Dim txt As String = {3} 
_txt="{{ " + _valuename + " }}";
// [234]  SetText(txt) 
_B.settext(_txt,_B);
// [235]  SetAttr( {68} , valueName) 
_B.setattr("v-bind:name",_valuename,_B);
// [236]  Return Me 
return _B;
// End Sub
};

// [239] Sub SetDraggable(b As Boolean) As VueHTML 
_B.setdraggable=function(_b) {
// [240]  SetAttr( {69} ,b) 
_B.setattr(":draggable",_b,_B);
// [241]  Return Me 
return _B;
// End Sub
};

// [244] Sub SetDroppable(b As Boolean) As VueHTML 
_B.setdroppable=function(_b) {
// [245]  SetAttr( {70} ,b) 
_B.setattr(":droppable",_b,_B);
// [246]  Return Me 
return _B;
// End Sub
};

// [250] Sub SetExact(b As Boolean) As VueHTML 
_B.setexact=function(_b) {
// [251]  If b Then SetAttr( {71} , b) 
if (_b) {_B.setattr("exact",_b,_B);}
// [252]  Return Me 
return _B;
// End Sub
};

// [256] Sub SetVFor(item As String, dataSource As String) As VueHTML 
_B.setvfor=function(_item,_datasource) {
var _sline;
// [257]  dataSource = dataSource.tolowercase 
_datasource=_datasource.toLowerCase();
// [258]  item = item.tolowercase 
_item=_item.toLowerCase();
// [259]  If ds = {72} Then 
if (_B._ds=="") {
// [260]  Log( {73} ) 
console.log("VueHTML.SetValue, you need to run VueHTML.SetData first before you set for!");
// [261]  End If 
}
// [262]  Dim sline As String = {4} 
_sline="" + _item + " in " + _datasource + "";
// [263]  SetAttr( {74} , sline) 
_B.setattr("v-for",_sline,_B);
// [264]  Return Me 
return _B;
// End Sub
};

// [267] Sub SetKey(k As String) As VueHTML 
_B.setkey=function(_k) {
// [268]  SetAttr( {75} , k) 
_B.setattr(":key",_k,_B);
// [269]  Return Me 
return _B;
// End Sub
};

// [273] Sub AddBR 
_B.addbr=function() {
// [274]  SetText( {76} ) 
_B.settext("<br>",_B);
// End Sub
};

// [278] Sub AddHR 
_B.addhr=function() {
// [279]  SetText( {77} ) 
_B.settext("<hr>",_B);
// End Sub
};

// [283] Sub SetVIf(vif As Object) As VueHTML 
_B.setvif=function(_vif) {
// [284]  SetAttr( {78} , vif) 
_B.setattr("v-if",_vif,_B);
// [285]  Return Me 
return _B;
// End Sub
};

// [288] Sub SetVShow(vif As Object) As VueHTML 
_B.setvshow=function(_vif) {
// [289]  SetAttr( {79} , vif) 
_B.setattr("v-show",_vif,_B);
// [290]  Return Me 
return _B;
// End Sub
};

// [293] Sub SetStyleHeight(h As Object) As VueHTML 
_B.setstyleheight=function(_h) {
// [294]  SetStyleMulti(CreateMap( {80} :h)) 
_B.setstylemulti({"height":_h},_B);
// [295]  Return Me 
return _B;
// End Sub
};

// [298] Sub SetVHtml(h As String) As VueHTML 
_B.setvhtml=function(_h) {
// [299]  If h = {81} Then Return Me 
if (_h=="") { return _B;}
// [300]  h = h.tolowercase 
_h=_h.toLowerCase();
// [301]  SetAttr( {82} , h) 
_B.setattr("v-html",_h,_B);
// [302]  Return Me 
return _B;
// End Sub
};

// [305] Sub SetStyleWidth(h As Object) As VueHTML 
_B.setstylewidth=function(_h) {
// [306]  SetStyleMulti(CreateMap( {83} :h)) 
_B.setstylemulti({"width":_h},_B);
// [307]  Return Me 
return _B;
// End Sub
};

// [313] Sub MvField(sValue As String, iPosition As Int, Delimiter As String) As String 
_B.mvfield=function(_svalue,_iposition,_delimiter) {
var _xpos,_mvalues,_tvalues,_sb,_startcnt;
// [314]  If sValue.Length = 0 Then Return {84} 
if (_svalue.length==0) { return "";}
// [315]  Dim xPos As Int = sValue.IndexOf(Delimiter) 
_xpos=_svalue.indexOf(_delimiter);
// [316]  If xPos = -1 Then Return sValue 
if (_xpos==-1) { return _svalue;}
// [317]  Dim mValues As List = StrParse(Delimiter,sValue) 
_mvalues=_B.strparse(_delimiter,_svalue,_B);
// [318]  Dim tValues As Int 
_tvalues=0;
// [319]  tValues = mValues.size -1 
_tvalues=_mvalues.length-1;
// [320]  Select Case iPosition 
switch ("" + _iposition) {
// [321]  Case -1 
case "" + -1:
// [322]  Return mValues.get(tValues) 
return _mvalues[_tvalues];
// [323]  Case -2 
case "" + -2:
// [324]  Return mValues.get(tValues - 1) 
return _mvalues[_tvalues-1];
// [325]  Case -3 
case "" + -3:
// [326]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [327]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [328]  Dim startcnt As Int 
_startcnt=0;
// [329]  sb.Append(mValues.Get(1)) 
_sb.append(_mvalues[1]);
// [330]  For startcnt = 2 To tValues 
for (_startcnt=2;_startcnt<=_tvalues;_startcnt++) {
// [331]  sb.Append(Delimiter) 
_sb.append(_delimiter);
// [332]  sb.Append(mValues.get(startcnt)) 
_sb.append(_mvalues[_startcnt]);
// [333]  Next 
}
// [334]  Return sb.tostring 
return _sb.toString();
// [335]  Case Else 
default:
// [336]  iPosition = iPosition - 1 
_iposition=_iposition-1;
// [337]  If iPosition <= -1 Then 
if (_iposition<=-1) {
// [338]  Return mValues.get(tValues) 
return _mvalues[_tvalues];
// [339]  End If 
}
// [340]  If iPosition > tValues Then 
if (_iposition>_tvalues) {
// [341]  Return {85} 
return "";
// [342]  End If 
}
// [343]  Return mValues.get(iPosition) 
return _mvalues[_iposition];
// [344]  End Select 
}
// End Sub
};

// [349] Sub RandListValue(ListX As List) As Object 
_B.randlistvalue=function(_listx) {
// [350]  ShuffleList(ListX) 
_B.shufflelist(_listx,_B);
// [351]  Return ListX.Get(Rnd(0, ListX.Size -1)) 
return _listx[(Math.floor(Math.random() * (_listx.length-1 - 0) + 0))];
// End Sub
};

// [355] Sub RamoveFromList(listX As List, item As String) 
_B.ramovefromlist=function(_listx,_item) {
var _li;
// [356]  Dim li As Int = listX.IndexOf(item) 
_li=_listx.indexOf(_item);
// [357]  If li >= 0 Then listX.RemoveAt(li) 
if (_li>=0) {_listx.splice(_li,1);}
// End Sub
};

// [360] Sub ShuffleList(pl As List) As List 
_B.shufflelist=function(_pl) {
var _i,_j,_k;
// [361]  For i = pl.Size - 1 To 0 Step -1 
for (_i=_pl.length-1;_i>=0;_i-=1) {
// [362]  Dim j As Int 
_j=0;
// [363]  Dim k As Object 
_k={};
// [364]  j = Rnd(0, i + 1) 
_j=(Math.floor(Math.random() * (_i+1 - 0) + 0));
// [365]  k = pl.Get(j) 
_k=_pl[_j];
// [366]  pl.Set(j,pl.Get(i)) 
_pl[_j]=_pl[_i];
// [367]  pl.Set(i,k) 
_pl[_i]=_k;
// [368]  Next 
}
// [369]  Return pl 
return _pl;
// End Sub
};

// [372] Sub SetInline(b As Boolean) As VueHTML 
_B.setinline=function(_b) {
// [373]  SetStyleMulti(CreateMap( {86} : {87} , {88} : {89} )) 
_B.setstylemulti({"display":"inline-flex", "margin-right":"10px"},_B);
// [374]  Return Me 
return _B;
// End Sub
};

// [378] Sub SetClasses(clsList As List) As VueHTML 
_B.setclasses=function(_clslist) {
var _c;
// [379]  For Each c As String In clsList 
for (var _cindex=0;_cindex<_clslist.length;_cindex++) {
_c=_clslist[_cindex];
// [380]  AddClass(c) 
_B.addclass(_c,_B);
// [381]  Next 
}
// [382]  Return Me 
return _B;
// End Sub
};

// [386] Sub AddClasses(clsList As List) As VueHTML 
_B.addclasses=function(_clslist) {
var _c;
// [387]  For Each c As String In clsList 
for (var _cindex=0;_cindex<_clslist.length;_cindex++) {
_c=_clslist[_cindex];
// [388]  AddClass(c) 
_B.addclass(_c,_B);
// [389]  Next 
}
// [390]  Return Me 
return _B;
// End Sub
};

// [394] Sub SetAttributes(m As Map) As VueHTML 
_B.setattributes=function(_m) {
var _k,_v;
// [395]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [396]  Dim v As String = m.Get(k) 
_v=_m[_k];
// [397]  SetAttr(k,v) 
_B.setattr(_k,_v,_B);
// [398]  Next 
}
// [399]  Return Me 
return _B;
// End Sub
};

// [403] Sub SetStyles(m As Map) As VueHTML 
_B.setstyles=function(_m) {
var _k,_v;
// [404]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [405]  Dim v As String = m.Get(k) 
_v=_m[_k];
// [406]  SetStyle(k,v) 
_B.setstyle(_k,_v,_B);
// [407]  Next 
}
// [408]  Return Me 
return _B;
// End Sub
};

// [412] Sub SetSpan(sText As String) As VueHTML 
_B.setspan=function(_stext) {
var _s;
// [413]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [414]  s = CreateSpan( {90} ).SetText(sText) 
_s=_B.createspan("",_B).settext(_stext);
// [415]  AddElement(s) 
_B.addelement(_s,_B);
// [416]  Return Me 
return _B;
// End Sub
};

// [421] Sub SetSlot(s As Object) As VueHTML 
_B.setslot=function(_s) {
// [422]  SetAttr( {91} , s) 
_B.setattr("slot",_s,_B);
// [423]  Return Me 
return _B;
// End Sub
};

// [426] Sub SetStateOnClick(ns As Object) As VueHTML 
_B.setstateonclick=function(_ns) {
// [427]  SetAttr( {92} , ns) 
_B.setattr("v-on:click",_ns,_B);
// [428]  Return Me 
return _B;
// End Sub
};

// [432] Sub SetVLazy(varLazyLoad As Object) As VueHTML 
_B.setvlazy=function(_varlazyload) {
// [433]  SetAttr( {93} , varLazyLoad) 
_B.setattr("v-lazy",_varlazyload,_B);
// [434]  Return Me 
return _B;
// End Sub
};

// [438] Sub SetClass(c As Object) As VueHTML 'ignore 
_B.setclass=function(_c) {
// [439]  AddClass(c) 
_B.addclass(_c,_B);
// [440]  Return Me 
return _B;
// End Sub
};

// [444] Sub SetClassSection(b As Boolean) As VueHTML 'ignore 
_B.setclasssection=function(_b) {
// [445]  AddClass( {94} ) 
_B.addclass("section",_B);
// [446]  Return Me 
return _B;
// End Sub
};

// [450] Sub Wrap(wid As String, wrapType As String) As VueHTML 
_B.wrap=function(_wid,_wraptype) {
var _p;
// [451]  Dim p As VueHTML 
_p= new banano_bananovuematerial_vuehtml();
// [452]  p.Initialize(wid,wrapType) 
_p.initialize(_wid,_wraptype);
// [453]  p.AddContent(HTML) 
_p.addcontent(_B.html(_B));
// [454]  Return p 
return _p;
// End Sub
};

// [458] Sub SetClassRow(b As Boolean) As VueHTML 'ignore 
_B.setclassrow=function(_b) {
// [459]  AddClass( {95} ) 
_B.addclass("row",_B);
// [460]  Return Me 
return _B;
// End Sub
};

// [464] Sub SetAttr(attr As String, val As String) As VueHTML 
_B.setattr=function(_attr,_val) {
// [465]  AddAttribute(attr,val) 
_B.addattribute(_attr,_val,_B);
// [466]  Return Me 
return _B;
// End Sub
};

// [470] Sub SetAttrRoleButton(b As Boolean) As VueHTML 'ignore 
_B.setattrrolebutton=function(_b) {
// [471]  SetAttrROLE( {96} ) 
_B.setattrrole("button",_B);
// [472]  Return Me 
return _B;
// End Sub
};

// [475] Sub SetStyleFontFamily(f As Object) As VueHTML 'ignore 
_B.setstylefontfamily=function(_f) {
// [476]  SetStyle( {97} , f) 
_B.setstyle("font-family",_f,_B);
// [477]  Return Me 
return _B;
// End Sub
};

// [481] Sub SetStyleFontWeight(f As Object) As VueHTML 'ignore 
_B.setstylefontweight=function(_f) {
// [482]  SetStyle( {98} , f) 
_B.setstyle("font-weight",_f,_B);
// [483]  Return Me 
return _B;
// End Sub
};

// [487] Sub SetStyleFontWeightBold(f As Boolean) As VueHTML 'ignore 
_B.setstylefontweightbold=function(_f) {
// [488]  SetStyle( {99} , {100} ) 
_B.setstyle("font-weight","bold",_B);
// [489]  Return Me 
return _B;
// End Sub
};

// [492] Sub SetStyleFontVariant(f As Object) As VueHTML 'ignore 
_B.setstylefontvariant=function(_f) {
// [493]  SetStyle( {101} , f) 
_B.setstyle("font-variant",_f,_B);
// [494]  Return Me 
return _B;
// End Sub
};

// [497] Sub SetStyleFontWeightNormal(f As Boolean) As VueHTML 'ignore 
_B.setstylefontweightnormal=function(_f) {
// [498]  SetStyle( {102} , {103} ) 
_B.setstyle("font-weight","normal",_B);
// [499]  Return Me 
return _B;
// End Sub
};

// [503] Sub SetStyleFontStyle(f As Object) As VueHTML 'ignore 
_B.setstylefontstyle=function(_f) {
// [504]  SetStyle( {104} , f) 
_B.setstyle("font-style",_f,_B);
// [505]  Return Me 
return _B;
// End Sub
};

// [508] Sub SetStyleFontSize(f As Object) As VueHTML 'ignore 
_B.setstylefontsize=function(_f) {
// [509]  SetStyle( {105} , MakePx(f)) 
_B.setstyle("font-size",_B.makepx(_f,_B),_B);
// [510]  Return Me 
return _B;
// End Sub
};

// [514] Sub SetStyleTextAlignCenter(f As Boolean) As VueHTML 'ignore 
_B.setstyletextaligncenter=function(_f) {
// [515]  SetStyle( {106} , {107} ) 
_B.setstyle("text-align","center",_B);
// [516]  Return Me 
return _B;
// End Sub
};

// [520] Sub SetStyleTextIndent(f As Object) As VueHTML 'ignore 
_B.setstyletextindent=function(_f) {
// [521]  SetStyle( {108} , MakePx(f)) 
_B.setstyle("text-indent",_B.makepx(_f,_B),_B);
// [522]  Return Me 
return _B;
// End Sub
};

// [525] Sub SetStyleTextTransform(f As Object) As VueHTML 'ignore 
_B.setstyletexttransform=function(_f) {
// [526]  SetStyle( {109} , f) 
_B.setstyle("text-transform",_f,_B);
// [527]  Return Me 
return _B;
// End Sub
};

// [530] Sub SetStyleLetterSpacing(f As Object) As VueHTML 'ignore 
_B.setstyleletterspacing=function(_f) {
// [531]  SetStyle( {110} , MakePx(f)) 
_B.setstyle("letter-spacing",_B.makepx(_f,_B),_B);
// [532]  Return Me 
return _B;
// End Sub
};

// [535] Sub SetStyleTextDecoration(f As Object) As VueHTML 'ignore 
_B.setstyletextdecoration=function(_f) {
// [536]  SetStyle( {111} , f) 
_B.setstyle("text-decoration",_f,_B);
// [537]  Return Me 
return _B;
// End Sub
};

// [540] Sub SetStyleTextShadow(f As Object) As VueHTML 'ignore 
_B.setstyletextshadow=function(_f) {
// [541]  SetStyle( {112} , f) 
_B.setstyle("text-shadow",_f,_B);
// [542]  Return Me 
return _B;
// End Sub
};

// [545] Sub SetStyleLineHeight(f As Object) As VueHTML 'ignore 
_B.setstylelineheight=function(_f) {
// [546]  SetStyle( {113} , f) 
_B.setstyle("line-height",_f,_B);
// [547]  Return Me 
return _B;
// End Sub
};

// [551] Sub SetStyleWhiteSpace(f As Object) As VueHTML 'ignore 
_B.setstylewhitespace=function(_f) {
// [552]  SetStyle( {114} , f) 
_B.setstyle("white-space",_f,_B);
// [553]  Return Me 
return _B;
// End Sub
};

// [556] Sub SetStyleVerticalAlign(f As Object) As VueHTML 'ignore 
_B.setstyleverticalalign=function(_f) {
// [557]  SetStyle( {115} , f) 
_B.setstyle("vertical-align",_f,_B);
// [558]  Return Me 
return _B;
// End Sub
};

// [561] Sub SetStyleDirection(f As Object) As VueHTML 'ignore 
_B.setstyledirection=function(_f) {
// [562]  SetStyle( {116} , f) 
_B.setstyle("direction",_f,_B);
// [563]  Return Me 
return _B;
// End Sub
};

// [566] Sub SetStyleWordSpacing(f As Object) As VueHTML 'ignore 
_B.setstylewordspacing=function(_f) {
// [567]  SetStyle( {117} , MakePx(f)) 
_B.setstyle("word-spacing",_B.makepx(_f,_B),_B);
// [568]  Return Me 
return _B;
// End Sub
};

// [573] Sub SetAttrDisabled(b As Boolean) As VueHTML 
_B.setattrdisabled=function(_b) {
// [574]  If b Then AddLooseAttribute( {118} ) 
if (_b) {_B.addlooseattribute("disabled",_B);}
// [575]  Return Me 
return _B;
// End Sub
};

// [579] Sub SetStyleBackgroundColor(c As Object) As VueHTML 
_B.setstylebackgroundcolor=function(_c) {
// [580]  SetStyle( {119} ,c) 
_B.setstyle("background-color",_c,_B);
// [581]  Return Me 
return _B;
// End Sub
};

// [586] Sub SetStyleBackgroundClip(c As Object) As VueHTML 
_B.setstylebackgroundclip=function(_c) {
// [587]  SetStyle( {120} ,c) 
_B.setstyle("background-clip",_c,_B);
// [588]  Return Me 
return _B;
// End Sub
};

// [593] Sub SetStyleBackgroundOrigin(c As Object) As VueHTML 
_B.setstylebackgroundorigin=function(_c) {
// [594]  SetStyle( {121} ,c) 
_B.setstyle("background-origin",_c,_B);
// [595]  Return Me 
return _B;
// End Sub
};

// [599] Sub SetStyleBorderRadius(topLeft As String, topRight As String, bottomLeft As String, bottomRight As String) As VueHTML 
_B.setstyleborderradius=function(_topleft,_topright,_bottomleft,_bottomright) {
var _br,_sbr;
// [600]  Dim br As List 
_br=[];
// [601]  br.Initialize 
_br.length=0;
// [602]  br.Add(MakePx(topLeft)) 
_br.push(_B.makepx(_topleft,_B));
// [603]  br.Add(MakePx(topRight)) 
_br.push(_B.makepx(_topright,_B));
// [604]  br.Add(MakePx(bottomLeft)) 
_br.push(_B.makepx(_bottomleft,_B));
// [605]  br.Add(MakePx(bottomRight)) 
_br.push(_B.makepx(_bottomright,_B));
// [607]  Dim sbr As String = Join( {122} , br) 
_sbr=_B.join(" ",_br,_B);
// [608]  SetStyle( {123} , sbr) 
_B.setstyle("border-radius",_sbr,_B);
// [609]  Return Me 
return _B;
// End Sub
};

// [613] Sub SetStyleBorderTopLeftRadius(topLeft As String) As VueHTML 
_B.setstylebordertopleftradius=function(_topleft) {
// [614]  topLeft = MakePx(topLeft) 
_topleft=_B.makepx(_topleft,_B);
// [615]  SetStyle( {124} , topLeft) 
_B.setstyle("border-top-left-radius",_topleft,_B);
// [616]  Return Me 
return _B;
// End Sub
};

// [619] Sub SetStyleBorderTopRightRadius(topRight As String) As VueHTML 
_B.setstylebordertoprightradius=function(_topright) {
// [620]  topRight = MakePx(topRight) 
_topright=_B.makepx(_topright,_B);
// [621]  SetStyle( {125} , topRight) 
_B.setstyle("border-top-right-radius",_topright,_B);
// [622]  Return Me 
return _B;
// End Sub
};

// [625] Sub SetStyleBorderBottomLeftRadius(bottomLeft As String) As VueHTML 
_B.setstyleborderbottomleftradius=function(_bottomleft) {
// [626]  bottomLeft = MakePx(bottomLeft) 
_bottomleft=_B.makepx(_bottomleft,_B);
// [627]  SetStyle( {126} , bottomLeft) 
_B.setstyle("border-bottom-left-radius",_bottomleft,_B);
// [628]  Return Me 
return _B;
// End Sub
};

// [631] Sub SetStyleBorderBottomRightRadius(bottomRight As String) As VueHTML 
_B.setstyleborderbottomrightradius=function(_bottomright) {
// [632]  bottomRight = MakePx(bottomRight) 
_bottomright=_B.makepx(_bottomright,_B);
// [633]  SetStyle( {127} , bottomRight) 
_B.setstyle("border-bottom-right-radius",_bottomright,_B);
// [634]  Return Me 
return _B;
// End Sub
};

// [637] Sub SetStyleColor(c As Object) As VueHTML 
_B.setstylecolor=function(_c) {
// [638]  SetStyle( {128} ,c) 
_B.setstyle("color",_c,_B);
// [639]  Return Me 
return _B;
// End Sub
};

// [642] Sub SetStyleOutline(c As Object) As VueHTML 
_B.setstyleoutline=function(_c) {
// [643]  SetStyle( {129} ,c) 
_B.setstyle("outline",_c,_B);
// [644]  Return Me 
return _B;
// End Sub
};

// [647] Sub SetStyleOutlineStyle(bs As Object) As VueHTML 
_B.setstyleoutlinestyle=function(_bs) {
// [648]  SetStyle( {130} ,bs) 
_B.setstyle("outline-style",_bs,_B);
// [649]  Return Me 
return _B;
// End Sub
};

// [653] Sub SetStyleOutlineColor(bs As Object) As VueHTML 
_B.setstyleoutlinecolor=function(_bs) {
// [654]  SetStyle( {131} ,bs) 
_B.setstyle("outline-color",_bs,_B);
// [655]  Return Me 
return _B;
// End Sub
};

// [658] Sub SetStyleOutlineWidth(bs As Object) As VueHTML 
_B.setstyleoutlinewidth=function(_bs) {
// [659]  SetStyle( {132} ,MakePx(bs)) 
_B.setstyle("outline-width",_B.makepx(_bs,_B),_B);
// [660]  Return Me 
return _B;
// End Sub
};

// [664] Sub SetStyleBorderStyle(bs As Object) As VueHTML 
_B.setstyleborderstyle=function(_bs) {
// [665]  SetStyle( {133} ,bs) 
_B.setstyle("border-style",_bs,_B);
// [666]  Return Me 
return _B;
// End Sub
};

// [669] Sub SetStyleBorderStyleDotted(b As Boolean) As VueHTML 
_B.setstyleborderstyledotted=function(_b) {
// [670]  SetStyle( {134} , {135} ) 
_B.setstyle("border-style","dotted",_B);
// [671]  Return Me 
return _B;
// End Sub
};

// [674] Sub SetStyleBorderStyleDashed(b As Boolean) As VueHTML 
_B.setstyleborderstyledashed=function(_b) {
// [675]  SetStyle( {136} , {137} ) 
_B.setstyle("border-style","dashed",_B);
// [676]  Return Me 
return _B;
// End Sub
};

// [679] Sub SetStyleBorderStyleSolid(b As Boolean) As VueHTML 
_B.setstyleborderstylesolid=function(_b) {
// [680]  SetStyle( {138} , {139} ) 
_B.setstyle("border-style","solid",_B);
// [681]  Return Me 
return _B;
// End Sub
};

// [684] Sub SetStyleBorderStyleDouble(b As Boolean) As VueHTML 
_B.setstyleborderstyledouble=function(_b) {
// [685]  SetStyle( {140} , {141} ) 
_B.setstyle("border-style","double",_B);
// [686]  Return Me 
return _B;
// End Sub
};

// [689] Sub SetStyleBorderWidth(b As String) As VueHTML 
_B.setstyleborderwidth=function(_b) {
// [690]  SetStyle( {142} ,MakePx(b)) 
_B.setstyle("border-width",_B.makepx(_b,_B),_B);
// [691]  Return Me 
return _B;
// End Sub
};

// [694] Sub SetStyleBorderLeftWidth(b As String) As VueHTML 
_B.setstyleborderleftwidth=function(_b) {
// [695]  SetStyle( {143} ,MakePx(b)) 
_B.setstyle("border-left-width",_B.makepx(_b,_B),_B);
// [696]  Return Me 
return _B;
// End Sub
};

// [699] Sub SetStyleBorderRightWidth(b As String) As VueHTML 
_B.setstyleborderrightwidth=function(_b) {
// [700]  SetStyle( {144} ,MakePx(b)) 
_B.setstyle("border-right-width",_B.makepx(_b,_B),_B);
// [701]  Return Me 
return _B;
// End Sub
};

// [704] Sub SetStyleBorderBottomWidth(b As String) As VueHTML 
_B.setstyleborderbottomwidth=function(_b) {
// [705]  SetStyle( {145} ,MakePx(b)) 
_B.setstyle("border-bottom-width",_B.makepx(_b,_B),_B);
// [706]  Return Me 
return _B;
// End Sub
};

// [709] Sub SetStyleBorderTopWidth(b As String) As VueHTML 
_B.setstylebordertopwidth=function(_b) {
// [710]  SetStyle( {146} ,MakePx(b)) 
_B.setstyle("border-top-width",_B.makepx(_b,_B),_B);
// [711]  Return Me 
return _B;
// End Sub
};

// [714] Sub SetStyleBorderColor(c As String) As VueHTML 
_B.setstylebordercolor=function(_c) {
// [715]  SetStyle( {147} ,c) 
_B.setstyle("border-color",_c,_B);
// [716]  Return Me 
return _B;
// End Sub
};

// [719] Sub SetStyleBorderLeftColor(c As String) As VueHTML 
_B.setstyleborderleftcolor=function(_c) {
// [720]  SetStyle( {148} ,c) 
_B.setstyle("border-left-color",_c,_B);
// [721]  Return Me 
return _B;
// End Sub
};

// [725] Sub SetStyleBorderRightColor(c As String) As VueHTML 
_B.setstyleborderrightcolor=function(_c) {
// [726]  SetStyle( {149} ,c) 
_B.setstyle("border-right-color",_c,_B);
// [727]  Return Me 
return _B;
// End Sub
};

// [730] Sub SetStyleBorderTopColor(c As String) As VueHTML 
_B.setstylebordertopcolor=function(_c) {
// [731]  SetStyle( {150} ,c) 
_B.setstyle("border-top-color",_c,_B);
// [732]  Return Me 
return _B;
// End Sub
};

// [736] Sub SetStyleBorderBottomColor(c As String) As VueHTML 
_B.setstyleborderbottomcolor=function(_c) {
// [737]  SetStyle( {151} ,c) 
_B.setstyle("border-bottom-color",_c,_B);
// [738]  Return Me 
return _B;
// End Sub
};

// [741] Sub SetStyleBorderLeftStyle(c As String) As VueHTML 
_B.setstyleborderleftstyle=function(_c) {
// [742]  SetStyle( {152} ,c) 
_B.setstyle("border-left-style",_c,_B);
// [743]  Return Me 
return _B;
// End Sub
};

// [746] Sub SetStyleBorderRightStyle(c As String) As VueHTML 
_B.setstyleborderrightstyle=function(_c) {
// [747]  SetStyle( {153} ,c) 
_B.setstyle("border-right-style",_c,_B);
// [748]  Return Me 
return _B;
// End Sub
};

// [751] Sub SetStyleBorderBottomStyle(c As String) As VueHTML 
_B.setstyleborderbottomstyle=function(_c) {
// [752]  SetStyle( {154} ,c) 
_B.setstyle("border-bottom-style",_c,_B);
// [753]  Return Me 
return _B;
// End Sub
};

// [756] Sub SetStyleBorderTopStyle(c As String) As VueHTML 
_B.setstylebordertopstyle=function(_c) {
// [757]  SetStyle( {155} ,c) 
_B.setstyle("border-top-style",_c,_B);
// [758]  Return Me 
return _B;
// End Sub
};

// [761] Sub SetStyleBorderStyleGroove(b As Boolean) As VueHTML 
_B.setstyleborderstylegroove=function(_b) {
// [762]  SetStyle( {156} , {157} ) 
_B.setstyle("border-style","groove",_B);
// [763]  Return Me 
return _B;
// End Sub
};

// [766] Sub SetStyleBorderStyleRidge(b As Boolean) As VueHTML 
_B.setstyleborderstyleridge=function(_b) {
// [767]  SetStyle( {158} , {159} ) 
_B.setstyle("border-style","ridge",_B);
// [768]  Return Me 
return _B;
// End Sub
};

// [771] Sub SetStyleBorderStyleInset(b As Boolean) As VueHTML 
_B.setstyleborderstyleinset=function(_b) {
// [772]  SetStyle( {160} , {161} ) 
_B.setstyle("border-style","inset",_B);
// [773]  Return Me 
return _B;
// End Sub
};

// [776] Sub SetStyleBorderStyleOutset(b As Boolean) As VueHTML 
_B.setstyleborderstyleoutset=function(_b) {
// [777]  SetStyle( {162} , {163} ) 
_B.setstyle("border-style","outset",_B);
// [778]  Return Me 
return _B;
// End Sub
};

// [781] Sub SetStyleBorderStyleNone(b As Boolean) As VueHTML 
_B.setstyleborderstylenone=function(_b) {
// [782]  SetStyle( {164} , {165} ) 
_B.setstyle("border-style","none",_B);
// [783]  Return Me 
return _B;
// End Sub
};

// [786] Sub SetStyleBorderStyleHidden(b As Boolean) As VueHTML 
_B.setstyleborderstylehidden=function(_b) {
// [787]  SetStyle( {166} , {167} ) 
_B.setstyle("border-style","hidden",_B);
// [788]  Return Me 
return _B;
// End Sub
};

// [791] Sub SetStyleImportant(b As Boolean) As VueHTML 
_B.setstyleimportant=function(_b) {
// [792]  IsImportant = b 
_B._isimportant=_b;
// [793]  Return Me 
return _B;
// End Sub
};

// [798] Sub SetStyleMulti(m As Map) As VueHTML 
_B.setstylemulti=function(_m) {
var _k,_v;
// [799]  For Each k As String In m.Keys 
var _kKeys = Object.keys(_m);
for (var _kindex=0;_kindex<_kKeys.length;_kindex++) {
_k=_kKeys[_kindex];
// [800]  Dim v As Object = m.Get(k) 
_v=_m[_k];
// [801]  SetStyle(k,v) 
_B.setstyle(_k,_v,_B);
// [802]  Next 
}
// [803]  Return Me 
return _B;
// End Sub
};

// [806] Sub SetCursorPointer As VueHTML 
_B.setcursorpointer=function() {
// [807]  SetStyle( {168} , {169} ) 
_B.setstyle("cursor","pointer",_B);
// [808]  Return Me 
return _B;
// End Sub
};

// [812] Sub SetBorder(width As String, color As String, bstyle As String) As VueHTML 
_B.setborder=function(_width,_color,_bstyle) {
// [813]  SetStyle( {170} , bstyle) 
_B.setstyle("border-style",_bstyle,_B);
// [814]  SetStyle( {171} , width) 
_B.setstyle("border-width",_width,_B);
// [815]  SetStyle( {172} , color) 
_B.setstyle("border-color",_color,_B);
// [816]  Return Me 
return _B;
// End Sub
};

// [820] Sub SetCursorMove As VueHTML 
_B.setcursormove=function() {
// [821]  SetStyle( {173} , {174} ) 
_B.setstyle("cursor","move",_B);
// [822]  Return Me 
return _B;
// End Sub
};

// [826] Sub SetTextAlignCenter As VueHTML 
_B.settextaligncenter=function() {
// [827]  SetStyle( {175} , {176} ) 
_B.setstyle("text-align","center",_B);
// [828]  Return Me 
return _B;
// End Sub
};

// [832] Sub SetStyle(prop As String, val As String) As VueHTML 
_B.setstyle=function(_prop,_val) {
// [833]  AddStyleAttribute(prop,val) 
_B.addstyleattribute(_prop,_val,_B);
// [834]  Return Me 
return _B;
// End Sub
};

// [838] Sub SetAttrWidth(w As Object) As VueHTML 
_B.setattrwidth=function(_w) {
// [839]  AddAttribute( {177} , w) 
_B.addattribute("width",_w,_B);
// [840]  Return Me 
return _B;
// End Sub
};

// [844] Sub SetAttrCSS(w As Object) As VueHTML 
_B.setattrcss=function(_w) {
// [845]  AddAttribute( {178} , w) 
_B.addattribute("css",_w,_B);
// [846]  Return Me 
return _B;
// End Sub
};

// [850] Sub SetAttrHeight(h As String) As VueHTML 
_B.setattrheight=function(_h) {
// [851]  AddAttribute( {179} , h) 
_B.addattribute("height",_h,_B);
// [852]  Return Me 
return _B;
// End Sub
};

// [856] Sub SetStylePadding(PaddingBottom As String) As VueHTML 
_B.setstylepadding=function(_paddingbottom) {
// [857]  SetStyle( {180} , MakePx(PaddingBottom)) 
_B.setstyle("padding",_B.makepx(_paddingbottom,_B),_B);
// [858]  Return Me 
return _B;
// End Sub
};

// [862] Sub SetStylePaddingBottom(PaddingBottom As String) As VueHTML 
_B.setstylepaddingbottom=function(_paddingbottom) {
// [863]  SetStyle( {181} , MakePx(PaddingBottom)) 
_B.setstyle("padding-bottom",_B.makepx(_paddingbottom,_B),_B);
// [864]  Return Me 
return _B;
// End Sub
};

// [868] Sub SetStylePaddingRight(PaddingRight As String) As VueHTML 
_B.setstylepaddingright=function(_paddingright) {
// [869]  SetStyle( {182} , MakePx(PaddingRight)) 
_B.setstyle("padding-right",_B.makepx(_paddingright,_B),_B);
// [870]  Return Me 
return _B;
// End Sub
};

// [874] Sub SetStylePaddingLeft(PaddingLeft As String) As VueHTML 
_B.setstylepaddingleft=function(_paddingleft) {
// [875]  SetStyle( {183} , MakePx(PaddingLeft)) 
_B.setstyle("padding-left",_B.makepx(_paddingleft,_B),_B);
// [876]  Return Me 
return _B;
// End Sub
};

// [880] Sub SetStylePaddingTop(PaddingTop As String) As VueHTML 
_B.setstylepaddingtop=function(_paddingtop) {
// [881]  SetStyle( {184} , MakePx(PaddingTop)) 
_B.setstyle("padding-top",_B.makepx(_paddingtop,_B),_B);
// [882]  Return Me 
return _B;
// End Sub
};

// [886] Sub SetStyleBackgroundImage(imgURL As String) As VueHTML 
_B.setstylebackgroundimage=function(_imgurl) {
// [887]  SetStyle( {185} , {5} ) 
_B.setstyle("background-image","url('" + _imgurl + "')",_B);
// [888]  Return Me 
return _B;
// End Sub
};

// [892] Sub SetStyleBackgroundRepeat(r As String) As VueHTML 
_B.setstylebackgroundrepeat=function(_r) {
// [893]  SetStyle( {186} , r) 
_B.setstyle("background-repeat",_r,_B);
// [894]  Return Me 
return _B;
// End Sub
};

// [898] Sub SetStyleBackgroundSize(r As String) As VueHTML 
_B.setstylebackgroundsize=function(_r) {
// [899]  SetStyle( {187} , r) 
_B.setstyle("background-size",_r,_B);
// [900]  Return Me 
return _B;
// End Sub
};

// [905] Sub SetStyleBackgroundAttachment(r As String) As VueHTML 
_B.setstylebackgroundattachment=function(_r) {
// [906]  SetStyle( {188} , r) 
_B.setstyle("background-attachment",_r,_B);
// [907]  Return Me 
return _B;
// End Sub
};

// [912] Sub SetStyleBackgroundPosition(r As String) As VueHTML 
_B.setstylebackgroundposition=function(_r) {
// [913]  SetStyle( {189} , r) 
_B.setstyle("background-position",_r,_B);
// [914]  Return Me 
return _B;
// End Sub
};

// [919] Sub SetStyleMargin(MarginBottom As String) As VueHTML 
_B.setstylemargin=function(_marginbottom) {
// [920]  SetStyle( {190} , MakePx(MarginBottom)) 
_B.setstyle("margin",_B.makepx(_marginbottom,_B),_B);
// [921]  Return Me 
return _B;
// End Sub
};

// [925] Sub SetStyleMarginBottom(MarginBottom As String) As VueHTML 
_B.setstylemarginbottom=function(_marginbottom) {
// [926]  SetStyle( {191} , MakePx(MarginBottom)) 
_B.setstyle("margin-bottom",_B.makepx(_marginbottom,_B),_B);
// [927]  Return Me 
return _B;
// End Sub
};

// [931] Sub SetStyleMarginRight(MarginRight As String) As VueHTML 
_B.setstylemarginright=function(_marginright) {
// [932]  SetStyle( {192} , MakePx(MarginRight)) 
_B.setstyle("margin-right",_B.makepx(_marginright,_B),_B);
// [933]  Return Me 
return _B;
// End Sub
};

// [937] Sub SetStyleMarginLeft(MarginLeft As String) As VueHTML 
_B.setstylemarginleft=function(_marginleft) {
// [938]  SetStyle( {193} , MakePx(MarginLeft)) 
_B.setstyle("margin-left",_B.makepx(_marginleft,_B),_B);
// [939]  Return Me 
return _B;
// End Sub
};

// [943] Sub SetStyleMarginTop(MarginTop As String) As VueHTML 
_B.setstylemargintop=function(_margintop) {
// [944]  SetStyle( {194} , MakePx(MarginTop)) 
_B.setstyle("margin-top",_B.makepx(_margintop,_B),_B);
// [945]  Return Me 
return _B;
// End Sub
};

// [948] Sub UseTheme(sPrefix As String, themeName As String) As VueHTML 
_B.usetheme=function(_sprefix,_themename) {
// [949]  If themeName = {195} Then Return Me 
if (_themename=="") { return _B;}
// [950]  themeName = themeName.tolowercase 
_themename=_themename.toLowerCase();
// [951]  If sPrefix <> {196} And themeName <> {197} Then 
if (_sprefix!="" && _themename!="") {
// [952]  AddClass( {6} ) 
_B.addclass("" + _sprefix + "-" + _themename + "",_B);
// [953]  End If 
}
// [954]  Return Me 
return _B;
// End Sub
};

// [958] Sub AddAttributeIfSet(prop As String, value As String) As VueHTML 
_B.addattributeifset=function(_prop,_value) {
// [959]  If value <> {198} Then 
if (_value!="") {
// [960]  AddAttribute(prop,value) 
_B.addattribute(_prop,_value,_B);
// [961]  End If 
}
// [962]  Return Me 
return _B;
// End Sub
};

// [966] Sub SetAttrPlaceHolder(sPlaceholder As String) As VueHTML 
_B.setattrplaceholder=function(_splaceholder) {
// [967]  AddAttribute( {199} ,sPlaceholder) 
_B.addattribute("placeholder",_splaceholder,_B);
// [968]  Return Me 
return _B;
// End Sub
};

// [972] Sub SetAttrTITLE(stitle As String) As VueHTML 
_B.setattrtitle=function(_stitle) {
// [973]  AddAttribute( {200} , stitle) 
_B.addattribute("title",_stitle,_B);
// [974]  Return Me 
return _B;
// End Sub
};

// [978] Sub SetAttrACTION(stitle As String) As VueHTML 
_B.setattraction=function(_stitle) {
// [979]  AddAttribute( {201} , stitle) 
_B.addattribute("action",_stitle,_B);
// [980]  Return Me 
return _B;
// End Sub
};

// [984] Sub SetAttrAUTOCOMPLETE(b As Boolean) As VueHTML 
_B.setattrautocomplete=function(_b) {
// [985]  If b Then 
if (_b) {
// [986]  AddAttribute( {202} , {203} ) 
_B.addattribute("autocomplete","on",_B);
// [987]  End If 
}
// [988]  Return Me 
return _B;
// End Sub
};

// [992] Sub SetAttrAUTOFOCUS(b As Boolean) As VueHTML 
_B.setattrautofocus=function(_b) {
// [993]  If b Then AddLooseAttribute( {204} ) 
if (_b) {_B.addlooseattribute("autofocus",_B);}
// [994]  Return Me 
return _B;
// End Sub
};

// [999] Sub SetAttrREL(rel As String) As VueHTML 
_B.setattrrel=function(_rel) {
// [1000]  AddAttribute( {205} , rel) 
_B.addattribute("rel",_rel,_B);
// [1001]  Return Me 
return _B;
// End Sub
};

// [1005] Sub Clear As VueHTML 
_B.clear=function() {
// [1006]  Contents.clear 
_B._contents.length=0;
// [1007]  Return Me 
return _B;
// End Sub
};

// [1011] Sub AddPropertyOnCondition(bCondition As Boolean, attr As String, value As String) As VueHTML 
_B.addpropertyoncondition=function(_bcondition,_attr,_value) {
// [1012]  If bCondition Then 
if (_bcondition) {
// [1013]  AddAttribute(attr,value) 
_B.addattribute(_attr,_value,_B);
// [1014]  End If 
}
// [1015]  Return Me 
return _B;
// End Sub
};

// [1019] Public Sub AddProperty(sKey As String, sValue As String) As VueHTML 
_B.addproperty=function(_skey,_svalue) {
// [1020]  AddAttribute(sKey, sValue) 
_B.addattribute(_skey,_svalue,_B);
// [1021]  Return Me 
return _B;
// End Sub
};

// [1025] Sub SetAttrTARGET(sValue As String) As VueHTML 
_B.setattrtarget=function(_svalue) {
// [1026]  If sValue.Trim = {206} Then Return Me 
if (_svalue.trim()=="") { return _B;}
// [1027]  AddAttribute( {207} ,sValue) 
_B.addattribute("target",_svalue,_B);
// [1028]  Return Me 
return _B;
// End Sub
};

// [1031] Sub SetAttrTargetBlank(b As Boolean) As VueHTML 'ignore 
_B.setattrtargetblank=function(_b) {
// [1032]  SetAttrTARGET( {208} ) 
_B.setattrtarget("_blank",_B);
// [1033]  Return Me 
return _B;
// End Sub
};

// [1036] Sub SetAttrTargetSelf(b As Boolean) As VueHTML 'ignore 
_B.setattrtargetself=function(_b) {
// [1037]  SetAttrTARGET( {209} ) 
_B.setattrtarget("_self",_B);
// [1038]  Return Me 
return _B;
// End Sub
};

// [1041] Sub SetAttrTargetParent(b As Boolean) As VueHTML 'ignore 
_B.setattrtargetparent=function(_b) {
// [1042]  SetAttrTARGET( {210} ) 
_B.setattrtarget("_parent",_B);
// [1043]  Return Me 
return _B;
// End Sub
};

// [1046] Sub SetAttrTargetTop(b As Boolean) As VueHTML 'ignore 
_B.setattrtargettop=function(_b) {
// [1047]  SetAttrTARGET( {211} ) 
_B.setattrtarget("_top",_B);
// [1048]  Return Me 
return _B;
// End Sub
};

// [1051] Sub ApplyStyle(sStyle As String) As VueHTML 
_B.applystyle=function(_sstyle) {
var _pieces,_strpiece,_attr,_val;
// [1053]  sStyle = sStyle.trim 
_sstyle=_sstyle.trim();
// [1054]  sStyle = RemDelim(sStyle, {212} ) 
_sstyle=_B.remdelim(_sstyle,";",_B);
// [1055]  Dim pieces As List = StrParse( {213} ,sStyle) 
_pieces=_B.strparse(";",_sstyle,_B);
// [1056]  For Each strPiece As String In pieces 
for (var _strpieceindex=0;_strpieceindex<_pieces.length;_strpieceindex++) {
_strpiece=_pieces[_strpieceindex];
// [1057]  Dim attr As String = MvField(strPiece,1, {214} ) 
_attr=_B.mvfield(_strpiece,1,":",_B);
// [1058]  Dim val As String = MvField(strPiece,2, {215} ) 
_val=_B.mvfield(_strpiece,2,":",_B);
// [1059]  attr = attr.trim 
_attr=_attr.trim();
// [1060]  val = val.trim 
_val=_val.trim();
// [1061]  If attr <> {216} Then 
if (_attr!="") {
// [1062]  SetStyle(attr,val) 
_B.setstyle(_attr,_val,_B);
// [1063]  End If 
}
// [1064]  Next 
}
// [1065]  Return Me 
return _B;
// End Sub
};

// [1068] Sub SetClassCenter As VueHTML 
_B.setclasscenter=function() {
// [1069]  AddClass( {217} ) 
_B.addclass("center",_B);
// [1070]  Return Me 
return _B;
// End Sub
};

// [1073] Sub GetStyleAttr(attr As String) As String 
_B.getstyleattr=function(_attr) {
var _hasitem;
// [1074]  attr = attr.ToLowerCase 
_attr=_attr.toLowerCase();
// [1075]  attr = RemDelim(attr, {218} ) 
_attr=_B.remdelim(_attr,":",_B);
// [1076]  attr = attr.trim 
_attr=_attr.trim();
// [1077]  Dim hasItem As Boolean = Styles.ContainsKey(attr) 
_hasitem=(_attr in _B._styles);
// [1078]  If hasItem Then 
if (_hasitem) {
// [1079]  Return Styles.Get(attr) 
return _B._styles[_attr];
// [1080]  Else 
} else {
// [1081]  Return {219} 
return "";
// [1082]  End If 
}
// End Sub
};

// [1086] public Sub SetContents(value As String) As VueHTML 
_B.setcontents=function(_value) {
// [1087]  Contents.Initialize 
_B._contents.length=0;
// [1088]  Contents.clear 
_B._contents.length=0;
// [1089]  If value.Length > 0 Then 
if (_value.length>0) {
// [1090]  AddContent(value) 
_B.addcontent(_value,_B);
// [1091]  End If 
}
// [1092]  Return Me 
return _B;
// End Sub
};

// [1095] public Sub AddElementLine(el As VueHTML) As VueHTML 
_B.addelementline=function(_el) {
var _scode;
// [1096]  If el <> Null Then 
if (_el!=null) {
// [1097]  Dim scode As String = el.html 
_scode=_el.html();
// [1098]  AddContent(scode) 
_B.addcontent(_scode,_B);
// [1099]  End If 
}
// [1100]  Return Me 
return _B;
// End Sub
};

// [1104] Sub SetAttrROLE(sValue As String) As VueHTML 
_B.setattrrole=function(_svalue) {
// [1105]  AddAttribute( {220} ,sValue) 
_B.addattribute("role",_svalue,_B);
// [1106]  Return Me 
return _B;
// End Sub
};

// [1109] Sub SetAttrMETHOD(sValue As String) As VueHTML 
_B.setattrmethod=function(_svalue) {
// [1110]  AddAttribute( {221} ,sValue) 
_B.addattribute("method",_svalue,_B);
// [1111]  Return Me 
return _B;
// End Sub
};

// [1115] public Sub AddContentLine(value As String) As VueHTML 
_B.addcontentline=function(_value) {
// [1116]  If value <> {222} Then 
if (_value!="") {
// [1117]  value = value.Replace(CRLF, {223} ) 
_value=_value.split("\n").join("");
// [1118]  AddContent(value) 
_B.addcontent(_value,_B);
// [1119]  End If 
}
// [1120]  Return Me 
return _B;
// End Sub
};

// [1123] Sub SetAttrTypeNumbers() As VueHTML 
_B.setattrtypenumbers=function() {
// [1124]  AddAttribute( {224} , {225} ) 
_B.addattribute("type","1",_B);
// [1125]  Return Me 
return _B;
// End Sub
};

// [1128] Sub SetAttrTypeUpperCase() As VueHTML 
_B.setattrtypeuppercase=function() {
// [1129]  AddAttribute( {226} , {227} ) 
_B.addattribute("type","A",_B);
// [1130]  Return Me 
return _B;
// End Sub
};

// [1133] Sub SetAttrTypeLowerCase() As VueHTML 
_B.setattrtypelowercase=function() {
// [1134]  AddAttribute( {228} , {229} ) 
_B.addattribute("type","a",_B);
// [1135]  Return Me 
return _B;
// End Sub
};

// [1138] Sub SetAttrTypeUpperCaseRoman() As VueHTML 
_B.setattrtypeuppercaseroman=function() {
// [1139]  AddAttribute( {230} , {231} ) 
_B.addattribute("type","I",_B);
// [1140]  Return Me 
return _B;
// End Sub
};

// [1143] Sub SetAttrTypeLowerCaseRoman() As VueHTML 
_B.setattrtypelowercaseroman=function() {
// [1144]  AddAttribute( {232} , {233} ) 
_B.addattribute("type","i",_B);
// [1145]  Return Me 
return _B;
// End Sub
};

// [1149] Sub SetStyleListStyleCircle() As VueHTML 
_B.setstyleliststylecircle=function() {
// [1150]  SetStyle( {234} , {235} ) 
_B.setstyle("list-style-type","circle",_B);
// [1151]  Return Me 
return _B;
// End Sub
};

// [1154] Sub SetStyleListStyleDisk() As VueHTML 
_B.setstyleliststyledisk=function() {
// [1155]  SetStyle( {236} , {237} ) 
_B.setstyle("list-style-type","disk",_B);
// [1156]  Return Me 
return _B;
// End Sub
};

// [1159] Sub SetStyleListStyleNone() As VueHTML 
_B.setstyleliststylenone=function() {
// [1160]  SetStyle( {238} , {239} ) 
_B.setstyle("list-style-type","none",_B);
// [1161]  Return Me 
return _B;
// End Sub
};

// [1164] Sub SetStyleListStyleSquare() As VueHTML 
_B.setstyleliststylesquare=function() {
// [1165]  SetStyle( {240} , {241} ) 
_B.setstyle("list-style-type","square",_B);
// [1166]  Return Me 
return _B;
// End Sub
};

// [1169] Sub AddHeading(sSize As Int, sContent As String) As VueHTML 
_B.addheading=function(_ssize,_scontent) {
var _hdr,_hkey;
// [1170]  Dim hdr As VueHTML 
_hdr= new banano_bananovuematerial_vuehtml();
// [1171]  Dim hKey As String = {242} & sSize 
_hkey="h"+_ssize;
// [1172]  hdr.Initialize( {243} ,hKey) 
_hdr.initialize("",_hkey);
// [1173]  hdr.AddContent(sContent) 
_hdr.addcontent(_scontent);
// [1174]  AddContent(hdr.HTML) 
_B.addcontent(_hdr.html(),_B);
// [1175]  Return Me 
return _B;
// End Sub
};

// [1178] Sub AppendParagraph(sContent As String) As VueHTML 
_B.appendparagraph=function(_scontent) {
var _p;
// [1179]  Dim p As VueHTML 
_p= new banano_bananovuematerial_vuehtml();
// [1180]  p.Initialize( {244} , {245} ) 
_p.initialize("","p");
// [1181]  p.AddContent(sContent) 
_p.addcontent(_scontent);
// [1182]  AddContent(p.HTML) 
_B.addcontent(_p.html(),_B);
// [1183]  Return Me 
return _B;
// End Sub
};

// [1186] Sub AddMark(sContent As String, sclass As String) As VueHTML 
_B.addmark=function(_scontent,_sclass) {
var _p;
// [1187]  Dim p As VueHTML 
_p= new banano_bananovuematerial_vuehtml();
// [1188]  p.Initialize( {246} , {247} ).AddClass(sclass) 
_p.initialize("","mark").addclass(_sclass);
// [1189]  p.AddContent(sContent) 
_p.addcontent(_scontent);
// [1190]  AddContent(p.HTML) 
_B.addcontent(_p.html(),_B);
// [1191]  Return Me 
return _B;
// End Sub
};

// [1195] Sub AddLooseAttributeOnFalseCondition(bStatus As Boolean, value As String) As VueHTML 
_B.addlooseattributeonfalsecondition=function(_bstatus,_value) {
// [1196]  If bStatus = False Then 
if (_bstatus==false) {
// [1197]  AddLooseAttribute(value) 
_B.addlooseattribute(_value,_B);
// [1198]  End If 
}
// [1199]  Return Me 
return _B;
// End Sub
};

// [1203] Sub SetElementTypeOnCondition(bStatus As Boolean,sElementType As String) As VueHTML 
_B.setelementtypeoncondition=function(_bstatus,_selementtype) {
// [1204]  If bStatus Then 
if (_bstatus) {
// [1205]  Tag = sElementType 
_B._tag=_selementtype;
// [1206]  End If 
}
// [1207]  Return Me 
return _B;
// End Sub
};

// [1211] Sub SetStyleZIndex(zindex As String) As VueHTML 
_B.setstylezindex=function(_zindex) {
// [1212]  SetStyle( {248} ,zindex) 
_B.setstyle("z-index",_zindex,_B);
// [1213]  Return Me 
return _B;
// End Sub
};

// [1216] Sub AddContentListReverse(lst As List) As VueHTML 
_B.addcontentlistreverse=function(_lst) {
var _ltot,_lcnt,_strcontent;
// [1217]  Dim lTot As Int = lst.Size - 1 
_ltot=_lst.length-1;
// [1218]  Dim lCnt As Int 
_lcnt=0;
// [1219]  For lCnt = lTot To 0 Step -1 
for (_lcnt=_ltot;_lcnt>=0;_lcnt-=1) {
// [1220]  Dim strContent As String = lst.Get(lCnt) 
_strcontent=_lst[_lcnt];
// [1221]  AddContent(strContent) 
_B.addcontent(_strcontent,_B);
// [1222]  Next 
}
// [1223]  Return Me 
return _B;
// End Sub
};

// [1227] Sub SetMethodPost As VueHTML 
_B.setmethodpost=function() {
// [1228]  AddAttribute( {249} , {250} ) 
_B.addattribute("method","POST",_B);
// [1229]  Return Me 
return _B;
// End Sub
};

// [1232] Sub SetAttrFOR(sFor As String) As VueHTML 
_B.setattrfor=function(_sfor) {
// [1233]  AddAttribute( {251} ,sFor) 
_B.addattribute("for",_sfor,_B);
// [1234]  Return Me 
return _B;
// End Sub
};

// [1238] Sub SetAttrVALUE(sValue As String) As VueHTML 
_B.setattrvalue=function(_svalue) {
// [1239]  AddAttribute( {252} ,sValue) 
_B.addattribute("value",_svalue,_B);
// [1240]  Return Me 
return _B;
// End Sub
};

// [1244] Sub SetAttrNAME(sName As String) As VueHTML 
_B.setattrname=function(_sname) {
// [1245]  AddAttribute( {253} ,sName) 
_B.addattribute("name",_sname,_B);
// [1246]  Return Me 
return _B;
// End Sub
};

// [1249] Sub SetAttrSUMMARY(sName As String) As VueHTML 
_B.setattrsummary=function(_sname) {
// [1250]  AddAttribute( {254} ,sName) 
_B.addattribute("summary",_sname,_B);
// [1251]  Return Me 
return _B;
// End Sub
};

// [1255] Sub SetCOLSPAN(sName As String) As VueHTML 
_B.setcolspan=function(_sname) {
// [1256]  AddAttribute( {255} ,sName) 
_B.addattribute("colspan",_sname,_B);
// [1257]  Return Me 
return _B;
// End Sub
};

// [1261] Sub SetAttrLabel(l As String) As VueHTML 
_B.setattrlabel=function(_l) {
// [1262]  AddAttribute( {256} ,l) 
_B.addattribute("label",_l,_B);
// [1263]  Return Me 
return _B;
// End Sub
};

// [1267] Sub SetAttrRows(l As String) As VueHTML 
_B.setattrrows=function(_l) {
// [1268]  AddAttribute( {257} ,l) 
_B.addattribute("rows",_l,_B);
// [1269]  Return Me 
return _B;
// End Sub
};

// [1273] Sub SetAttrCols(l As String) As VueHTML 
_B.setattrcols=function(_l) {
// [1274]  AddAttribute( {258} ,l) 
_B.addattribute("cols",_l,_B);
// [1275]  Return Me 
return _B;
// End Sub
};

// [1279] Sub SetAttrROWSPAN(sName As String) As VueHTML 
_B.setattrrowspan=function(_sname) {
// [1280]  AddAttribute( {259} ,sName) 
_B.addattribute("rowspan",_sname,_B);
// [1281]  Return Me 
return _B;
// End Sub
};

// [1284] Sub SetAttrTYPE(sValue As String) As VueHTML 
_B.setattrtype=function(_svalue) {
// [1285]  AddAttribute( {260} ,sValue) 
_B.addattribute("type",_svalue,_B);
// [1286]  Return Me 
return _B;
// End Sub
};

// [1290] Sub UpdateAttribute(name As String, propValue As Object) As VueHTML 
_B.updateattribute=function(_name,_propvalue) {
var _svalue;
// [1291]  If properties.ContainsKey(name) Then 
if ((_name in _B._properties)) {
// [1292]  Dim svalue As Object = properties.Get(name) 
_svalue=_B._properties[_name];
// [1293]  svalue = svalue & {261} & propValue 
_svalue=_svalue+";"+_propvalue;
// [1294]  properties.Put(name,svalue) 
_B._properties[_name]=_svalue;
// [1295]  Else 
} else {
// [1296]  properties.Put(name,propValue) 
_B._properties[_name]=_propvalue;
// [1297]  End If 
}
// [1298]  Return Me 
return _B;
// End Sub
};

// [1302] Sub AddLooseAttributeOnCondition(bStatus As Boolean, value As String) As VueHTML 
_B.addlooseattributeoncondition=function(_bstatus,_value) {
// [1303]  If bStatus = True Then 
if (_bstatus==true) {
// [1304]  AddLooseAttribute(value) 
_B.addlooseattribute(_value,_B);
// [1305]  End If 
}
// [1306]  Return Me 
return _B;
// End Sub
};

// [1310] Sub AddLooseAttribute(value As String) As VueHTML 
_B.addlooseattribute=function(_value) {
// [1311]  LooseAttributes.Put(value,value) 
_B._looseattributes[_value]=_value;
// [1312]  Return Me 
return _B;
// End Sub
};

// [1315] Sub MakePx(sValue As String) As String 
_B.makepx=function(_svalue) {
// [1316]  sValue = sValue.trim 
_svalue=_svalue.trim();
// [1317]  If sValue.EndsWith( {262} ) Then 
if (_svalue.endsWith("%")) {
// [1318]  Return sValue 
return _svalue;
// [1319]  else If sValue.EndsWith( {263} ) Then 
} else if (_svalue.endsWith("vm")) {
// [1320]  Return sValue 
return _svalue;
// [1321]  else If sValue.EndsWith( {264} ) Then 
} else if (_svalue.endsWith("px")) {
// [1322]  Return sValue 
return _svalue;
// [1323]  else If sValue.EndsWith( {265} ) Then 
} else if (_svalue.endsWith("cm")) {
// [1324]  Return sValue 
return _svalue;
// [1325]  else If sValue.EndsWith( {266} ) Then 
} else if (_svalue.endsWith("mm")) {
// [1326]  Return sValue 
return _svalue;
// [1327]  else If sValue.EndsWith( {267} ) Then 
} else if (_svalue.endsWith("in")) {
// [1328]  Return sValue 
return _svalue;
// [1329]  else If sValue.EndsWith( {268} ) Then 
} else if (_svalue.endsWith("pt")) {
// [1330]  Return sValue 
return _svalue;
// [1331]  else If sValue.EndsWith( {269} ) Then 
} else if (_svalue.endsWith("pc")) {
// [1332]  Return sValue 
return _svalue;
// [1333]  else If sValue.EndsWith( {270} ) Then 
} else if (_svalue.endsWith("em")) {
// [1334]  Return sValue 
return _svalue;
// [1335]  else If sValue.EndsWith( {271} ) Then 
} else if (_svalue.endsWith("ex")) {
// [1336]  Return sValue 
return _svalue;
// [1337]  else If sValue.EndsWith( {272} ) Then 
} else if (_svalue.endsWith("ch")) {
// [1338]  Return sValue 
return _svalue;
// [1339]  else If sValue.EndsWith( {273} ) Then 
} else if (_svalue.endsWith("rem")) {
// [1340]  Return sValue 
return _svalue;
// [1341]  else If sValue.EndsWith( {274} ) Then 
} else if (_svalue.endsWith("vw")) {
// [1342]  Return sValue 
return _svalue;
// [1343]  else If sValue.EndsWith( {275} ) Then 
} else if (_svalue.endsWith("vh")) {
// [1344]  Return sValue 
return _svalue;
// [1345]  else If sValue.EndsWith( {276} ) Then 
} else if (_svalue.endsWith("vmin")) {
// [1346]  Return sValue 
return _svalue;
// [1347]  else If sValue.EndsWith( {277} ) Then 
} else if (_svalue.endsWith("vmax")) {
// [1348]  Return sValue 
return _svalue;
// [1349]  else If sValue.EndsWith( {278} ) Then 
} else if (_svalue.endsWith(";")) {
// [1350]  Return sValue 
return _svalue;
// [1351]  Else 
} else {
// [1352]  sValue = sValue.Replace( {279} , {280} ) 
_svalue=_svalue.split("px").join("");
// [1353]  sValue = {7} 
_svalue="" + _svalue + "px";
// [1354]  If sValue = {281} Then sValue = {282} 
if (_svalue=="px") {_svalue="";}
// [1355]  Return sValue 
return _svalue;
// [1356]  End If 
}
// End Sub
};

// [1360] Sub AddDataAttribute(attribute As String, value As String) As VueHTML 
_B.adddataattribute=function(_attribute,_value) {
var _sw;
// [1361]  Dim sw As Boolean = attribute.StartsWith( {283} ) 
_sw=_attribute.startsWith("data-");
// [1362]  If sw Then 
if (_sw) {
// [1363]  AddAttribute(attribute,value) 
_B.addattribute(_attribute,_value,_B);
// [1364]  Else 
} else {
// [1365]  AddAttribute( {284} & attribute,value) 
_B.addattribute("data-"+_attribute,_value,_B);
// [1366]  End If 
}
// [1367]  Return Me 
return _B;
// End Sub
};

// [1370] Sub AddDataAttributeOnCondition(bCondition As Boolean,attribute As String, value As String) As VueHTML 
_B.adddataattributeoncondition=function(_bcondition,_attribute,_value) {
// [1371]  If bCondition = False Then 
if (_bcondition==false) {
// [1372]  Return Me 
return _B;
// [1373]  End If 
}
// [1374]  AddDataAttribute(attribute,value) 
_B.adddataattribute(_attribute,_value,_B);
// [1375]  Return Me 
return _B;
// End Sub
};

// [1378] Sub AddStyleOnCondition(bCondition As Boolean,attribute As String, value As String) As VueHTML 
_B.addstyleoncondition=function(_bcondition,_attribute,_value) {
// [1379]  If bCondition = False Then 
if (_bcondition==false) {
// [1380]  Return Me 
return _B;
// [1381]  End If 
}
// [1382]  AddStyle(attribute,value) 
_B.addstyle(_attribute,_value,_B);
// [1383]  Return Me 
return _B;
// End Sub
};

// [1387] Sub SetAttrSRC(sValue As String, Static As Boolean) As VueHTML 
_B.setattrsrc=function(_svalue,_static) {
var _tmpfile;
// [1388]  Dim tmpFile As String = MvField(sValue,1, {285} ) 
_tmpfile=_B.mvfield(_svalue,1,"?",_B);
// [1389]  If Static Then 
if (_static) {
// [1390]  sValue = tmpFile 
_svalue=_tmpfile;
// [1391]  Else 
} else {
// [1392]  sValue = tmpFile & {286} & DateTime.now 
_svalue=_tmpfile+"?"+DateTime.Now();
// [1393]  End If 
}
// [1394]  AddAttribute( {287} ,sValue) 
_B.addattribute("src",_svalue,_B);
// [1395]  Return Me 
return _B;
// End Sub
};

// [1399] Sub SetAttrALT(sValue As String) As VueHTML 
_B.setattralt=function(_svalue) {
// [1400]  AddAttribute( {288} ,sValue) 
_B.addattribute("alt",_svalue,_B);
// [1401]  Return Me 
return _B;
// End Sub
};

// [1404] Sub AddStyleAttributeOnCondition(bCondition As Boolean, attr As String, value As String) As VueHTML 
_B.addstyleattributeoncondition=function(_bcondition,_attr,_value) {
// [1405]  If bCondition = True Then 
if (_bcondition==true) {
// [1406]  SetStyle(attr,value) 
_B.setstyle(_attr,_value,_B);
// [1407]  End If 
}
// [1408]  Return Me 
return _B;
// End Sub
};

// [1411] Sub AddAttributeOnCondition(bCondition As Boolean, attr As String, value As String) As VueHTML 
_B.addattributeoncondition=function(_bcondition,_attr,_value) {
// [1412]  If bCondition = True Then 
if (_bcondition==true) {
// [1413]  AddAttribute(attr,value) 
_B.addattribute(_attr,_value,_B);
// [1414]  End If 
}
// [1415]  Return Me 
return _B;
// End Sub
};

// [1418] Sub GetAttr(attr As String) As Object 
_B.getattr=function(_attr) {
// [1419]  attr = attr.tolowercase 
_attr=_attr.toLowerCase();
// [1420]  If properties.ContainsKey(attr) Then 
if ((_attr in _B._properties)) {
// [1421]  Return properties.Get(attr) 
return _B._properties[_attr];
// [1422]  Else 
} else {
// [1423]  Return {289} 
return "";
// [1424]  End If 
}
// End Sub
};

// [1428] Sub ClassExists(value As String) As Boolean 
_B.classexists=function(_value) {
// [1429]  value = value.trim 
_value=_value.trim();
// [1430]  If value.Length > 0 Then 
if (_value.length>0) {
// [1431]  Return Classes.ContainsKey(value) 
return (_value in _B._classes);
// [1432]  End If 
}
// [1433]  Return False 
return false;
// End Sub
};

// [1438] public Sub HTML As String 
_B.html=function() {
var _sout;
// [1439]  Dim sOut As String = ToString 
_sout=_B.tostring(_B);
// [1440]  Return sOut 
return _sout;
// End Sub
};

// [1444] Sub Pointer As String 
_B.pointer=function() {
// [1445]  Return {290} 
return "cursor:pointer";
// End Sub
};

// [1448] Sub AddCursor As VueHTML 
_B.addcursor=function() {
// [1449]  SetStyle( {291} , {292} ) 
_B.setstyle("cursor","pointer",_B);
// [1450]  Return Me 
return _B;
// End Sub
};

// [1453] Sub SetAttrHREF(value As String) As VueHTML 
_B.setattrhref=function(_value) {
// [1454]  AddAttribute( {293} ,value) 
_B.addattribute("href",_value,_B);
// [1455]  Return Me 
return _B;
// End Sub
};

// [1458] Sub AddClassOnValue(iValue As Int, sClass As String) As VueHTML 
_B.addclassonvalue=function(_ivalue,_sclass) {
// [1459]  If iValue > 0 Then 
if (_ivalue>0) {
// [1460]  AddClass(sClass) 
_B.addclass(_sclass,_B);
// [1461]  End If 
}
// [1462]  Return Me 
return _B;
// End Sub
};

// [1465] Sub AddClassOnCondition(bCondition As Boolean, sClass As String) As VueHTML 
_B.addclassoncondition=function(_bcondition,_sclass) {
// [1466]  If bCondition Then 
if (_bcondition) {
// [1467]  AddClass(sClass) 
_B.addclass(_sclass,_B);
// [1468]  End If 
}
// [1469]  Return Me 
return _B;
// End Sub
};

// [1472] Sub AddClassOnFalseCondition(bCondition As Boolean, sClass As String) As VueHTML 
_B.addclassonfalsecondition=function(_bcondition,_sclass) {
// [1473]  If bCondition = False Then 
if (_bcondition==false) {
// [1474]  AddClass(sClass) 
_B.addclass(_sclass,_B);
// [1475]  End If 
}
// [1476]  Return Me 
return _B;
// End Sub
};

// [1479] Sub RemoveClassOnCondition(bCondition As Boolean, sClass As String) As VueHTML 
_B.removeclassoncondition=function(_bcondition,_sclass) {
// [1480]  If bCondition Then 
if (_bcondition) {
// [1481]  removeClass(sClass) 
_B.removeclass(_sclass,_B);
// [1482]  End If 
}
// [1483]  Return Me 
return _B;
// End Sub
};

// [1487] Sub RemoveClassOnFalseCondition(bCondition As Boolean, sClass As String) As VueHTML 
_B.removeclassonfalsecondition=function(_bcondition,_sclass) {
// [1488]  If bCondition = False Then 
if (_bcondition==false) {
// [1489]  removeClass(sClass) 
_B.removeclass(_sclass,_B);
// [1490]  End If 
}
// [1491]  Return Me 
return _B;
// End Sub
};

// [1496] Sub AddContentList(lst As List) As VueHTML 
_B.addcontentlist=function(_lst) {
var _strcontent;
// [1497]  For Each strContent As String In lst 
for (var _strcontentindex=0;_strcontentindex<_lst.length;_strcontentindex++) {
_strcontent=_lst[_strcontentindex];
// [1498]  AddContent(strContent) 
_B.addcontent(_strcontent,_B);
// [1499]  Next 
}
// [1500]  Return Me 
return _B;
// End Sub
};

// [1503] Sub SetType(t As String) As VueHTML 
_B.settype=function(_t) {
// [1504]  SetAttr( {294} , t) 
_B.setattr("type",_t,_B);
// [1505]  Return Me 
return _B;
// End Sub
};

// [1509] Sub SetText(sText As String) As VueHTML 
_B.settext=function(_stext) {
// [1510]  AddContent(sText) 
_B.addcontent(_stext,_B);
// [1511]  hasContent = True 
_B._hascontent=true;
// [1512]  Return Me 
return _B;
// End Sub
};

// [1515] Sub SetCode(sText As String) As VueHTML 
_B.setcode=function(_stext) {
var _s;
// [1516]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [1517]  s = CreateCode( {295} ).SetText(sText) 
_s=_B.createcode("",_B).settext(_stext);
// [1518]  AddElement(s) 
_B.addelement(_s,_B);
// [1519]  Return Me 
return _B;
// End Sub
};

// [1523] Sub AddText(txt As String) As VueHTML 
_B.addtext=function(_txt) {
// [1524]  AddContent(txt) 
_B.addcontent(_txt,_B);
// [1525]  Return Me 
return _B;
// End Sub
};

// [1529] Sub SetPrefix(sPrefix As String) As VueHTML 
_B.setprefix=function(_sprefix) {
// [1530]  Prefix = sPrefix 
_B._prefix=_sprefix;
// [1531]  Return Me 
return _B;
// End Sub
};

// [1535] Sub SetTag(sTag As String) As VueHTML 
_B.settag=function(_stag) {
// [1536]  Tag = sTag.tolowercase 
_B._tag=_stag.toLowerCase();
// [1537]  If Tag = {296} Then 
if (_B._tag=="pre") {
// [1538]  AddClass( {297} ) 
_B.addclass("code-line",_B);
// [1539]  End If 
}
// [1540]  Return Me 
return _B;
// End Sub
};

// [1544] Sub SetAttrMax(m As Object) As VueHTML 
_B.setattrmax=function(_m) {
// [1545]  SetAttr( {298} , m) 
_B.setattr("max",_m,_B);
// [1546]  Return Me 
return _B;
// End Sub
};

// [1551] Sub SetAttrMin(m As Object) As VueHTML 
_B.setattrmin=function(_m) {
// [1552]  SetAttr( {299} , MakePx(m)) 
_B.setattr("min",_B.makepx(_m,_B),_B);
// [1553]  Return Me 
return _B;
// End Sub
};

// [1558] Sub SetAttrMinWidth(m As Object) As VueHTML 
_B.setattrminwidth=function(_m) {
// [1559]  SetAttr( {300} , MakePx(m)) 
_B.setattr("min-width",_B.makepx(_m,_B),_B);
// [1560]  Return Me 
return _B;
// End Sub
};

// [1565] Sub SetAttrMinHeight(m As Object) As VueHTML 
_B.setattrminheight=function(_m) {
// [1566]  SetAttr( {301} , MakePx(m)) 
_B.setattr("min-height",_B.makepx(_m,_B),_B);
// [1567]  Return Me 
return _B;
// End Sub
};

// [1572] Sub SetAttrMaxWidth(m As Object) As VueHTML 
_B.setattrmaxwidth=function(_m) {
// [1573]  SetAttr( {302} , MakePx(m)) 
_B.setattr("max-width",_B.makepx(_m,_B),_B);
// [1574]  Return Me 
return _B;
// End Sub
};

// [1579] Sub SetAttrMaxHeight(m As Object) As VueHTML 
_B.setattrmaxheight=function(_m) {
// [1580]  SetAttr( {303} , MakePx(m)) 
_B.setattr("mnax-height",_B.makepx(_m,_B),_B);
// [1581]  Return Me 
return _B;
// End Sub
};

// [1585] Public Sub Initialize(elID As String, stag As String) As VueHTML 
_B.initialize=function(_elid,_stag) {
// [1586]  ds = {304} 
_B._ds="";
// [1587]  hasContent = False 
_B._hascontent=false;
// [1588]  ParentID = {305} 
_B._parentid="";
// [1589]  ID = elID.tolowercase 
_B._id=_elid.toLowerCase();
// [1590]  IsImportant = False 
_B._isimportant=false;
// [1591]  SBBefore.Initialize 
_B._sbbefore.init();
_B._sbbefore.isinitialized=true;
// [1592]  SBAfter.Initialize 
_B._sbafter.init();
_B._sbafter.isinitialized=true;
// [1593]  properties.Initialize 
_B._properties={};
// [1594]  properties.clear 
_B._properties={};
// [1595]  Contents.Initialize 
_B._contents.length=0;
// [1596]  Contents.clear 
_B._contents.length=0;
// [1597]  Styles.Initialize 
_B._styles={};
// [1598]  Styles.clear 
_B._styles={};
// [1599]  Classes.Initialize 
_B._classes={};
// [1600]  Classes.clear 
_B._classes={};
// [1601]  LooseAttributes.Initialize 
_B._looseattributes={};
// [1602]  LooseAttributes.clear 
_B._looseattributes={};
// [1603]  DontBreak.Initialize 
_B._dontbreak.length=0;
// [1604]  DontBreak.clear 
_B._dontbreak.length=0;
// [1605]  DontBreak.Add( {306} ) 
_B._dontbreak.push("li");
// [1606]  DontBreak.Add( {307} ) 
_B._dontbreak.push("a");
// [1607]  DontBreak.Add( {308} ) 
_B._dontbreak.push("i");
// [1608]  DontBreak.Add( {309} ) 
_B._dontbreak.push("span");
// [1609]  DontBreak.Add( {310} ) 
_B._dontbreak.push("img");
// [1610]  Tag = stag.tolowercase 
_B._tag=_stag.toLowerCase();
// [1611]  Prefix = {311} 
_B._prefix="";
// [1612]  DoAProperClose = True 
_B._doaproperclose=true;
// [1613]  CSSRule.Initialize 
_B._cssrule={};
// [1614]  CSSRule.clear 
_B._cssrule={};
// [1615]  SingleQuote.Initialize 
_B._singlequote.length=0;
// [1616]  SingleQuote.clear 
_B._singlequote.length=0;
// [1617]  Return Me 
return _B;
// End Sub
};

// [1621] Sub Pop(pElement As VueHTML) 
_B.pop=function(_pelement) {
// [1622]  pElement.AddElement(Me) 
_pelement.addelement(_B);
// End Sub
};

// [1626] public Sub RemoveAttrData(sData As String) As VueHTML 
_B.removeattrdata=function(_sdata) {
// [1627]  sData = {8} 
_sdata="data-" + _sdata + "";
// [1628]  RemoveAttr(sData) 
_B.removeattr(_sdata,_B);
// [1629]  Return Me 
return _B;
// End Sub
};

// [1632] Sub RemoveAttributeOnCondition(bCondition As Boolean, prop As String) As VueHTML 
_B.removeattributeoncondition=function(_bcondition,_prop) {
// [1633]  If bCondition Then 
if (_bcondition) {
// [1634]  RemoveAttr(prop) 
_B.removeattr(_prop,_B);
// [1635]  End If 
}
// [1636]  Return Me 
return _B;
// End Sub
};

// [1640] Sub RemoveAttribute(prop As String) As VueHTML 
_B.removeattribute=function(_prop) {
// [1641]  RemoveAttr(prop) 
_B.removeattr(_prop,_B);
// [1642]  Return Me 
return _B;
// End Sub
};

// [1646] public Sub RemoveAttr(sName As String) As VueHTML 
_B.removeattr=function(_sname) {
var _sitems,_strstyle;
// [1647]  sName = sName.ToLowerCase 
_sname=_sname.toLowerCase();
// [1648]  sName = sName.Replace( {312} , {313} ) 
_sname=_sname.split(" ").join(";");
// [1649]  Dim sItems As List = StrParse( {314} ,sName) 
_sitems=_B.strparse(";",_sname,_B);
// [1650]  For Each strStyle As String In sItems 
for (var _strstyleindex=0;_strstyleindex<_sitems.length;_strstyleindex++) {
_strstyle=_sitems[_strstyleindex];
// [1651]  strStyle = strStyle.trim 
_strstyle=_strstyle.trim();
// [1652]  If properties.ContainsKey(strStyle) Then 
if ((_strstyle in _B._properties)) {
// [1653]  properties.Remove(strStyle) 
delete _B._properties[_strstyle];
// [1654]  End If 
}
// [1655]  Next 
}
// [1656]  Return Me 
return _B;
// End Sub
};

// [1660] public Sub RemoveStyle(styleName As String) As VueHTML 
_B.removestyle=function(_stylename) {
var _sitems,_strstyle;
// [1661]  styleName = styleName.Trim 
_stylename=_stylename.trim();
// [1662]  styleName = styleName.tolowercase 
_stylename=_stylename.toLowerCase();
// [1663]  styleName = styleName.Replace( {315} , {316} ) 
_stylename=_stylename.split(" ").join(";");
// [1664]  Dim sItems As List = StrParse( {317} ,styleName) 
_sitems=_B.strparse(";",_stylename,_B);
// [1665]  For Each strStyle As String In sItems 
for (var _strstyleindex=0;_strstyleindex<_sitems.length;_strstyleindex++) {
_strstyle=_sitems[_strstyleindex];
// [1666]  strStyle = strStyle.trim 
_strstyle=_strstyle.trim();
// [1667]  If Styles.ContainsKey(strStyle) Then 
if ((_strstyle in _B._styles)) {
// [1668]  Styles.Remove(strStyle) 
delete _B._styles[_strstyle];
// [1669]  End If 
}
// [1670]  Next 
}
// [1671]  Return Me 
return _B;
// End Sub
};

// [1675] Sub SetAttrLoose(value As String) As VueHTML 
_B.setattrloose=function(_value) {
// [1676]  AddLooseAttribute(value) 
_B.addlooseattribute(_value,_B);
// [1677]  Return Me 
return _B;
// End Sub
};

// [1681] private Sub GetComponentBuilder() As String 
_B.getcomponentbuilder=function() {
var _sb,_sout;
// [1682]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [1683]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [1684]  If Prefix.Length > 0 Then 
if (_B._prefix.length>0) {
// [1685]  sb.Append(Prefix) 
_sb.append(_B._prefix);
// [1686]  End If 
}
// [1687]  sb.Append( {318} ) 
_sb.append("<");
// [1688]  sb.Append(Tag) 
_sb.append(_B._tag);
// [1689]  sb.Append( {319} ) 
_sb.append(" ");
// [1690]  If ID.Length > 0 Then 
if (_B._id.length>0) {
// [1691]  sb.Append(ToProperty( {320} ,ID)) 
_sb.append(_B.toproperty("id",_B._id,_B));
// [1692]  End If 
}
// [1693]  sb.Append( {321} ) 
_sb.append(">");
// [1694]  Select Case Tag.ToLowerCase 
switch ("" + _B._tag.toLowerCase()) {
// [1695]  Case {322} , {323} , {324} , {325} , {326} 
case "" + "img":
case "" + "link":
case "" + "meta":
case "" + "input":
case "" + "source":
// [1696]  DoAProperClose = False 
_B._doaproperclose=false;
// [1697]  End Select 
break;
}
// [1698]  If DoAProperClose = True Then 
if (_B._doaproperclose==true) {
// [1699]  sb.Append( {327} ) 
_sb.append("</");
// [1700]  sb.Append(Tag) 
_sb.append(_B._tag);
// [1701]  sb.Append( {328} ) 
_sb.append(">");
// [1702]  End If 
}
// [1703]  Dim sout As String = sb.tostring 
_sout=_sb.toString();
// [1704]  sout = sout.Trim 
_sout=_sout.trim();
// [1705]  Return sout 
return _sout;
// End Sub
};

// [1709] private Sub ToProperty(sName As String, svalue As Object) As String 
_B.toproperty=function(_sname,_svalue) {
var _script;
// [1710]  sName = CStr(sName) 
_sname=_B.cstr(_sname,_B);
// [1711]  sName = sName.Trim 
_sname=_sname.trim();
// [1712]  Dim script As String = {329} 
_script="";
// [1713]  If sName.Length > 0 Then 
if (_sname.length>0) {
// [1714]  script = {9} 
_script="" + _sname + "=\"" + _svalue + "\"";
// [1715]  script = script.trim 
_script=_script.trim();
// [1716]  Return script 
return _script;
// [1717]  Else 
} else {
// [1718]  Return {330} 
return "";
// [1719]  End If 
}
// End Sub
};

// [1723] Sub SetAttrData(prop As String, value As String) As VueHTML 
_B.setattrdata=function(_prop,_value) {
var _sw;
// [1724]  Dim sw As Boolean = prop.StartsWith( {331} ) 
_sw=_prop.startsWith("data-");
// [1725]  If sw Then 
if (_sw) {
// [1726]  AddAttribute(prop,value) 
_B.addattribute(_prop,_value,_B);
// [1727]  Else 
} else {
// [1728]  AddAttribute( {332} & prop,value) 
_B.addattribute("data-"+_prop,_value,_B);
// [1729]  End If 
}
// [1730]  Return Me 
return _B;
// End Sub
};

// [1733] private Sub CStr(o As Object) As String 
_B.cstr=function(_o) {
// [1734]  If o = BANano.UNDEFINED Then o = {333} 
if (_o=='undefined') {_o="";}
// [1735]  Return {334} & o 
return ""+_o;
// End Sub
};

// [1740] public Sub AddContent(value As String) As VueHTML 
_B.addcontent=function(_value) {
// [1741]  value = CStr(value) 
_value=_B.cstr(_value,_B);
// [1742]  If value.Length > 0 Then 
if (_value.length>0) {
// [1743]  value = FormatText(value) 
_value=_B.formattext(_value,_B);
// [1744]  Contents.Add(value) 
_B._contents.push(_value);
// [1745]  hasContent = True 
_B._hascontent=true;
// [1746]  End If 
}
// [1747]  Return Me 
return _B;
// End Sub
};

// [1751] public Sub AddContentAfter(value As String) As VueHTML 
_B.addcontentafter=function(_value) {
// [1752]  value = CStr(value) 
_value=_B.cstr(_value,_B);
// [1753]  If value.Length > 0 Then 
if (_value.length>0) {
// [1754]  value = FormatText(value) 
_value=_B.formattext(_value,_B);
// [1755]  SBAfter.Append(value) 
_B._sbafter.append(_value);
// [1756]  hasContent = True 
_B._hascontent=true;
// [1757]  End If 
}
// [1758]  Return Me 
return _B;
// End Sub
};

// [1762] public Sub AddContentBefore(value As String) As VueHTML 
_B.addcontentbefore=function(_value) {
// [1763]  value = CStr(value) 
_value=_B.cstr(_value,_B);
// [1764]  If value.Length > 0 Then 
if (_value.length>0) {
// [1765]  value = FormatText(value) 
_value=_B.formattext(_value,_B);
// [1766]  SBBefore.Append(value) 
_B._sbbefore.append(_value);
// [1767]  hasContent = True 
_B._hascontent=true;
// [1768]  End If 
}
// [1769]  Return Me 
return _B;
// End Sub
};

// [1774] public Sub removeClass(className As String) As VueHTML 
_B.removeclass=function(_classname) {
var _sitems,_strstyle;
// [1775]  className = className.Trim 
_classname=_classname.trim();
// [1776]  className = className.replace( {335} , {336} ) 
_classname=_classname.split(" ").join(";");
// [1777]  Dim sItems As List = StrParse( {337} ,className) 
_sitems=_B.strparse(";",_classname,_B);
// [1778]  For Each strStyle As String In sItems 
for (var _strstyleindex=0;_strstyleindex<_sitems.length;_strstyleindex++) {
_strstyle=_sitems[_strstyleindex];
// [1779]  strStyle = strStyle.Trim 
_strstyle=_strstyle.trim();
// [1780]  If Classes.ContainsKey(strStyle) Then 
if ((_strstyle in _B._classes)) {
// [1781]  Classes.Remove(strStyle) 
delete _B._classes[_strstyle];
// [1782]  End If 
}
// [1783]  Next 
}
// [1784]  Return Me 
return _B;
// End Sub
};

// [1788] public Sub AddElement(el As VueHTML) As VueHTML 
_B.addelement=function(_el) {
var _scode;
// [1789]  If el <> Null Then 
if (_el!=null) {
// [1790]  Dim scode As String = el.tostring 
_scode=_el.tostring();
// [1791]  AddContent(scode) 
_B.addcontent(_scode,_B);
// [1792]  hasContent = True 
_B._hascontent=true;
// [1793]  End If 
}
// [1794]  Return Me 
return _B;
// End Sub
};

// [1798] Sub AddElements(lst As List) As VueHTML 
_B.addelements=function(_lst) {
var _el;
// [1799]  For Each el As VueHTML In lst 
for (var _elindex=0;_elindex<_lst.length;_elindex++) {
_el=_lst[_elindex];
// [1800]  AddElement(el) 
_B.addelement(_el,_B);
// [1801]  Next 
}
// [1802]  Return Me 
return _B;
// End Sub
};

// [1806] Sub BuildClass() As String 
_B.buildclass=function() {
var _sb,_ktot,_kcnt,_strclass,_estyle;
// [1807]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [1808]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [1809]  Dim kTot As Int = Classes.Size - 1 
_ktot=Object.keys(_B._classes).length-1;
// [1810]  Dim kCnt As Int 
_kcnt=0;
// [1811]  Dim strClass As String = Classes.GetKeyAt(0) 
_strclass=banano_getB4JKeyAt(_B._classes,0);
// [1812]  sb.Append(strClass) 
_sb.append(_strclass);
// [1813]  For kCnt = 1 To kTot 
for (_kcnt=1;_kcnt<=_ktot;_kcnt++) {
// [1814]  Dim strClass As String = Classes.GetKeyAt(kCnt) 
_strclass=banano_getB4JKeyAt(_B._classes,_kcnt);
// [1816]  If CSSRule.ContainsKey(strClass.tolowercase) Then 
if ((_strclass.toLowerCase() in _B._cssrule)) {
// [1817]  Dim eStyle As String = CSSRule.Get(strClass) 
_estyle=_B._cssrule[_strclass];
// [1818]  ApplyStyle(eStyle) 
_B.applystyle(_estyle,_B);
// [1819]  Continue 
continue;
// [1820]  End If 
}
// [1822]  sb.Append( {338} ) 
_sb.append(" ");
// [1823]  sb.Append(strClass) 
_sb.append(_strclass);
// [1824]  Next 
}
// [1825]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [1831] Sub BuildStyle() As String 
_B.buildstyle=function() {
var _sb,_kcnt,_ktot,_strkey,_strvalue,_strline;
// [1832]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [1833]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [1834]  Dim kCnt As Int 
_kcnt=0;
// [1835]  Dim kTot As Int = Styles.Size - 1 
_ktot=Object.keys(_B._styles).length-1;
// [1837]  Dim strKey As String = Styles.GetKeyAt(0) 
_strkey=banano_getB4JKeyAt(_B._styles,0);
// [1838]  Dim strValue As String = Styles.Get(strKey) 
_strvalue=_B._styles[_strkey];
// [1839]  Dim strLine As String = ToStyle(strKey,strValue) 
_strline=_B.tostyle(_strkey,_strvalue,_B);
// [1840]  sb.Append(strLine) 
_sb.append(_strline);
// [1841]  For kCnt = 1 To kTot 
for (_kcnt=1;_kcnt<=_ktot;_kcnt++) {
// [1842]  Dim strKey As String = Styles.GetKeyAt(kCnt) 
_strkey=banano_getB4JKeyAt(_B._styles,_kcnt);
// [1843]  Dim strValue As String = Styles.Get(strKey) 
_strvalue=_B._styles[_strkey];
// [1844]  Dim strLine As String = ToStyle(strKey,strValue) 
_strline=_B.tostyle(_strkey,_strvalue,_B);
// [1845]  sb.Append( {339} ) 
_sb.append(" ");
// [1846]  sb.Append(strLine) 
_sb.append(_strline);
// [1847]  Next 
}
// [1848]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [1852] private Sub ToStyle(sName As String, value As String) As String 
_B.tostyle=function(_sname,_value) {
var _ew,_sout;
// [1853]  If sName.Length > 0 And value.Length > 0 Then 
if (_sname.length>0 && _value.length>0) {
// [1854]  Dim ew As Boolean = sName.EndsWith( {340} ) 
_ew=_sname.endsWith(":");
// [1855]  If ew Then 
if (_ew) {
// [1856]  sName = MvField(sName,1, {341} ) 
_sname=_B.mvfield(_sname,1,":",_B);
// [1857]  End If 
}
// [1858]  Dim sout As String = {10} 
_sout="" + _sname + ":" + _value + ";";
// [1859]  If sout = {342} Then sout = {343} 
if (_sout==":;") {_sout="";}
// [1860]  Return sout 
return _sout;
// [1861]  Else 
} else {
// [1862]  Return {344} 
return "";
// [1863]  End If 
}
// End Sub
};

// [1866] public Sub MvFieldFrom(sValue As String, iPosition As Int, Delimiter As String) As String 
_B.mvfieldfrom=function(_svalue,_iposition,_delimiter) {
var _mvalues,_tvalues,_ew,_sb,_startcnt;
// [1867]  If sValue.Length = 0 Then Return {345} 
if (_svalue.length==0) { return "";}
// [1868]  Dim mValues As List 
_mvalues=[];
// [1869]  Dim tValues As Int 
_tvalues=0;
// [1870]  Dim ew As Boolean = sValue.EndsWith(Delimiter) 
_ew=_svalue.endsWith(_delimiter);
// [1871]  If ew Then 
if (_ew) {
// [1872]  sValue = sValue & {346} 
_svalue=_svalue+" ";
// [1873]  End If 
}
// [1874]  mValues = StrParse(Delimiter, sValue) 
_mvalues=_B.strparse(_delimiter,_svalue,_B);
// [1875]  tValues = mValues.size -1 
_tvalues=_mvalues.length-1;
// [1876]  If tValues < iPosition Then 
if (_tvalues<_iposition) {
// [1877]  Return mValues.get(tValues) 
return _mvalues[_tvalues];
// [1878]  End If 
}
// [1879]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [1880]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [1881]  Dim startcnt As Int 
_startcnt=0;
// [1882]  sb.Append(mValues.get(iPosition)) 
_sb.append(_mvalues[_iposition]);
// [1883]  For startcnt = iPosition + 1 To tValues 
for (_startcnt=_iposition+1;_startcnt<=_tvalues;_startcnt++) {
// [1884]  sb.Append(Delimiter) 
_sb.append(_delimiter);
// [1885]  sb.Append(mValues.get(startcnt)) 
_sb.append(_mvalues[_startcnt]);
// [1886]  Next 
}
// [1887]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [1890] Sub SetVModel(varVModel As String) As VueHTML 
_B.setvmodel=function(_varvmodel) {
// [1891]  varVModel = varVModel.tolowercase 
_varvmodel=_varvmodel.toLowerCase();
// [1892]  SetAttr( {347} , varVModel) 
_B.setattr("v-model",_varvmodel,_B);
// [1893]  Return Me 
return _B;
// End Sub
};

// [1896] Sub SetOnDblClick(methodName As String) As VueHTML 
_B.setondblclick=function(_methodname) {
// [1897]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1898]  SetAttr( {348} , methodName) 
_B.setattr("v-on:dblclick",_methodname,_B);
// [1899]  Return Me 
return _B;
// End Sub
};

// [1902] Sub SetVOn(t As Object) As VueHTML 
_B.setvon=function(_t) {
// [1903]  SetAttr( {349} , t) 
_B.setattr("v-on",_t,_B);
// [1904]  Return Me 
return _B;
// End Sub
};

// [1907] Sub SetVBind(t As String) As VueHTML 
_B.setvbind=function(_t) {
// [1908]  t = t.tolowercase 
_t=_t.toLowerCase();
// [1909]  SetAttr( {350} , t) 
_B.setattr("v-bind",_t,_B);
// [1910]  Return Me 
return _B;
// End Sub
};

// [1913] Sub SetVBindIs(t As String) As VueHTML 
_B.setvbindis=function(_t) {
// [1914]  SetAttr( {351} , t) 
_B.setattr("v-bind:is",_t,_B);
// [1915]  Return Me 
return _B;
// End Sub
};

// [1918] Sub SetVOnce(t As Object) As VueHTML 
_B.setvonce=function(_t) {
// [1919]  SetAttr( {352} , t) 
_B.setattr("v-once",_t,_B);
// [1920]  Return Me 
return _B;
// End Sub
};

// [1924] Sub SetVText(t As Object) As VueHTML 
_B.setvtext=function(_t) {
// [1925]  SetAttr( {353} , t) 
_B.setattr("v-text",_t,_B);
// [1926]  Return Me 
return _B;
// End Sub
};

// [1929] Sub SetVElse(t As Object) As VueHTML 
_B.setvelse=function(_t) {
// [1930]  SetAttr( {354} , t) 
_B.setattr("v-else",_t,_B);
// [1931]  Return Me 
return _B;
// End Sub
};

// [1934] Sub SetVElseIf(t As Object) As VueHTML 
_B.setvelseif=function(_t) {
// [1935]  SetAttr( {355} , t) 
_B.setattr("v-else-if",_t,_B);
// [1936]  Return Me 
return _B;
// End Sub
};

// [1939] Sub SetOnSubmit(methodName As String) As VueHTML 
_B.setonsubmit=function(_methodname) {
// [1940]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1941]  SetAttr( {356} , methodName) 
_B.setattr("v-on:submit",_methodname,_B);
// [1942]  Return Me 
return _B;
// End Sub
};

// [1945] Sub SetOnKeyDown(methodName As String) As VueHTML 
_B.setonkeydown=function(_methodname) {
// [1946]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1947]  SetAttr( {357} , methodName) 
_B.setattr("v-on:keydown",_methodname,_B);
// [1948]  Return Me 
return _B;
// End Sub
};

// [1951] Sub SetOnKeyUp(methodName As String) As VueHTML 
_B.setonkeyup=function(_methodname) {
// [1952]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1953]  SetAttr( {358} , methodName) 
_B.setattr("v-on:keyup",_methodname,_B);
// [1954]  Return Me 
return _B;
// End Sub
};

// [1957] Sub SetOnInput(methodName As String) As VueHTML 
_B.setoninput=function(_methodname) {
// [1958]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1959]  SetAttr( {359} , methodName) 
_B.setattr("v-on:input",_methodname,_B);
// [1960]  Return Me 
return _B;
// End Sub
};

// [1963] Sub SetOnFocus(methodName As String) As VueHTML 
_B.setonfocus=function(_methodname) {
// [1964]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1965]  SetAttr( {360} , methodName) 
_B.setattr("v-on:focus",_methodname,_B);
// [1966]  Return Me 
return _B;
// End Sub
};

// [1969] Sub SetOnBlur(methodName As String) As VueHTML 
_B.setonblur=function(_methodname) {
// [1970]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1971]  SetAttr( {361} , methodName) 
_B.setattr("v-on:blur",_methodname,_B);
// [1972]  Return Me 
return _B;
// End Sub
};

// [1977] Sub SetOnClick(methodName As String) As VueHTML 
_B.setonclick=function(_methodname) {
// [1978]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1979]  SetAttr( {362} , methodName) 
_B.setattr("v-on:click",_methodname,_B);
// [1980]  Return Me 
return _B;
// End Sub
};

// [1983] Sub SetOnTouchStart(methodName As String) As VueHTML 
_B.setontouchstart=function(_methodname) {
// [1984]  methodName = methodName.tolowercase 
_methodname=_methodname.toLowerCase();
// [1985]  SetAttr( {363} , methodName) 
_B.setattr("v-on:touchstart",_methodname,_B);
// [1986]  Return Me 
return _B;
// End Sub
};

// [1990] Sub AddChild(child As VueHTML) As VueHTML 
_B.addchild=function(_child) {
var _childhtml;
// [1991]  Dim childHTML As String = child.ToString 
_childhtml=_child.tostring();
// [1992]  SetText(childHTML) 
_B.settext(_childhtml,_B);
// [1993]  Return Me 
return _B;
// End Sub
};

// [1997] Sub AddChildren(children As List) 
_B.addchildren=function(_children) {
var _childx;
// [1998]  For Each childx As VueHTML In children 
for (var _childxindex=0;_childxindex<_children.length;_childxindex++) {
_childx=_children[_childxindex];
// [1999]  AddChild(childx) 
_B.addchild(_childx,_B);
// [2000]  Next 
}
// End Sub
};

// [2006] private Sub Open() As String 
_B.open=function() {
var _thisclass,_thisstyle,_sb,_thisattr,_thoseloose;
// [2012]  Dim thisClass As String = BuildClass 
_thisclass=_B.buildclass(_B);
// [2013]  thisClass = thisClass.trim 
_thisclass=_thisclass.trim();
// [2014]  If thisClass.Length > 0 Then 
if (_thisclass.length>0) {
// [2015]  AddAttribute( {367} , thisClass) 
_B.addattribute("class",_thisclass,_B);
// [2016]  End If 
}
// [2018]  Dim thisStyle As String = BuildStyle 
_thisstyle=_B.buildstyle(_B);
// [2019]  thisStyle = thisStyle.trim 
_thisstyle=_thisstyle.trim();
// [2020]  If thisStyle.Length > 0 Then 
if (_thisstyle.length>0) {
// [2021]  AddAttribute( {368} , thisStyle) 
_B.addattribute("style",_thisstyle,_B);
// [2022]  End If 
}
// [2023]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2024]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2025]  If Prefix.Length > 0 Then 
if (_B._prefix.length>0) {
// [2026]  sb.Append(Prefix) 
_sb.append(_B._prefix);
// [2027]  End If 
}
// [2028]  sb.Append( {369} ) 
_sb.append("<");
// [2029]  sb.Append(Tag) 
_sb.append(_B._tag);
// [2030]  sb.Append( {370} ) 
_sb.append(" ");
// [2031]  If ID.Length > 0 Then 
if (_B._id.length>0) {
// [2032]  sb.Append(ToProperty( {371} ,ID)) 
_sb.append(_B.toproperty("id",_B._id,_B));
// [2033]  sb.Append( {372} ) 
_sb.append(" ");
// [2034]  End If 
}
// [2036]  Dim thisAttr As String = BuildAttributes 
_thisattr=_B.buildattributes(_B);
// [2037]  thisAttr = thisAttr.Trim 
_thisattr=_thisattr.trim();
// [2038]  If thisAttr.Length > 0 Then 
if (_thisattr.length>0) {
// [2039]  sb.Append(thisAttr) 
_sb.append(_thisattr);
// [2040]  End If 
}
// [2041]  Dim thoseLoose As String = GetKeys( {373} ,LooseAttributes) 
_thoseloose=_B.getkeys(" ",_B._looseattributes,_B);
// [2042]  sb.Append( {374} ).Append(thoseLoose) 
_sb.append(" ").append(_thoseloose);
// [2043]  sb.Append( {375} ) 
_sb.append(">");
// [2044]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [2048] Sub GetKeys(Delim As String, m As Map) As String 
_B.getkeys=function(_delim,_m) {
var _sb,_strkey,_sout;
// [2049]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2050]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2051]  For Each strKey As String In m.Keys 
var _strkeyKeys = Object.keys(_m);
for (var _strkeyindex=0;_strkeyindex<_strkeyKeys.length;_strkeyindex++) {
_strkey=_strkeyKeys[_strkeyindex];
// [2052]  sb.Append(strKey).Append(Delim) 
_sb.append(_strkey).append(_delim);
// [2053]  Next 
}
// [2054]  Dim sout As String = sb.ToString 
_sout=_sb.toString();
// [2055]  sout = RemDelim(sout,Delim) 
_sout=_B.remdelim(_sout,_delim,_B);
// [2056]  Return sout 
return _sout;
// End Sub
};

// [2060] Sub GetValues(Delim As String, m As Map) As String 
_B.getvalues=function(_delim,_m) {
var _sb,_strkey,_sout;
// [2061]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2062]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2063]  For Each strKey As String In m.values 
for (_strkeyKEY in _m) {
var _strkey=_m[_strkeyKEY];
// [2064]  sb.Append(strKey).Append(Delim) 
_sb.append(_strkey).append(_delim);
// [2065]  Next 
}
// [2066]  Dim sout As String = sb.ToString 
_sout=_sb.toString();
// [2067]  sout = RemDelim(sout,Delim) 
_sout=_B.remdelim(_sout,_delim,_B);
// [2068]  Return sout 
return _sout;
// End Sub
};

// [2072] Sub BuildAttributes As String 
_B.buildattributes=function() {
var _sb,_ktot,_kcnt,_strkey,_strvalue;
// [2073]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2074]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2075]  Dim kTot As Int = properties.Size - 1 
_ktot=Object.keys(_B._properties).length-1;
// [2076]  Dim kCnt As Int 
_kcnt=0;
// [2077]  Dim strKey As String = properties.GetKeyAt(0) 
_strkey=banano_getB4JKeyAt(_B._properties,0);
// [2078]  Dim strValue As Object = properties.Get(strKey) 
_strvalue=_B._properties[_strkey];
// [2079]  If SingleQuote.IndexOf(strKey) = -1 Then 
if (_B._singlequote.indexOf(_strkey)==-1) {
// [2080]  sb.Append(ToProperty(strKey,strValue)) 
_sb.append(_B.toproperty(_strkey,_strvalue,_B));
// [2081]  Else 
} else {
// [2082]  sb.Append(ToSingleQuoteProperty(strKey,strValue)) 
_sb.append(_B.tosinglequoteproperty(_strkey,_strvalue,_B));
// [2083]  End If 
}
// [2084]  For kCnt = 1 To kTot 
for (_kcnt=1;_kcnt<=_ktot;_kcnt++) {
// [2085]  strKey = properties.GetKeyAt(kCnt) 
_strkey=banano_getB4JKeyAt(_B._properties,_kcnt);
// [2086]  strValue = properties.Get(strKey) 
_strvalue=_B._properties[_strkey];
// [2087]  sb.Append( {376} ) 
_sb.append(" ");
// [2088]  If SingleQuote.IndexOf(strKey) = -1 Then 
if (_B._singlequote.indexOf(_strkey)==-1) {
// [2089]  sb.Append(ToProperty(strKey,strValue)) 
_sb.append(_B.toproperty(_strkey,_strvalue,_B));
// [2090]  Else 
} else {
// [2091]  sb.Append(ToSingleQuoteProperty(strKey,strValue)) 
_sb.append(_B.tosinglequoteproperty(_strkey,_strvalue,_B));
// [2092]  End If 
}
// [2093]  Next 
}
// [2094]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [2098] private Sub ToSingleQuoteProperty(sName As String, svalue As Object) As String 
_B.tosinglequoteproperty=function(_sname,_svalue) {
var _script;
// [2099]  sName = CStr(sName) 
_sname=_B.cstr(_sname,_B);
// [2100]  sName = sName.Trim 
_sname=_sname.trim();
// [2101]  If sName.Length > 0 Then 
if (_sname.length>0) {
// [2102]  Dim script As String = {11} 
_script="" + _sname + "='" + _svalue + "'";
// [2103]  script = script.trim 
_script=_script.trim();
// [2104]  Return script 
return _script;
// [2105]  Else 
} else {
// [2106]  Return {377} 
return "";
// [2107]  End If 
}
// End Sub
};

// [2113] private Sub FormatText(sText As String) As String 
_B.formattext=function(_stext) {
var _rm,_ktot,_kcnt,_strvalue,_strrep;
// [2114]  Dim RM As Map 
_rm={};
// [2115]  RM.Initialize 
_rm={};
// [2116]  RM.clear 
_rm={};
// [2117]  RM.Put( {378} , {379} ) 
_rm["{U}"]="<ins>";
// [2118]  RM.Put( {380} , {381} ) 
_rm["{/U}"]="</ins>";
// [2119]  RM.Put( {382} , {383} ) 
_rm["¢"]="&cent;";
// [2120]  RM.put( {384} , {385} ) 
_rm["£"]="&pound;";
// [2121]  RM.Put( {386} , {387} ) 
_rm["{SUP}"]="<sup>";
// [2122]  RM.Put( {388} , {389} ) 
_rm["{/SUP}"]="</sup>";
// [2123]  RM.Put( {390} , {391} ) 
_rm["¥"]="&yen;";
// [2124]  RM.Put( {392} , {393} ) 
_rm["€"]="&euro;";
// [2125]  RM.put( {394} , {395} ) 
_rm["©"]="&copy;";
// [2126]  RM.Put( {396} , {397} ) 
_rm["®"]="&reg;";
// [2127]  RM.Put( {398} , {399} ) 
_rm["{POUND}"]="&pound;";
// [2128]  RM.Put( {400} , {401} ) 
_rm["{/B}"]="</b>";
// [2129]  RM.Put( {402} , {403} ) 
_rm["{I}"]="<i>";
// [2130]  RM.Put( {404} , {405} ) 
_rm["{YEN}"]="&yen;";
// [2131]  RM.Put( {406} , {407} ) 
_rm["{EURO}"]="&euro;";
// [2132]  RM.Put( {408} , {409} ) 
_rm["{CODE}"]="<code>";
// [2133]  RM.Put( {410} , {411} ) 
_rm["{/CODE}"]="</code>";
// [2134]  RM.put( {412} , {413} ) 
_rm["{COPYRIGHT}"]="&copy;";
// [2135]  RM.Put( {414} , {415} ) 
_rm["{REGISTERED}"]="&reg;";
// [2136]  RM.Put( {416} , {417} ) 
_rm["®"]="&reg;";
// [2137]  RM.Put( {418} , {419} ) 
_rm["{B}"]="<b>";
// [2138]  RM.Put( {420} , {421} ) 
_rm["{SMALL}"]="<small>";
// [2139]  RM.Put( {422} , {423} ) 
_rm["{/SMALL}"]="</small>";
// [2140]  RM.Put( {424} , {425} ) 
_rm["{EM}"]="<em>";
// [2141]  RM.Put( {426} , {427} ) 
_rm["{/EM}"]="</em>";
// [2142]  RM.Put( {428} , {429} ) 
_rm["{MARK}"]="<mark>";
// [2143]  RM.Put( {430} , {431} ) 
_rm["{/MARK}"]="</mark>";
// [2144]  RM.Put( {432} , {433} ) 
_rm["{/I}"]="</i>";
// [2145]  RM.Put( {434} , {435} ) 
_rm["{SUB}"]="<sub>";
// [2146]  RM.Put( {436} , {437} ) 
_rm["{/SUB}"]="</sub>";
// [2147]  RM.Put( {438} , {439} ) 
_rm["{BR}"]="<br/>";
// [2148]  RM.Put( {440} , {441} ) 
_rm["{WBR}"]="<wbr>";
// [2149]  RM.Put( {442} , {443} ) 
_rm["{STRONG}"]="<strong>";
// [2150]  RM.Put( {444} , {445} ) 
_rm["{/STRONG}"]="</strong>";
// [2151]  RM.Put( {446} , {447} ) 
_rm["{NBSP}"]="&nbsp;";
// [2152]  RM.Put( {448} , {449} ) 
_rm["“"]="";
// [2153]  RM.Put( {450} , {451} ) 
_rm["”"]="";
// [2154]  RM.Put( {452} , {453} ) 
_rm["’"]="'";
// [2155]  Dim kTot As Int = RM.Size - 1 
_ktot=Object.keys(_rm).length-1;
// [2156]  Dim kCnt As Int 
_kcnt=0;
// [2157]  For kCnt = 0 To kTot 
for (_kcnt=0;_kcnt<=_ktot;_kcnt++) {
// [2158]  Dim strValue As String = RM.GetKeyAt(kCnt) 
_strvalue=banano_getB4JKeyAt(_rm,_kcnt);
// [2159]  Dim strRep As String = RM.Get(strValue) 
_strrep=_rm[_strvalue];
// [2160]  sText = sText.Replace(strValue, strRep) 
_stext=_stext.split(_strvalue).join(_strrep);
// [2161]  Next 
}
// [2162]  Return sText 
return _stext;
// End Sub
};

// [2166] private Sub RemDelim(sValue As String, Delim As String) As String 
_B.remdelim=function(_svalue,_delim) {
var _sw,_ldelim,_nvalue;
// [2167]  Dim sw As Boolean = sValue.EndsWith(Delim) 
_sw=_svalue.endsWith(_delim);
// [2168]  If sw Then 
if (_sw) {
// [2169]  Dim lDelim As Int = Delim.Length 
_ldelim=_delim.length;
// [2170]  Dim nValue As String = sValue 
_nvalue=_svalue;
// [2171]  sw = nValue.EndsWith(Delim) 
_sw=_nvalue.endsWith(_delim);
// [2172]  If sw Then 
if (_sw) {
// [2173]  nValue = nValue.SubString2(0, nValue.Length-lDelim) 
_nvalue=_nvalue.substring(0,_nvalue.length-_ldelim);
// [2174]  End If 
}
// [2175]  Return nValue 
return _nvalue;
// [2176]  Else 
} else {
// [2177]  Return sValue 
return _svalue;
// [2178]  End If 
}
// End Sub
};

// [2182] Sub AddStyle(prop As String, value As Object) As VueHTML 
_B.addstyle=function(_prop,_value) {
// [2183]  AddStyleAttribute(prop,value) 
_B.addstyleattribute(_prop,_value,_B);
// [2184]  Return Me 
return _B;
// End Sub
};

// [2188] Sub AddStyleAttribute(sprop As String, svalue As Object) As VueHTML 
_B.addstyleattribute=function(_sprop,_svalue) {
var _xvalue;
// [2189]  If svalue = Null Then Return Me 
if (_svalue==null) { return _B;}
// [2190]  sprop = sprop.ToLowerCase 
_sprop=_sprop.toLowerCase();
// [2191]  sprop = sprop.Trim 
_sprop=_sprop.trim();
// [2192]  Dim xvalue As String = CStr(svalue) 
_xvalue=_B.cstr(_svalue,_B);
// [2194]  sprop = RemDelim(sprop, {454} ) 
_sprop=_B.remdelim(_sprop,":",_B);
// [2196]  xvalue = RemDelim(xvalue, {455} ) 
_xvalue=_B.remdelim(_xvalue,";",_B);
// [2197]  sprop = sprop.Trim 
_sprop=_sprop.trim();
// [2198]  xvalue = xvalue.trim 
_xvalue=_xvalue.trim();
// [2199]  If xvalue.Length > 0 And sprop.length > 0 Then 
if (_xvalue.length>0 && _sprop.length>0) {
// [2201]  If xvalue.EndsWith( {456} ) = False Then 
if (_xvalue.endsWith("!important")==false) {
// [2202]  If IsImportant Then 
if (_B._isimportant) {
// [2203]  xvalue = xvalue & {457} 
_xvalue=_xvalue+" !important";
// [2204]  End If 
}
// [2205]  End If 
}
// [2207]  Styles.Put(sprop, xvalue) 
_B._styles[_sprop]=_xvalue;
// [2208]  End If 
}
// [2209]  hasContent = True 
_B._hascontent=true;
// [2210]  Return Me 
return _B;
// End Sub
};

// [2216] Sub AddClass(value As String) As VueHTML 
_B.addclass=function(_value) {
var _spclasses,_strclass;
// [2218]  value = value.Replace( {458} , {459} ) 
_value=_value.split(" ").join(";");
// [2219]  Dim spClasses As List = StrParse( {460} ,value) 
_spclasses=_B.strparse(";",_value,_B);
// [2220]  For Each strClass As String In spClasses 
for (var _strclassindex=0;_strclassindex<_spclasses.length;_strclassindex++) {
_strclass=_spclasses[_strclassindex];
// [2221]  strClass = strClass.Trim 
_strclass=_strclass.trim();
// [2222]  If strClass.Length > 0 Then 
if (_strclass.length>0) {
// [2223]  Classes.Put(strClass,strClass) 
_B._classes[_strclass]=_strclass;
// [2224]  End If 
}
// [2225]  Next 
}
// [2226]  hasContent = True 
_B._hascontent=true;
// [2227]  Return Me 
return _B;
// End Sub
};

// [2231] public Sub AddAttribute(skey As String, svalue As Object) As VueHTML 
_B.addattribute=function(_skey,_svalue) {
// [2232]  If svalue <> Null Then 
if (_svalue!=null) {
// [2233]  skey = CStr(skey) 
_skey=_B.cstr(_skey,_B);
// [2234]  skey = skey.trim 
_skey=_skey.trim();
// [2235]  properties.Put(skey,svalue) 
_B._properties[_skey]=_svalue;
// [2236]  hasContent = True 
_B._hascontent=true;
// [2237]  End If 
}
// [2238]  Return Me 
return _B;
// End Sub
};

// [2243] private Sub StrParse(Delim As String, InputString As String) As List 
_B.strparse=function(_delim,_inputstring) {
var _outlist,_commaloc,_leftside,_rightside;
// [2244]  Dim OutList As List 
_outlist=[];
// [2245]  Dim CommaLoc As Int 
_commaloc=0;
// [2246]  OutList.Initialize 
_outlist.length=0;
// [2247]  OutList.clear 
_outlist.length=0;
// [2248]  CommaLoc=InputString.IndexOf(Delim) 
_commaloc=_inputstring.indexOf(_delim);
// [2249]  Do While CommaLoc >-1 
while (_commaloc>-1) {
// [2250]  Dim LeftSide As String 
_leftside="";
// [2251]  LeftSide= InputString.SubString2(0,CommaLoc) 
_leftside=_inputstring.substring(0,_commaloc);
// [2252]  Dim RightSide As String 
_rightside="";
// [2253]  RightSide= InputString.SubString(CommaLoc+1) 
_rightside=_inputstring.substring(_commaloc+1);
// [2254]  OutList.Add(LeftSide) 
_outlist.push(_leftside);
// [2255]  InputString=RightSide 
_inputstring=_rightside;
// [2256]  CommaLoc=InputString.IndexOf(Delim) 
_commaloc=_inputstring.indexOf(_delim);
// [2257]  Loop 
}
// [2258]  OutList.Add(InputString) 
_outlist.push(_inputstring);
// [2259]  Return OutList 
return _outlist;
// End Sub
};

// [2263] public Sub Join(delimiter As String, lst As List) As String 
_B.join=function(_delimiter,_lst) {
var _i,_sb;
// [2264]  Dim i As Int 
_i=0;
// [2265]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2266]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2267]  sb.Append(lst.get(0)) 
_sb.append(_lst[0]);
// [2268]  For i = 1 To lst.size - 1 
for (_i=1;_i<=_lst.length-1;_i++) {
// [2269]  sb.Append(delimiter).Append(lst.get(i)) 
_sb.append(_delimiter).append(_lst[_i]);
// [2270]  Next 
}
// [2271]  Return sb.ToString 
return _sb.toString();
// End Sub
};

// [2275] private Sub Close() As String 
_B.close=function() {
var _sb;
// [2276]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2277]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2278]  Select Case Tag.ToLowerCase 
switch ("" + _B._tag.toLowerCase()) {
// [2279]  Case {461} , {462} , {463} , {464} , {465} , {466} , {467} 
case "" + "img":
case "" + "link":
case "" + "meta":
case "" + "input":
case "" + "source":
case "" + "hr":
case "" + "br":
// [2280]  DoAProperClose = False 
_B._doaproperclose=false;
// [2281]  End Select 
break;
}
// [2282]  If DoAProperClose = True Then 
if (_B._doaproperclose==true) {
// [2283]  sb.Append( {468} ) 
_sb.append("</");
// [2284]  sb.Append(Tag) 
_sb.append(_B._tag);
// [2285]  sb.Append( {469} ) 
_sb.append(">");
// [2286]  End If 
}
// [2287]  Return sb.tostring 
return _sb.toString();
// End Sub
};

// [2291] Sub SetParentID(sParentID As String) As VueHTML 
_B.setparentid=function(_sparentid) {
// [2292]  ParentID = sParentID 
_B._parentid=_sparentid;
// [2293]  Return Me 
return _B;
// End Sub
};

// [2297] public Sub ToString As String 
_B.tostring=function() {
var _imgurl,_lnk,_sb,_strcontent,_sout;
// [2298]  If ParentID <> {470} Then 
if (_B._parentid!="") {
// [2299]  ID = ParentID & ID 
_B._id=_B._parentid+_B._id;
// [2300]  End If 
}
// [2301]  Select Case Tag 
switch ("" + _B._tag) {
// [2302]  Case {471} , {472} 
case "" + "img":
case "" + "script":
// [2304]  Dim imgURL As String = GetAttr( {473} ) 
_imgurl=_B.getattr("src",_B);
// [2305]  If imgURL.Length > 0 Then 
if (_imgurl.length>0) {
// [2306]  imgURL = imgURL.tolowercase 
_imgurl=_imgurl.toLowerCase();
// [2307]  End If 
}
// [2308]  Case {474} 
break;
case "" + "link":
// [2309]  Dim lnk As String = GetAttr( {475} ) 
_lnk=_B.getattr("href",_B);
// [2310]  If lnk.Length > 0 Then 
if (_lnk.length>0) {
// [2311]  lnk = lnk.tolowercase 
_lnk=_lnk.toLowerCase();
// [2312]  End If 
}
// [2313]  End Select 
break;
}
// [2314]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2315]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2316]  sb.Append(SBBefore) 
_sb.append(_B._sbbefore);
// [2317]  sb.Append(Open) 
_sb.append(_B.open(_B));
// [2318]  For Each strContent As String In Contents 
for (var _strcontentindex=0;_strcontentindex<_B._contents.length;_strcontentindex++) {
_strcontent=_B._contents[_strcontentindex];
// [2319]  If strContent.Length > 0 Then 
if (_strcontent.length>0) {
// [2320]  strContent = strContent.trim 
_strcontent=_strcontent.trim();
// [2321]  sb.Append(strContent.trim) 
_sb.append(_strcontent.trim());
// [2322]  End If 
}
// [2323]  Next 
}
// [2324]  sb.Append(Close) 
_sb.append(_B.close(_B));
// [2325]  Dim sout As String = sb.ToString 
_sout=_sb.toString();
// [2326]  If DontBreak.IndexOf(Tag) <> -1 Then 
if (_B._dontbreak.indexOf(_B._tag)!=-1) {
// [2327]  sout = sout.Replace(CRLF, {476} ) 
_sout=_sout.split("\n").join("");
// [2328]  End If 
}
// [2330]  sout = sout & SBAfter.tostring 
_sout=_sout+_B._sbafter.toString();
// [2331]  sout = sout.Replace(CRLF, {477} ) 
_sout=_sout.split("\n").join("");
// [2332]  sout = sout.Replace( {478} , {479} ) 
_sout=_sout.split("  >").join(">");
// [2333]  sout = sout.Replace( {480} , {481} ) 
_sout=_sout.split(" >").join(">");
// [2334]  Return sout 
return _sout;
// End Sub
};

// [2338] Sub AddMailTo(emailaddress As String,subject As String,caption As String) As VueHTML 
_B.addmailto=function(_emailaddress,_subject,_caption) {
var _a;
// [2339]  subject = subject.Replace( {482} , {483} ) 
_subject=_subject.split(" ").join("%20");
// [2340]  Dim a As VueHTML 
_a= new banano_bananovuematerial_vuehtml();
// [2341]  a.Initialize( {484} , {485} ).setAttrHREF( {12} ).AddContent(caption).SetAttrTARGETblank(True) 
_a.initialize("","a").setattrhref("mailto:" + _emailaddress + "?subject=" + _subject + "").addcontent(_caption).setattrtargetblank(true);
// [2342]  AddContent(a.ToString) 
_B.addcontent(_a.tostring(),_B);
// [2343]  Return Me 
return _B;
// End Sub
};

// [2346] Sub AddDiv(divid As String, divContent As String, divClass As String) As VueHTML 
_B.adddiv=function(_divid,_divcontent,_divclass) {
var _div;
// [2347]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2348]  div.Initialize(divid, {486} ).SetText(divContent).addclass(divClass) 
_div.initialize(_divid,"div").settext(_divcontent).addclass(_divclass);
// [2349]  AddContent(div.HTML) 
_B.addcontent(_div.html(),_B);
// [2350]  Return Me 
return _B;
// End Sub
};

// [2355] Sub AddBold(value As String) As VueHTML 
_B.addbold=function(_value) {
var _sb;
// [2356]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2357]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2358]  sb.Append( {487} ).Append(value).Append( {488} ) 
_sb.append("{B}").append(_value).append("{/B}");
// [2359]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2360]  Return Me 
return _B;
// End Sub
};

// [2364] Sub AddItalic(value As String) As VueHTML 
_B.additalic=function(_value) {
var _sb;
// [2365]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2366]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2367]  sb.Append( {489} ).Append(value).Append( {490} ) 
_sb.append("{I}").append(_value).append("{/I}");
// [2368]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2369]  Return Me 
return _B;
// End Sub
};

// [2373] Sub AddUnderline(value As String) As VueHTML 
_B.addunderline=function(_value) {
var _sb;
// [2374]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2375]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2376]  sb.Append( {491} ).Append(value).Append( {492} ) 
_sb.append("{U}").append(_value).append("{/U}");
// [2377]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2378]  Return Me 
return _B;
// End Sub
};

// [2382] Sub AddSubScript(value As String) As VueHTML 
_B.addsubscript=function(_value) {
var _sb;
// [2383]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2384]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2385]  sb.Append( {493} ).Append(value).Append( {494} ) 
_sb.append("{SUB}").append(_value).append("{/SUB}");
// [2386]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2387]  Return Me 
return _B;
// End Sub
};

// [2391] Sub AddSuperScript(value As String) As VueHTML 
_B.addsuperscript=function(_value) {
var _sb;
// [2392]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2393]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2394]  sb.Append( {495} ).Append(value).Append( {496} ) 
_sb.append("{SUP}").append(_value).append("{/SUP}");
// [2395]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2396]  Return Me 
return _B;
// End Sub
};

// [2399] Sub AddSub(value As String) As VueHTML 
_B.addsub=function(_value) {
var _sb;
// [2400]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2401]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2402]  sb.Append( {497} ).Append(value).Append( {498} ) 
_sb.append("<sub>").append(_value).append("</sub>");
// [2403]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2404]  Return Me 
return _B;
// End Sub
};

// [2407] Sub AddKBD(value As String) As VueHTML 
_B.addkbd=function(_value) {
var _sb;
// [2408]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2409]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2410]  sb.Append( {499} ).Append(value).Append( {500} ) 
_sb.append("<kbd>").append(_value).append("</kbd>");
// [2411]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2412]  Return Me 
return _B;
// End Sub
};

// [2416] Sub AddCode(value As String) As VueHTML 
_B.addcode=function(_value) {
var _sb;
// [2417]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2418]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2419]  sb.Append( {501} ).Append(value).Append( {502} ) 
_sb.append("<code>").append(_value).append("</code>");
// [2420]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2421]  Return Me 
return _B;
// End Sub
};

// [2424] Sub AddPre(value As String) As VueHTML 
_B.addpre=function(_value) {
var _sb;
// [2425]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2426]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2427]  sb.Append( {503} ).Append(value).Append( {504} ) 
_sb.append("<pre>").append(_value).append("</pre>");
// [2428]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2429]  Return Me 
return _B;
// End Sub
};

// [2433] Sub AddSup(value As String) As VueHTML 
_B.addsup=function(_value) {
var _sb;
// [2434]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2435]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2436]  sb.Append( {505} ).Append(value).Append( {506} ) 
_sb.append("<sup>").append(_value).append("</sup>");
// [2437]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2438]  Return Me 
return _B;
// End Sub
};

// [2441] Sub AddCite(value As String) As VueHTML 
_B.addcite=function(_value) {
var _sb;
// [2442]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2443]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2444]  sb.Append( {507} ).Append(value).Append( {508} ) 
_sb.append("<cite>").append(_value).append("</cite>");
// [2445]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2446]  Return Me 
return _B;
// End Sub
};

// [2449] Sub AddEM(value As String) As VueHTML 
_B.addem=function(_value) {
var _sb;
// [2450]  Dim sb As StringBuilder 
_sb=new StringBuilder();
// [2451]  sb.Initialize 
_sb.init();
_sb.isinitialized=true;
// [2452]  sb.Append( {509} ).Append(value).Append( {510} ) 
_sb.append("<em>").append(_value).append("</em>");
// [2453]  AddContent(sb.ToString) 
_B.addcontent(_sb.toString(),_B);
// [2454]  Return Me 
return _B;
// End Sub
};

// [2457] Sub AddStrong(value As String) As VueHTML 
_B.addstrong=function(_value) {
var _s;
// [2458]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2459]  s = CreateStrong( {511} ).SetText(value) 
_s=_B.createstrong("",_B).settext(_value);
// [2460]  AddElement(s) 
_B.addelement(_s,_B);
// [2461]  Return Me 
return _B;
// End Sub
};

// [2466] Sub AddBreak(b As Boolean) As VueHTML 'ignore 
_B.addbreak=function(_b) {
// [2467]  AddContent( {512} ) 
_B.addcontent("{BR}",_B);
// [2468]  Return Me 
return _B;
// End Sub
};

// [2472] Sub AddLink(href As String,caption As String,Target As String) As VueHTML 
_B.addlink=function(_href,_caption,_target) {
var _a;
// [2473]  Dim a As VueHTML 
_a= new banano_bananovuematerial_vuehtml();
// [2474]  a.Initialize( {513} , {514} ).SetAttrHREF(href).AddContent(caption).SetAttrTARGET(Target) 
_a.initialize("","a").setattrhref(_href).addcontent(_caption).setattrtarget(_target);
// [2475]  AddElement(a) 
_B.addelement(_a,_B);
// [2476]  Return Me 
return _B;
// End Sub
};

// [2479] Sub AddAnchor(href As String,caption As String,Target As String) As VueHTML 
_B.addanchor=function(_href,_caption,_target) {
// [2480]  AddLink(href,caption,Target) 
_B.addlink(_href,_caption,_target,_B);
// [2481]  Return Me 
return _B;
// End Sub
};

// [2485] Sub AppendH1(paraText As String) As VueHTML 
_B.appendh1=function(_paratext) {
// [2486]  AddContent( {13} ) 
_B.addcontent("<h1>" + _paratext + "</h1>",_B);
// [2487]  Return Me 
return _B;
// End Sub
};

// [2490] Sub AppendH2(paraText As String) As VueHTML 
_B.appendh2=function(_paratext) {
// [2491]  AddContent( {14} ) 
_B.addcontent("<h2>" + _paratext + "</h2>",_B);
// [2492]  Return Me 
return _B;
// End Sub
};

// [2495] Sub AppendH3(paraText As String) As VueHTML 
_B.appendh3=function(_paratext) {
// [2496]  AddContent( {15} ) 
_B.addcontent("<h3>" + _paratext + "</h3>",_B);
// [2497]  Return Me 
return _B;
// End Sub
};

// [2500] Sub AppendH4(paraText As String) As VueHTML 
_B.appendh4=function(_paratext) {
// [2501]  AddContent( {16} ) 
_B.addcontent("<h4>" + _paratext + "</h4>",_B);
// [2502]  Return Me 
return _B;
// End Sub
};

// [2505] Sub AppendSmall(paraText As String) As VueHTML 
_B.appendsmall=function(_paratext) {
// [2506]  AddContent( {17} ) 
_B.addcontent("<small>" + _paratext + "</small>",_B);
// [2507]  Return Me 
return _B;
// End Sub
};

// [2510] Sub AppendH5(paraText As String) As VueHTML 
_B.appendh5=function(_paratext) {
// [2511]  AddContent( {18} ) 
_B.addcontent("<h5>" + _paratext + "</h5>",_B);
// [2512]  Return Me 
return _B;
// End Sub
};

// [2515] Sub AppendH6(paraText As String) As VueHTML 
_B.appendh6=function(_paratext) {
// [2516]  AddContent( {19} ) 
_B.addcontent("<h6>" + _paratext + "</h6>",_B);
// [2517]  Return Me 
return _B;
// End Sub
};

// [2521] Sub CreateInputSearch(sid As String) As VueHTML 
_B.createinputsearch=function(_sid) {
var _s;
// [2522]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2523]  s.Initialize(sid, {515} ).SetAttrTYPE( {516} ) 
_s.initialize(_sid,"input").setattrtype("search");
// [2524]  Return s 
return _s;
// End Sub
};

// [2528] Sub CreateInputRange(sid As String) As VueHTML 
_B.createinputrange=function(_sid) {
var _s;
// [2529]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2530]  s.Initialize(sid, {517} ).SetAttrTYPE( {518} ) 
_s.initialize(_sid,"input").setattrtype("range");
// [2531]  Return s 
return _s;
// End Sub
};

// [2536] Sub CreateMain(mainid As String) As VueHTML 
_B.createmain=function(_mainid) {
var _m;
// [2537]  Dim m As VueHTML 
_m= new banano_bananovuematerial_vuehtml();
// [2538]  m.Initialize(mainid, {519} ) 
_m.initialize(_mainid,"main");
// [2539]  Return m 
return _m;
// End Sub
};

// [2544] Sub CreateProgressBar(pbid As String) As VueHTML 
_B.createprogressbar=function(_pbid) {
var _pb;
// [2545]  Dim pb As VueHTML 
_pb= new banano_bananovuematerial_vuehtml();
// [2546]  pb.Initialize(pbid, {520} ) 
_pb.initialize(_pbid,"progress");
// [2547]  Return pb 
return _pb;
// End Sub
};

// [2552] Sub CreateFooter(fid As String) As VueHTML 
_B.createfooter=function(_fid) {
var _f;
// [2553]  Dim f As VueHTML 
_f= new banano_bananovuematerial_vuehtml();
// [2554]  f.Initialize(fid, {521} ) 
_f.initialize(_fid,"footer");
// [2555]  Return f 
return _f;
// End Sub
};

// [2559] Sub CreateNav(nid As String) As VueHTML 
_B.createnav=function(_nid) {
var _n;
// [2560]  Dim n As VueHTML 
_n= new banano_bananovuematerial_vuehtml();
// [2561]  n.Initialize(nid, {522} ) 
_n.initialize(_nid,"nav");
// [2562]  Return n 
return _n;
// End Sub
};

// [2566] Sub CreateDataList(nid As String) As VueHTML 
_B.createdatalist=function(_nid) {
var _n;
// [2567]  Dim n As VueHTML 
_n= new banano_bananovuematerial_vuehtml();
// [2568]  n.Initialize(nid, {523} ) 
_n.initialize(_nid,"datalist");
// [2569]  Return n 
return _n;
// End Sub
};

// [2573] Sub CreateHeader(hid As String) As VueHTML 
_B.createheader=function(_hid) {
var _h;
// [2574]  Dim h As VueHTML 
_h= new banano_bananovuematerial_vuehtml();
// [2575]  h.Initialize(hid, {524} ) 
_h.initialize(_hid,"header");
// [2576]  Return h 
return _h;
// End Sub
};

// [2580] Sub CreateSection(sid As String) As VueHTML 
_B.createsection=function(_sid) {
var _s;
// [2581]  Dim s As VueHTML = CreateDIV(sid) 
_s=_B.creatediv(_sid,_B);
// [2582]  s.AddClass( {525} ) 
_s.addclass("section");
// [2583]  Return s 
return _s;
// End Sub
};

// [2588] Sub CreateDIV(did As String) As VueHTML 
_B.creatediv=function(_did) {
var _div;
// [2589]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2590]  div.Initialize(did, {526} ) 
_div.initialize(_did,"div");
// [2591]  Return div 
return _div;
// End Sub
};

// [2595] Sub CreateBlockQuote(bqid As String) As VueHTML 
_B.createblockquote=function(_bqid) {
var _ul;
// [2596]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2597]  ul.Initialize(bqid, {527} ) 
_ul.initialize(_bqid,"blockquote");
// [2598]  Return ul 
return _ul;
// End Sub
};

// [2601] Sub SetCite(c As Object) As VueHTML 
_B.setcite=function(_c) {
// [2602]  AddAttribute( {528} , c) 
_B.addattribute("cite",_c,_B);
// [2603]  Return Me 
return _B;
// End Sub
};

// [2607] Sub CreatePRE(preid As String) As VueHTML 
_B.createpre=function(_preid) {
var _ul;
// [2608]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2609]  ul.Initialize(preid, {529} ).AddClass( {530} ) 
_ul.initialize(_preid,"pre").addclass("code-line");
// [2610]  Return ul 
return _ul;
// End Sub
};

// [2613] Sub CreateMARK(preid As String) As VueHTML 
_B.createmark=function(_preid) {
var _ul;
// [2614]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2615]  ul.Initialize(preid, {531} ) 
_ul.initialize(_preid,"mark");
// [2616]  Return ul 
return _ul;
// End Sub
};

// [2620] Sub CreateTIME(preid As String) As VueHTML 
_B.createtime=function(_preid) {
var _ul;
// [2621]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2622]  ul.Initialize(preid, {532} ) 
_ul.initialize(_preid,"time");
// [2623]  Return ul 
return _ul;
// End Sub
};

// [2627] Sub CreateDL(preid As String) As VueHTML 
_B.createdl=function(_preid) {
var _ul;
// [2628]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2629]  ul.Initialize(preid, {533} ) 
_ul.initialize(_preid,"dl");
// [2630]  Return ul 
return _ul;
// End Sub
};

// [2633] Sub CreateDT(preid As String) As VueHTML 
_B.createdt=function(_preid) {
var _ul;
// [2634]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2635]  ul.Initialize(preid, {534} ) 
_ul.initialize(_preid,"dt");
// [2636]  Return ul 
return _ul;
// End Sub
};

// [2639] Sub CreateDD(preid As String) As VueHTML 
_B.createdd=function(_preid) {
var _ul;
// [2640]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2641]  ul.Initialize(preid, {535} ) 
_ul.initialize(_preid,"dd");
// [2642]  Return ul 
return _ul;
// End Sub
};

// [2645] Sub CreateOL(preid As String) As VueHTML 
_B.createol=function(_preid) {
var _ul;
// [2646]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2647]  ul.Initialize(preid, {536} ) 
_ul.initialize(_preid,"ol");
// [2648]  Return ul 
return _ul;
// End Sub
};

// [2651] Sub CreateUL(preid As String) As VueHTML 
_B.createul=function(_preid) {
var _ul;
// [2652]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2653]  ul.Initialize(preid, {537} ) 
_ul.initialize(_preid,"ul");
// [2654]  Return ul 
return _ul;
// End Sub
};

// [2659] Sub CreateOL1(ulid As String, items As List) As VueHTML 
_B.createol1=function(_ulid,_items) {
var _ul,_opt,_optid,_optval,_thisoption;
// [2660]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2661]  ul.Initialize(ulid, {538} ) 
_ul.initialize(_ulid,"ol");
// [2662]  For Each opt As Map In items 
for (var _optindex=0;_optindex<_items.length;_optindex++) {
_opt=_items[_optindex];
// [2663]  Dim optid As String = opt.Get( {539} ) 
_optid=_opt["id"];
// [2664]  Dim optval As String = opt.Get( {540} ) 
_optval=_opt["value"];
// [2665]  Dim thisoption As VueHTML = CreateLI( {541} ) 
_thisoption=_B.createli("",_B);
// [2666]  optid = CStr(optid) 
_optid=_B.cstr(_optid,_B);
// [2667]  optval = CStr(optval) 
_optval=_B.cstr(_optval,_B);
// [2668]  thisoption.SetText(optval) 
_thisoption.settext(_optval);
// [2669]  thisoption.SetAttrVALUE(optid) 
_thisoption.setattrvalue(_optid);
// [2670]  ul.AddElement(thisoption) 
_ul.addelement(_thisoption);
// [2671]  Next 
}
// [2672]  Return ul 
return _ul;
// End Sub
};

// [2676] Sub CreateUL1(ulid As String, items As List) As VueHTML 
_B.createul1=function(_ulid,_items) {
var _ul,_opt,_optid,_optval,_thisoption;
// [2677]  Dim ul As VueHTML 
_ul= new banano_bananovuematerial_vuehtml();
// [2678]  ul.Initialize(ulid, {542} ) 
_ul.initialize(_ulid,"ul");
// [2679]  For Each opt As Map In items 
for (var _optindex=0;_optindex<_items.length;_optindex++) {
_opt=_items[_optindex];
// [2680]  Dim optid As String = opt.Get( {543} ) 
_optid=_opt["id"];
// [2681]  Dim optval As String = opt.Get( {544} ) 
_optval=_opt["value"];
// [2682]  optid = CStr(optid) 
_optid=_B.cstr(_optid,_B);
// [2683]  optval = CStr(optval) 
_optval=_B.cstr(_optval,_B);
// [2684]  Dim thisoption As VueHTML = CreateLI(optid) 
_thisoption=_B.createli(_optid,_B);
// [2685]  thisoption.SetText(optval) 
_thisoption.settext(_optval);
// [2686]  ul.AddElement(thisoption) 
_ul.addelement(_thisoption);
// [2687]  Next 
}
// [2688]  Return ul 
return _ul;
// End Sub
};

// [2692] Sub CreateLI(liid As String) As VueHTML 
_B.createli=function(_liid) {
var _li;
// [2693]  Dim li As VueHTML 
_li= new banano_bananovuematerial_vuehtml();
// [2694]  li.Initialize(liid, {545} ) 
_li.initialize(_liid,"li");
// [2695]  Return li 
return _li;
// End Sub
};

// [2699] Sub CreateIMG(imgid As String) As VueHTML 
_B.createimg=function(_imgid) {
var _img;
// [2700]  Dim img As VueHTML 
_img= new banano_bananovuematerial_vuehtml();
// [2701]  img.Initialize(imgid, {546} ) 
_img.initialize(_imgid,"img");
// [2702]  Return img 
return _img;
// End Sub
};

// [2706] Sub CreateFigCaption(fid As String) As VueHTML 
_B.createfigcaption=function(_fid) {
var _f;
// [2707]  Dim f As VueHTML 
_f= new banano_bananovuematerial_vuehtml();
// [2708]  f.Initialize(fid, {547} ) 
_f.initialize(_fid,"figcaption");
// [2709]  Return f 
return _f;
// End Sub
};

// [2714] Sub CreateFigure(fid As String) As VueHTML 
_B.createfigure=function(_fid) {
var _f;
// [2715]  Dim f As VueHTML 
_f= new banano_bananovuematerial_vuehtml();
// [2716]  f.Initialize(fid, {548} ) 
_f.initialize(_fid,"figure");
// [2717]  Return f 
return _f;
// End Sub
};

// [2721] Sub CreateH(hid As String, size As Int) As VueHTML 
_B.createh=function(_hid,_size) {
var _hkey,_h;
// [2722]  Dim hkey As String = {549} & CStr(size) 
_hkey="h"+_B.cstr(_size,_B);
// [2723]  Dim h As VueHTML 
_h= new banano_bananovuematerial_vuehtml();
// [2724]  h.Initialize(hid, hkey) 
_h.initialize(_hid,_hkey);
// [2725]  Return h 
return _h;
// End Sub
};

// [2730] Sub CreateH1(hid As String) As VueHTML 
_B.createh1=function(_hid) {
var _hdr;
// [2731]  Dim hdr As VueHTML = CreateH(hid,1) 
_hdr=_B.createh(_hid,1,_B);
// [2732]  Return hdr 
return _hdr;
// End Sub
};

// [2736] Sub CreateH2(hid As String) As VueHTML 
_B.createh2=function(_hid) {
var _hdr;
// [2737]  Dim hdr As VueHTML = CreateH(hid,2) 
_hdr=_B.createh(_hid,2,_B);
// [2738]  Return hdr 
return _hdr;
// End Sub
};

// [2742] Sub CreateH3(hid As String) As VueHTML 
_B.createh3=function(_hid) {
var _hdr;
// [2743]  Dim hdr As VueHTML = CreateH(hid,3) 
_hdr=_B.createh(_hid,3,_B);
// [2744]  Return hdr 
return _hdr;
// End Sub
};

// [2748] Sub CreateH4(hid As String) As VueHTML 
_B.createh4=function(_hid) {
var _hdr;
// [2749]  Dim hdr As VueHTML = CreateH(hid,4) 
_hdr=_B.createh(_hid,4,_B);
// [2750]  Return hdr 
return _hdr;
// End Sub
};

// [2754] Sub CreateH5(hid As String) As VueHTML 
_B.createh5=function(_hid) {
var _hdr;
// [2755]  Dim hdr As VueHTML = CreateH(hid,5) 
_hdr=_B.createh(_hid,5,_B);
// [2756]  Return hdr 
return _hdr;
// End Sub
};

// [2760] Sub CreateH6(hid As String) As VueHTML 
_B.createh6=function(_hid) {
var _hdr;
// [2761]  Dim hdr As VueHTML = CreateH(hid,6) 
_hdr=_B.createh(_hid,6,_B);
// [2762]  Return hdr 
return _hdr;
// End Sub
};

// [2767] Sub CreateHR(b As Boolean) As VueHTML 
_B.createhr=function(_b) {
var _hr;
// [2768]  Dim hr As VueHTML 
_hr= new banano_bananovuematerial_vuehtml();
// [2769]  hr.Initialize( {550} , {551} ) 
_hr.initialize("","hr");
// [2770]  Return hr 
return _hr;
// End Sub
};

// [2774] Sub CreateSub(sid As String) As VueHTML 
_B.createsub=function(_sid) {
var _s;
// [2775]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2776]  s.Initialize(sid, {552} ) 
_s.initialize(_sid,"sub");
// [2777]  Return s 
return _s;
// End Sub
};

// [2780] Sub CreateStrong(sid As String) As VueHTML 
_B.createstrong=function(_sid) {
var _s;
// [2781]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2782]  s.Initialize(sid, {553} ) 
_s.initialize(_sid,"strong");
// [2783]  Return s 
return _s;
// End Sub
};

// [2787] Sub CreateEM(sid As String) As VueHTML 
_B.createem=function(_sid) {
var _s;
// [2788]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2789]  s.Initialize(sid, {554} ) 
_s.initialize(_sid,"em");
// [2790]  Return s 
return _s;
// End Sub
};

// [2795] Sub CreateSmall(sid As String) As VueHTML 
_B.createsmall=function(_sid) {
var _s;
// [2796]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2797]  s.Initialize(sid, {555} ) 
_s.initialize(_sid,"small");
// [2798]  Return s 
return _s;
// End Sub
};

// [2802] Sub CreateSpan(sid As String) As VueHTML 
_B.createspan=function(_sid) {
var _s;
// [2803]  Dim s As VueHTML 
_s= new banano_bananovuematerial_vuehtml();
// [2804]  s.Initialize(sid, {556} ) 
_s.initialize(_sid,"span");
// [2805]  Return s 
return _s;
// End Sub
};

// [2809] Sub CreateAnchor(aid As String) As VueHTML 
_B.createanchor=function(_aid) {
var _a;
// [2810]  Dim a As VueHTML 
_a= new banano_bananovuematerial_vuehtml();
// [2811]  a.Initialize(aid, {557} ) 
_a.initialize(_aid,"a");
// [2812]  Return a 
return _a;
// End Sub
};

// [2816] Sub CreateArticle(aid As String) As VueHTML 
_B.createarticle=function(_aid) {
var _a;
// [2817]  Dim a As VueHTML 
_a= new banano_bananovuematerial_vuehtml();
// [2818]  a.Initialize(aid, {558} ) 
_a.initialize(_aid,"article");
// [2819]  Return a 
return _a;
// End Sub
};

// [2823] Sub CreateAside(aid As String) As VueHTML 
_B.createaside=function(_aid) {
var _a;
// [2824]  Dim a As VueHTML 
_a= new banano_bananovuematerial_vuehtml();
// [2825]  a.Initialize(aid, {559} ) 
_a.initialize(_aid,"aside");
// [2826]  Return a 
return _a;
// End Sub
};

// [2831] Sub CreateParagraph(pid As String) As VueHTML 
_B.createparagraph=function(_pid) {
var _p;
// [2832]  Dim p As VueHTML 
_p= new banano_bananovuematerial_vuehtml();
// [2833]  p.Initialize(pid, {560} ) 
_p.initialize(_pid,"p");
// [2834]  Return p 
return _p;
// End Sub
};

// [2838] Sub CreateForm(fID As String) As VueHTML 
_B.createform=function(_fid) {
var _frm;
// [2839]  Dim frm As VueHTML 
_frm= new banano_bananovuematerial_vuehtml();
// [2840]  frm.Initialize(fID, {561} ) 
_frm.initialize(_fid,"form");
// [2841]  Return frm 
return _frm;
// End Sub
};

// [2845] Sub CreateLegend(fID As String, sCaption As String) As VueHTML 
_B.createlegend=function(_fid,_scaption) {
var _fs;
// [2846]  Dim fs As VueHTML 
_fs= new banano_bananovuematerial_vuehtml();
// [2847]  fs.Initialize(fID, {562} ).AddContent(sCaption) 
_fs.initialize(_fid,"legend").addcontent(_scaption);
// [2848]  Return fs 
return _fs;
// End Sub
};

// [2852] Sub CreateFieldSet(fID As String, sCaption As String) As VueHTML 
_B.createfieldset=function(_fid,_scaption) {
var _fs,_lgnd;
// [2853]  Dim fs As VueHTML 
_fs= new banano_bananovuematerial_vuehtml();
// [2854]  fs.Initialize(fID, {563} ) 
_fs.initialize(_fid,"fieldset");
// [2855]  Dim lgnd As VueHTML = CreateLegend( {564} , sCaption) 
_lgnd=_B.createlegend("",_scaption,_B);
// [2856]  fs.AddElement(lgnd) 
_fs.addelement(_lgnd);
// [2857]  Return fs 
return _fs;
// End Sub
};

// [2861] Sub CreateContainer(cid As String) As VueHTML 
_B.createcontainer=function(_cid) {
var _div;
// [2862]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2863]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2864]  div.Initialize(cid, {565} ).AddClass( {566} ) 
_div.initialize(_cid,"div").addclass("container");
// [2865]  Return div 
return _div;
// End Sub
};

// [2869] Sub CreateCANVAS(cid As String) As VueHTML 
_B.createcanvas=function(_cid) {
var _div;
// [2870]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2871]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2872]  div.Initialize(cid, {567} ) 
_div.initialize(_cid,"canvas");
// [2873]  Return div 
return _div;
// End Sub
};

// [2877] Sub CreateAUDIO(cid As String) As VueHTML 
_B.createaudio=function(_cid) {
var _div;
// [2878]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2879]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2880]  div.Initialize(cid, {568} ) 
_div.initialize(_cid,"audio");
// [2881]  Return div 
return _div;
// End Sub
};

// [2885] Sub CreateVIDEO(cid As String) As VueHTML 
_B.createvideo=function(_cid) {
var _div;
// [2886]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2887]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2888]  div.Initialize(cid, {569} ) 
_div.initialize(_cid,"video");
// [2889]  Return div 
return _div;
// End Sub
};

// [2893] Sub CreateTABLE(cid As String) As VueHTML 
_B.createtable=function(_cid) {
var _div;
// [2894]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2895]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2896]  div.Initialize(cid, {570} ) 
_div.initialize(_cid,"table");
// [2897]  Return div 
return _div;
// End Sub
};

// [2902] Sub CreateSOURCE(cid As String) As VueHTML 
_B.createsource=function(_cid) {
var _div;
// [2903]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2904]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2905]  div.Initialize(cid, {571} ) 
_div.initialize(_cid,"source");
// [2906]  Return div 
return _div;
// End Sub
};

// [2911] Sub CreateTR(cid As String) As VueHTML 
_B.createtr=function(_cid) {
var _div;
// [2912]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2913]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2914]  div.Initialize(cid, {572} ) 
_div.initialize(_cid,"tr");
// [2915]  Return div 
return _div;
// End Sub
};

// [2918] Sub CreateTHEAD(cid As String) As VueHTML 
_B.createthead=function(_cid) {
var _div;
// [2919]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2920]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2921]  div.Initialize(cid, {573} ) 
_div.initialize(_cid,"thead");
// [2922]  Return div 
return _div;
// End Sub
};

// [2926] Sub CreateTBODY(cid As String) As VueHTML 
_B.createtbody=function(_cid) {
var _div;
// [2927]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2928]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2929]  div.Initialize(cid, {574} ) 
_div.initialize(_cid,"tbody");
// [2930]  Return div 
return _div;
// End Sub
};

// [2934] Sub CreateCAPTION(cid As String) As VueHTML 
_B.createcaption=function(_cid) {
var _div;
// [2935]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2936]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2937]  div.Initialize(cid, {575} ) 
_div.initialize(_cid,"caption");
// [2938]  Return div 
return _div;
// End Sub
};

// [2943] Sub CreateTD(cid As String) As VueHTML 
_B.createtd=function(_cid) {
var _div;
// [2944]  cid = cid.tolowercase 
_cid=_cid.toLowerCase();
// [2945]  Dim div As VueHTML 
_div= new banano_bananovuematerial_vuehtml();
// [2946]  div.Initialize(cid, {576} ) 
_div.initialize(_cid,"td");
// [2947]  Return div 
return _div;
// End Sub
};

// [2952] Sub CreateLabel(lid As String) As VueHTML 
_B.createlabel=function(_lid) {
var _lbl;
// [2953]  lid = lid.tolowercase 
_lid=_lid.toLowerCase();
// [2954]  Dim lbl As VueHTML 
_lbl= new banano_bananovuematerial_vuehtml();
// [2955]  lbl.Initialize(lid, {577} ) 
_lbl.initialize(_lid,"label");
// [2956]  Return lbl 
return _lbl;
// End Sub
};

// [2960] Sub PopToParent(sParentID As String) 
_B.poptoparent=function(_sparentid) {
var _sout,_pel;
// [2961]  Dim sout As String = ToString 
_sout=_B.tostring(_B);
// [2962]  sParentID = sParentID.tolowercase 
_sparentid=_sparentid.toLowerCase();
// [2963]  Dim pEL As BANanoElement 
_pel=null;
// [2964]  pEL = BANano.GetElement( {20} ) 
_pel=u("#" + _sparentid + "");
// [2965]  pEL.Append(sout) 
_pel.append(_sout);
// End Sub
};

// [2969] Sub CreateInput(tid As String) As VueHTML 
_B.createinput=function(_tid) {
var _input;
// [2970]  tid = tid.tolowercase 
_tid=_tid.toLowerCase();
// [2971]  Dim input As VueHTML 
_input= new banano_bananovuematerial_vuehtml();
// [2972]  input.Initialize(tid, {578} ) 
_input.initialize(_tid,"input");
// [2973]  Return input 
return _input;
// End Sub
};

// [2977] Sub CreateTextArea(tid As String) As VueHTML 
_B.createtextarea=function(_tid) {
var _ta;
// [2978]  Dim ta As VueHTML 
_ta= new banano_bananovuematerial_vuehtml();
// [2979]  ta.Initialize(tid, {579} ) 
_ta.initialize(_tid,"textarea");
// [2980]  Return ta 
return _ta;
// End Sub
};

// [2984] Sub CreateOption(oid As String) As VueHTML 
_B.createoption=function(_oid) {
var _o;
// [2985]  Dim o As VueHTML 
_o= new banano_bananovuematerial_vuehtml();
// [2986]  o.Initialize(oid, {580} ) 
_o.initialize(_oid,"option");
// [2987]  Return o 
return _o;
// End Sub
};

// [2992] Sub CreateOptGroup(oid As String) As VueHTML 
_B.createoptgroup=function(_oid) {
var _o;
// [2993]  Dim o As VueHTML 
_o= new banano_bananovuematerial_vuehtml();
// [2994]  o.Initialize(oid, {581} ) 
_o.initialize(_oid,"optgroup");
// [2995]  Return o 
return _o;
// End Sub
};

// [3000] Sub CreateSelect(oid As String) As VueHTML 
_B.createselect=function(_oid) {
var _o;
// [3001]  Dim o As VueHTML 
_o= new banano_bananovuematerial_vuehtml();
// [3002]  o.Initialize(oid, {582} ) 
_o.initialize(_oid,"select");
// [3003]  Return o 
return _o;
// End Sub
};

// [3007] Sub CreateCode(oid As String) As VueHTML 
_B.createcode=function(_oid) {
var _o;
// [3008]  Dim o As VueHTML 
_o= new banano_bananovuematerial_vuehtml();
// [3009]  o.Initialize(oid, {583} ) 
_o.initialize(_oid,"code");
// [3010]  Return o 
return _o;
// End Sub
};

// [3014] Sub CreateSelect1(tid As String, options As List) As VueHTML 
_B.createselect1=function(_tid,_options) {
var _ta,_opt,_optid,_optval,_thisoption;
// [3015]  Dim ta As VueHTML 
_ta= new banano_bananovuematerial_vuehtml();
// [3016]  ta.Initialize(tid, {584} ) 
_ta.initialize(_tid,"select");
// [3017]  For Each opt As Map In options 
for (var _optindex=0;_optindex<_options.length;_optindex++) {
_opt=_options[_optindex];
// [3018]  Dim optid As String = opt.Get( {585} ) 
_optid=_opt["id"];
// [3019]  Dim optval As String = opt.Get( {586} ) 
_optval=_opt["value"];
// [3020]  Dim thisoption As VueHTML = CreateOption( {587} ).SetText(optval) 
_thisoption=_B.createoption("",_B).settext(_optval);
// [3021]  thisoption.SetParentID(tid).SetAttrVALUE(optid) 
_thisoption.setparentid(_tid).setattrvalue(_optid);
// [3022]  ta.AddElement(thisoption) 
_ta.addelement(_thisoption);
// [3023]  Next 
}
// [3024]  Return ta 
return _ta;
// End Sub
};

// [3028] Sub CreateInputText(tid As String) As VueHTML 
_B.createinputtext=function(_tid) {
var _input;
// [3029]  Dim input As VueHTML = CreateInput(tid).SetAttrTYPE( {588} ) 
_input=_B.createinput(_tid,_B).setattrtype("text");
// [3030]  Return input 
return _input;
// End Sub
};

// [3034] Sub CreateButton(btnID As String) As VueHTML 
_B.createbutton=function(_btnid) {
var _b;
// [3035]  Dim b As VueHTML 
_b= new banano_bananovuematerial_vuehtml();
// [3036]  b.Initialize(btnID, {589} ) 
_b.initialize(_btnid,"button");
// [3037]  Return b 
return _b;
// End Sub
};

// [3041] Sub CreateInputButton(tid As String, tValue As String) As VueHTML 
_B.createinputbutton=function(_tid,_tvalue) {
var _input;
// [3042]  Dim input As VueHTML = CreateInput(tid).SetAttrTYPE( {590} ).setattrvalue(tValue) 
_input=_B.createinput(_tid,_B).setattrtype("button").setattrvalue(_tvalue);
// [3043]  Return input 
return _input;
// End Sub
};

// [3047] Sub CreateInputReset(tid As String, tValue As String) As VueHTML 
_B.createinputreset=function(_tid,_tvalue) {
var _input;
// [3048]  Dim input As VueHTML = CreateInput(tid).SetAttrTYPE( {591} ).setattrvalue(tValue) 
_input=_B.createinput(_tid,_B).setattrtype("reset").setattrvalue(_tvalue);
// [3049]  Return input 
return _input;
// End Sub
};

// [3053] Sub CreateInputSubmit(tid As String, tValue As String) As VueHTML 
_B.createinputsubmit=function(_tid,_tvalue) {
var _input;
// [3054]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {592} ).setattrvalue(tValue) 
_input=_B.createinput(_tid,_B).setattrtype("submit").setattrvalue(_tvalue);
// [3055]  Return input 
return _input;
// End Sub
};

// [3059] Sub CreateInputFile(tid As String) As VueHTML 
_B.createinputfile=function(_tid) {
var _input;
// [3060]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {593} ) 
_input=_B.createinput(_tid,_B).setattrtype("file");
// [3061]  Return input 
return _input;
// End Sub
};

// [3065] Sub CreateInputDate(tid As String) As VueHTML 
_B.createinputdate=function(_tid) {
var _input;
// [3066]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {594} ) 
_input=_B.createinput(_tid,_B).setattrtype("date");
// [3067]  Return input 
return _input;
// End Sub
};

// [3071] Sub CreateInputColor(tid As String) As VueHTML 
_B.createinputcolor=function(_tid) {
var _input;
// [3072]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {595} ) 
_input=_B.createinput(_tid,_B).setattrtype("color");
// [3073]  Return input 
return _input;
// End Sub
};

// [3078] Sub CreateInputEmail(tid As String) As VueHTML 
_B.createinputemail=function(_tid) {
var _input;
// [3079]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {596} ) 
_input=_B.createinput(_tid,_B).setattrtype("email");
// [3080]  Return input 
return _input;
// End Sub
};

// [3084] Sub CreateInputPassword(tid As String) As VueHTML 
_B.createinputpassword=function(_tid) {
var _input;
// [3085]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {597} ) 
_input=_B.createinput(_tid,_B).setattrtype("password");
// [3086]  Return input 
return _input;
// End Sub
};

// [3090] Sub CreateInputCheckBox(tid As String) As VueHTML 
_B.createinputcheckbox=function(_tid) {
var _input;
// [3091]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {598} ).SetAttr( {599} , {600} ) 
_input=_B.createinput(_tid,_B).setattrtype("checkbox").setattr("tabindex","0");
// [3092]  input.AddAttribute( {601} , {602} ) 
_input.addattribute("autocomplete","off");
// [3093]  Return input 
return _input;
// End Sub
};

// [3096] Sub SetAttrAutoCompleteOFF(b As Boolean) As VueHTML 
_B.setattrautocompleteoff=function(_b) {
// [3097]  SetAttr( {603} , {604} ) 
_B.setattr("autocomplete","off",_B);
// [3098]  Return Me 
return _B;
// End Sub
};

// [3101] Sub SetAttrTabIndex(tbi As String) As VueHTML 
_B.setattrtabindex=function(_tbi) {
// [3102]  SetAttr( {605} , tbi) 
_B.setattr("tabindex",_tbi,_B);
// [3103]  Return Me 
return _B;
// End Sub
};

// [3108] Sub CreateInputRadio(tid As String, tname As String) As VueHTML 
_B.createinputradio=function(_tid,_tname) {
var _input;
// [3109]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {606} ).SetAttrtabindex( {607} ).SetattrNAME(tname) 
_input=_B.createinput(_tid,_B).setattrtype("radio").setattrtabindex("0").setattrname(_tname);
// [3110]  input.SetAttrautocomplete( {608} ) 
_input.setattrautocomplete("off");
// [3111]  Return input 
return _input;
// End Sub
};

// [3115] Sub CreateInputTel(tid As String) As VueHTML 
_B.createinputtel=function(_tid) {
var _input;
// [3116]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {609} ) 
_input=_B.createinput(_tid,_B).setattrtype("tel");
// [3117]  Return input 
return _input;
// End Sub
};

// [3121] Sub CreateInputUrl(tid As String) As VueHTML 
_B.createinputurl=function(_tid) {
var _input;
// [3122]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {610} ) 
_input=_B.createinput(_tid,_B).setattrtype("url");
// [3123]  Return input 
return _input;
// End Sub
};

// [3128] Sub CreateInputNumber(tid As String) As VueHTML 
_B.createinputnumber=function(_tid) {
var _input;
// [3129]  Dim input As VueHTML = CreateInput(tid).SetattrTYPE( {611} ) 
_input=_B.createinput(_tid,_B).setattrtype("number");
// [3130]  Return input 
return _input;
// End Sub
};

// [3134] Sub CreateIFrame(ifid As String) As VueHTML 
_B.createiframe=function(_ifid) {
var _i;
// [3135]  Dim i As VueHTML 
_i= new banano_bananovuematerial_vuehtml();
// [3136]  i.Initialize(ifid, {612} ) 
_i.initialize(_ifid,"iframe");
// [3137]  Return i 
return _i;
// End Sub
};

}


/* App */
/* =========================== modAutoComplete  =========================== */
function banano_bvmdemo_modautocomplete() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="autocomplete";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_countries,_ac1,_ac2,_ac3;
// [9]  Log( {1} ) 
console.log("modAutoComplete.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  Dim countries As List 
_countries=[];
// [19]  countries.Initialize 
_countries.length=0;
// [20]  countries.AddAll(Array( {2} , {3} , {4} , {5} , {6} , {7} , {8} , {9} )) 
_countries.splice(_countries.length,0,...["Algeria","Argentina","Brazil","Canada","Italy","Japan","United Kingdom","United States"]);
// [22]  Dim ac1 As VMAutoComplete = vm.createautocomplete( {10} , Me).SetLabel( {11} ) 
_ac1=_B._vm.createautocomplete("ac1",_B).setlabel("Country");
// [23]  ac1.SetVModel( {12} ).SetOptions(countries) 
_ac1.setvmodel("selectedCountry").setoptions(_countries);
// [24]  cont.AddComponent(1,1, ac1.ToString) 
_cont.addcomponent(1,1,_ac1.tostring());
// [26]  Dim ac2 As VMAutoComplete = vm.createautocomplete( {13} , Me).SetLabel( {14} ) 
_ac2=_B._vm.createautocomplete("ac2",_B).setlabel("Country (Open on Focus - False)");
// [27]  ac2.SetVModel( {15} ).SetOptions(countries).SetOpenOnFocus(False) 
_ac2.setvmodel("selectedCountry").setoptions(_countries).setopenonfocus(false);
// [28]  cont.AddComponent(1,1, ac2.ToString) 
_cont.addcomponent(1,1,_ac2.tostring());
// [30]  Dim ac3 As VMAutoComplete = vm.createautocomplete( {16} , Me).SetLabel( {17} ) 
_ac3=_B._vm.createautocomplete("ac3",_B).setlabel("Country Box");
// [31]  ac3.SetVModel( {18} ).SetOptions(countries).SetDense(True).SetLayoutBox(True) 
_ac3.setvmodel("selectedCountry").setoptions(_countries).setdense(true).setlayoutbox(true);
// [32]  cont.AddComponent(1,1, ac3.ToString) 
_cont.addcomponent(1,1,_ac3.tostring());
// [34]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modDialog  =========================== */
function banano_bvmdemo_moddialog() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="dialogcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modDialog.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns(4,12,3,3,3) 
_cont.addrows(2).addcolumns(4,12,3,3,3);
// [18]  vm.CreateButton( {2} , Me).SetText( {3} ).SetRaised(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("d1",_B).settext("Show Dialog").setraised(true).addtocontainer(_cont,1,1);
// [19]  vm.CreateButton( {4} , Me).SetText( {5} ).SetRaised(True).AddToContainer(cont, 1, 2) 
_B._vm.createbutton("a1",_B).settext("Alert 1").setraised(true).addtocontainer(_cont,1,2);
// [20]  vm.CreateButton( {6} , Me).SetText( {7} ).SetAccent(True).SetRaised(True).AddToContainer(cont, 1, 3) 
_B._vm.createbutton("a2",_B).settext("Alert 2").setaccent(true).setraised(true).addtocontainer(_cont,1,3);
// [21]  vm.CreateButton( {8} , Me).SetText( {9} ).SetAccent(True).SetRaised(True).AddToContainer(cont, 1, 4) 
_B._vm.createbutton("a3",_B).settext("Confirm").setaccent(true).setraised(true).addtocontainer(_cont,1,4);
// [22]  vm.CreateButton( {10} , Me).SetText( {11} ).SetPrimary(True).SetRaised(True).AddToContainer(cont, 2, 1) 
_B._vm.createbutton("a4",_B).settext("Prompt").setprimary(true).setraised(true).addtocontainer(_cont,2,1);
// [23]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// [25]  CreateDialog 
_B.createdialog(_B);
// [28]  vm.AddConfirm( {12} , Me, {13} , {14} , {15} , {16} ) 
_B._vm.addconfirm("askuser",_B,"Use Google's location service?","Let Google help apps determine location. <br> This means sending <strong>anonymous</strong> location data to Google, even when no apps are running.","Agree","Disagree");
// [31]  vm.AddPrompt( {17} , Me, {18} , {19} , {20} , 30, {21} , {22} ) 
_B._vm.addprompt("yourname",_B,"What's your name?","","Type your name",30,"Done","Cancel");
// End Sub
};

// [35] Sub CreateDialog 
this.createdialog=function() {
if (_B==null) _B=this;
var _dialog1,_lbl;
// [37]  Dim dialog1 As VMDialog = vm.CreateDialog( {23} , Me).SetTitle( {24} ) 
_dialog1=_B._vm.createdialog("dialog1",_B).settitle("Dialog 1");
// [39]  Dim lbl As VMLabel = vm.CreateLABEL( {25} ).SetText( {26} ) 
_lbl=_B._vm.createlabel("lblx").settext("This is my dialog content!");
// [41]  dialog1.Container.AddRows(1).AddColumns(1,12,12,12,12) 
_dialog1._container.addrows(1).addcolumns(1,12,12,12,12);
// [42]  dialog1.Container.AddComponent(1,1, lbl.tostring) 
_dialog1._container.addcomponent(1,1,_lbl.tostring());
// [44]  dialog1.AddCancel( {27} , {28} ) 
_dialog1.addcancel("btncancel","Cancel");
// [45]  dialog1.AddOk( {29} , {30} ) 
_dialog1.addok("btnok","Ok");
// [46]  vm.AddDialog(dialog1) 
_B._vm.adddialog(_dialog1);
// End Sub
};

// [49] Sub a3_click(e As BANanoEvent) 
this.a3_click=function(_e) {
if (_B==null) _B=this;
// [50]  vm.showdialog( {31} ) 
_B._vm.showdialog("askuser");
// End Sub
};

// [53] Sub a1_click(e As BANanoEvent) 
this.a1_click=function(_e) {
if (_B==null) _B=this;
// [54]  vm.ShowAlert( {32} , {33} , {34} , {35} ) 
_B._vm.showalert("first","Hi there!","Your post has been deleted!","Cool");
// End Sub
};

// [57] Sub a2_click(e As BANanoEvent) 
this.a2_click=function(_e) {
if (_B==null) _B=this;
// [58]  vm.ShowAlert( {36} , {37} , {38} , {39} ) 
_B._vm.showalert("second","Google Location","Your post <strong>Material Design is awesome</strong> has been created.","Ok");
// End Sub
};

// [61] Sub a4_click(e As BANanoEvent) 
this.a4_click=function(_e) {
if (_B==null) _B=this;
// [62]  vm.ShowPrompt1( {40} ) 
_B._vm.showprompt1("yourname");
// End Sub
};

// [67] Sub d1_click(e As BANanoEvent) 
this.d1_click=function(_e) {
if (_B==null) _B=this;
// [68]  vm.showdialog( {46} ) 
_B._vm.showdialog("dialog1");
// End Sub
};

// [71] Sub btnok_click(e As BANanoEvent) 
this.btnok_click=function(_e) {
if (_B==null) _B=this;
// [72]  vm.showsnackbar( {47} ) 
_B._vm.showsnackbar("Dialog Ok clicked!");
// End Sub
};

// [75] Sub btncancel_click(e As BANanoEvent) 
this.btncancel_click=function(_e) {
if (_B==null) _B=this;
// [76]  vm.ShowSnackBar( {48} ) 
_B._vm.showsnackbar("Dialog Cancel clicked!");
// [77]  vm.hidedialog( {49} ) 
_B._vm.hidedialog("dialog1");
// End Sub
};

// [81] Sub askuser_ok(e As BANanoEvent) 
this.askuser_ok=function(_e) {
if (_B==null) _B=this;
// [82]  vm.ShowSnackBar( {50} ) 
_B._vm.showsnackbar("Use Google location!");
// End Sub
};

// [85] Sub askuser_cancel(e As BANanoEvent) 
this.askuser_cancel=function(_e) {
if (_B==null) _B=this;
// [86]  vm.showsnackbar( {51} ) 
_B._vm.showsnackbar("Cancel Google location!");
// End Sub
};

// [89] Sub yourname_ok(e As BANanoEvent) 
this.yourname_ok=function(_e) {
if (_B==null) _B=this;
// [90]  vm.ShowSnackBar(vm.getprompt) 
_B._vm.showsnackbar(_B._vm.getprompt());
// End Sub
};

// [93] Sub yourname_cancel(e As BANanoEvent) 
this.yourname_cancel=function(_e) {
if (_B==null) _B=this;
// [94]  vm.setprompt(Null) 
_B._vm.setprompt(null);
// [95]  vm.showsnackbar( {52} ) 
_B._vm.showsnackbar("Cancel Name Prompt");
// End Sub
};

}
/* =========================== modEmptyState  =========================== */
function banano_bvmdemo_modemptystate() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="emptycode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_es,_btn,_es1,_es2,_es3;
// [9]  Log( {1} ) 
console.log("modEmptyState.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(4).AddColumns12 
_cont.addrows(4).addcolumns12();
// [18]  Dim es As VMEmptyState = vm.CreateEmptyState( {2} , Me) 
_es=_B._vm.createemptystate("es1",_B);
// [19]  es.SetIcon( {3} ).SetLabel( {4} ) 
_es.seticon("devices_other").setlabel("Create your first project");
// [20]  es.SetDescription( {5} ) 
_es.setdescription("Creating project, you'll be able to upload your design and collaborate with people.");
// [22]  Dim btn As VMButton = vm.CreateButton( {6} , Me).SetPrimary(True).SetRaised(True).SetText( {7} ) 
_btn=_B._vm.createbutton("btn1",_B).setprimary(true).setraised(true).settext("Create first project");
// [23]  es.Addhtml(btn.tostring) 
_es.addhtml(_btn.tostring());
// [24]  es.AddToContainer(cont, 1, 1) 
_es.addtocontainer(_cont,1,1);
// [26]  Dim es1 As VMEmptyState = vm.CreateEmptyState( {8} , Me).SetRounded(True).SetIcon( {9} ) 
_es1=_B._vm.createemptystate("es1",_B).setrounded(true).seticon("access_time");
// [27]  es1.Setlabel( {10} ) 
_es1.setlabel("Nothing in Snoozed");
// [28]  es1.SetDescription( {11} ) 
_es1.setdescription("Anything you snooze will go here until it's time for it to return to the inbox.");
// [29]  es1.AddToContainer(cont, 2, 1) 
_es1.addtocontainer(_cont,2,1);
// [31]  Dim es2 As VMEmptyState = vm.CreateEmptyState( {12} , Me).SetIcon( {13} ).SetPrimary(True) 
_es2=_B._vm.createemptystate("es2",_B).seticon("done").setprimary(true);
// [32]  es2.Setlabel( {14} ) 
_es2.setlabel("Nothing in Done");
// [33]  es2.SetDescription( {15} ) 
_es2.setdescription("Anything you mark done will be safely stored here.");
// [34]  es2.AddToContainer(cont, 3, 1) 
_es2.addtocontainer(_cont,3,1);
// [36]  Dim es3 As VMEmptyState = vm.CreateEmptyState( {16} , Me).SetRounded(True).SetIcon( {17} ).SetAccent(True) 
_es3=_B._vm.createemptystate("es3",_B).setrounded(true).seticon("alarm_off").setaccent(true);
// [37]  es3.Setlabel( {18} ) 
_es3.setlabel("Nothing in Reminders");
// [38]  es3.SetDescription( {19} ) 
_es3.setdescription("Create a Reminder and it will show up here.");
// [39]  es3.AddToContainer(cont, 4, 1) 
_es3.addtocontainer(_cont,4,1);
// [41]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [44] Sub btn1_click(e As BANanoEvent) 
this.btn1_click=function(_e) {
if (_B==null) _B=this;
// [45]  vm.ShowSnackBar( {20} ) 
_B._vm.showsnackbar("Start creating your project now!");
// End Sub
};

}
/* =========================== modFile  =========================== */
function banano_bvmdemo_modfile() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="filecode";

this._ajaxresult="";

// [10] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [11]  Log( {1} ) 
console.log("modFile.Code");
// [12]  vm = vmx 
_B._vm=_vmx;
// [14]  Dim cont As VMContainer = vm.CreateContainer(name, Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [16]  cont.Hide 
_cont.hide();
// [18]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [20]  vm.CreateFile( {2} ,Me).SetVModel( {3} ).SetLabel( {4} ).AddToContainer(cont, 1, 1) 
_B._vm.createfile("file0",_B).setvmodel("single").setlabel("Single").addtocontainer(_cont,1,1);
// [22]  vm.CreateFile( {5} ,Me).SetVModel( {6} ).SetLabel( {7} ).SetPlaceholder( {8} ).AddToContainer(cont, 1, 1) 
_B._vm.createfile("file1",_B).setvmodel("placeholder").setlabel("Placeholder").setplaceholder("A nice input placeholder").addtocontainer(_cont,1,1);
// [24]  vm.CreateFile( {9} ,Me).SetVModel( {10} ).SetDisabled(True).AddToContainer(cont, 1, 1) 
_B._vm.createfile("file2",_B).setvmodel("disabledx").setdisabled(true).addtocontainer(_cont,1,1);
// [26]  vm.CreateFile( {11} ,Me).SetVModel( {12} ).SetLabel( {13} ).SetValue( {14} ).AddToContainer(cont, 1, 1) 
_B._vm.createfile("file3",_B).setvmodel("initial").setlabel("Initial Value").setvalue("./assets/sponge.png").addtocontainer(_cont,1,1);
// [28]  vm.CreateFile( {15} ,Me).SetVModel( {16} ).SetLabel( {17} ).SetMultiple(True).AddToContainer(cont, 1, 1) 
_B._vm.createfile("file4",_B).setvmodel("multiple").setlabel("Multiple Files").setmultiple(true).addtocontainer(_cont,1,1);
// [30]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [33] Sub file0_change(fList As List) 
this.file0_change=function(_flist) {
if (_B==null) _B=this;
// [34]  UploadFiles(fList) 
_B.uploadfiles(_flist,_B);
// End Sub
};

// [38] Sub file1_change(fList As List) 
this.file1_change=function(_flist) {
if (_B==null) _B=this;
// [39]  Log(fList) 
console.log(_flist);
// End Sub
};

// [43] Sub file2_change(fList As List) 
this.file2_change=function(_flist) {
if (_B==null) _B=this;
// [44]  Log(fList) 
console.log(_flist);
// End Sub
};

// [48] Sub file3_change(fList As List) 
this.file3_change=function(_flist) {
if (_B==null) _B=this;
// [49]  Log(fList) 
console.log(_flist);
// End Sub
};

// [53] Sub file4_change(fList As List) 
this.file4_change=function(_flist) {
if (_B==null) _B=this;
// [54]  Log(fList) 
console.log(_flist);
// End Sub
};

// [57] Sub UploadFiles(fList As List) 
this.uploadfiles=function(_flist) {
if (_B==null) _B=this;
var _fileobj;
// [58]  For Each fileObj As Object In fList 
for (var _fileobjindex=0;_fileobjindex<_flist.length;_fileobjindex++) {
_fileobj=_flist[_fileobjindex];
// [59]  vm.HTTPUpload(fileObj, Me, {18} ) 
_B._vm.httpupload(_fileobj,_B,"filedone");
// [60]  Next 
}
// End Sub
};

// [63] Sub FileDone(fileObj As Map, json As String) 
this.filedone=function(_fileobj,_json) {
if (_B==null) _B=this;
var _resp,_status,_fd;
// [64]  Dim resp As Map = BANano.FromJson(json) 
_resp=JSON.parse(_json);
// [65]  Dim status As String = resp.Get( {19} ) 
_status=_resp["status"];
// [66]  Select Case status 
switch ("" + _status) {
// [67]  Case {20} 
case "" + "success":
// [68]  Dim fd As FileObject = vm.GetFileDetails(fileObj) 
_fd=_B._vm.getfiledetails(_fileobj);
// [69]  Log(fd) 
console.log(_fd);
// [70]  Case Else 
break;
default:
// [71]  vm.ShowSnackBar( {21} ) 
_B._vm.showsnackbar("File could not be uploaded!");
// [72]  End Select 
break;
}
// End Sub
};

}
/* =========================== modGijgoTable  =========================== */
function banano_bvmdemo_modgijgotable() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="gijotablecode";

this._people= new banano_bananovuematerial_vmgijgotable();

this._mode="";

// [11] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [12]  Log( {2} ) 
console.log("modGijgoTable.Code");
// [13]  vm = vmx 
_B._vm=_vmx;
// [15]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [17]  cont.Hide 
_cont.hide();
// [19]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [21]  people = vm.CreateGijgoTable( {3} , {4} , Me) 
_B._people=_B._vm.creategijgotable("people","id",_B);
// [22]  people.SetTitle( {5} ) 
_B._people.settitle("People");
// [23]  people.AddColumn( {6} , {7} ) 
_B._people.addcolumn("id","ID");
// [24]  people.AddColumn( {8} , {9} ) 
_B._people.addcolumn("name","Name");
// [25]  people.AddColumn( {10} , {11} ) 
_B._people.addcolumn("email","Email");
// [26]  people.AddColumn( {12} , {13} ) 
_B._people.addcolumn("gender","Gender");
// [27]  people.AddColumn( {14} , {15} ) 
_B._people.addcolumn("title","Title");
// [28]  people.AddEditTrash 
_B._people.addedittrash();
// [29]  people.SetDataSource(Array()) 
_B._people.setdatasource([]);
// [30]  cont.AddComponent(1,1, people.tostring) 
_cont.addcomponent(1,1,_B._people.tostring());
// [31]  vm.AddContainer(cont) 
_B._vm.addcontainer(_cont);
// [32]  Mode = {16} 
_B._mode="";
// End Sub
};

// [35] Sub Refresh 
this.refresh=function() {
if (_B==null) _B=this;
var _users;
// [36]  Dim users As List 
_users=[];
// [37]  users.initialize 
_users.length=0;
// [38]  users.add(CreateMap( {17} : 1, {18} : {19} , {20} : {21} , {22} : {23} , {24} : {25} )) 
_users.push({"id":1, "name":"Shawna Dubbin", "email":"sdubbin0@geocities.com", "gender":"Male", "title":"Assistant Media Planner"});
// [39]  users.add(CreateMap( {26} : 2, {27} : {28} , {29} : {30} , {31} : {32} , {33} : {34} )) 
_users.push({"id":2, "name":"Odette Demageard", "email":"odemageard1@spotify.com", "gender":"Female", "title":"Account Coordinator"});
// [40]  users.add(CreateMap( {35} : 3, {36} : {37} , {38} : {39} , {40} : {41} , {42} : {43} )) 
_users.push({"id":3, "name":"Lonnie Izkovitz", "email":"lizkovitz3@youtu.be", "gender":"Female", "title":"Operator"});
// [41]  users.add(CreateMap( {44} : 4, {45} : {46} , {47} : {48} , {49} : {50} , {51} : {52} )) 
_users.push({"id":4, "name":"Thatcher Stave", "email":"tstave4@reference.com", "gender":"Male", "title":"Software Test Engineer III"});
// [42]  users.add(CreateMap( {53} : 5, {54} : {55} , {56} : {57} , {58} : {59} , {60} : {61} )) 
_users.push({"id":5, "name":"Clarinda Marieton", "email":"cmarietonh@theatlantic.com", "gender":"Female", "title":"Paralegal"});
// [43]  users.add(CreateMap( {62} : 6, {63} : {64} , {65} : {66} , {67} : {68} , {69} : {70} )) 
_users.push({"id":6, "name":"Karim Chipping", "email":"kchipping5@scribd.com", "gender":"Female", "title":"Safety Technician II"});
// [44]  users.add(CreateMap( {71} : 7, {72} : {73} , {74} : {75} , {76} : {77} , {78} : {79} )) 
_users.push({"id":7, "name":"Helge Holyard", "email":"hholyard6@howstuffworks.com", "gender":"Female", "title":"Internal Auditor"});
// [45]  users.add(CreateMap( {80} : 8, {81} : {82} , {83} : {84} , {85} : {86} , {87} : {88} )) 
_users.push({"id":8, "name":"Rod Titterton", "email":"rtitterton7@nydailynews.com", "gender":"Male", "title":"Technical Writer"});
// [46]  users.add(CreateMap( {89} : 9, {90} : {91} , {92} : {93} , {94} : {95} , {96} : {97} )) 
_users.push({"id":9, "name":"Gawen Applewhite", "email":"gapplewhite8@reverbnation.com", "gender":"Female", "title":"GIS Technical Architect"});
// [47]  users.add(CreateMap( {98} : 10, {99} : {100} , {101} : {102} , {103} : {104} , {105} : {106} )) 
_users.push({"id":10, "name":"Nero Mulgrew", "email":"nmulgrew9@plala.or.jp", "gender":"Female", "title":"Staff Scientist"});
// [49]  people.SetDataSource(users) 
_B._people.setdatasource(_users);
// [50]  people.refresh 
_B._people.refresh();
// End Sub
};

// [53] Sub people_edit(e As BANanoEvent) 
this.people_edit=function(_e) {
if (_B==null) _B=this;
var _rec,_sid,_pjson;
// [55]  Dim rec As Map = people.GetRecordFromEvent(e) 
_rec=_B._people.getrecordfromevent(_e);
// [56]  Dim sid As String = rec.GetDefault( {107} , {108} ) 
_sid=(_rec["id"] || "");
// [57]  If sid = {109} Then Return 
if (_sid=="") { return ;}
// [59]  Mode = {110} 
_B._mode="E";
// [61]  Dim pJSON As String = BANano.ToJson(rec) 
_pjson=JSON.stringify(_rec);
// [62]  vm.ShowSnackBar(pJSON) 
_B._vm.showsnackbar(_pjson);
// End Sub
};

// [65] Sub people_delete(e As BANanoEvent) 
this.people_delete=function(_e) {
if (_B==null) _B=this;
var _rec,_sid,_stext;
// [67]  Dim rec As Map = people.GetRecordFromEvent(e) 
_rec=_B._people.getrecordfromevent(_e);
// [68]  Dim sid As String = rec.GetDefault( {111} , {112} ) 
_sid=(_rec["id"] || "");
// [69]  Dim stext As String = rec.getdefault( {113} , {114} ) 
_stext=(_rec["name"] || "");
// [70]  If sid = {115} Then Return 
if (_sid=="") { return ;}
// [72]  vm.SetStateSingle( {116} , sid) 
_B._vm.setstatesingle("peopleid",_sid);
// [74]  vm.ShowConfirm( {117} , {0} , {118} , {119} , {120} ) 
_B._vm.showconfirm("delete_people","Confirm Delete: " + _stext + "","Are you sure that you want to delete this person. You will not be able to undo your actions. Continue?","Ok","Cancel");
// End Sub
};

}
/* =========================== modGMap  =========================== */
function banano_bvmdemo_modgmap() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="gmapcode";

this._buildmap= new banano_bananovuematerial_vmgmap();

this._frm= new banano_bananovuematerial_vmcontainer();

// [11] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_latitude,_longitude,_mapgrid,_maptool;
// [12]  Log( {2} ) 
console.log("modFile.Code");
// [13]  vm = vmx 
_B._vm=_vmx;
// [15]  Dim cont As VMContainer = vm.CreateContainer(name, Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [17]  cont.Hide 
_cont.hide();
// [18]  cont.AddRows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [22]  frm = vm.CreateContainer( {3} , Me) 
_B._frm=_B._vm.createcontainer("content",_B);
// [23]  Dim latitude As VMInputControl 
_latitude= new banano_bananovuematerial_vminputcontrol();
// [24]  latitude.Initialize( {4} ) 
_latitude.initialize("building_latitude");
// [25]  latitude.SetLabel( {5} ) 
_latitude.setlabel("GPS Latitude");
// [26]  latitude.SetInvalidMessage( {6} ) 
_latitude.setinvalidmessage("The latitude is required!");
// [27]  frm.AddControl(latitude,1,2,0,0,0,0,12,6,6,6) 
_B._frm.addcontrol(_latitude,1,2,0,0,0,0,12,6,6,6);
// [29]  Dim longitude As VMInputControl 
_longitude= new banano_bananovuematerial_vminputcontrol();
// [30]  longitude.Initialize( {7} ) 
_longitude.initialize("building_longitude");
// [31]  longitude.SetLabel( {8} ) 
_longitude.setlabel("GPS Longitude");
// [32]  longitude.SetInvalidMessage( {9} ) 
_longitude.setinvalidmessage("The address is required!");
// [33]  frm.AddControl(longitude,1,1,0,0,0,0,12,6,6,6) 
_B._frm.addcontrol(_longitude,1,1,0,0,0,0,12,6,6,6);
// [35]  cont.AddComponent(1, 1 ,frm.tostring) 
_cont.addcomponent(1,1,_B._frm.tostring());
// [38]  Dim mapGrid As VMContainer = vm.CreateContainer( {10} , Me) 
_mapgrid=_B._vm.createcontainer("mapGrid",_B);
// [39]  mapGrid.AddRows(2).AddColumns12 
_mapgrid.addrows(2).addcolumns12();
// [41]  Dim mapTool As VMToolBar = vm.CreateToolbar( {11} , Me) 
_maptool=_B._vm.createtoolbar("maptool",_B);
// [42]  mapTool.Settitle( {12} ) 
_maptool.settitle("Building Location on Map");
// [43]  mapTool.SetPrimary(True) 
_maptool.setprimary(true);
// [44]  mapTool.AddButton( {13} , {14} , {15} , {16} , {17} ) 
_maptool.addbutton("btnResetLoc","","Reset","Reset the map location","");
// [45]  mapTool.AddButton( {18} , {19} , {20} , {21} , {22} ) 
_maptool.addbutton("btnShowLoc","","Show","Show location of building using GPS","");
// [46]  mapGrid.AddComponent(1,1, mapTool.ToString) 
_mapgrid.addcomponent(1,1,_maptool.tostring());
// [48]  buildMap = vm.CreateGMap( {23} , Me) 
_B._buildmap=_B._vm.creategmap("build1",_B);
// [49]  vm.SetGMapKey( {24} ) 
_B._vm.setgmapkey("");
// [50]  buildMap.SetCenter(-28.4792625, 24.6727135) 
_B._buildmap.setcenter(-28.4792625,24.6727135);
// [51]  buildMap.SetZoom(8) 
_B._buildmap.setzoom(8);
// [52]  buildMap.SetMapTypeHybrid 
_B._buildmap.setmaptypehybrid();
// [53]  buildMap.setwidth( {25} ) 
_B._buildmap.setwidth("100%");
// [54]  buildMap.setheight( {26} ) 
_B._buildmap.setheight("500px");
// [55]  buildMap.ClearMarkers 
_B._buildmap.clearmarkers();
// [56]  mapGrid.AddComponent(2,1, buildMap.ToString) 
_mapgrid.addcomponent(2,1,_B._buildmap.tostring());
// [58]  cont.AddComponent(2, 1 ,mapGrid.tostring) 
_cont.addcomponent(2,1,_mapgrid.tostring());
// [60]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [64] Sub btnResetLoc_click(e As BANanoEvent) 
this.btnresetloc_click=function(_e) {
if (_B==null) _B=this;
// [65]  buildMap.clearmarkers 
_B._buildmap.clearmarkers();
// [66]  buildMap.ShowInfoWindow(False) 
_B._buildmap.showinfowindow(false);
// [67]  buildMap.setcenter(-28.4792625, 24.6727135) 
_B._buildmap.setcenter(-28.4792625,24.6727135);
// [68]  buildMap.SetZoom(8) 
_B._buildmap.setzoom(8);
// [69]  buildMap.refresh 
_B._buildmap.refresh();
// End Sub
};

// [72] Sub btnShowLoc_click(e As BANanoEvent) 
this.btnshowloc_click=function(_e) {
if (_B==null) _B=this;
var _req,_record,_bvalid,_dlat,_dlng,_saddress1,_saddress2,_saddress3,_sfulladdress;
// [74]  Dim req As Map = CreateMap() 
_req={};
// [75]  req.Put( {27} , {28} ) 
_req["building_longitude"]="building_longitude";
// [76]  req.Put( {29} , {30} ) 
_req["building_latitude"]="building_latitude";
// [78]  Dim record As Map = frm.GetData 
_record=_B._frm.getdata();
// [80]  Dim bvalid As String = vm.validate(record, req) 
_bvalid=_B._vm.validate(_record,_req);
// [81]  If bvalid = False Then 
if (_bvalid==false) {
// [82]  vm.ShowSnackBar( {31} ) 
_B._vm.showsnackbar("The GPS Location needs to be specified!");
// [83]  Return 
return;
// [84]  End If 
}
// [86]  Dim dlat As Double = vm.GetState( {32} ,0) 
_dlat=_B._vm.getstate("building_latitude",0);
// [87]  Dim dlng As Double = vm.getstate( {33} ,0) 
_dlng=_B._vm.getstate("building_longitude",0);
// [89]  Dim saddress1 As String = vm.GetState( {34} , {35} ) 
_saddress1=_B._vm.getstate("building_address1","");
// [90]  Dim saddress2 As String = vm.GetState( {36} , {37} ) 
_saddress2=_B._vm.getstate("building_address2","");
// [91]  Dim saddress3 As String = vm.GetState( {38} , {39} ) 
_saddress3=_B._vm.getstate("building_address3","");
// [92]  Dim sfulladdress As String = vm.JoinNonBlanks( {40} , Array(saddress1, saddress2, saddress3)) 
_sfulladdress=_B._vm.joinnonblanks(", ",[_saddress1,_saddress2,_saddress3]);
// [94]  buildMap.ClearMarkers 
_B._buildmap.clearmarkers();
// [95]  buildMap.AddMarker( {41} , dlat, dlng, {42} , {0} ) 
_B._buildmap.addmarker("buildx",_dlat,_dlng,"","<strong>" + _sfulladdress + "</string>");
// [96]  buildMap.SetCenter(dlat, dlng) 
_B._buildmap.setcenter(_dlat,_dlng);
// [97]  buildMap.SetZoom(8) 
_B._buildmap.setzoom(8);
// [98]  buildMap.ShowInfoWindow(True) 
_B._buildmap.showinfowindow(true);
// [99]  buildMap.Refresh 
_B._buildmap.refresh();
// End Sub
};

}
/* =========================== modIcon  =========================== */
function banano_bvmdemo_modicon() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="iconcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modIcon.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [19]  vm.CreateIcon( {2} ).SetText( {3} ).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon1").settext("menu").addtocontainer(_cont,1,1);
// [20]  vm.CreateIcon( {4} ).SetText( {5} ).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon2").settext("add").addtocontainer(_cont,1,1);
// [21]  vm.CreateIcon( {6} ).SetText( {7} ).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon3").settext("thumb_up").addtocontainer(_cont,1,1);
// [22]  vm.CreateIcon( {8} ).SetText( {9} ).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon4").settext("verified_user").addtocontainer(_cont,1,1);
// [23]  vm.CreateIcon( {10} ).SetText( {11} ).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon5").settext("home").addtocontainer(_cont,1,1);
// [25]  cont.AddComponent(1, 1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [26]  cont.AddComponent(1, 1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [28]  vm.CreateIcon( {12} ).SetText( {13} ).SetSize2x(True).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon1s").settext("menu").setsize2x(true).addtocontainer(_cont,1,1);
// [29]  vm.CreateIcon( {14} ).SetText( {15} ).SetSize3x(True).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon2s").settext("add").setsize3x(true).addtocontainer(_cont,1,1);
// [30]  vm.CreateIcon( {16} ).SetText( {17} ).SetSize4x(True).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon3s").settext("thumb_up").setsize4x(true).addtocontainer(_cont,1,1);
// [31]  vm.CreateIcon( {18} ).SetText( {19} ).SetSize5x(True).AddToContainer(cont, 1, 1) 
_B._vm.createicon("icon4s").settext("verified_user").setsize5x(true).addtocontainer(_cont,1,1);
// [33]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modInfoBox  =========================== */
function banano_bvmdemo_modinfobox() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="infoboxcode";

this._allspent= new banano_bananovuematerial_vminfobox();

this._mostspentby= new banano_bananovuematerial_vminfobox();

this._mostspenton= new banano_bananovuematerial_vminfobox();

this._spentthisyear= new banano_bananovuematerial_vminfobox();

// [12] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [13]  Log( {1} ) 
console.log("modInfoBox.Code");
// [14]  vm = vmx 
_B._vm=_vmx;
// [16]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [18]  cont.Hide 
_cont.hide();
// [20]  cont.AddRows(1).AddColumns4x3 
_cont.addrows(1).addcolumns4x3();
// [21]  allspent = vm.CreateInfoBox( {2} , Me).SetIcon( {3} ) 
_B._allspent=_B._vm.createinfobox("allspent",_B).seticon("attach_money");
// [22]  allspent.SetFrom( {4} ) 
_B._allspent.setfrom("0");
// [23]  allspent.SetTo( {5} ) 
_B._allspent.setto("3967");
// [24]  allspent.SetText( {6} ) 
_B._allspent.settext("Overall Spent");
// [25]  allspent.SetIconBackgroundColor(vm.vue.Colors.green) 
_B._allspent.seticonbackgroundcolor(_B._vm._vue._colors._green);
// [26]  allspent.SetHoverExpandEffect(True) 
_B._allspent.sethoverexpandeffect(true);
// [27]  cont.AddComponent(1,1,allspent.tostring) 
_cont.addcomponent(1,1,_B._allspent.tostring());
// [29]  mostspentby = vm.CreateInfoBox( {7} , Me).SetIcon( {8} ) 
_B._mostspentby=_B._vm.createinfobox("mostspentby",_B).seticon("insert_chart");
// [30]  mostspentby.SetFrom( {9} ) 
_B._mostspentby.setfrom("0");
// [31]  mostspentby.SetTo( {10} ) 
_B._mostspentby.setto("1800");
// [32]  mostspentby.SetText( {11} ) 
_B._mostspentby.settext("Cheque");
// [33]  mostspentby.SetIconBackgroundColor(vm.vue.Colors.Orange) 
_B._mostspentby.seticonbackgroundcolor(_B._vm._vue._colors._orange);
// [34]  mostspentby.SetHoverExpandEffect(True) 
_B._mostspentby.sethoverexpandeffect(true);
// [35]  cont.AddComponent(1,2,mostspentby.tostring) 
_cont.addcomponent(1,2,_B._mostspentby.tostring());
// [37]  mostspenton = vm.CreateInfoBox( {12} , Me).SetIcon( {13} ) 
_B._mostspenton=_B._vm.createinfobox("mostspenton",_B).seticon("insert_chart");
// [38]  mostspenton.SetFrom( {14} ) 
_B._mostspenton.setfrom("0");
// [39]  mostspenton.SetTo( {15} ) 
_B._mostspenton.setto("1600");
// [40]  mostspenton.SetText( {16} ) 
_B._mostspenton.settext("Shopping");
// [41]  mostspenton.SetIconBackgroundColor(vm.vue.Colors.blue) 
_B._mostspenton.seticonbackgroundcolor(_B._vm._vue._colors._blue);
// [42]  mostspenton.SetHoverExpandEffect(True) 
_B._mostspenton.sethoverexpandeffect(true);
// [43]  cont.AddComponent(1,3,mostspenton.tostring) 
_cont.addcomponent(1,3,_B._mostspenton.tostring());
// [45]  spentthisyear = vm.CreateInfoBox( {17} , Me).SetIcon( {18} ) 
_B._spentthisyear=_B._vm.createinfobox("spentthisyear",_B).seticon("attach_money");
// [46]  spentthisyear.SetFrom( {19} ) 
_B._spentthisyear.setfrom("0");
// [47]  spentthisyear.SetTo( {20} ) 
_B._spentthisyear.setto("2000");
// [48]  spentthisyear.SetText( {21} ) 
_B._spentthisyear.settext("Spent This Year");
// [49]  spentthisyear.SetIconBackgroundColor(vm.vue.Colors.pink) 
_B._spentthisyear.seticonbackgroundcolor(_B._vm._vue._colors._pink);
// [50]  spentthisyear.SetHoverExpandEffect(True) 
_B._spentthisyear.sethoverexpandeffect(true);
// [51]  cont.AddComponent(1,4,spentthisyear.tostring) 
_cont.addcomponent(1,4,_B._spentthisyear.tostring());
// [53]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [56] Sub allspent_click(e As BANanoEvent) 
this.allspent_click=function(_e) {
if (_B==null) _B=this;
// [57]  vm.ShowSnackBar( {22} ) 
_B._vm.showsnackbar("All Spent!");
// End Sub
};

// [60] Sub mostspentby_click(e As BANanoEvent) 
this.mostspentby_click=function(_e) {
if (_B==null) _B=this;
// [61]  vm.ShowSnackBar( {23} ) 
_B._vm.showsnackbar("Most Spent By!");
// End Sub
};

// [64] Sub mostspenton_click(e As BANanoEvent) 
this.mostspenton_click=function(_e) {
if (_B==null) _B=this;
// [65]  vm.ShowSnackBar( {24} ) 
_B._vm.showsnackbar("Most Spent On!");
// End Sub
};

// [68] Sub spentthisyear_click(e As BANanoEvent) 
this.spentthisyear_click=function(_e) {
if (_B==null) _B=this;
// [69]  vm.ShowSnackBar( {25} ) 
_B._vm.showsnackbar("Spent this Year!");
// End Sub
};

}
/* =========================== modList  =========================== */
function banano_bvmdemo_modlist() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="listcode1";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_lcontrols;
// [9]  Log( {1} ) 
console.log("modList.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name, Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns(3,12,4,4,4) 
_cont.addrows(2).addcolumns(3,12,4,4,4);
// [18]  Dim lcontrols As VMList = vm.CreateList( {2} , Me).SetElevation(2) 
_lcontrols=_B._vm.createlist("lcontrols",_B).setelevation(2);
// [19]  lcontrols.AddSubHeader( {3} ) 
_lcontrols.addsubheader("Notifications");
// [20]  lcontrols.AddCheckBox( {4} , {5} , {6} , False) 
_lcontrols.addcheckbox("notification","preview","Show Content Preview",false);
// [21]  lcontrols.AddCheckBox( {7} , {8} , {9} , False) 
_lcontrols.addcheckbox("notification","sound","Sound",false);
// [22]  lcontrols.AddCheckBox( {10} , {11} , {12} , False) 
_lcontrols.addcheckbox("notification","vibrate","Vibrate",false);
// [23]  lcontrols.AddCheckBox( {13} , {14} , {15} , False) 
_lcontrols.addcheckbox("notification","light","Notification Light",false);
// [24]  lcontrols.AddToContainer(cont, 1, 1) 
_lcontrols.addtocontainer(_cont,1,1);
// [26]  vm.CreateLABEL( {16} ).SetText( {17} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("lbl").settext("{{ notification }").addtocontainer(_cont,1,1);
// [27]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// [28]  vm.SetStateList( {18} , Array()) 
_B._vm.setstatelist("notification",[]);
// End Sub
};

}
/* =========================== modListView  =========================== */
function banano_bvmdemo_modlistview() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="listviewcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_lv;
// [9]  Log( {1} ) 
console.log("modListView.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name, Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  Dim lv As VMListView = vm.CreateListView( {2} , Me) 
_lv=_B._vm.createlistview("lv1",_B);
// [19]  lv.SetElevation(2) 
_lv.setelevation(2);
// [20]  lv.AddItem( {3} , {4} , {5} , {6} ) 
_lv.additem("inbox","move_to_inbox","Inbox","6");
// [21]  lv.AddItem( {7} , {8} , {9} ,Null) 
_lv.additem("send","send","Sent Email",null);
// [22]  lv.AddItem( {10} , {11} , {12} , {13} ) 
_lv.additem("trash","delete","Trash","20");
// [23]  lv.AddItem( {14} , {15} , {16} , {17} ) 
_lv.additem("spam","error","Spam","1");
// [25]  lv.AddToContainer(cont, 1,1) 
_lv.addtocontainer(_cont,1,1);
// [27]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [30] Sub inbox_click(e As BANanoEvent) 
this.inbox_click=function(_e) {
if (_B==null) _B=this;
// [31]  vm.ShowSnackBar( {18} ) 
_B._vm.showsnackbar("Inbox...");
// End Sub
};

// [34] Sub send_click(e As BANanoEvent) 
this.send_click=function(_e) {
if (_B==null) _B=this;
// [35]  vm.ShowSnackBar( {19} ) 
_B._vm.showsnackbar("Sent...");
// End Sub
};

// [38] Sub trash_click(e As BANanoEvent) 
this.trash_click=function(_e) {
if (_B==null) _B=this;
// [39]  vm.ShowSnackBar( {20} ) 
_B._vm.showsnackbar("Trash...");
// End Sub
};

// [42] Sub spam_click(e As BANanoEvent) 
this.spam_click=function(_e) {
if (_B==null) _B=this;
// [43]  vm.ShowSnackBar( {21} ) 
_B._vm.showsnackbar("Spam...");
// End Sub
};

}
/* =========================== modMenu  =========================== */
function banano_bvmdemo_modmenu() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="menucode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_m1,_be,_ts,_te,_at,_icn,_img;
// [9]  Log( {1} ) 
console.log("modMenu.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name, Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns(4,12,3,3,3) 
_cont.addrows(2).addcolumns(4,12,3,3,3);
// [18]  Dim m1 As VMMenu = vm.CreateMenu( {2} , Me) 
_m1=_B._vm.createmenu("m1",_B);
// [20]  m1.SetButton( {3} , {4} ) 
_m1.setbutton("","Bottom Start");
// [21]  m1.SetDirectionBottomStart(True) 
_m1.setdirectionbottomstart(true);
// [22]  m1.AddMenuItem( {5} , {6} , {7} ) 
_m1.addmenuitem("mi1","","My Item 1");
// [23]  m1.AddMenuItem( {8} , {9} , {10} ) 
_m1.addmenuitem("mi2","","My Item 2");
// [24]  m1.AddMenuItem( {11} , {12} , {13} ) 
_m1.addmenuitem("mi3","","My Item 3");
// [25]  m1.AddToContainer(cont, 1, 1) 
_m1.addtocontainer(_cont,1,1);
// [27]  Dim be As VMMenu = vm.CreateMenu( {14} , Me) 
_be=_B._vm.createmenu("be",_B);
// [29]  be.SetButton( {15} , {16} ) 
_be.setbutton("","Bottom End");
// [30]  be.SetDirectionBottomEnd(True) 
_be.setdirectionbottomend(true);
// [31]  be.AddMenuItem( {17} , {18} , {19} ) 
_be.addmenuitem("be1","","My Item 1");
// [32]  be.AddMenuItem( {20} , {21} , {22} ) 
_be.addmenuitem("be2","","My Item 2");
// [33]  be.AddMenuItem( {23} , {24} , {25} ) 
_be.addmenuitem("be3","","My Item 3");
// [34]  be.AddToContainer(cont, 1, 2) 
_be.addtocontainer(_cont,1,2);
// [36]  Dim ts As VMMenu = vm.CreateMenu( {26} , Me) 
_ts=_B._vm.createmenu("ts",_B);
// [38]  ts.SetButton( {27} , {28} ) 
_ts.setbutton("","Top Start");
// [39]  ts.SetDirectionTopStart(True) 
_ts.setdirectiontopstart(true);
// [40]  ts.AddMenuItem( {29} , {30} , {31} ) 
_ts.addmenuitem("ts1","","My Item 1");
// [41]  ts.AddMenuItem( {32} , {33} , {34} ) 
_ts.addmenuitem("ts2","","My Item 2");
// [42]  ts.AddMenuItem( {35} , {36} , {37} ) 
_ts.addmenuitem("ts3","","My Item 3");
// [43]  ts.AddToContainer(cont, 1, 3) 
_ts.addtocontainer(_cont,1,3);
// [45]  Dim te As VMMenu = vm.CreateMenu( {38} , Me) 
_te=_B._vm.createmenu("te",_B);
// [47]  te.SetButton( {39} , {40} ) 
_te.setbutton("","Top End");
// [48]  te.SetDirectionTopEnd(True) 
_te.setdirectiontopend(true);
// [49]  te.AddMenuItem( {41} , {42} , {43} ) 
_te.addmenuitem("te1","","My Item 1");
// [50]  te.AddMenuItem( {44} , {45} , {46} ) 
_te.addmenuitem("te2","","My Item 2");
// [51]  te.AddMenuItem( {47} , {48} , {49} ) 
_te.addmenuitem("te3","","My Item 3");
// [52]  te.AddToContainer(cont, 1, 4) 
_te.addtocontainer(_cont,1,4);
// [55]  Dim at As VMMenu = vm.CreateMenu( {50} , Me) 
_at=_B._vm.createmenu("at",_B);
// [57]  at.SetButton( {51} , {52} ) 
_at.setbutton("","Align with Trigger");
// [58]  at.SetSizeMedium(True) 
_at.setsizemedium(true);
// [59]  at.SetAlignTrigger(True) 
_at.setaligntrigger(true);
// [60]  at.AddMenuItem( {53} , {54} , {55} ) 
_at.addmenuitem("at1","","My Item 1");
// [61]  at.AddMenuItem( {56} , {57} , {58} ) 
_at.addmenuitem("at2","","My Item 2");
// [62]  at.AddMenuItem( {59} , {60} , {61} ) 
_at.addmenuitem("at3","","My Item 3");
// [63]  at.AddToContainer(cont, 2, 1) 
_at.addtocontainer(_cont,2,1);
// [67]  Dim icn As VMMenu = vm.CreateMenu( {62} , Me).SetIcon( {63} ) 
_icn=_B._vm.createmenu("icn",_B).seticon("contacts");
// [68]  icn.AddMenuItem( {64} , {65} , {66} ) 
_icn.addmenuitem("icn1","phone","Call Home");
// [69]  icn.AddMenuItem( {67} , {68} , {69} ) 
_icn.addmenuitem("icn2","phone","Call Work");
// [70]  icn.AddMenuItem( {70} , {71} , {72} ) 
_icn.addmenuitem("icn3","phone","Call Spouse");
// [71]  icn.AddToContainer(cont, 2, 2) 
_icn.addtocontainer(_cont,2,2);
// [74]  Dim img As VMMenu = vm.CreateMenu( {73} , Me).SetImage( {74} , {75} ) 
_img=_B._vm.createmenu("img",_B).setimage("./assets/2.png","");
// [75]  img.AddMenuItem( {76} , {77} , {78} ) 
_img.addmenuitem("img1","phone","Call Home");
// [76]  img.AddMenuItem( {79} , {80} , {81} ) 
_img.addmenuitem("img2","phone","Call Work");
// [77]  img.AddMenuItem( {82} , {83} , {84} ) 
_img.addmenuitem("img3","phone","Call Spouse");
// [78]  img.AddToContainer(cont, 2, 3) 
_img.addtocontainer(_cont,2,3);
// [80]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [84] Sub icn1_click(e As BANanoEvent) 
this.icn1_click=function(_e) {
if (_B==null) _B=this;
// [85]  vm.ShowSnackBar( {85} ) 
_B._vm.showsnackbar("Calling Home");
// End Sub
};

// [88] Sub icn2_click(e As BANanoEvent) 
this.icn2_click=function(_e) {
if (_B==null) _B=this;
// [89]  vm.ShowSnackBar( {86} ) 
_B._vm.showsnackbar("Calling Work");
// End Sub
};

// [92] Sub icn3_click(e As BANanoEvent) 
this.icn3_click=function(_e) {
if (_B==null) _B=this;
// [93]  vm.ShowSnackBar( {87} ) 
_B._vm.showsnackbar("Calling Spouse");
// End Sub
};

// [97] Sub be1_click(e As BANanoEvent) 
this.be1_click=function(_e) {
if (_B==null) _B=this;
// [98]  vm.ShowSnackBar( {88} ) 
_B._vm.showsnackbar("be1");
// End Sub
};

// [102] Sub be2_click(e As BANanoEvent) 
this.be2_click=function(_e) {
if (_B==null) _B=this;
// [103]  vm.ShowSnackBar( {89} ) 
_B._vm.showsnackbar("be2");
// End Sub
};

// [107] Sub be3_click(e As BANanoEvent) 
this.be3_click=function(_e) {
if (_B==null) _B=this;
// [108]  vm.ShowSnackBar( {90} ) 
_B._vm.showsnackbar("be3");
// End Sub
};

// [112] Sub mi1_click(e As BANanoEvent) 
this.mi1_click=function(_e) {
if (_B==null) _B=this;
// [113]  vm.ShowSnackBar( {91} ) 
_B._vm.showsnackbar("mi1");
// End Sub
};

// [116] Sub mi2_click(e As BANanoEvent) 
this.mi2_click=function(_e) {
if (_B==null) _B=this;
// [117]  vm.ShowSnackBar( {92} ) 
_B._vm.showsnackbar("mi2");
// End Sub
};

// [120] Sub mi3_click(e As BANanoEvent) 
this.mi3_click=function(_e) {
if (_B==null) _B=this;
// [121]  vm.ShowSnackBar( {93} ) 
_B._vm.showsnackbar("mi3");
// End Sub
};

}
/* =========================== modAvatar  =========================== */
function banano_bvmdemo_modavatar() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="avatarcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modAvatar.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  vm.CreateAvatar( {2} ,Me).SetAlt( {3} ).SetValue( {4} ).AddToContainer(cont,1,1) 
_B._vm.createavatar("sponge",_B).setalt("My Avatar").setvalue("./assets/sponge.png").addtocontainer(_cont,1,1);
// [19]  cont.AddComponent(1,1,vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [20]  cont.AddComponent(1,1,vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [22]  vm.CreateAvatar( {5} ,Me).SetIcon( {6} ).SetSmall(True).SetAvatarIcon(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("home",_B).seticon("home").setsmall(true).setavataricon(true).addtocontainer(_cont,1,1);
// [23]  vm.CreateAvatar( {7} ,Me).SetIcon( {8} ).SetAvatarIcon(True).SetPrimary(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("folder",_B).seticon("folder").setavataricon(true).setprimary(true).addtocontainer(_cont,1,1);
// [24]  vm.CreateAvatar( {9} ,Me).SetIcon( {10} ).SetLarge(True).SetAvatarIcon(True).SetAccent(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("favorite",_B).seticon("favorite").setlarge(true).setavataricon(true).setaccent(true).addtocontainer(_cont,1,1);
// [26]  cont.AddComponent(1,1,vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [27]  cont.AddComponent(1,1,vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [28]  vm.CreateAvatar( {11} ,Me).SetAvatarIcon(True).SetSmall(True).SetText( {12} ).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).setsmall(true).settext("B").addtocontainer(_cont,1,1);
// [29]  vm.CreateAvatar( {13} ,Me).SetAvatarIcon(True).SetSmall(True).SetText( {14} ).SetPrimary(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).setsmall(true).settext("B").setprimary(true).addtocontainer(_cont,1,1);
// [30]  vm.CreateAvatar( {15} ,Me).SetAvatarIcon(True).SetSmall(True).SetText( {16} ).SetAccent(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).setsmall(true).settext("B").setaccent(true).addtocontainer(_cont,1,1);
// [32]  cont.AddComponent(1,1,vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [33]  vm.CreateAvatar( {17} ,Me).SetAvatarIcon(True).SetText( {18} ).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).settext("A").addtocontainer(_cont,1,1);
// [34]  vm.CreateAvatar( {19} ,Me).SetAvatarIcon(True).SetText( {20} ).SetPrimary(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).settext("A").setprimary(true).addtocontainer(_cont,1,1);
// [35]  vm.CreateAvatar( {21} ,Me).SetAvatarIcon(True).SetText( {22} ).SetAccent(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).settext("A").setaccent(true).addtocontainer(_cont,1,1);
// [38]  cont.AddComponent(1,1,vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [39]  vm.CreateAvatar( {23} ,Me).SetAvatarIcon(True).SetLarge(True).SetTextRipple( {24} ).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).setlarge(true).settextripple("MM").addtocontainer(_cont,1,1);
// [40]  vm.CreateAvatar( {25} ,Me).SetAvatarIcon(True).SetLarge(True).SetTextRipple( {26} ).SetPrimary(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).setlarge(true).settextripple("MM").setprimary(true).addtocontainer(_cont,1,1);
// [41]  vm.CreateAvatar( {27} ,Me).SetAvatarIcon(True).SetLarge(True).SetTextRipple( {28} ).SetAccent(True).AddToContainer(cont,1,1) 
_B._vm.createavatar("",_B).setavataricon(true).setlarge(true).settextripple("MM").setaccent(true).addtocontainer(_cont,1,1);
// [43]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modProgress  =========================== */
function banano_bvmdemo_modprogress() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="progresscode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modProgress.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(4).AddColumns2x6 
_cont.addrows(4).addcolumns2x6();
// [18]  vm.CreateProgress( {2} , Me).SetMargin( {3} ).SetModeDeterminate(True).SetValue(10).AddToContainer(cont, 1, 1) 
_B._vm.createprogress("p1",_B).setmargin("25px").setmodedeterminate(true).setvalue(10).addtocontainer(_cont,1,1);
// [19]  vm.CreateProgress( {4} , Me).SetMargin( {5} ).SetModeDeterminate(True).SetValue(20).SetAccent(True).AddToContainer(cont, 1, 2) 
_B._vm.createprogress("p2",_B).setmargin("25px").setmodedeterminate(true).setvalue(20).setaccent(true).addtocontainer(_cont,1,2);
// [21]  vm.CreateProgress( {6} , Me).SetMargin( {7} ).SetModeInDeterminate(True).AddToContainer(cont, 2, 1) 
_B._vm.createprogress("p3",_B).setmargin("25px").setmodeindeterminate(true).addtocontainer(_cont,2,1);
// [22]  vm.CreateProgress( {8} , Me).SetMargin( {9} ).SetModeInDeterminate(True).SetAccent(True).AddToContainer(cont, 2, 2) 
_B._vm.createprogress("p4",_B).setmargin("25px").setmodeindeterminate(true).setaccent(true).addtocontainer(_cont,2,2);
// [24]  vm.CreateProgress( {10} , Me).SetMargin( {11} ).SetModeBuffer(True).SetValue(25).SetBuffer(40).AddToContainer(cont, 3, 1) 
_B._vm.createprogress("p5",_B).setmargin("25px").setmodebuffer(true).setvalue(25).setbuffer(40).addtocontainer(_cont,3,1);
// [25]  vm.CreateProgress( {12} , Me).SetMargin( {13} ).SetModeBuffer(True).SetValue(25).SetBuffer(40).SetAccent(True).AddToContainer(cont, 3, 2) 
_B._vm.createprogress("p6",_B).setmargin("25px").setmodebuffer(true).setvalue(25).setbuffer(40).setaccent(true).addtocontainer(_cont,3,2);
// [27]  vm.CreateProgress( {14} , Me).SetMargin( {15} ).SetModeQuery(True).AddToContainer(cont, 4, 1) 
_B._vm.createprogress("p7",_B).setmargin("25px").setmodequery(true).addtocontainer(_cont,4,1);
// [28]  vm.CreateProgress( {16} , Me).SetMargin( {17} ).SetModeQuery(True).SetAccent(True).AddToContainer(cont, 4, 2) 
_B._vm.createprogress("p8",_B).setmargin("25px").setmodequery(true).setaccent(true).addtocontainer(_cont,4,2);
// [31]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modRadio  =========================== */
function banano_bvmdemo_modradio() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="radiocode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_rg;
// [9]  Log( {1} ) 
console.log("modRadio.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  vm.CreateRadio( {2} ,Me).SetVmodel( {3} ).SetValue( {4} ,True).SetText( {5} ).AddToContainer(cont, 1, 1) 
_B._vm.createradio("rd1",_B).setvmodel("radio").setvalue("false",true).settext("Boolean").addtocontainer(_cont,1,1);
// [19]  vm.CreateRadio( {6} ,Me).SetVmodel( {7} ).SetValue( {8} ,False).SetText( {9} ).AddToContainer(cont, 1, 1) 
_B._vm.createradio("rd2",_B).setvmodel("radio").setvalue("my-radio",false).settext("String").addtocontainer(_cont,1,1);
// [20]  vm.CreateRadio( {10} ,Me).SetVmodel( {11} ).SetText( {12} ).AddToContainer(cont, 1, 1) 
_B._vm.createradio("rd3",_B).setvmodel("radio").settext("No Value").addtocontainer(_cont,1,1);
// [21]  vm.CreateRadio( {13} ,Me).SetVmodel( {14} ).SetDisabled(True).SetText( {15} ).AddToContainer(cont, 1, 1) 
_B._vm.createradio("rd4",_B).setvmodel("radio").setdisabled(true).settext("Disabled").addtocontainer(_cont,1,1);
// [23]  cont.AddComponent(1, 1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [24]  cont.AddComponent(1, 1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [26]  Dim rg As VMRadioGroup = vm.CreateRadioGroup( {16} , {17} , Me).SetVModel( {18} ).SetValue( {19} ) 
_rg=_B._vm.createradiogroup("rg1","Languages",_B).setvmodel("mybook").setvalue("l1");
// [27]  rg.AddItem( {20} , {21} ) 
_rg.additem("l1","Xhosa");
// [28]  rg.AddItem( {22} , {23} ) 
_rg.additem("l2","English");
// [29]  rg.AddItem( {24} , {25} ) 
_rg.additem("l3","Afrikaans");
// [30]  rg.AddToContainer(cont, 1, 1) 
_rg.addtocontainer(_cont,1,1);
// [32]  vm.CreateLABEL( {26} ).SetText( {27} ).AddToContainer(cont, 1, 1) 
_B._vm.createlabel("lbl").settext("{{ radio }}").addtocontainer(_cont,1,1);
// [33]  cont.AddComponent(1, 1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [34]  vm.CreateLABEL( {28} ).SetText( {29} ).AddToContainer(cont, 1, 1) 
_B._vm.createlabel("lbl").settext("{{ mybook }}").addtocontainer(_cont,1,1);
// [36]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modSelect  =========================== */
function banano_bvmdemo_modselect() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="selectcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_selmovie,_countries,_selcountries,_fonts,_selfonts;
// [9]  Log( {1} ) 
console.log("modSelect.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns(3,12,4,4,4) 
_cont.addrows(2).addcolumns(3,12,4,4,4);
// [18]  Dim selMovie As VMSelect = vm.CreateSelect( {2} ,Me).SetVModel( {3} ).SetMultiple(True) 
_selmovie=_B._vm.createselect("movie",_B).setvmodel("movie").setmultiple(true);
// [19]  selMovie.SetLabel( {4} ).SetValue( {5} ) 
_selmovie.setlabel("Movie").setvalue("godfather");
// [20]  selMovie.additem( {6} , {7} ) 
_selmovie.additem("fightclub","Fight Club");
// [21]  selMovie.additem( {8} , {9} ) 
_selmovie.additem("godfather","Godfather");
// [22]  selMovie.additem( {10} , {11} ) 
_selmovie.additem("godfatherii","Godfather II");
// [23]  selMovie.additem( {12} , {13} ) 
_selmovie.additem("godfatheriii","Godfather III");
// [24]  selMovie.additem( {14} , {15} ) 
_selmovie.additem("godfellas","Godfellas");
// [25]  selMovie.additem( {16} , {17} ) 
_selmovie.additem("pulpfiction","Pulp Fiction");
// [26]  selMovie.additem( {18} , {19} ) 
_selmovie.additem("scarface","Scarface");
// [27]  selMovie.AddToContainer(cont, 1, 1) 
_selmovie.addtocontainer(_cont,1,1);
// [30]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [31]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [33]  vm.CreateLABEL( {20} ).SetText( {21} ).AddToContainer(cont, 1, 1) 
_B._vm.createlabel("lbl").settext("{{ movie }}").addtocontainer(_cont,1,1);
// [35]  Dim countries As List 
_countries=[];
// [36]  countries.initialize 
_countries.length=0;
// [37]  countries.add(CreateMap( {22} : {23} , {24} : {25} )) 
_countries.push({"id":"australia", "text":"Australia"});
// [38]  countries.add(CreateMap( {26} : {27} , {28} : {29} )) 
_countries.push({"id":"brazil", "text":"Brazil"});
// [39]  countries.add(CreateMap( {30} : {31} , {32} : {33} )) 
_countries.push({"id":"japan", "text":"Japan"});
// [40]  countries.add(CreateMap( {34} : {35} , {36} : {37} )) 
_countries.push({"id":"united-states", "text":"United States"});
// [41]  vm.setstatesingle( {38} , countries) 
_B._vm.setstatesingle("countries",_countries);
// [43]  Dim selCountries As VMSelect = vm.CreateSelect( {39} ,Me).SetVModel( {40} ) 
_selcountries=_B._vm.createselect("country",_B).setvmodel("country");
// [44]  selCountries.SetPlaceholder( {41} ) 
_selcountries.setplaceholder("Country");
// [45]  selCountries.SetDataSource( {42} , {43} , {44} ) 
_selcountries.setdatasource("countries","id","text");
// [46]  selCountries.AddToContainer(cont, 1, 2) 
_selcountries.addtocontainer(_cont,1,2);
// [48]  cont.AddComponent(1,2, vm.BR) 
_cont.addcomponent(1,2,_B._vm.br());
// [49]  cont.AddComponent(1,2, vm.BR) 
_cont.addcomponent(1,2,_B._vm.br());
// [51]  vm.CreateButton( {45} ,Me).SetText( {46} ).SetRaised(True).AddToContainer(cont, 1,2) 
_B._vm.createbutton("btnSel",_B).settext("Set Japan").setraised(true).addtocontainer(_cont,1,2);
// [52]  cont.AddComponent(1,2, vm.BR) 
_cont.addcomponent(1,2,_B._vm.br());
// [53]  cont.AddComponent(1,2, vm.BR) 
_cont.addcomponent(1,2,_B._vm.br());
// [54]  vm.CreateLABEL( {47} ).SetText( {48} ).AddToContainer(cont, 1, 2) 
_B._vm.createlabel("lbl2").settext("{{ country }}").addtocontainer(_cont,1,2);
// [56]  Dim fonts As Map = CreateMap() 
_fonts={};
// [57]  fonts.put( {49} , {50} ) 
_fonts["arial"]="Arial";
// [58]  fonts.put( {51} , {52} ) 
_fonts["calibri"]="Calibri";
// [59]  fonts.put( {53} , {54} ) 
_fonts["cambria"]="Cambria";
// [60]  fonts.put( {55} , {56} ) 
_fonts["comicsans"]="Comic Sans";
// [61]  fonts.put( {57} , {58} ) 
_fonts["consolas"]="Consolas";
// [62]  fonts.put( {59} , {60} ) 
_fonts["courier"]="Courier";
// [63]  fonts.put( {61} , {62} ) 
_fonts["droidsans"]="Droid Sans";
// [64]  fonts.put( {63} , {64} ) 
_fonts["georgia"]="Georgia";
// [65]  fonts.put( {65} , {66} ) 
_fonts["helvetica"]="Helvetica";
// [66]  fonts.put( {67} , {68} ) 
_fonts["impact"]="Impact";
// [67]  fonts.put( {69} , {70} ) 
_fonts["roboto"]="Roboto";
// [68]  fonts.put( {71} , {72} ) 
_fonts["segoeui"]="Segoe UI";
// [69]  fonts.put( {73} , {74} ) 
_fonts["timesnewroman"]="Times New Roman";
// [70]  fonts.put( {75} , {76} ) 
_fonts["ubuntu"]="Ubuntu";
// [71]  fonts.put( {77} , {78} ) 
_fonts["verdana"]="Verdana";
// [73]  Dim selFonts As VMSelect = vm.CreateSelect( {79} ,Me).SetVModel( {80} ).SetLabel( {81} ) 
_selfonts=_B._vm.createselect("font",_B).setvmodel("font").setlabel("Font");
// [74]  selFonts.SetPlaceholder( {82} ) 
_selfonts.setplaceholder("Font");
// [75]  selFonts.SetOptions( {83} , fonts, {84} , {85} ) 
_selfonts.setoptions("fontnames",_fonts,"id","text");
// [76]  selFonts.SetRequired(True).SetErrorText( {86} ) 
_selfonts.setrequired(true).seterrortext("Font should be selected!");
// [77]  selFonts.AddToContainer(cont, 1, 3) 
_selfonts.addtocontainer(_cont,1,3);
// [79]  cont.AddComponent(1,3, vm.BR) 
_cont.addcomponent(1,3,_B._vm.br());
// [80]  cont.AddComponent(1,3, vm.BR) 
_cont.addcomponent(1,3,_B._vm.br());
// [82]  vm.CreateLABEL( {87} ).SetText( {88} ).AddToContainer(cont, 1, 3) 
_B._vm.createlabel("lblx").settext("{{ font }}").addtocontainer(_cont,1,3);
// [84]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// [85]  vm.SHowError( {89} ) 
_B._vm.showerror("font");
// End Sub
};

// [88] Sub btnSel_click(e As BANanoEvent) 
this.btnsel_click=function(_e) {
if (_B==null) _B=this;
// [89]  vm.setstatesingle( {90} , {91} ) 
_B._vm.setstatesingle("country","japan");
// End Sub
};

// [92] Sub countryOpened(e As BANanoEvent) 
this.countryopened=function(_e) {
if (_B==null) _B=this;
// [93]  vm.ShowSnackBar( {92} ) 
_B._vm.showsnackbar("Country Opened!");
// End Sub
};

// [96] Sub countryClosed(e As BANanoEvent) 
this.countryclosed=function(_e) {
if (_B==null) _B=this;
// [97]  vm.ShowSnackBar( {93} ) 
_B._vm.showsnackbar("Country Closed!");
// End Sub
};

// [100] Sub country_change(value As String) 
this.country_change=function(_value) {
if (_B==null) _B=this;
// [101]  vm.ShowSnackBar(value) 
_B._vm.showsnackbar(_value);
// End Sub
};

}
/* =========================== modSkeleton  =========================== */
function banano_bvmdemo_modskeleton() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="skeletoncode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modSkeleton.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [19]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modSnackBar  =========================== */
function banano_bvmdemo_modsnackbar() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="snackcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_sb1;
// [9]  Log( {1} ) 
console.log("modSnackBar.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  Dim sb1 As VMSnackbar = vm.CreateSnackBar( {2} , Me).SetPositionLeft(True).SetDuration(3000).SetPersistent(True) 
_sb1=_B._vm.createsnackbar("sb1",_B).setpositionleft(true).setduration(3000).setpersistent(true);
// [19]  sb1.SetText( {3} ).SetOnClick( {4} ) 
_sb1.settext("This is my snack bar!").setonclick("sb1close_click");
// [20]  sb1.Button.SetText( {5} ).SetAccent(True) 
_sb1._button.settext("Retry").setaccent(true);
// [21]  sb1.button.Show 
_sb1._button.show();
// [22]  vm.AddSnackBar(sb1) 
_B._vm.addsnackbar(_sb1);
// [24]  vm.CreateButton( {6} , Me).SetText( {7} ).SetRaised(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("btnx",_B).settext("Show Snackbar").setraised(true).addtocontainer(_cont,1,1);
// [26]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [29] Sub btnx_click(e As BANanoEvent) 
this.btnx_click=function(_e) {
if (_B==null) _B=this;
// [30]  vm.showdialog( {8} ) 
_B._vm.showdialog("sb1");
// End Sub
};

// [33] Sub sb1close_click(e As BANanoEvent) 
this.sb1close_click=function(_e) {
if (_B==null) _B=this;
// [34]  vm.showsnackbar( {9} ) 
_B._vm.showsnackbar("Retry clicked!");
// End Sub
};

}
/* =========================== modSpeedDial  =========================== */
function banano_bvmdemo_modspeeddial() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="speedcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_sp1,_sp2,_sp3,_sp4;
// [9]  Log( {1} ) 
console.log("modSpeedDial.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns4x3 
_cont.addrows(2).addcolumns4x3();
// [18]  Dim sp1 As VMSpeedDial = vm.CreateSpeedDial( {2} , Me).SetEffectFling(True).SetPrimary(True).SetIcon( {3} ) 
_sp1=_B._vm.createspeeddial("sp1",_B).seteffectfling(true).setprimary(true).seticon("my_location");
// [19]  sp1.AddButton( {4} , {5} ) 
_sp1.addbutton("btnDirection","directions");
// [20]  sp1.AddButton( {6} , {7} ) 
_sp1.addbutton("btnStreetView","streetview");
// [21]  sp1.AddToContainer(cont, 1, 1) 
_sp1.addtocontainer(_cont,1,1);
// [24]  Dim sp2 As VMSpeedDial = vm.CreateSpeedDial( {8} , Me).SetEventClick(True).SetEffectOpacity(True).SetAccent(True).SetIcon( {9} ) 
_sp2=_B._vm.createspeeddial("sp2",_B).seteventclick(true).seteffectopacity(true).setaccent(true).seticon("add");
// [25]  sp2.AddButton( {10} , {11} ) 
_sp2.addbutton("btnNote","note");
// [26]  sp2.AddButton( {12} , {13} ) 
_sp2.addbutton("btnEvent","event");
// [27]  sp2.AddToContainer(cont, 1, 2) 
_sp2.addtocontainer(_cont,1,2);
// [29]  Dim sp3 As VMSpeedDial = vm.CreateSpeedDial( {14} , Me).SetPrimary(True).SetInitialIcon( {15} ).SetFinalIcon( {16} ) 
_sp3=_B._vm.createspeeddial("sp3",_B).setprimary(true).setinitialicon("add").setfinalicon("edit");
// [30]  sp3.AddButton( {17} , {18} ) 
_sp3.addbutton("btnDirection","directions");
// [31]  sp3.AddButton( {19} , {20} ) 
_sp3.addbutton("btnStreetView","streetview");
// [32]  sp3.AddToContainer(cont, 1, 3) 
_sp3.addtocontainer(_cont,1,3);
// [34]  Dim sp4 As VMSpeedDial = vm.CreateSpeedDial( {21} , Me).SetEventClick(True).SetAccent(True).SetInitialIcon( {22} ).SetFinalIcon( {23} ) 
_sp4=_B._vm.createspeeddial("sp4",_B).seteventclick(true).setaccent(true).setinitialicon("add").setfinalicon("close");
// [35]  sp4.AddButton( {24} , {25} ) 
_sp4.addbutton("btnNote","note");
// [36]  sp4.AddButton( {26} , {27} ) 
_sp4.addbutton("btnEvent","event");
// [37]  sp4.AddToContainer(cont, 1, 4) 
_sp4.addtocontainer(_cont,1,4);
// [39]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [42] Sub btndirection_click(e As BANanoEvent) 
this.btndirection_click=function(_e) {
if (_B==null) _B=this;
// [43]  vm.ShowSnackBar( {28} ) 
_B._vm.showsnackbar("Show Directions");
// End Sub
};

// [46] Sub btnstreetview_click(e As BANanoEvent) 
this.btnstreetview_click=function(_e) {
if (_B==null) _B=this;
// [47]  vm.showsnackbar( {29} ) 
_B._vm.showsnackbar("Street View");
// End Sub
};

}
/* =========================== modSpinner  =========================== */
function banano_bvmdemo_modspinner() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="spinnercode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modSpinner.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(4).AddColumns2x6 
_cont.addrows(4).addcolumns2x6();
// [18]  vm.CreateSpinner( {2} , Me).SetMargin( {3} ).SetModeDeterminate(True).SetValue(10).AddToContainer(cont, 1, 1) 
_B._vm.createspinner("s1",_B).setmargin("25px").setmodedeterminate(true).setvalue(10).addtocontainer(_cont,1,1);
// [19]  vm.CreateSpinner( {4} , Me).SetMargin( {5} ).SetModeDeterminate(True).SetValue(20).SetAccent(True).AddToContainer(cont, 1, 2) 
_B._vm.createspinner("s2",_B).setmargin("25px").setmodedeterminate(true).setvalue(20).setaccent(true).addtocontainer(_cont,1,2);
// [21]  vm.CreateSpinner( {6} , Me).SetMargin( {7} ).SetModeInDeterminate(True).AddToContainer(cont, 2, 1) 
_B._vm.createspinner("s3",_B).setmargin("25px").setmodeindeterminate(true).addtocontainer(_cont,2,1);
// [22]  vm.CreateSpinner( {8} , Me).SetMargin( {9} ).SetModeInDeterminate(True).SetAccent(True).AddToContainer(cont, 2, 2) 
_B._vm.createspinner("s4",_B).setmargin("25px").setmodeindeterminate(true).setaccent(true).addtocontainer(_cont,2,2);
// [24]  vm.CreateSpinner( {10} , Me).SetMargin( {11} ).SetModeInDeterminate(True).SetDiameter(100).SetStroke(10).AddToContainer(cont, 3, 1) 
_B._vm.createspinner("s5",_B).setmargin("25px").setmodeindeterminate(true).setdiameter(100).setstroke(10).addtocontainer(_cont,3,1);
// [25]  vm.CreateSpinner( {12} , Me).SetMargin( {13} ).SetModeInDeterminate(True).SetDiameter(30).SetStroke(3).SetAccent(True).AddToContainer(cont, 3, 2) 
_B._vm.createspinner("s6",_B).setmargin("25px").setmodeindeterminate(true).setdiameter(30).setstroke(3).setaccent(true).addtocontainer(_cont,3,2);
// [27]  vm.CreateSpinner( {14} , Me).SetMargin( {15} ).SetModeInDeterminate(True).SetStroke(3).AddToContainer(cont, 4, 1) 
_B._vm.createspinner("s7",_B).setmargin("25px").setmodeindeterminate(true).setstroke(3).addtocontainer(_cont,4,1);
// [28]  vm.CreateSpinner( {16} , Me).SetMargin( {17} ).SetModeInDeterminate(True).SetDiameter(30).SetAccent(True).AddToContainer(cont, 4, 2) 
_B._vm.createspinner("s8",_B).setmargin("25px").setmodeindeterminate(true).setdiameter(30).setaccent(true).addtocontainer(_cont,4,2);
// [31]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modSteppers  =========================== */
function banano_bvmdemo_modsteppers() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="steppercode";

this._step4= new banano_bananovuematerial_vmsteppers();

// [9] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_step1,_step2,_step3;
// [10]  Log( {1} ) 
console.log("modSkeleton.Code");
// [11]  vm = vmx 
_B._vm=_vmx;
// [13]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [15]  cont.Hide 
_cont.hide();
// [17]  cont.addrows(4).AddColumns12 
_cont.addrows(4).addcolumns12();
// [19]  Dim step1 As VMSteppers = vm.CreateSteppers( {2} , Me).SetElevation(2).SetMargin( {3} ) 
_step1=_B._vm.createsteppers("step1",_B).setelevation(2).setmargin("10px");
// [20]  step1.AddStep( {4} , {5} , {6} ,True,Null) 
_step1.addstep("first","First Step","",true,null);
// [21]  step1.AddStep( {7} , {8} , {9} ,True,Null) 
_step1.addstep("second","Second Step","",true,null);
// [22]  step1.AddStep( {10} , {11} , {12} ,True,Null) 
_step1.addstep("third","Third Step","",true,null);
// [23]  step1.AddToContainer(cont, 1, 1) 
_step1.addtocontainer(_cont,1,1);
// [25]  Dim step2 As VMSteppers = vm.CreateSteppers( {13} , Me).SetAlternative(True).SetElevation(2).SetMargin( {14} ) 
_step2=_B._vm.createsteppers("step2",_B).setalternative(true).setelevation(2).setmargin("10px");
// [26]  step2.AddStep( {15} , {16} , {17} ,True,Null) 
_step2.addstep("first2","First Step","",true,null);
// [27]  step2.AddStep( {18} , {19} , {20} ,True,Null) 
_step2.addstep("second2","Second Step","",true,null);
// [28]  step2.AddStep( {21} , {22} , {23} ,True,Null) 
_step2.addstep("third2","Third Step","",true,null);
// [29]  step2.AddToContainer(cont, 2, 1) 
_step2.addtocontainer(_cont,2,1);
// [31]  Dim step3 As VMSteppers = vm.CreateSteppers( {24} , Me).SetVertical(True).SetElevation(2).SetMargin( {25} ) 
_step3=_B._vm.createsteppers("step3",_B).setvertical(true).setelevation(2).setmargin("10px");
// [32]  step3.AddStep( {26} , {27} , {28} ,True,Null) 
_step3.addstep("first3","First Step","Optional",true,null);
// [33]  step3.AddStep( {29} , {30} , {31} ,True,Null) 
_step3.addstep("second3","Second Step","",true,null);
// [34]  step3.AddStep( {32} , {33} , {34} ,True,Null) 
_step3.addstep("third3","Third Step","",true,null);
// [35]  step3.AddToContainer(cont, 3, 1) 
_step3.addtocontainer(_cont,3,1);
// [37]  step4 = vm.CreateSteppers( {35} , Me).SetStepActive( {36} ).SetLinear(True).SetElevation(2).SetMargin( {37} ) 
_B._step4=_B._vm.createsteppers("step4",_B).setstepactive("first4").setlinear(true).setelevation(2).setmargin("10px");
// [38]  step4.AddStep( {38} , {39} , {40} ,True,FirstStep.tostring) 
_B._step4.addstep("first4","First Step","Optional",true,_B.firststep(_B).tostring());
// [39]  step4.AddStep( {41} , {42} , {43} ,True,SecondStep.ToString) 
_B._step4.addstep("second4","Second Step","",true,_B.secondstep(_B).tostring());
// [40]  step4.AddStep( {44} , {45} , {46} ,True,ThirdStep.tostring) 
_B._step4.addstep("third4","Third Step","",true,_B.thirdstep(_B).tostring());
// [41]  step4.AddToContainer(cont,4, 1) 
_B._step4.addtocontainer(_cont,4,1);
// [43]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [47] Sub FirstStep As VMContainer 
this.firststep=function() {
if (_B==null) _B=this;
var _el;
// [48]  Dim el As VMContainer = vm.CreateContainer( {47} , Me) 
_el=_B._vm.createcontainer("firststep",_B);
// [50]  el.AddRows(1).AddColumns12 
_el.addrows(1).addcolumns12();
// [51]  el.AddRows(1).AddColumns2x6 
_el.addrows(1).addcolumns2x6();
// [52]  vm.CreateLABEL( {48} ).SetParagraph.SetText( {49} ).AddToContainer(el, 1, 1) 
_B._vm.createlabel("fs1label").setparagraph().settext("This is step 1").addtocontainer(_el,1,1);
// [53]  vm.CreateButton( {50} , Me).SetText( {51} ).SetRaised(True).SetPrimary(True).AddToContainer(el, 2, 1) 
_B._vm.createbutton("tostep2",_B).settext("Next").setraised(true).setprimary(true).addtocontainer(_el,2,1);
// [54]  Return el 
return _el;
// End Sub
};

// [58] Sub SecondStep As VMContainer 
this.secondstep=function() {
if (_B==null) _B=this;
var _el;
// [59]  Dim el As VMContainer = vm.CreateContainer( {52} , Me) 
_el=_B._vm.createcontainer("firststep",_B);
// [62]  el.AddRows(1).AddColumns12 
_el.addrows(1).addcolumns12();
// [63]  el.AddRows(1).AddColumns2x6 
_el.addrows(1).addcolumns2x6();
// [64]  vm.CreateLABEL( {53} ).SetParagraph.SetText( {54} ).AddToContainer(el, 1, 1) 
_B._vm.createlabel("fs1label").setparagraph().settext("This is step 2").addtocontainer(_el,1,1);
// [65]  vm.CreateButton( {55} , Me).SetText( {56} ).SetRaised(True).SetPrimary(True).AddToContainer(el, 2, 1) 
_B._vm.createbutton("tostep1",_B).settext("Back").setraised(true).setprimary(true).addtocontainer(_el,2,1);
// [66]  vm.CreateButton( {57} , Me).SetText( {58} ).SetRaised(True).SetPrimary(True).AddToContainer(el, 2, 1) 
_B._vm.createbutton("tostep3",_B).settext("Next").setraised(true).setprimary(true).addtocontainer(_el,2,1);
// [67]  Return el 
return _el;
// End Sub
};

// [70] Sub tostep1_click(e As BANanoEvent) 
this.tostep1_click=function(_e) {
if (_B==null) _B=this;
// [71]  step4.SetStepActive( {59} ) 
_B._step4.setstepactive("first4");
// [72]  step4.SetStepDone( {60} ,False) 
_B._step4.setstepdone("second4",false);
// End Sub
};

// [75] Sub tostep2_click(e As BANanoEvent) 
this.tostep2_click=function(_e) {
if (_B==null) _B=this;
// [76]  step4.SetStepActive( {61} ) 
_B._step4.setstepactive("second4");
// [77]  step4.SetStepDone( {62} ,True) 
_B._step4.setstepdone("first4",true);
// End Sub
};

// [80] Sub tostep3_click(e As BANanoEvent) 
this.tostep3_click=function(_e) {
if (_B==null) _B=this;
// [81]  step4.SetStepActive( {63} ) 
_B._step4.setstepactive("third4");
// [82]  step4.SetStepDone( {64} ,True) 
_B._step4.setstepdone("second4",true);
// End Sub
};

// [85] Sub ThirdStep As VMContainer 
this.thirdstep=function() {
if (_B==null) _B=this;
var _el;
// [86]  Dim el As VMContainer = vm.CreateContainer( {65} , Me) 
_el=_B._vm.createcontainer("firststep",_B);
// [89]  el.AddRows(1).AddColumns12 
_el.addrows(1).addcolumns12();
// [90]  el.AddRows(1).AddColumns2x6 
_el.addrows(1).addcolumns2x6();
// [91]  vm.CreateLABEL( {66} ).SetParagraph.SetText( {67} ).AddToContainer(el, 1, 1) 
_B._vm.createlabel("fs1label").setparagraph().settext("This is step 3").addtocontainer(_el,1,1);
// [92]  vm.CreateButton( {68} , Me).SetText( {69} ).SetRaised(True).SetPrimary(True).AddToContainer(el, 2, 1) 
_B._vm.createbutton("tostep2",_B).settext("Back").setraised(true).setprimary(true).addtocontainer(_el,2,1);
// [93]  vm.CreateButton( {70} , Me).SetText( {71} ).SetRaised(True).SetPrimary(True).AddToContainer(el, 2, 1) 
_B._vm.createbutton("done",_B).settext("Done").setraised(true).setprimary(true).addtocontainer(_el,2,1);
// [94]  Return el 
return _el;
// End Sub
};

}
/* =========================== modSwitch  =========================== */
function banano_bvmdemo_modswitch() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="switchcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modSwitch.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  vm.createswitch( {2} ,Me).SetVModel( {3} ).SetValue( {4} ).SetText( {5} ).AddToContainer(cont, 1,1) 
_B._vm.createswitch("s1",_B).setvmodel("array").setvalue("1").settext("Array").addtocontainer(_cont,1,1);
// [19]  vm.createswitch( {6} ,Me).SetVModel( {7} ).SetValue( {8} ).SetText( {9} ).AddToContainer(cont, 1,1) 
_B._vm.createswitch("s2",_B).setvmodel("array").setvalue("2").settext("Array").addtocontainer(_cont,1,1);
// [20]  vm.createswitch( {10} ,Me).SetVModel( {11} ).SetText( {12} ).AddToContainer(cont, 1,1) 
_B._vm.createswitch("s3",_B).setvmodel("boolean").settext("Boolean").addtocontainer(_cont,1,1);
// [21]  vm.createswitch( {13} ,Me).SetVModel( {14} ).SetText( {15} ).SetValue( {16} ).AddToContainer(cont, 1,1) 
_B._vm.createswitch("s4",_B).setvmodel("string").settext("String").setvalue("my-switch").addtocontainer(_cont,1,1);
// [22]  vm.createswitch( {17} ,Me).SetVModel( {18} ).SetText( {19} ).SetPrimary(True).AddToContainer(cont, 1,1) 
_B._vm.createswitch("s5",_B).setvmodel("novalue").settext("No Value").setprimary(true).addtocontainer(_cont,1,1);
// [23]  vm.createswitch( {20} ,Me).SetVModel( {21} ).SetText( {22} ).SetDisabled(True).AddToContainer(cont, 1,1) 
_B._vm.createswitch("s6",_B).setvmodel("disabled").settext("Disabled").setdisabled(true).addtocontainer(_cont,1,1);
// [25]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [26]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [28]  vm.CreateLABEL( {23} ).SetText( {24} ).SetParagraph.AddToContainer(cont, 1, 1) 
_B._vm.createlabel("lbl").settext("{{ array }}").setparagraph().addtocontainer(_cont,1,1);
// [29]  vm.CreateLABEL( {25} ).SetText( {26} ).SetParagraph.AddToContainer(cont, 1, 1) 
_B._vm.createlabel("lbl1").settext("{{ boolean }}").setparagraph().addtocontainer(_cont,1,1);
// [30]  vm.CreateLABEL( {27} ).SetText( {28} ).SetParagraph.AddToContainer(cont, 1, 1) 
_B._vm.createlabel("lbl2").settext("{{ string }}").setparagraph().addtocontainer(_cont,1,1);
// [31]  vm.CreateLABEL( {29} ).SetText( {30} ).SetParagraph.AddToContainer(cont, 1, 1) 
_B._vm.createlabel("lbl3").settext("{{ novalue }}").setparagraph().addtocontainer(_cont,1,1);
// [33]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// [34]  vm.SetStateList( {31} , Array()) 
_B._vm.setstatelist("array",[]);
// End Sub
};

// [38] Sub s5_change(sval As Object) 
this.s5_change=function(_sval) {
if (_B==null) _B=this;
// [39]  vm.ShowSnackBar(sval) 
_B._vm.showsnackbar(_sval);
// End Sub
};

}
/* =========================== modTable  =========================== */
function banano_bvmdemo_modtable() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="tablecode";

// [9] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_options,_tablex,_stable,_users;
// [10]  Log( {2} ) 
console.log("modTable.Code");
// [11]  vm = vmx 
_B._vm=_vmx;
// [13]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [15]  cont.Hide 
_cont.hide();
// [17]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  Dim options As List 
_options=[];
// [19]  options.initialize 
_options.length=0;
// [20]  options.Add(Array( {3} , {4} , {5} , {6} )) 
_options.push(["Anele","Mbanga","doing","BANanoVueMaterial"]);
// [22]  vm.setstatelist( {7} , Array()) 
_B._vm.setstatelist("users",[]);
// [23]  vm.setstatelist( {8} , Array()) 
_B._vm.setstatelist("searched",[]);
// [24]  vm.SetCreated(Me, {9} ) 
_B._vm.setcreated(_B,"setSearched");
// [25]  Dim tablex As VMTable = vm.CreateTable( {10} , Me).SetVModel( {11} ).SetCard(True) 
_tablex=_B._vm.createtable("tablex",_B).setvmodel("searched").setcard(true);
// [26]  tablex.ToolBar.SetTitle( {12} ) 
_tablex._toolbar.settitle("Users");
// [28]  tablex.ToolBar.AddSearch( {13} , {14} , {15} , {16} , options) 
_tablex._toolbar.addsearch("msearch","Search...","mysearch","300px",_options);
// [29]  tablex.ToolBar.SetPrimary(True) 
_tablex._toolbar.setprimary(true);
// [31]  tablex.SetSort( {17} ).SetSortOrderAsc(True) 
_tablex.setsort("name").setsortorderasc(true);
// [34]  tablex.SetSelectableSingle(True) 
_tablex.setselectablesingle(true);
// [36]  tablex.AddColumn( {18} , {19} ,True, True) 
_tablex.addcolumn("id","ID",true,true);
// [37]  tablex.AddColumn( {20} , {21} ,False, True) 
_tablex.addcolumn("name","Name",false,true);
// [38]  tablex.AddColumn( {22} , {23} ,False, True) 
_tablex.addcolumn("email","Email",false,true);
// [39]  tablex.AddColumn( {24} , {25} ,False, True) 
_tablex.addcolumn("gender","Gender",false,true);
// [40]  tablex.AddColumn( {26} , {27} ,False, True) 
_tablex.addcolumn("title","Title",false,true);
// [42]  Dim stable As String = tablex.tostring 
_stable=_tablex.tostring();
// [43]  cont.AddComponent(1,1, stable) 
_cont.addcomponent(1,1,_stable);
// [46]  Dim users As List 
_users=[];
// [47]  users.initialize 
_users.length=0;
// [48]  users.add(CreateMap( {28} : 1, {29} : {30} , {31} : {32} , {33} : {34} , {35} : {36} )) 
_users.push({"id":1, "name":"Shawna Dubbin", "email":"sdubbin0@geocities.com", "gender":"Male", "title":"Assistant Media Planner"});
// [49]  users.add(CreateMap( {37} : 2, {38} : {39} , {40} : {41} , {42} : {43} , {44} : {45} )) 
_users.push({"id":2, "name":"Odette Demageard", "email":"odemageard1@spotify.com", "gender":"Female", "title":"Account Coordinator"});
// [50]  users.add(CreateMap( {46} : 3, {47} : {48} , {49} : {50} , {51} : {52} , {53} : {54} )) 
_users.push({"id":3, "name":"Lonnie Izkovitz", "email":"lizkovitz3@youtu.be", "gender":"Female", "title":"Operator"});
// [51]  users.add(CreateMap( {55} : 4, {56} : {57} , {58} : {59} , {60} : {61} , {62} : {63} )) 
_users.push({"id":4, "name":"Thatcher Stave", "email":"tstave4@reference.com", "gender":"Male", "title":"Software Test Engineer III"});
// [52]  users.add(CreateMap( {64} : 5, {65} : {66} , {67} : {68} , {69} : {70} , {71} : {72} )) 
_users.push({"id":5, "name":"Clarinda Marieton", "email":"cmarietonh@theatlantic.com", "gender":"Female", "title":"Paralegal"});
// [53]  users.add(CreateMap( {73} : 6, {74} : {75} , {76} : {77} , {78} : {79} , {80} : {81} )) 
_users.push({"id":6, "name":"Karim Chipping", "email":"kchipping5@scribd.com", "gender":"Female", "title":"Safety Technician II"});
// [54]  users.add(CreateMap( {82} : 7, {83} : {84} , {85} : {86} , {87} : {88} , {89} : {90} )) 
_users.push({"id":7, "name":"Helge Holyard", "email":"hholyard6@howstuffworks.com", "gender":"Female", "title":"Internal Auditor"});
// [55]  users.add(CreateMap( {91} : 8, {92} : {93} , {94} : {95} , {96} : {97} , {98} : {99} )) 
_users.push({"id":8, "name":"Rod Titterton", "email":"rtitterton7@nydailynews.com", "gender":"Male", "title":"Technical Writer"});
// [56]  users.add(CreateMap( {100} : 9, {101} : {102} , {103} : {104} , {105} : {106} , {107} : {108} )) 
_users.push({"id":9, "name":"Gawen Applewhite", "email":"gapplewhite8@reverbnation.com", "gender":"Female", "title":"GIS Technical Architect"});
// [57]  users.add(CreateMap( {109} : 10, {110} : {111} , {112} : {113} , {114} : {115} , {116} : {117} )) 
_users.push({"id":10, "name":"Nero Mulgrew", "email":"nmulgrew9@plala.or.jp", "gender":"Female", "title":"Staff Scientist"});
// [59]  vm.setstatesingle( {118} , users) 
_B._vm.setstatesingle("users",_users);
// [62]  vm.CreateLABEL( {119} ).SetText( {120} ).AddToContainer(cont, 2, 1) 
_B._vm.createlabel("lbl").settext("{{ tablexselection }}").addtocontainer(_cont,2,1);
// [63]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [68] Sub setSearched(e As BANanoEvent) 
this.setsearched=function(_e) {
if (_B==null) _B=this;
// [69]  vm.State2Another( {121} , {122} , Array()) 
_B._vm.state2another("users","searched",[]);
// End Sub
};

// [72] Sub tablex_select(items As List) 
this.tablex_select=function(_items) {
if (_B==null) _B=this;
// [73]  vm.setstatesingle( {123} , items) 
_B._vm.setstatesingle("tablexselection",_items);
// End Sub
};

// [87] Sub search_input(e As BANanoEvent) 
this.search_input=function(_e) {
if (_B==null) _B=this;
var _svalue,_items,_jsonq,_jsonf,_searched;
// [89]  Dim svalue As String = vm.getstate( {124} , {125} ) 
_svalue=_B._vm.getstate("mysearch","");
// [90]  If svalue = {126} Then 
if (_svalue=="") {
// [92]  vm.State2Another( {127} , {128} , Array()) 
_B._vm.state2another("users","searched",[]);
// [93]  Else 
} else {
// [95]  Dim items As List = vm.getstate( {129} , Array()) 
_items=_B._vm.getstate("users",[]);
// [97]  Dim jsonQ As BANanoJSONQuery 
_jsonq=null;
// [98]  jsonQ.Initialize(items) 
_jsonq=JsonQuery(_items);
// [101]  Dim jsonF As BANanoJSONQuery = jsonQ.Where( {0} ).ToJQ 
_jsonf=_jsonq.where({'name.$li':'" + _svalue + "'}).toJQ();
// [102]  Dim searched As List = jsonF.All 
_searched=_jsonf.all;
// [103]  If searched.Size = 0 Then 
if (_searched.length==0) {
// [104]  vm.State2Another( {130} , {131} , Array()) 
_B._vm.state2another("users","searched",[]);
// [105]  Else 
} else {
// [106]  vm.SetStateSingle( {132} , searched) 
_B._vm.setstatesingle("searched",_searched);
// [107]  End If 
}
// [108]  End If 
}
// End Sub
};

}
/* =========================== modBadge  =========================== */
function banano_bvmdemo_modbadge() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="badgecode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modBadge.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  vm.CreateButton( {2} ,Me).SetIcon( {3} ).SetIconButton(True).SetBadgeContent(5).AddToContainer(cont, 1,1) 
_B._vm.createbutton("btn1",_B).seticon("notifications").seticonbutton(true).setbadgecontent(5).addtocontainer(_cont,1,1);
// [19]  vm.CreateButton( {4} ,Me).SetIcon( {5} ).SetIconButton(True).SetBadgeContent(1).SetBadgePrimary.AddToContainer(cont, 1,1) 
_B._vm.createbutton("btn2",_B).seticon("home").seticonbutton(true).setbadgecontent(1).setbadgeprimary().addtocontainer(_cont,1,1);
// [20]  vm.CreateButton( {6} ,Me).SetIcon( {7} ).SetIconButton(True).SetBadgeContent(12).SetBadgeOnBottom.SetBadgeAccent.AddToContainer(cont, 1,1) 
_B._vm.createbutton("btn3",_B).seticon("home").seticonbutton(true).setbadgecontent(12).setbadgeonbottom().setbadgeaccent().addtocontainer(_cont,1,1);
// [21]  vm.CreateAvatar( {8} ,Me).SetValue( {9} ).SetAlt( {10} ).SetBadgeDense.SetBadgeContent(6).AddToContainer(cont, 1, 1) 
_B._vm.createavatar("img1",_B).setvalue("./assets/sponge.png").setalt("Avatar").setbadgedense().setbadgecontent(6).addtocontainer(_cont,1,1);
// [22]  vm.CreateButton( {11} ,Me).SetText( {12} ).SetBadgeOnBottom.SetBadgeSquare.SetBadgeContent(10).addtocontainer(cont, 1,1) 
_B._vm.createbutton("btn4",_B).settext("Button With").setbadgeonbottom().setbadgesquare().setbadgecontent(10).addtocontainer(_cont,1,1);
// [24]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modTabs  =========================== */
function banano_bvmdemo_modtabs() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="tabscode";

this._step4= new banano_bananovuematerial_vmtabs();

// [9] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_step1,_step2,_step3;
// [10]  Log( {1} ) 
console.log("mdTabs.Code");
// [11]  vm = vmx 
_B._vm=_vmx;
// [13]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [15]  cont.Hide 
_cont.hide();
// [17]  cont.addrows(4).AddColumns12 
_cont.addrows(4).addcolumns12();
// [19]  Dim step1 As VMTabs = vm.CreateTabs( {2} , Me).SetElevation(2).SetMargin( {3} ) 
_step1=_B._vm.createtabs("tab1",_B).setelevation(2).setmargin("10px");
// [20]  step1.AddTab( {4} , {5} , {6} ,FirstStep.tostring) 
_step1.addtab("first","First Step","home",_B.firststep(_B).tostring());
// [21]  step1.AddTab( {7} , {8} , {9} ,SecondStep.tostring) 
_step1.addtab("second","Second Step","pages",_B.secondstep(_B).tostring());
// [22]  step1.AddTab( {10} , {11} , {12} ,ThirdStep.tostring) 
_step1.addtab("third","Third Step","favorite",_B.thirdstep(_B).tostring());
// [23]  step1.AddToContainer(cont, 1, 1) 
_step1.addtocontainer(_cont,1,1);
// [25]  Dim step2 As VMTabs = vm.CreateTabs( {13} , Me).SetElevation(2).SetMargin( {14} ).SetAlignmentCenter(True).SetSwipeable(True) 
_step2=_B._vm.createtabs("tab2",_B).setelevation(2).setmargin("10px").setalignmentcenter(true).setswipeable(true);
// [26]  step2.AddTab( {15} , {16} , {17} ,Null) 
_step2.addtab("first2","First Step","",null);
// [27]  step2.AddTab( {18} , {19} , {20} ,Null) 
_step2.addtab("second2","Second Step","",null);
// [28]  step2.AddTab( {21} , {22} , {23} ,Null) 
_step2.addtab("third2","Third Step","",null);
// [29]  step2.AddToContainer(cont, 2, 1) 
_step2.addtocontainer(_cont,2,1);
// [31]  Dim step3 As VMTabs = vm.CreateTabs( {24} , Me).SetElevation(2).SetMargin( {25} ).SetAlignmentRight(True).SetTabActive( {26} ) 
_step3=_B._vm.createtabs("tab3",_B).setelevation(2).setmargin("10px").setalignmentright(true).settabactive("second3");
// [32]  step3.AddTab( {27} , {28} , {29} ,Null) 
_step3.addtab("first3","First Step","Optional",null);
// [33]  step3.AddTab( {30} , {31} , {32} ,Null) 
_step3.addtab("second3","Second Step","",null);
// [34]  step3.AddTab( {33} , {34} , {35} ,Null) 
_step3.addtab("third3","Third Step","",null);
// [35]  step3.AddToContainer(cont, 3, 1) 
_step3.addtocontainer(_cont,3,1);
// [37]  step4 = vm.CreateTabs( {36} , Me).SetTabActive( {37} ).SetElevation(2).SetMargin( {38} ).SetAlignmentFixed(True) 
_B._step4=_B._vm.createtabs("step4",_B).settabactive("first4").setelevation(2).setmargin("10px").setalignmentfixed(true);
// [38]  step4.AddTab( {39} , {40} , {41} ,FirstStep.tostring) 
_B._step4.addtab("first4","First Step","",_B.firststep(_B).tostring());
// [39]  step4.AddTab( {42} , {43} , {44} ,SecondStep.ToString) 
_B._step4.addtab("second4","Second Step","",_B.secondstep(_B).tostring());
// [40]  step4.AddTab( {45} , {46} , {47} ,ThirdStep.tostring) 
_B._step4.addtab("third4","Third Step","",_B.thirdstep(_B).tostring());
// [41]  step4.AddToContainer(cont,4, 1) 
_B._step4.addtocontainer(_cont,4,1);
// [43]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [47] Sub FirstStep As VMContainer 
this.firststep=function() {
if (_B==null) _B=this;
var _el;
// [48]  Dim el As VMContainer = vm.CreateContainer( {48} , Me) 
_el=_B._vm.createcontainer("firststep",_B);
// [50]  el.AddRows(1).AddColumns12 
_el.addrows(1).addcolumns12();
// [52]  vm.CreateLABEL( {49} ).SetParagraph.SetText( {50} ).AddToContainer(el, 1, 1) 
_B._vm.createlabel("fs1label").setparagraph().settext("This is tab 1").addtocontainer(_el,1,1);
// [53]  Return el 
return _el;
// End Sub
};

// [57] Sub SecondStep As VMContainer 
this.secondstep=function() {
if (_B==null) _B=this;
var _el;
// [58]  Dim el As VMContainer = vm.CreateContainer( {51} , Me) 
_el=_B._vm.createcontainer("firststep",_B);
// [61]  el.AddRows(1).AddColumns12 
_el.addrows(1).addcolumns12();
// [63]  vm.CreateLABEL( {52} ).SetParagraph.SetText( {53} ).AddToContainer(el, 1, 1) 
_B._vm.createlabel("fs1label").setparagraph().settext("This is tab 2").addtocontainer(_el,1,1);
// [64]  Return el 
return _el;
// End Sub
};

// [67] Sub ThirdStep As VMContainer 
this.thirdstep=function() {
if (_B==null) _B=this;
var _el;
// [68]  Dim el As VMContainer = vm.CreateContainer( {54} , Me) 
_el=_B._vm.createcontainer("firststep",_B);
// [71]  el.AddRows(1).AddColumns12 
_el.addrows(1).addcolumns12();
// [73]  vm.CreateLABEL( {55} ).SetParagraph.SetText( {56} ).AddToContainer(el, 1, 1) 
_B._vm.createlabel("fs1label").setparagraph().settext("This is tab 3").addtocontainer(_el,1,1);
// [74]  Return el 
return _el;
// End Sub
};

}
/* =========================== modTextArea  =========================== */
function banano_bvmdemo_modtextarea() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="textareacode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modTextArea.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  vm.CreateTextArea( {2} ,Me).SetLabel( {3} ).SetVmodel( {4} ).AddToContainer(cont,1,1) 
_B._vm.createtextarea("txta",_B).setlabel("Text Area").setvmodel("txtarea").addtocontainer(_cont,1,1);
// [19]  vm.CreateTextArea( {5} ,Me).SetLabel( {6} ).SetVmodel( {7} ).SetAutogrow(True).AddToContainer(cont,1,1) 
_B._vm.createtextarea("txtb",_B).setlabel("Text Area with AutoGrow").setvmodel("txtareb").setautogrow(true).addtocontainer(_cont,1,1);
// [20]  vm.CreateTextArea( {8} ,Me).SetLabel( {9} ).SetVModel( {10} ).SetErrorText( {11} ).SetRequired(True).AddToContainer(cont, 1, 1) 
_B._vm.createtextarea("txtc",_B).setlabel("Required").setvmodel("txtarec").seterrortext("There is an error").setrequired(true).addtocontainer(_cont,1,1);
// [21]  vm.CreateTextArea( {12} ,Me).SetLabel( {13} ).SetVModel( {14} ).SetCounter(30).AddToContainer(cont, 1, 1) 
_B._vm.createtextarea("txt8",_B).setlabel("Counter").setvmodel("txt8count").setcounter(30).addtocontainer(_cont,1,1);
// [22]  vm.CreateTextArea( {15} ,Me).SetLabel( {16} ).SetVModel( {17} ).SetMaxlength(10).AddToContainer(cont, 1, 1) 
_B._vm.createtextarea("txt9",_B).setlabel("Max Length").setvmodel("txt9len").setmaxlength(10).addtocontainer(_cont,1,1);
// [23]  vm.CreateTextArea( {18} ,Me).SetLabel( {19} ).SetVModel( {20} ).SetMaxlength(15).SetCounterDisabled.AddToContainer(cont, 1, 1) 
_B._vm.createtextarea("txt10x",_B).setlabel("Max Length & Disabled Counter").setvmodel("txtlendg").setmaxlength(15).setcounterdisabled().addtocontainer(_cont,1,1);
// [24]  vm.CreateTextArea( {21} ,Me).SetLabel( {22} ).SetVModel( {23} ).SetIcon( {24} ).AddToContainer(cont, 1, 1) 
_B._vm.createtextarea("txtai",_B).setlabel("Description").setvmodel("txtai").seticon("description").addtocontainer(_cont,1,1);
// [25]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// [26]  vm.ShowError( {25} ) 
_B._vm.showerror("txtc");
// End Sub
};

}
/* =========================== modTextBox  =========================== */
function banano_bvmdemo_modtextbox() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="textcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modTextBox.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns(2,12,12,12,12) 
_cont.addrows(2).addcolumns(2,12,12,12,12);
// [18]  vm.CreateInput( {2} ,Me).SetLabel( {3} ).SetVModel( {4} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp1",_B).setlabel("Initial Value").setvmodel("initial").addtocontainer(_cont,1,1);
// [19]  vm.CreateInput( {5} ,Me).SetLabel( {6} ).SetReadOnly(True).SetVModel( {7} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp2",_B).setlabel("Initial Value (Read Only)").setreadonly(true).setvmodel("initial").addtocontainer(_cont,1,1);
// [20]  vm.CreateInput( {8} ,Me).SetLabel( {9} ).SetVModel( {10} ).SetHelperText( {11} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp3",_B).setlabel("With Help").setvmodel("help").sethelpertext("Some help text").addtocontainer(_cont,1,1);
// [21]  vm.CreateInput( {12} ,Me).SetLabel( {13} ).SetVModel( {14} ).SetInline(True).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp4",_B).setlabel("Inline").setvmodel("help1").setinline(true).addtocontainer(_cont,1,1);
// [22]  vm.CreateInput( {15} ,Me).SetLabel( {16} ).SetVModel( {17} ).SetTypeNumber(True).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp5",_B).setlabel("Number").setvmodel("help3").settypenumber(true).addtocontainer(_cont,1,1);
// [23]  vm.CreateInput( {18} ,Me).SetLabel( {19} ).SetVModel( {20} ).SetDisabled(True).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp6",_B).setlabel("Disabled").setvmodel("help4").setdisabled(true).addtocontainer(_cont,1,1);
// [24]  vm.CreateInput( {21} ,Me).SetLabel( {22} ).SetVModel( {23} ).SetErrorText( {24} ).SetRequired(True).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp7",_B).setlabel("Required").setvmodel("help5").seterrortext("There is an error").setrequired(true).addtocontainer(_cont,1,1);
// [25]  vm.CreateInput( {25} ,Me).SetLabel( {26} ).SetVModel( {27} ).SetCounter(30).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp8",_B).setlabel("Counter").setvmodel("txtcount").setcounter(30).addtocontainer(_cont,1,1);
// [26]  vm.CreateInput( {28} ,Me).SetLabel( {29} ).SetVModel( {30} ).SetMaxlength(10).AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp9",_B).setlabel("Max Length").setvmodel("txtlen").setmaxlength(10).addtocontainer(_cont,1,1);
// [27]  vm.CreateInput( {31} ,Me).SetLabel( {32} ).SetVModel( {33} ).SetMaxlength(15).SetCounterDisabled.AddToContainer(cont, 1, 1) 
_B._vm.createinput("inp10",_B).setlabel("Max Length & Disabled Counter").setvmodel("txtlend").setmaxlength(15).setcounterdisabled().addtocontainer(_cont,1,1);
// [28]  vm.CreateInput( {34} ,Me).SetLabel( {35} ).SetVModel( {36} ).SetIcon( {37} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txti",_B).setlabel("Date").setvmodel("txti").seticon("event").addtocontainer(_cont,1,1);
// [29]  vm.CreateInput( {38} ,Me).SetLabel( {39} ).SetVModel( {40} ).SetIcon1( {41} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txtz",_B).setlabel("Voice").setvmodel("txtz").seticon1("keyboard_voice").addtocontainer(_cont,1,1);
// [30]  vm.CreateInput( {42} ,Me).SetLabel( {43} ).SetVModel( {44} ).SetIcon( {45} ).SetIcon1( {46} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txty",_B).setlabel("Transfer Money").setvmodel("txty").seticon("warning").seticon1("attach_money").addtocontainer(_cont,1,1);
// [31]  vm.CreateInput( {47} ,Me).SetLabel( {48} ).SetVModel( {49} ).SetClearable(True).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txtw",_B).setlabel("Cleraable").setvmodel("initial").setclearable(true).addtocontainer(_cont,1,1);
// [32]  vm.CreateInput( {50} ,Me).SetLabel( {51} ).SetVModel( {52} ).SetTypePassword(True).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txtu",_B).setlabel("Password").setvmodel("password").settypepassword(true).addtocontainer(_cont,1,1);
// [33]  vm.CreateInput( {53} ,Me).SetLabel( {54} ).SetVModel( {55} ).SetTypePassword(True).SetTogglePassword(False).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txth",_B).setlabel("Password without toggle").setvmodel("password").settypepassword(true).settogglepassword(false).addtocontainer(_cont,1,1);
// [34]  vm.CreateInput( {56} ,Me).SetLabel( {57} ).SetVModel( {58} ).SetPrefix( {59} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txtd",_B).setlabel("Prefix").setvmodel("txtd").setprefix("$").addtocontainer(_cont,1,1);
// [35]  vm.CreateInput( {60} ,Me).SetLabel( {61} ).SetVModel( {62} ).SetSuffix( {63} ).AddToContainer(cont, 1, 1) 
_B._vm.createinput("txtf",_B).setlabel("Suffix").setvmodel("txtf").setsuffix("@gmail.com").addtocontainer(_cont,1,1);
// [38]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [39]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [40]  vm.CreateButton( {64} ,Me).SetText( {65} ).SetRaised(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("btnx",_B).settext("Show Error").setraised(true).addtocontainer(_cont,1,1);
// [44]  vm.CreateLABEL( {66} ).SetParagraph.SetText( {67} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("").setparagraph().settext("{{ initial }}").addtocontainer(_cont,1,1);
// [45]  vm.CreateLABEL( {68} ).SetParagraph.SetText( {69} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("").setparagraph().settext("{{ help }}").addtocontainer(_cont,1,1);
// [46]  vm.CreateLABEL( {70} ).SetParagraph.SetText( {71} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("").setparagraph().settext("{{ help1 }}").addtocontainer(_cont,1,1);
// [47]  vm.CreateLABEL( {72} ).SetParagraph.SetText( {73} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("").setparagraph().settext("{{ help3 }}").addtocontainer(_cont,1,1);
// [48]  vm.CreateLABEL( {74} ).SetParagraph.SetText( {75} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("").setparagraph().settext("{{ help4 }}").addtocontainer(_cont,1,1);
// [49]  vm.CreateLABEL( {76} ).SetParagraph.SetText( {77} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("").setparagraph().settext("{{ txtd }}").addtocontainer(_cont,1,1);
// [50]  vm.CreateLABEL( {78} ).SetParagraph.SetText( {79} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("").setparagraph().settext("{{ txtf }}").addtocontainer(_cont,1,1);
// [52]  vm.SetStateSingle( {80} , {81} ) 
_B._vm.setstatesingle("help4","This text control is disabled!");
// [53]  vm.SetStateSingle( {82} , {83} ) 
_B._vm.setstatesingle("initial","This is BANanoVuewMaterial");
// [54]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [57] Sub btnx_click(e As BANanoEvent) 
this.btnx_click=function(_e) {
if (_B==null) _B=this;
// [58]  vm.ShowError( {84} ) 
_B._vm.showerror("inp7");
// End Sub
};

}
/* =========================== modTimePIcker  =========================== */
function banano_bvmdemo_modtimepicker() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="timecode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_timex;
// [9]  Log( {1} ) 
console.log("modTimePicker.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns2x6 
_cont.addrows(2).addcolumns2x6();
// [18]  Dim timex As VMTimePicker = vm.CreateTimePicker( {2} , Me).SetLabel( {3} ) 
_timex=_B._vm.createtimepicker("timex",_B).setlabel("Entry Time");
// [19]  timex.SetHelperText( {4} ).SetErrorText( {5} ).SetRequired(True).SetVModel( {6} ) 
_timex.sethelpertext("Enter time").seterrortext("Time should be entered!").setrequired(true).setvmodel("timex");
// [20]  timex.AddToContainer(cont, 1, 1) 
_timex.addtocontainer(_cont,1,1);
// [23]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [26] Sub timex_change(value As String) 
this.timex_change=function(_value) {
if (_B==null) _B=this;
// [27]  vm.ShowSnackBar(value) 
_B._vm.showsnackbar(_value);
// End Sub
};

}
/* =========================== modToolbar  =========================== */
function banano_bvmdemo_modtoolbar() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="toolcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_tbl1,_tbl2,_icn,_tbl3,_img,_options,_tbl4,_tbl5,_tbl6;
// [9]  Log( {1} ) 
console.log("modToolbar.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  Dim tbl1 As VMToolBar = vm.CreateToolbar( {2} , Me).SetTitle( {3} ).SetMarginAll( {4} ) 
_tbl1=_B._vm.createtoolbar("tbl1",_B).settitle("My Toolbar").setmarginall("10px");
// [19]  tbl1.SetToolbar(True) 
_tbl1.settoolbar(true);
// [20]  tbl1.AddIcon( {5} , {6} , {7} , {8} ) 
_tbl1.addicon("menux","more_vert","Menu","");
// [21]  tbl1.AddButton( {9} , {10} , {11} , {12} , {13} ) 
_tbl1.addbutton("ref","","Refresh","Refresh","");
// [22]  tbl1.AddIcon( {14} , {15} , {16} , {17} ) 
_tbl1.addicon("ham","menu","Hamburger","");
// [23]  tbl1.AddIcon( {18} , {19} , {20} , {21} ) 
_tbl1.addicon("ref1","refresh","Refresh","5");
// [24]  tbl1.AddAvatar( {22} , {23} , {24} , {25} , {26} ) 
_tbl1.addavatar("av1","./assets/sponge.png","TheMash","My Profile","30");
// [25]  tbl1.AddToContainer(cont, 1, 1) 
_tbl1.addtocontainer(_cont,1,1);
// [27]  Dim tbl2 As VMToolBar = vm.CreateToolbar( {27} , Me).SetTitle( {28} ).SetElevation(0).SetMarginAll( {29} ) 
_tbl2=_B._vm.createtoolbar("tbl2",_B).settitle("No Elevation").setelevation(0).setmarginall("10px");
// [28]  tbl2.SetToolbar(True) 
_tbl2.settoolbar(true);
// [29]  Dim icn As VMMenu = vm.CreateMenu( {30} , Me).SetIcon( {31} ) 
_icn=_B._vm.createmenu("icn",_B).seticon("contacts");
// [30]  icn.AddMenuItem( {32} , {33} , {34} ) 
_icn.addmenuitem("icn1","phone","Call Home");
// [31]  icn.AddMenuItem( {35} , {36} , {37} ) 
_icn.addmenuitem("icn2","phone","Call Work");
// [32]  icn.AddMenuItem( {38} , {39} , {40} ) 
_icn.addmenuitem("icn3","phone","Call Spouse");
// [33]  tbl2.AddMenu(icn) 
_tbl2.addmenu(_icn);
// [34]  tbl2.AddToContainer(cont, 1, 1) 
_tbl2.addtocontainer(_cont,1,1);
// [36]  Dim tbl3 As VMToolBar = vm.CreateToolbar( {41} , Me).SetTitle( {42} ).SetPrimary(True).SetMarginAll( {43} ) 
_tbl3=_B._vm.createtoolbar("tbl3",_B).settitle("Primary").setprimary(true).setmarginall("10px");
// [37]  tbl3.SetToolbar(True) 
_tbl3.settoolbar(true);
// [38]  Dim img As VMMenu = vm.CreateMenu( {44} , Me).SetImage( {45} , {46} ) 
_img=_B._vm.createmenu("img",_B).setimage("./assets/2.png","");
// [39]  img.AddMenuItem( {47} , {48} , {49} ) 
_img.addmenuitem("img1","phone","Call Home");
// [40]  img.AddMenuItem( {50} , {51} , {52} ) 
_img.addmenuitem("img2","phone","Call Work");
// [41]  img.AddMenuItem( {53} , {54} , {55} ) 
_img.addmenuitem("img3","phone","Call Spouse");
// [42]  tbl3.addmenu(img) 
_tbl3.addmenu(_img);
// [43]  Dim options As List 
_options=[];
// [44]  options.initialize 
_options.length=0;
// [45]  options.Add(Array( {56} , {57} , {58} , {59} )) 
_options.push(["Anele","Mbanga","doing","BANanoVueMaterial"]);
// [47]  tbl3.AddSearch( {60} , {61} , {62} , {63} , options) 
_tbl3.addsearch("msearch","Search...","mysearch","300px",_options);
// [48]  tbl3.AddToContainer(cont, 1, 1) 
_tbl3.addtocontainer(_cont,1,1);
// [50]  Dim tbl4 As VMToolBar = vm.CreateToolbar( {64} , Me).SetTitle( {65} ).SetAccent(True).SetMarginAll( {66} ) 
_tbl4=_B._vm.createtoolbar("tbl4",_B).settitle("Accent").setaccent(true).setmarginall("10px");
// [51]  tbl4.SetToolbar(True) 
_tbl4.settoolbar(true);
// [52]  tbl4.AddToContainer(cont, 1, 1) 
_tbl4.addtocontainer(_cont,1,1);
// [54]  Dim tbl5 As VMToolBar = vm.CreateToolbar( {67} , Me).SetTitle( {68} ).SetTransparent(True).SetMarginAll( {69} ) 
_tbl5=_B._vm.createtoolbar("tbl5",_B).settitle("Transparent").settransparent(true).setmarginall("10px");
// [55]  tbl5.SetToolbar(True) 
_tbl5.settoolbar(true);
// [56]  tbl5.AddToContainer(cont, 1, 1) 
_tbl5.addtocontainer(_cont,1,1);
// [58]  Dim tbl6 As VMToolBar = vm.CreateToolbar( {70} , Me).SetTitle( {71} ).SetDense(True).SetMarginAll( {72} ) 
_tbl6=_B._vm.createtoolbar("tbl6",_B).settitle("Dense").setdense(true).setmarginall("10px");
// [59]  tbl6.SetToolbar(True) 
_tbl6.settoolbar(true);
// [60]  tbl6.AddToContainer(cont, 1, 1) 
_tbl6.addtocontainer(_cont,1,1);
// [62]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [65] Sub ref1_click(e As BANanoEvent) 
this.ref1_click=function(_e) {
if (_B==null) _B=this;
// [66]  vm.IncrementBadge( {73} ,1) 
_B._vm.incrementbadge("ref1",1);
// End Sub
};

}
/* =========================== modTypography  =========================== */
function banano_bvmdemo_modtypography() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="typographycode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modTypography.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(1).AddColumns12 
_cont.addrows(1).addcolumns12();
// [17]  vm.CreateLABEL( {2} ).SetParagraph.SetDisplay4(True).SetText( {3} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setdisplay4(true).settext("Display 4").addtocontainer(_cont,1,1);
// [18]  vm.CreateLABEL( {4} ).SetParagraph.SetDisplay3(True).SetText( {5} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setdisplay3(true).settext("Display 3").addtocontainer(_cont,1,1);
// [19]  vm.CreateLABEL( {6} ).SetParagraph.SetDisplay2(True).SetText( {7} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setdisplay2(true).settext("Display 2").addtocontainer(_cont,1,1);
// [20]  vm.CreateLABEL( {8} ).SetParagraph.SetDisplay1(True).SetText( {9} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setdisplay1(true).settext("Display 1").addtocontainer(_cont,1,1);
// [21]  vm.CreateLABEL( {10} ).SetParagraph.SetHeadline(True).SetText( {11} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setheadline(true).settext("Headline").addtocontainer(_cont,1,1);
// [22]  vm.CreateLABEL( {12} ).SetParagraph.SetTitle(True).SetText( {13} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().settitle(true).settext("Title").addtocontainer(_cont,1,1);
// [23]  vm.CreateLABEL( {14} ).SetParagraph.SetSubHeading(True).SetText( {15} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setsubheading(true).settext("Sub-Heading").addtocontainer(_cont,1,1);
// [24]  vm.CreateLABEL( {16} ).SetParagraph.SetBody2(True).SetText( {17} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setbody2(true).settext("Body 2").addtocontainer(_cont,1,1);
// [25]  vm.CreateLABEL( {18} ).SetParagraph.SetBody1(True).SetText( {19} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setbody1(true).settext("Body 1").addtocontainer(_cont,1,1);
// [26]  vm.CreateLABEL( {20} ).SetParagraph.SetCaption(True).SetText( {21} ).AddToContainer(cont, 1,1) 
_B._vm.createlabel("").setparagraph().setcaption(true).settext("Caption").addtocontainer(_cont,1,1);
// [31]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== pgIndex  =========================== */
function banano_bvmdemo_pgindex() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

// [7] Sub Init 
this.init=function() {
if (_B==null) _B=this;
// [9]  vm.Initialize(Me, Main.appname) 
_B._vm.initialize(_B,_banano_bvmdemo._appname);
// [11]  vm.NavBar.UpdateLogo( {0} ) 
_B._vm._navbar.updatelogo("./assets/sponge.png");
// [12]  vm.NavBar.SetTitle( {1} ) 
_B._vm._navbar.settitle("BVMDemo - created by TheMash");
// [13]  vm.Drawer.SetTitle( {2} ) 
_B._vm._drawer.settitle("BDMDemo");
// [14]  vm.Drawer.SetPersistentFull(True) 
_B._vm._drawer.setpersistentfull(true);
// [16]  vm.NavBar.Show 
_B._vm._navbar.show();
// [18]  vm.NavBar.SetPrimary(True) 
_B._vm._navbar.setprimary(true);
// [20]  vm.NavBar.SetModeFixed(True) 
_B._vm._navbar.setmodefixed(true);
// [22]  vm.NavBar.SetHasBackButton(False) 
_B._vm._navbar.sethasbackbutton(false);
// [24]  vm.NavBar.SetHasMenuButton(True) 
_B._vm._navbar.sethasmenubutton(true);
// [26]  BuildDrawer 
_B.builddrawer(_B);
// [28]  vm.Container.AddRows(1).AddColumns12 
_B._vm._container.addrows(1).addcolumns12();
// [30]  vm.AddPage(modTypography.name, modTypography) 
_B._vm.addpage(_banano_bvmdemo_modtypography._name,_banano_bvmdemo_modtypography);
// [31]  vm.AddPage(modChips.name, modChips) 
_B._vm.addpage(_banano_bvmdemo_modchips._name,_banano_bvmdemo_modchips);
// [32]  vm.AddPage(modAvatar.name, modAvatar) 
_B._vm.addpage(_banano_bvmdemo_modavatar._name,_banano_bvmdemo_modavatar);
// [33]  vm.AddPage(modBadge.name, modBadge) 
_B._vm.addpage(_banano_bvmdemo_modbadge._name,_banano_bvmdemo_modbadge);
// [34]  vm.AddPage(modListView.name, modListView) 
_B._vm.addpage(_banano_bvmdemo_modlistview._name,_banano_bvmdemo_modlistview);
// [35]  vm.AddPage(modButtons.name, modButtons) 
_B._vm.addpage(_banano_bvmdemo_modbuttons._name,_banano_bvmdemo_modbuttons);
// [36]  vm.AddPage(modDatePicker.name, modDatePicker) 
_B._vm.addpage(_banano_bvmdemo_moddatepicker._name,_banano_bvmdemo_moddatepicker);
// [37]  vm.AddPage(modCheckBox.name, modCheckBox) 
_B._vm.addpage(_banano_bvmdemo_modcheckbox._name,_banano_bvmdemo_modcheckbox);
// [38]  vm.AddPage(modFile.name, modFile) 
_B._vm.addpage(_banano_bvmdemo_modfile._name,_banano_bvmdemo_modfile);
// [39]  vm.AddPage(modTextBox.name, modTextBox) 
_B._vm.addpage(_banano_bvmdemo_modtextbox._name,_banano_bvmdemo_modtextbox);
// [40]  vm.AddPage(modTextArea.name, modTextArea) 
_B._vm.addpage(_banano_bvmdemo_modtextarea._name,_banano_bvmdemo_modtextarea);
// [41]  vm.AddPage(modRadio.name, modRadio) 
_B._vm.addpage(_banano_bvmdemo_modradio._name,_banano_bvmdemo_modradio);
// [42]  vm.AddPage(modSelect.name, modSelect) 
_B._vm.addpage(_banano_bvmdemo_modselect._name,_banano_bvmdemo_modselect);
// [43]  vm.AddPage(modSwitch.name, modSwitch) 
_B._vm.addpage(_banano_bvmdemo_modswitch._name,_banano_bvmdemo_modswitch);
// [44]  vm.AddPage(modIcon.name, modIcon) 
_B._vm.addpage(_banano_bvmdemo_modicon._name,_banano_bvmdemo_modicon);
// [46]  vm.AddPage(modMenu.name, modMenu) 
_B._vm.addpage(_banano_bvmdemo_modmenu._name,_banano_bvmdemo_modmenu);
// [47]  vm.AddPage(modDialog.name, modDialog) 
_B._vm.addpage(_banano_bvmdemo_moddialog._name,_banano_bvmdemo_moddialog);
// [48]  vm.AddPage(modEmptyState.name, modEmptyState) 
_B._vm.addpage(_banano_bvmdemo_modemptystate._name,_banano_bvmdemo_modemptystate);
// [49]  vm.AddPage(modSpeedDial.name, modSpeedDial) 
_B._vm.addpage(_banano_bvmdemo_modspeeddial._name,_banano_bvmdemo_modspeeddial);
// [50]  vm.AddPage(modProgress.name, modProgress) 
_B._vm.addpage(_banano_bvmdemo_modprogress._name,_banano_bvmdemo_modprogress);
// [51]  vm.AddPage(modSpinner.name, modSpinner) 
_B._vm.addpage(_banano_bvmdemo_modspinner._name,_banano_bvmdemo_modspinner);
// [52]  vm.AddPage(modSnackBar.name, modSnackBar) 
_B._vm.addpage(_banano_bvmdemo_modsnackbar._name,_banano_bvmdemo_modsnackbar);
// [53]  vm.AddPage(modSteppers.name, modSteppers) 
_B._vm.addpage(_banano_bvmdemo_modsteppers._name,_banano_bvmdemo_modsteppers);
// [54]  vm.AddPage(modTabs.name, modTabs) 
_B._vm.addpage(_banano_bvmdemo_modtabs._name,_banano_bvmdemo_modtabs);
// [55]  vm.AddPage(modToolbar.name, modToolbar) 
_B._vm.addpage(_banano_bvmdemo_modtoolbar._name,_banano_bvmdemo_modtoolbar);
// [56]  vm.AddPage(modTable.name, modTable) 
_B._vm.addpage(_banano_bvmdemo_modtable._name,_banano_bvmdemo_modtable);
// [57]  vm.AddPage(modBottomBar.name, modBottomBar) 
_B._vm.addpage(_banano_bvmdemo_modbottombar._name,_banano_bvmdemo_modbottombar);
// [58]  vm.AddPage(modTimePIcker.name, modTimePIcker) 
_B._vm.addpage(_banano_bvmdemo_modtimepicker._name,_banano_bvmdemo_modtimepicker);
// [59]  vm.AddPage(modGMap.name, modGMap) 
_B._vm.addpage(_banano_bvmdemo_modgmap._name,_banano_bvmdemo_modgmap);
// [60]  vm.AddPage(modChartKick.name, modChartKick) 
_B._vm.addpage(_banano_bvmdemo_modchartkick._name,_banano_bvmdemo_modchartkick);
// [61]  vm.AddPage(modGijgoTable.name, modGijgoTable) 
_B._vm.addpage(_banano_bvmdemo_modgijgotable._name,_banano_bvmdemo_modgijgotable);
// [62]  vm.AddPage(modAutoComplete.name, modAutoComplete) 
_B._vm.addpage(_banano_bvmdemo_modautocomplete._name,_banano_bvmdemo_modautocomplete);
// [63]  vm.AddPage(modInfoBox.name, modInfoBox) 
_B._vm.addpage(_banano_bvmdemo_modinfobox._name,_banano_bvmdemo_modinfobox);
// [65]  vm.ux 
_B._vm.ux();
// End Sub
};

// [74] Sub BuildDrawer 
this.builddrawer=function() {
if (_B==null) _B=this;
// [75]  vm.Drawer.AddItem( {3} , {4} , {5} ) 
_B._vm._drawer.additem("ui","whatshot","UI Elements");
// [76]  vm.drawer.AddSubItem( {6} , {7} , {8} , {9} ) 
_B._vm._drawer.addsubitem("ui","autocompletex","","Auto Complete");
// [77]  vm.drawer.AddSubItem( {10} , {11} , {12} , {13} ) 
_B._vm._drawer.addsubitem("ui","avatar","person_outline","Avatar");
// [78]  vm.drawer.AddSubItem( {14} , {15} , {16} , {17} ) 
_B._vm._drawer.addsubitem("ui","badge","","Badge");
// [79]  vm.drawer.AddSubItem( {18} , {19} , {20} , {21} ) 
_B._vm._drawer.addsubitem("ui","listview","","ListView");
// [80]  vm.drawer.AddSubItem( {22} , {23} , {24} , {25} ) 
_B._vm._drawer.addsubitem("ui","buttons","","Buttons");
// [81]  vm.drawer.AddSubItem( {26} , {27} , {28} , {29} ) 
_B._vm._drawer.addsubitem("ui","typography","","Typography");
// [82]  vm.drawer.AddSubItem( {30} , {31} , {32} , {33} ) 
_B._vm._drawer.addsubitem("ui","icon","","Icon");
// [83]  vm.drawer.AddSubItem( {34} , {35} , {36} , {37} ) 
_B._vm._drawer.addsubitem("ui","menus","","Menu");
// [84]  vm.drawer.AddSubItem( {38} , {39} , {40} , {41} ) 
_B._vm._drawer.addsubitem("ui","dialog","","Dialog");
// [85]  vm.drawer.AddSubItem( {42} , {43} , {44} , {45} ) 
_B._vm._drawer.addsubitem("ui","empty","","Empty State");
// [86]  vm.drawer.AddSubItem( {46} , {47} , {48} , {49} ) 
_B._vm._drawer.addsubitem("ui","speeddial","","Speed Dial");
// [87]  vm.drawer.AddSubItem( {50} , {51} , {52} , {53} ) 
_B._vm._drawer.addsubitem("ui","progress","","Progress");
// [88]  vm.drawer.AddSubItem( {54} , {55} , {56} , {57} ) 
_B._vm._drawer.addsubitem("ui","spinner","","Spinner");
// [89]  vm.drawer.AddSubItem( {58} , {59} , {60} , {61} ) 
_B._vm._drawer.addsubitem("ui","snackbar1","","Snack Bar");
// [90]  vm.drawer.AddSubItem( {62} , {63} , {64} , {65} ) 
_B._vm._drawer.addsubitem("ui","steppers","","Steppers");
// [91]  vm.drawer.AddSubItem( {66} , {67} , {68} , {69} ) 
_B._vm._drawer.addsubitem("ui","tabs","","Tabs");
// [92]  vm.drawer.AddSubItem( {70} , {71} , {72} , {73} ) 
_B._vm._drawer.addsubitem("ui","toolbar","","Toolbar");
// [93]  vm.drawer.AddSubItem( {74} , {75} , {76} , {77} ) 
_B._vm._drawer.addsubitem("ui","table","","Table");
// [94]  vm.drawer.AddSubItem( {78} , {79} , {80} , {81} ) 
_B._vm._drawer.addsubitem("ui","bottombar","","Bottom Bar");
// [100]  vm.Drawer.AddItem( {89} , {90} , {91} ) 
_B._vm._drawer.additem("forms","video_library","Forms");
// [101]  vm.drawer.AddSubItem( {92} , {93} , {94} , {95} ) 
_B._vm._drawer.addsubitem("forms","datepicker","date_range","DatePicker");
// [102]  vm.drawer.AddSubItem( {96} , {97} , {98} , {99} ) 
_B._vm._drawer.addsubitem("forms","timepicker","","TimePicker");
// [103]  vm.drawer.AddSubItem( {100} , {101} , {102} , {103} ) 
_B._vm._drawer.addsubitem("forms","checkbox","check_box_outline_blank","CheckBox");
// [104]  vm.drawer.AddSubItem( {104} , {105} , {106} , {107} ) 
_B._vm._drawer.addsubitem("forms","chip","","Chip");
// [105]  vm.drawer.AddSubItem( {108} , {109} , {110} , {111} ) 
_B._vm._drawer.addsubitem("forms","file","attach_file","File");
// [106]  vm.drawer.AddSubItem( {112} , {113} , {114} , {115} ) 
_B._vm._drawer.addsubitem("forms","input","input","Input");
// [107]  vm.drawer.AddSubItem( {116} , {117} , {118} , {119} ) 
_B._vm._drawer.addsubitem("forms","textarea","comment","TextArea");
// [108]  vm.drawer.AddSubItem( {120} , {121} , {122} , {123} ) 
_B._vm._drawer.addsubitem("forms","radio","radio_button_checked","Radio");
// [109]  vm.drawer.AddSubItem( {124} , {125} , {126} , {127} ) 
_B._vm._drawer.addsubitem("forms","combo","arrow_drop_down","Select");
// [110]  vm.drawer.AddSubItem( {128} , {129} , {130} , {131} ) 
_B._vm._drawer.addsubitem("forms","switchbox","toggle_off","Switch");
// [112]  vm.Drawer.AddItem( {132} , {133} , {134} ) 
_B._vm._drawer.additem("plugins","","Plugins");
// [113]  vm.drawer.AddSubItem( {135} , {136} , {137} , {138} ) 
_B._vm._drawer.addsubitem("plugins","gmap","","Google Map");
// [114]  vm.drawer.AddSubItem( {139} , {140} , {141} , {142} ) 
_B._vm._drawer.addsubitem("plugins","chartkick","","ChartKick");
// [115]  vm.drawer.AddSubItem( {143} , {144} , {145} , {146} ) 
_B._vm._drawer.addsubitem("plugins","gijgotable","","Gijgo Table");
// [116]  vm.drawer.AddSubItem( {147} , {148} , {149} , {150} ) 
_B._vm._drawer.addsubitem("plugins","infobox","","InfoBox");
// End Sub
};

// [119] Sub infobox_click(e As BANanoEvent) 
this.infobox_click=function(_e) {
if (_B==null) _B=this;
// [120]  vm.NavBar.UpdateTitle( {151} ) 
_B._vm._navbar.updatetitle("BVMDemo - Info Box");
// [121]  vm.ShowPage(modInfoBox.name) 
_B._vm.showpage(_banano_bvmdemo_modinfobox._name);
// End Sub
};

// [124] Sub autocompletex_click(e As BANanoEvent) 
this.autocompletex_click=function(_e) {
if (_B==null) _B=this;
// [125]  vm.NavBar.UpdateTitle( {152} ) 
_B._vm._navbar.updatetitle("BVMDemo - Auto Complete");
// [126]  vm.ShowPage(modAutoComplete.name) 
_B._vm.showpage(_banano_bvmdemo_modautocomplete._name);
// End Sub
};

// [129] Sub gijgotable_click(e As BANanoEvent) 
this.gijgotable_click=function(_e) {
if (_B==null) _B=this;
// [130]  vm.NavBar.UpdateTitle( {153} ) 
_B._vm._navbar.updatetitle("BVMDemo - Gijgo Table");
// [131]  vm.ShowPage(modGijgoTable.name) 
_B._vm.showpage(_banano_bvmdemo_modgijgotable._name);
// [132]  modGijgoTable.refresh 
_banano_bvmdemo_modgijgotable.refresh();
// End Sub
};

// [135] Sub chartkick_click(e As BANanoEvent) 
this.chartkick_click=function(_e) {
if (_B==null) _B=this;
// [136]  vm.NavBar.UpdateTitle( {154} ) 
_B._vm._navbar.updatetitle("BVMDemo - Chart Kick");
// [137]  vm.ShowPage(modChartKick.name) 
_B._vm.showpage(_banano_bvmdemo_modchartkick._name);
// End Sub
};

// [140] Sub gmap_click(e As BANanoEvent) 
this.gmap_click=function(_e) {
if (_B==null) _B=this;
// [141]  vm.NavBar.UpdateTitle( {155} ) 
_B._vm._navbar.updatetitle("BVMDemo - Google Map");
// [142]  vm.ShowPage(modGMap.name) 
_B._vm.showpage(_banano_bvmdemo_modgmap._name);
// End Sub
};

// [146] Sub timepicker_click(e As BANanoEvent) 
this.timepicker_click=function(_e) {
if (_B==null) _B=this;
// [147]  vm.NavBar.UpdateTitle( {156} ) 
_B._vm._navbar.updatetitle("BVMDemo - TimePicker");
// [148]  vm.ShowPage(modTimePIcker.name) 
_B._vm.showpage(_banano_bvmdemo_modtimepicker._name);
// End Sub
};

// [151] Sub bottombar_click(e As BANanoEvent) 
this.bottombar_click=function(_e) {
if (_B==null) _B=this;
// [152]  vm.NavBar.UpdateTitle( {157} ) 
_B._vm._navbar.updatetitle("BVMDemo - Bottom Bar");
// [153]  vm.ShowPage(modBottomBar.name) 
_B._vm.showpage(_banano_bvmdemo_modbottombar._name);
// End Sub
};

// [156] Sub table_click(e As BANanoEvent) 
this.table_click=function(_e) {
if (_B==null) _B=this;
// [157]  vm.NavBar.UpdateTitle( {158} ) 
_B._vm._navbar.updatetitle("BVMDemo - Table");
// [158]  vm.ShowPage(modTable.name) 
_B._vm.showpage(_banano_bvmdemo_modtable._name);
// End Sub
};

// [161] Sub toolbar_click(e As BANanoEvent) 
this.toolbar_click=function(_e) {
if (_B==null) _B=this;
// [162]  vm.NavBar.UpdateTitle( {159} ) 
_B._vm._navbar.updatetitle("BVMDemo - Toolbar");
// [163]  vm.ShowPage(modToolbar.name) 
_B._vm.showpage(_banano_bvmdemo_modtoolbar._name);
// End Sub
};

// [166] Sub tabs_click(e As BANanoEvent) 
this.tabs_click=function(_e) {
if (_B==null) _B=this;
// [167]  vm.NavBar.UpdateTitle( {160} ) 
_B._vm._navbar.updatetitle("BVMDemo - Tabs");
// [168]  vm.ShowPage(modTabs.name) 
_B._vm.showpage(_banano_bvmdemo_modtabs._name);
// End Sub
};

// [171] Sub steppers_click(e As BANanoEvent) 
this.steppers_click=function(_e) {
if (_B==null) _B=this;
// [172]  vm.NavBar.UpdateTitle( {161} ) 
_B._vm._navbar.updatetitle("BVMDemo - Steppers");
// [173]  vm.ShowPage(modSteppers.name) 
_B._vm.showpage(_banano_bvmdemo_modsteppers._name);
// End Sub
};

// [176] Sub snackbar1_click(e As BANanoEvent) 
this.snackbar1_click=function(_e) {
if (_B==null) _B=this;
// [177]  vm.NavBar.UpdateTitle( {162} ) 
_B._vm._navbar.updatetitle("BVMDemo - Snack Bar");
// [178]  vm.ShowPage(modSnackBar.name) 
_B._vm.showpage(_banano_bvmdemo_modsnackbar._name);
// End Sub
};

// [181] Sub spinner_click(e As BANanoEvent) 
this.spinner_click=function(_e) {
if (_B==null) _B=this;
// [182]  vm.NavBar.UpdateTitle( {163} ) 
_B._vm._navbar.updatetitle("BVMDemo - Spinner");
// [183]  vm.ShowPage(modSpinner.name) 
_B._vm.showpage(_banano_bvmdemo_modspinner._name);
// End Sub
};

// [186] Sub progress_click(e As BANanoEvent) 
this.progress_click=function(_e) {
if (_B==null) _B=this;
// [187]  vm.NavBar.UpdateTitle( {164} ) 
_B._vm._navbar.updatetitle("BVMDemo - Progress");
// [188]  vm.ShowPage(modProgress.name) 
_B._vm.showpage(_banano_bvmdemo_modprogress._name);
// End Sub
};

// [192] Sub speeddial_click(e As BANanoEvent) 
this.speeddial_click=function(_e) {
if (_B==null) _B=this;
// [193]  vm.NavBar.UpdateTitle( {165} ) 
_B._vm._navbar.updatetitle("BVMDemo - Speed Dial");
// [194]  vm.ShowPage(modSpeedDial.name) 
_B._vm.showpage(_banano_bvmdemo_modspeeddial._name);
// End Sub
};

// [198] Sub empty_click(e As BANanoEvent) 
this.empty_click=function(_e) {
if (_B==null) _B=this;
// [199]  vm.NavBar.UpdateTitle( {166} ) 
_B._vm._navbar.updatetitle("BVMDemo - Empty State");
// [200]  vm.ShowPage(modEmptyState.name) 
_B._vm.showpage(_banano_bvmdemo_modemptystate._name);
// End Sub
};

// [203] Sub dialog_click(e As BANanoEvent) 
this.dialog_click=function(_e) {
if (_B==null) _B=this;
// [204]  vm.NavBar.UpdateTitle( {167} ) 
_B._vm._navbar.updatetitle("BVMDemo - Dialog");
// [205]  vm.ShowPage(modDialog.name) 
_B._vm.showpage(_banano_bvmdemo_moddialog._name);
// End Sub
};

// [208] Sub menus_click(e As BANanoEvent) 
this.menus_click=function(_e) {
if (_B==null) _B=this;
// [209]  vm.NavBar.UpdateTitle( {168} ) 
_B._vm._navbar.updatetitle("BVMDemo - Menu");
// [210]  vm.ShowPage(modMenu.name) 
_B._vm.showpage(_banano_bvmdemo_modmenu._name);
// End Sub
};

// [213] Sub controls_click(e As BANanoEvent) 
this.controls_click=function(_e) {
if (_B==null) _B=this;
// [214]  vm.NavBar.UpdateTitle( {169} ) 
_B._vm._navbar.updatetitle("BVMDemo - List > Controls");
// [215]  vm.ShowPage(modList.name) 
_B._vm.showpage(_banano_bvmdemo_modlist._name);
// End Sub
};

// [218] Sub icon_click(e As BANanoEvent) 
this.icon_click=function(_e) {
if (_B==null) _B=this;
// [219]  vm.NavBar.UpdateTitle( {170} ) 
_B._vm._navbar.updatetitle("BVMDemo - Icon");
// [220]  vm.ShowPage(modIcon.name) 
_B._vm.showpage(_banano_bvmdemo_modicon._name);
// End Sub
};

// [223] Sub switchbox_click(e As BANanoEvent) 
this.switchbox_click=function(_e) {
if (_B==null) _B=this;
// [224]  vm.NavBar.UpdateTitle( {171} ) 
_B._vm._navbar.updatetitle("BVMDemo - Switch");
// [225]  vm.ShowPage(modSwitch.name) 
_B._vm.showpage(_banano_bvmdemo_modswitch._name);
// End Sub
};

// [228] Sub combo_click(e As BANanoEvent) 
this.combo_click=function(_e) {
if (_B==null) _B=this;
// [229]  vm.NavBar.UpdateTitle( {172} ) 
_B._vm._navbar.updatetitle("BVMDemo - Select");
// [230]  vm.ShowPage(modSelect.name) 
_B._vm.showpage(_banano_bvmdemo_modselect._name);
// End Sub
};

// [233] Sub radio_click(e As BANanoEvent) 
this.radio_click=function(_e) {
if (_B==null) _B=this;
// [234]  vm.NavBar.UpdateTitle( {173} ) 
_B._vm._navbar.updatetitle("BVMDemo - Radio");
// [235]  vm.ShowPage(modRadio.name) 
_B._vm.showpage(_banano_bvmdemo_modradio._name);
// End Sub
};

// [238] Sub textarea_click(e As BANanoEvent) 
this.textarea_click=function(_e) {
if (_B==null) _B=this;
// [239]  vm.NavBar.UpdateTitle( {174} ) 
_B._vm._navbar.updatetitle("BVMDemo - TextArea");
// [240]  vm.ShowPage(modTextArea.name) 
_B._vm.showpage(_banano_bvmdemo_modtextarea._name);
// End Sub
};

// [243] Sub input_click(e As BANanoEvent) 
this.input_click=function(_e) {
if (_B==null) _B=this;
// [244]  vm.NavBar.UpdateTitle( {175} ) 
_B._vm._navbar.updatetitle("BVMDemo - Input");
// [245]  vm.ShowPage(modTextBox.name) 
_B._vm.showpage(_banano_bvmdemo_modtextbox._name);
// End Sub
};

// [248] Sub file_click(e As BANanoEvent) 
this.file_click=function(_e) {
if (_B==null) _B=this;
// [249]  vm.NavBar.UpdateTitle( {176} ) 
_B._vm._navbar.updatetitle("BVMDemo - File");
// [250]  vm.ShowPage(modFile.name) 
_B._vm.showpage(_banano_bvmdemo_modfile._name);
// End Sub
};

// [253] Sub checkbox_click(e As BANanoEvent) 
this.checkbox_click=function(_e) {
if (_B==null) _B=this;
// [254]  vm.NavBar.UpdateTitle( {177} ) 
_B._vm._navbar.updatetitle("BVMDemo - CheckBox");
// [255]  vm.ShowPage(modCheckBox.name) 
_B._vm.showpage(_banano_bvmdemo_modcheckbox._name);
// End Sub
};

// [258] Sub datepicker_click(e As BANanoEvent) 
this.datepicker_click=function(_e) {
if (_B==null) _B=this;
// [259]  vm.NavBar.UpdateTitle( {178} ) 
_B._vm._navbar.updatetitle("BVMDemo - DatePicker");
// [260]  vm.ShowPage(modDatePicker.name) 
_B._vm.showpage(_banano_bvmdemo_moddatepicker._name);
// End Sub
};

// [263] Sub buttons_click(e As BANanoEvent) 
this.buttons_click=function(_e) {
if (_B==null) _B=this;
// [264]  vm.NavBar.UpdateTitle( {179} ) 
_B._vm._navbar.updatetitle("BVMDemo - Buttons");
// [265]  vm.ShowPage(modButtons.name) 
_B._vm.showpage(_banano_bvmdemo_modbuttons._name);
// End Sub
};

// [268] Sub listview_click(e As BANanoEvent) 
this.listview_click=function(_e) {
if (_B==null) _B=this;
// [269]  vm.NavBar.UpdateTitle( {180} ) 
_B._vm._navbar.updatetitle("BVMDemo - ListView");
// [270]  vm.ShowPage(modListView.name) 
_B._vm.showpage(_banano_bvmdemo_modlistview._name);
// End Sub
};

// [273] Sub badge_click(e As BANanoEvent) 
this.badge_click=function(_e) {
if (_B==null) _B=this;
// [274]  vm.NavBar.UpdateTitle( {181} ) 
_B._vm._navbar.updatetitle("BVMDemo - Badge");
// [275]  vm.ShowPage(modBadge.name) 
_B._vm.showpage(_banano_bvmdemo_modbadge._name);
// End Sub
};

// [278] Sub avatar_click(e As BANanoEvent) 
this.avatar_click=function(_e) {
if (_B==null) _B=this;
// [279]  vm.NavBar.UpdateTitle( {182} ) 
_B._vm._navbar.updatetitle("BVMDemo - Avatar");
// [280]  vm.ShowPage(modAvatar.name) 
_B._vm.showpage(_banano_bvmdemo_modavatar._name);
// End Sub
};

// [283] Sub typography_click(e As BANanoEvent) 
this.typography_click=function(_e) {
if (_B==null) _B=this;
// [284]  vm.NavBar.UpdateTitle( {183} ) 
_B._vm._navbar.updatetitle("BVMDemo - Typography");
// [285]  vm.ShowPage(modTypography.name) 
_B._vm.showpage(_banano_bvmdemo_modtypography._name);
// End Sub
};

// [288] Sub chip_click(e As BANanoEvent) 
this.chip_click=function(_e) {
if (_B==null) _B=this;
// [289]  vm.NavBar.UpdateTitle( {184} ) 
_B._vm._navbar.updatetitle("BVMDemo - Chip");
// [290]  vm.ShowPage(modChips.name) 
_B._vm.showpage(_banano_bvmdemo_modchips._name);
// End Sub
};

// [293] Sub back_click(e As BANanoEvent) 
this.back_click=function(_e) {
if (_B==null) _B=this;
// End Sub
};

// [298] Sub confirm_ok(e As BANanoEvent) 
this.confirm_ok=function(_e) {
if (_B==null) _B=this;
var _sprocess,_pid;
// [299]  Dim sprocess As String = vm.getconfirm 
_sprocess=_B._vm.getconfirm();
// [300]  Select Case sprocess 
switch ("" + _sprocess) {
// [301]  Case {185} 
case "" + "delete_people":
// [302]  Dim pid As String = vm.getstate( {186} , {187} ) 
_pid=_B._vm.getstate("peopleid","");
// [303]  vm.ShowSnackBar( {188} & pid) 
_B._vm.showsnackbar("Person to delete id: "+_pid);
// [304]  End Select 
break;
}
// End Sub
};

}
/* =========================== modBottomBar  =========================== */
function banano_bvmdemo_modbottombar() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="bottomcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_bb,_bb2;
// [9]  Log( {1} ) 
console.log("modBottomBar.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns3x4 
_cont.addrows(2).addcolumns3x4();
// [18]  Dim bb As VMBottomBar = vm.CreateButtomBar( {2} , Me).SetPrimary(True) 
_bb=_B._vm.createbuttombar("bb1",_B).setprimary(true);
// [19]  bb.AddItem( {3} , {4} , {5} , {6} ) 
_bb.additem("bbitem1","Home","home","");
// [20]  bb.AddItem( {7} , {8} , {9} , {10} ) 
_bb.additem("bbitem2","Favourates","favorite","");
// [21]  bb.AddItem( {11} , {12} , {13} , {14} ) 
_bb.additem("bbitem3","Posts","email","");
// [22]  bb.AddToContainer(cont, 1, 1) 
_bb.addtocontainer(_cont,1,1);
// [24]  Dim bb2 As VMBottomBar = vm.CreateButtomBar( {15} , Me).SetAccent(True).SetTypeShift(True) 
_bb2=_B._vm.createbuttombar("bb2",_B).setaccent(true).settypeshift(true);
// [25]  bb2.AddItem( {16} , {17} , {18} , {19} ) 
_bb2.additem("bb2item1","Home","home","1");
// [26]  bb2.AddItem( {20} , {21} , {22} , {23} ) 
_bb2.additem("bb2item2","Favourates","favorite","3");
// [27]  bb2.AddItem( {24} , {25} , {26} , {27} ) 
_bb2.additem("bb2item3","Posts","email","2");
// [28]  bb2.AddToContainer(cont, 1, 2) 
_bb2.addtocontainer(_cont,1,2);
// [30]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [33] Sub bb2item1_click(e As BANanoEvent) 
this.bb2item1_click=function(_e) {
if (_B==null) _B=this;
// [34]  vm.ShowSnackBar( {28} ) 
_B._vm.showsnackbar("Home");
// [35]  vm.IncrementBadge( {29} ,1) 
_B._vm.incrementbadge("bb2item1",1);
// End Sub
};

// [38] Sub bb2item2_click(e As BANanoEvent) 
this.bb2item2_click=function(_e) {
if (_B==null) _B=this;
// [39]  vm.ShowSnackBar( {30} ) 
_B._vm.showsnackbar("Favourates");
// [40]  vm.IncrementBadge( {31} ,2) 
_B._vm.incrementbadge("bb2item2",2);
// End Sub
};

// [43] Sub bb2item3_click(e As BANanoEvent) 
this.bb2item3_click=function(_e) {
if (_B==null) _B=this;
// [44]  vm.ShowSnackBar( {32} ) 
_B._vm.showsnackbar("Posts");
// [45]  vm.IncrementBadge( {33} ,3) 
_B._vm.incrementbadge("bb2item3",3);
// End Sub
};

// [53] Sub bbitem1_click(e As BANanoEvent) 
this.bbitem1_click=function(_e) {
if (_B==null) _B=this;
// [54]  vm.ShowSnackBar( {34} ) 
_B._vm.showsnackbar("Home");
// End Sub
};

// [57] Sub bbitem2_click(e As BANanoEvent) 
this.bbitem2_click=function(_e) {
if (_B==null) _B=this;
// [58]  vm.ShowSnackBar( {35} ) 
_B._vm.showsnackbar("Favourates");
// End Sub
};

// [61] Sub bbitem3_click(e As BANanoEvent) 
this.bbitem3_click=function(_e) {
if (_B==null) _B=this;
// [62]  vm.ShowSnackBar( {36} ) 
_B._vm.showsnackbar("Posts");
// End Sub
};

}
/* =========================== modButtons  =========================== */
function banano_bvmdemo_modbuttons() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="buttonscode";

// [9] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [10]  Log( {1} ) 
console.log("modButtons.Code");
// [11]  vm = vmx 
_B._vm=_vmx;
// [13]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [15]  cont.Hide 
_cont.hide();
// [17]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  vm.CreateButton( {2} ,Me).SetText( {3} ).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b1",_B).settext("Default").addtocontainer(_cont,1,1);
// [19]  vm.CreateButton( {4} ,Me).SetText( {5} ).SetRipple(False).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b2",_B).settext("Ripple Off").setripple(false).addtocontainer(_cont,1,1);
// [20]  vm.CreateButton( {6} ,Me).SetText( {7} ).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b3",_B).settext("Primary").setprimary(true).addtocontainer(_cont,1,1);
// [21]  vm.CreateButton( {8} ,Me).SetText( {9} ).SetAccent(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b4",_B).settext("Accent").setaccent(true).addtocontainer(_cont,1,1);
// [22]  vm.CreateButton( {10} ,Me).SetText( {11} ).SetDisabled(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b5",_B).settext("Disabled").setdisabled(true).addtocontainer(_cont,1,1);
// [24]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [25]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [27]  vm.CreateButton( {12} ,Me).SetText( {13} ).SetRaised(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b1r",_B).settext("Default").setraised(true).addtocontainer(_cont,1,1);
// [28]  vm.CreateButton( {14} ,Me).SetText( {15} ).SetRaised(True).SetRipple(False).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b2r",_B).settext("Ripple Off").setraised(true).setripple(false).addtocontainer(_cont,1,1);
// [29]  vm.CreateButton( {16} ,Me).SetText( {17} ).SetRaised(True).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b3r",_B).settext("Primary").setraised(true).setprimary(true).addtocontainer(_cont,1,1);
// [30]  vm.CreateButton( {18} ,Me).SetText( {19} ).SetRaised(True).SetAccent(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b4r",_B).settext("Accent").setraised(true).setaccent(true).addtocontainer(_cont,1,1);
// [31]  vm.CreateButton( {20} ,Me).SetText( {21} ).SetRaised(True).SetDisabled(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b5r",_B).settext("Disabled").setraised(true).setdisabled(true).addtocontainer(_cont,1,1);
// [33]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [34]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [36]  vm.CreateButton( {22} ,Me).SetIcon( {23} ).SetIconButton(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b1ri",_B).seticon("home").seticonbutton(true).addtocontainer(_cont,1,1);
// [37]  vm.CreateButton( {24} ,Me).SetIcon( {25} ).SetIconButton(True).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b2ri",_B).seticon("menu").seticonbutton(true).setprimary(true).addtocontainer(_cont,1,1);
// [38]  vm.CreateButton( {26} ,Me).SetIcon( {27} ).SetIconButton(True).SetAccent(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b3ri",_B).seticon("thumb_up").seticonbutton(true).setaccent(true).addtocontainer(_cont,1,1);
// [39]  vm.CreateButton( {28} ,Me).SetIcon( {29} ).SetIconButton(True).SetDisabled(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b4ri",_B).seticon("add").seticonbutton(true).setdisabled(true).addtocontainer(_cont,1,1);
// [41]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [42]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [44]  vm.CreateButton( {30} ,Me).SetIcon( {31} ).SetRaised(True).SetIconButton(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b1rix",_B).seticon("home").setraised(true).seticonbutton(true).addtocontainer(_cont,1,1);
// [45]  vm.CreateButton( {32} ,Me).SetIcon( {33} ).SetRaised(True).SetIconButton(True).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b2rix",_B).seticon("menu").setraised(true).seticonbutton(true).setprimary(true).addtocontainer(_cont,1,1);
// [46]  vm.CreateButton( {34} ,Me).SetIcon( {35} ).SetRaised(True).SetIconButton(True).SetAccent(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b3rix",_B).seticon("thumb_up").setraised(true).seticonbutton(true).setaccent(true).addtocontainer(_cont,1,1);
// [47]  vm.CreateButton( {36} ,Me).SetIcon( {37} ).SetIconButton(True).SetRaised(True).SetDisabled(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("b4rix",_B).seticon("add").seticonbutton(true).setraised(true).setdisabled(true).addtocontainer(_cont,1,1);
// [49]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [50]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [52]  vm.CreateButton( {38} ,Me).SetIcon( {39} ).SetFab(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("f1",_B).seticon("home").setfab(true).addtocontainer(_cont,1,1);
// [53]  vm.CreateButton( {40} ,Me).SetIcon( {41} ).SetFab(True).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("f2",_B).seticon("menu").setfab(true).setprimary(true).addtocontainer(_cont,1,1);
// [54]  vm.CreateButton( {42} ,Me).SetIcon( {43} ).SetFab(True).SetPlain(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("f3",_B).seticon("edit").setfab(true).setplain(true).addtocontainer(_cont,1,1);
// [56]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [57]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [59]  vm.CreateButton( {44} ,Me).SetIcon( {45} ).SetFab(True).SetMini(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("f1m",_B).seticon("menu").setfab(true).setmini(true).addtocontainer(_cont,1,1);
// [60]  vm.CreateButton( {46} ,Me).SetIcon( {47} ).SetFab(True).SetMini(True).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("f2m",_B).seticon("home").setfab(true).setmini(true).setprimary(true).addtocontainer(_cont,1,1);
// [61]  vm.CreateButton( {48} ,Me).SetIcon( {49} ).SetFab(True).SetMini(True).SetPlain(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("f3m",_B).seticon("edit").setfab(true).setmini(true).setplain(true).addtocontainer(_cont,1,1);
// [63]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [64]  cont.AddComponent(1,1,vm.br) 
_cont.addcomponent(1,1,_B._vm.br());
// [66]  vm.CreateButton( {50} ,Me).SetText( {51} ).SetHREF( {52} , True).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("lnk",_B).settext("Link").sethref("pageurl",true).setprimary(true).addtocontainer(_cont,1,1);
// [67]  vm.CreateButton( {53} ,Me).SetText( {54} ).SetHREF( {55} , True).SetPrimary(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("lnk1",_B).settext("Route Link").sethref("pageurl",true).setprimary(true).addtocontainer(_cont,1,1);
// [68]  vm.setcomputed( {56} , Me, {57} ) 
_B._vm.setcomputed("pageurl",_B,"getpageurl");
// [70]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [73] Sub getpageURL As String 
this.getpageurl=function() {
if (_B==null) _B=this;
var _pg;
// [74]  Dim pg As String = banano.Location.GetHref 
_pg=window.location.href;
// [75]  Return pg 
return _pg;
// End Sub
};

}
/* =========================== modChartKick  =========================== */
function banano_bvmdemo_modchartkick() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="chartkickcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_provchart,_pie,_colchart,_barchart,_areachart,_scatterchart,_linechartm,_donut,_linechart1,_colchart1,_areachart1,_barchart1,_colchart2,_barchart2,_scatterchart1;
// [9]  Log( {1} ) 
console.log("modChartKick.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.AddRows(5).AddColumns4x3 
_cont.addrows(5).addcolumns4x3();
// [18]  Dim provChart As VMChartKick = vm.CreateChartKick( {2} , Me).SetLineChart.SetStyleSingle( {3} , {4} ) 
_provchart=_B._vm.createchartkick("provChart",_B).setlinechart().setstylesingle("height","300px");
// [19]  provChart.AddXYMap(CreateMap( {5} :11, {6} :6, {7} :3, {8} :2, {9} :5, {10} :3, {11} :8, {12} :6, {13} :6, {14} :12, {15} :5, {16} :5, {17} :3, {18} :1, {19} :10, {20} :1, {21} :3, {22} :2, {23} :3, {24} :2, {25} :8)) 
_provchart.addxymap({"2013-02-10":11, "2013-02-11":6, "2013-02-12":3, "2013-02-13":2, "2013-02-14":5, "2013-02-15":3, "2013-02-16":8, "2013-02-17":6, "2013-02-18":6, "2013-02-19":12, "2013-02-20":5, "2013-02-21":5, "2013-02-22":3, "2013-02-23":1, "2013-02-24":10, "2013-02-25":1, "2013-02-26":3, "2013-02-27":2, "2013-02-28":3, "2013-03-01":2, "2013-03-02":8});
// [23]  provChart.SetTitle( {26} ) 
_provchart.settitle("My Chart");
// [24]  cont.AddComponent(1,1, provChart.tostring) 
_cont.addcomponent(1,1,_provchart.tostring());
// [26]  Dim pie As VMChartKick = vm.CreateChartKick( {27} , Me).SetPieChart.SetStyleSingle( {28} , {29} ) 
_pie=_B._vm.createchartkick("pie",_B).setpiechart().setstylesingle("height","300px");
// [27]  pie.AddXYMap(CreateMap( {30} :44, {31} :23, {32} :22, {33} :21, {34} :13)) 
_pie.addxymap({"Blueberry":44, "Strawberry":23, "Banana":22, "Apple":21, "Grape":13});
// [28]  cont.AddComponent(1,2, pie.tostring) 
_cont.addcomponent(1,2,_pie.tostring());
// [30]  Dim colChart As VMChartKick = vm.CreateChartKick( {35} , Me).SetColumnChart.SetStyleSingle( {36} , {37} ) 
_colchart=_B._vm.createchartkick("colChart",_B).setcolumnchart().setstylesingle("height","300px");
// [31]  colChart.AddXYMap(CreateMap( {38} :32, {39} :46, {40} :28, {41} :21, {42} :20, {43} :13, {44} :27)) 
_colchart.addxymap({"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [32]  cont.AddComponent(1,3, colChart.tostring) 
_cont.addcomponent(1,3,_colchart.tostring());
// [34]  Dim barChart As VMChartKick = vm.CreateChartKick( {45} , Me).SetBarChart.SetStyleSingle( {46} , {47} ) 
_barchart=_B._vm.createchartkick("barChart",_B).setbarchart().setstylesingle("height","300px");
// [35]  barChart.AddXYMap(CreateMap( {48} :32, {49} :46, {50} :28, {51} :21, {52} :20, {53} :13, {54} :27)) 
_barchart.addxymap({"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [36]  cont.AddComponent(1,4, barChart.tostring) 
_cont.addcomponent(1,4,_barchart.tostring());
// [38]  Dim areaChart As VMChartKick = vm.CreateChartKick( {55} , Me).SetAreaChart.SetStyleSingle( {56} , {57} ) 
_areachart=_B._vm.createchartkick("areaChart",_B).setareachart().setstylesingle("height","300px");
// [39]  areaChart.AddXYMap(CreateMap( {58} :11, {59} :6, {60} :3, {61} :2, {62} :5, {63} :3, {64} :8, {65} :6, {66} :6, {67} :12, {68} :5, {69} :5, {70} :3, {71} :1, {72} :10, {73} :1, {74} :3, {75} :2, {76} :3, {77} :2, {78} :8)) 
_areachart.addxymap({"2013-02-10":11, "2013-02-11":6, "2013-02-12":3, "2013-02-13":2, "2013-02-14":5, "2013-02-15":3, "2013-02-16":8, "2013-02-17":6, "2013-02-18":6, "2013-02-19":12, "2013-02-20":5, "2013-02-21":5, "2013-02-22":3, "2013-02-23":1, "2013-02-24":10, "2013-02-25":1, "2013-02-26":3, "2013-02-27":2, "2013-02-28":3, "2013-03-01":2, "2013-03-02":8});
// [42]  cont.AddComponent(2,1, areaChart.tostring) 
_cont.addcomponent(2,1,_areachart.tostring());
// [44]  Dim scatterChart As VMChartKick = vm.CreateChartKick( {79} , Me).SetScatterChart.SetStyleSingle( {80} , {81} ) 
_scatterchart=_B._vm.createchartkick("scatterChart",_B).setscatterchart().setstylesingle("height","300px");
// [45]  scatterChart.AddXYMap(CreateMap(174.0: 80.0, 176.5: 82.3, 180.3: 73.6, 167.6: 74.1, 188.0: 85.9)) 
_scatterchart.addxymap({174.0:80.0, 176.5:82.3, 180.3:73.6, 167.6:74.1, 188.0:85.9});
// [46]  scatterChart.SetXTitle( {82} ) 
_scatterchart.setxtitle("Size");
// [47]  scatterChart.SetYTitle( {83} ) 
_scatterchart.setytitle("Population");
// [48]  cont.AddComponent(2,2, scatterChart.tostring) 
_cont.addcomponent(2,2,_scatterchart.tostring());
// [50]  Dim lineChartM As VMChartKick = vm.CreateChartKick( {84} , Me).SetLineChart.SetStyleSingle( {85} , {86} ) 
_linechartm=_B._vm.createchartkick("lineChartM",_B).setlinechart().setstylesingle("height","300px");
// [51]  lineChartM.AddSeries( {87} , {88} , True, CreateMap( {89} :3, {90} :3, {91} :3, {92} :1, {93} :4, {94} :3, {95} :2, {96} :3)) 
_linechartm.addseries("Workout","",true,{"2013-02-10":3, "2013-02-17":3, "2013-02-24":3, "2013-03-03":1, "2013-03-10":4, "2013-03-17":3, "2013-03-24":2, "2013-03-31":3});
// [52]  lineChartM.AddSeries( {97} , {98} , True, CreateMap( {99} :0, {100} :0, {101} :0, {102} :0, {103} :2, {104} :1, {105} :0, {106} :0)) 
_linechartm.addseries("Go to concert","",true,{"2013-02-10":0, "2013-02-17":0, "2013-02-24":0, "2013-03-03":0, "2013-03-10":2, "2013-03-17":1, "2013-03-24":0, "2013-03-31":0});
// [53]  lineChartM.AddSeries( {107} , {108} , True, CreateMap( {109} :0, {110} :1, {111} :0, {112} :0, {113} :0, {114} :1, {115} :0, {116} :1)) 
_linechartm.addseries("Wash face","",true,{"2013-02-10":0, "2013-02-17":1, "2013-02-24":0, "2013-03-03":0, "2013-03-10":0, "2013-03-17":1, "2013-03-24":0, "2013-03-31":1});
// [54]  lineChartM.AddSeries( {117} , {118} , True, CreateMap( {119} :5, {120} :3, {121} :2, {122} :0, {123} :0, {124} :1, {125} :1, {126} :0)) 
_linechartm.addseries("Call parents","",true,{"2013-02-10":5, "2013-02-17":3, "2013-02-24":2, "2013-03-03":0, "2013-03-10":0, "2013-03-17":1, "2013-03-24":1, "2013-03-31":0});
// [55]  lineChartM.AddSeries( {127} , {128} ,True, CreateMap( {129} :3, {130} :2, {131} :1, {132} :0, {133} :2, {134} :2, {135} :3, {136} :0)) 
_linechartm.addseries("Eat breakfast","",true,{"2013-02-10":3, "2013-02-17":2, "2013-02-24":1, "2013-03-03":0, "2013-03-10":2, "2013-03-17":2, "2013-03-24":3, "2013-03-31":0});
// [57]  cont.AddComponent(2,3, lineChartM.tostring) 
_cont.addcomponent(2,3,_linechartm.tostring());
// [59]  Dim donut As VMChartKick = vm.CreateChartKick( {137} , Me).SetPieChart.SetStyleSingle( {138} , {139} ) 
_donut=_B._vm.createchartkick("donut",_B).setpiechart().setstylesingle("height","300px");
// [60]  donut.AddXYMap(CreateMap( {140} :44, {141} :23, {142} :22, {143} :21, {144} :13)) 
_donut.addxymap({"Blueberry":44, "Strawberry":23, "Banana":22, "Apple":21, "Grape":13});
// [61]  donut.SetDonut 
_donut.setdonut();
// [62]  cont.AddComponent(2,4, donut.tostring) 
_cont.addcomponent(2,4,_donut.tostring());
// [64]  Dim lineChart1 As VMChartKick = vm.CreateChartKick( {145} , Me).SetLineChart.SetStyleSingle( {146} , {147} ) 
_linechart1=_B._vm.createchartkick("lineChart1",_B).setlinechart().setstylesingle("height","300px");
// [65]  lineChart1.AddXYMap(CreateMap( {148} : 4, {149} : 2, {150} : 10, {151} : 5, {152} : 3)) 
_linechart1.addxymap({"Jan":4, "Feb":2, "Mar":10, "Apr":5, "May":3});
// [66]  lineChart1.SetCurve 
_linechart1.setcurve();
// [67]  cont.AddComponent(3, 1, lineChart1.tostring) 
_cont.addcomponent(3,1,_linechart1.tostring());
// [69]  Dim colChart1 As VMChartKick = vm.CreateChartKick( {153} , Me).SetColumnChart.SetStyleSingle( {154} , {155} ) 
_colchart1=_B._vm.createchartkick("colChart1",_B).setcolumnchart().setstylesingle("height","300px");
// [70]  colChart1.AddSeries( {156} , {157} , False, CreateMap( {158} :32, {159} :46, {160} :28, {161} :21, {162} :20, {163} :13, {164} :27)) 
_colchart1.addseries("Series A","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [71]  colChart1.AddSeries( {165} , {166} , False, CreateMap( {167} :32, {168} :46, {169} :28, {170} :21, {171} :20, {172} :13, {173} :27)) 
_colchart1.addseries("Series B","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [72]  colChart1.SetStacked 
_colchart1.setstacked();
// [73]  cont.AddComponent(3,2, colChart1.tostring) 
_cont.addcomponent(3,2,_colchart1.tostring());
// [75]  Dim areaChart1 As VMChartKick = vm.CreateChartKick( {174} , Me).SetAreaChart.SetStyleSingle( {175} , {176} ) 
_areachart1=_B._vm.createchartkick("areaChart1",_B).setareachart().setstylesingle("height","300px");
// [76]  areaChart1.AddSeries( {177} , {178} , True, CreateMap( {179} :3, {180} :3, {181} :3, {182} :1, {183} :4, {184} :3, {185} :2, {186} :3)) 
_areachart1.addseries("Workout","",true,{"2013-02-10":3, "2013-02-17":3, "2013-02-24":3, "2013-03-03":1, "2013-03-10":4, "2013-03-17":3, "2013-03-24":2, "2013-03-31":3});
// [77]  areaChart1.AddSeries( {187} , {188} , True, CreateMap( {189} :0, {190} :0, {191} :0, {192} :0, {193} :2, {194} :1, {195} :0, {196} :0)) 
_areachart1.addseries("Go to concert","",true,{"2013-02-10":0, "2013-02-17":0, "2013-02-24":0, "2013-03-03":0, "2013-03-10":2, "2013-03-17":1, "2013-03-24":0, "2013-03-31":0});
// [78]  areaChart1.AddSeries( {197} , {198} , True, CreateMap( {199} :0, {200} :1, {201} :0, {202} :0, {203} :0, {204} :1, {205} :0, {206} :1)) 
_areachart1.addseries("Wash face","",true,{"2013-02-10":0, "2013-02-17":1, "2013-02-24":0, "2013-03-03":0, "2013-03-10":0, "2013-03-17":1, "2013-03-24":0, "2013-03-31":1});
// [79]  areaChart1.AddSeries( {207} , {208} , True, CreateMap( {209} :5, {210} :3, {211} :2, {212} :0, {213} :0, {214} :1, {215} :1, {216} :0)) 
_areachart1.addseries("Call parents","",true,{"2013-02-10":5, "2013-02-17":3, "2013-02-24":2, "2013-03-03":0, "2013-03-10":0, "2013-03-17":1, "2013-03-24":1, "2013-03-31":0});
// [80]  areaChart1.AddSeries( {217} , {218} ,True, CreateMap( {219} :3, {220} :2, {221} :1, {222} :0, {223} :2, {224} :2, {225} :3, {226} :0)) 
_areachart1.addseries("Eat breakfast","",true,{"2013-02-10":3, "2013-02-17":2, "2013-02-24":1, "2013-03-03":0, "2013-03-10":2, "2013-03-17":2, "2013-03-24":3, "2013-03-31":0});
// [81]  cont.AddComponent(3,3, areaChart1.tostring) 
_cont.addcomponent(3,3,_areachart1.tostring());
// [83]  Dim barChart1 As VMChartKick = vm.CreateChartKick( {227} , Me).SetBarChart.SetStyleSingle( {228} , {229} ) 
_barchart1=_B._vm.createchartkick("barChart1",_B).setbarchart().setstylesingle("height","300px");
// [84]  barChart1.AddSeries( {230} , {231} , False, CreateMap( {232} :32, {233} :46, {234} :28, {235} :21, {236} :20, {237} :13, {238} :27)) 
_barchart1.addseries("Series A","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [85]  barChart1.AddSeries( {239} , {240} , False, CreateMap( {241} :32, {242} :46, {243} :28, {244} :21, {245} :20, {246} :13, {247} :27)) 
_barchart1.addseries("Series B","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [86]  barChart1.SetMax(80) 
_barchart1.setmax(80);
// [87]  barChart1.SetStacked 
_barchart1.setstacked();
// [88]  cont.AddComponent(3,4, barChart1.tostring) 
_cont.addcomponent(3,4,_barchart1.tostring());
// [90]  Dim colChart2 As VMChartKick = vm.CreateChartKick( {248} , Me).SetColumnChart.SetStyleSingle( {249} , {250} ) 
_colchart2=_B._vm.createchartkick("colChart2",_B).setcolumnchart().setstylesingle("height","300px");
// [91]  colChart2.AddSeries( {251} , {252} , False, CreateMap( {253} :32, {254} :46, {255} :28, {256} :21, {257} :20, {258} :13, {259} :27)) 
_colchart2.addseries("Series A","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [92]  colChart2.AddSeries( {260} , {261} , False, CreateMap( {262} :32, {263} :46, {264} :28, {265} :21, {266} :20, {267} :13, {268} :27)) 
_colchart2.addseries("Series B","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [93]  cont.AddComponent(4,1, colChart2.tostring) 
_cont.addcomponent(4,1,_colchart2.tostring());
// [95]  Dim barChart2 As VMChartKick = vm.CreateChartKick( {269} , Me).SetBarChart.SetStyleSingle( {270} , {271} ) 
_barchart2=_B._vm.createchartkick("barChart2",_B).setbarchart().setstylesingle("height","300px");
// [96]  barChart2.AddSeries( {272} , {273} , False, CreateMap( {274} :32, {275} :46, {276} :28, {277} :21, {278} :20, {279} :13, {280} :27)) 
_barchart2.addseries("Series A","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [97]  barChart2.AddSeries( {281} , {282} , False, CreateMap( {283} :32, {284} :46, {285} :28, {286} :21, {287} :20, {288} :13, {289} :27)) 
_barchart2.addseries("Series B","",false,{"0":32, "1":46, "2":28, "3":21, "4":20, "5":13, "6":27});
// [98]  cont.AddComponent(4,2, barChart2.tostring) 
_cont.addcomponent(4,2,_barchart2.tostring());
// [100]  Dim scatterChart1 As VMChartKick = vm.CreateChartKick( {290} , Me).SetScatterChart.SetStyleSingle( {291} , {292} ) 
_scatterchart1=_B._vm.createchartkick("scatterChart1",_B).setscatterchart().setstylesingle("height","300px");
// [101]  scatterChart1.AddSeries( {293} , {294} , False, CreateMap(174.0: 73.6, 162.6: 61.4, 174.0: 55.5, 162.6: 63.6, 161.3: 60.9)) 
_scatterchart1.addseries("Female","",false,{174.0:73.6, 162.6:61.4, 174.0:55.5, 162.6:63.6, 161.3:60.9});
// [102]  scatterChart1.AddSeries( {295} , {296} , False, CreateMap(174.0: 80.0, 176.5: 82.3, 180.3: 73.6, 167.6: 74.1, 188.0: 85.9)) 
_scatterchart1.addseries("Male","",false,{174.0:80.0, 176.5:82.3, 180.3:73.6, 167.6:74.1, 188.0:85.9});
// [103]  cont.AddComponent(4,3, scatterChart1.tostring) 
_cont.addcomponent(4,3,_scatterchart1.tostring());
// [105]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

}
/* =========================== modCheckBox  =========================== */
function banano_bvmdemo_modcheckbox() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="checkboxcode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modCheckBox.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  vm.CreateCheckBox( {2} ,Me).SetText( {3} ).SetVModel( {4} ).SetValue(True).AddToContainer(cont,1,1) 
_B._vm.createcheckbox("cb1",_B).settext("Boolean").setvmodel("cb1").setvalue(true).addtocontainer(_cont,1,1);
// [19]  vm.CreateCheckBox( {5} ,Me).SetText( {6} ).SetVModel( {7} ).SetPrimary(True).SetValue( {8} ).AddToContainer(cont,1,1) 
_B._vm.createcheckbox("cb2",_B).settext("String").setvmodel("cb2").setprimary(true).setvalue("male").addtocontainer(_cont,1,1);
// [20]  vm.CreateCheckBox( {9} ,Me).SetText( {10} ).SetDisabled(True).SetVModel( {11} ).SetValue(True).AddToContainer(cont,1,1) 
_B._vm.createcheckbox("cb3",_B).settext("Disabled").setdisabled(true).setvmodel("cb3").setvalue(true).addtocontainer(_cont,1,1);
// [21]  vm.CreateCheckBox( {12} ,Me).SetText( {13} ).SetVModel( {14} ).SetIndeterminate.AddToContainer(cont,1,1) 
_B._vm.createcheckbox("cb4",_B).settext("Indeterminate").setvmodel("cb4").setindeterminate().addtocontainer(_cont,1,1);
// [23]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [24]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [35]  vm.CreateLABEL( {25} ).SetText( {26} ).SetParagraph.AddToContainer(cont,1,1) 
_B._vm.createlabel("").settext("CB1 {{ cb1 }}").setparagraph().addtocontainer(_cont,1,1);
// [36]  vm.CreateLABEL( {27} ).SetText( {28} ).SetParagraph.AddToContainer(cont,1,1) 
_B._vm.createlabel("").settext("CB2 {{ cb2 }}").setparagraph().addtocontainer(_cont,1,1);
// [39]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [42] Sub cb2_change(cValue As String) 
this.cb2_change=function(_cvalue) {
if (_B==null) _B=this;
// [43]  vm.ShowSnackBar(cValue) 
_B._vm.showsnackbar(_cvalue);
// End Sub
};

}
/* =========================== modChips  =========================== */
function banano_bvmdemo_modchips() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="chipscode";

// [9] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont,_lbl,_chip1,_chip2,_chip3,_chip4,_books,_chipbooks,_chip5,_chip6,_chip7;
// [10]  Log( {1} ) 
console.log("modChips.Code");
// [11]  vm = vmx 
_B._vm=_vmx;
// [13]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [15]  cont.Hide 
_cont.hide();
// [17]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [18]  Dim lbl As VMLabel = vm.CreateLABEL( {2} ).SetParagraph.SetText( {3} ) 
_lbl=_B._vm.createlabel("lbl").setparagraph().settext("Chip Component");
// [19]  cont.AddComponent(1,1,lbl.tostring) 
_cont.addcomponent(1,1,_lbl.tostring());
// [22]  Dim chip1 As VMChip = vm.CreateChip( {4} ,Me).SetText( {5} ) 
_chip1=_B._vm.createchip("chip1",_B).settext("Chip1 - Static");
// [24]  cont.AddComponent(1,1, chip1.ToString) 
_cont.addcomponent(1,1,_chip1.tostring());
// [26]  Dim chip2 As VMChip = vm.CreateChip( {6} ,Me).SetText( {7} ).SetPrimary(True).SetDeletable(True) 
_chip2=_B._vm.createchip("chip2",_B).settext("Chip2 - Deletable").setprimary(true).setdeletable(true);
// [27]  cont.AddComponent(1,1,chip2.ToString) 
_cont.addcomponent(1,1,_chip2.tostring());
// [29]  Dim chip3 As VMChip = vm.CreateChip( {8} ,Me).SetText( {9} ).SetAccent(True).SetClickable(True) 
_chip3=_B._vm.createchip("chip3",_B).settext("Chip3 - Clickable").setaccent(true).setclickable(true);
// [30]  cont.AddComponent(1,1,chip3.ToString) 
_cont.addcomponent(1,1,_chip3.tostring());
// [32]  Dim chip4 As VMChip = vm.CreateChip( {10} ,Me).SetText( {11} ).SetDisabled(True) 
_chip4=_B._vm.createchip("chip4",_B).settext("Chip4 - Disabled").setdisabled(true);
// [33]  cont.AddComponent(1,1,chip4.ToString) 
_cont.addcomponent(1,1,_chip4.tostring());
// [35]  Dim lbl As VMLabel = vm.CreateLABEL( {12} ).SetParagraph.SetText( {13} ) 
_lbl=_B._vm.createlabel("lbl").setparagraph().settext("Chip from VModel");
// [36]  cont.AddComponent(1,1,lbl.tostring) 
_cont.addcomponent(1,1,_lbl.tostring());
// [38]  Dim books As List 
_books=[];
// [39]  books.initialize 
_books.length=0;
// [40]  books.add(CreateMap( {14} : {15} , {16} : {17} )) 
_books.push({"id":"1", "title":"English"});
// [41]  books.add(CreateMap( {18} : {19} , {20} : {21} )) 
_books.push({"id":"2", "title":"Afrikaans"});
// [42]  books.add(CreateMap( {22} : {23} , {24} : {25} )) 
_books.push({"id":"3", "title":"Xhosa"});
// [43]  vm.setstatesingle( {26} , books) 
_B._vm.setstatesingle("books",_books);
// [45]  Dim chipBooks As VMChip = vm.CreateChip( {27} ,Me).SetDataSource( {28} , {29} , {30} ) 
_chipbooks=_B._vm.createchip("chipBooks",_B).setdatasource("books","id","title");
// [46]  chipBooks.SetPrimary(True).SetClickable(True).SetLabel( {31} ) 
_chipbooks.setprimary(true).setclickable(true).setlabel("Languages");
// [47]  cont.AddComponent(1,1,chipBooks.ToString) 
_cont.addcomponent(1,1,_chipbooks.tostring());
// [50]  Dim lbl As VMLabel = vm.CreateLABEL( {32} ).SetParagraph.SetText( {33} ) 
_lbl=_B._vm.createlabel("lbl").setparagraph().settext("Chips Input Component");
// [51]  cont.AddComponent(1,1,lbl.tostring) 
_cont.addcomponent(1,1,_lbl.tostring());
// [53]  vm.SetStateList( {34} , Array( {35} , {36} , {37} )) 
_B._vm.setstatelist("fruits",["Orange","Apple","Pineapple"]);
// [54]  Dim chip5 As VMChips = vm.CreateChips( {38} ,Me).SetVModel( {39} ).SetPlaceholder( {40} ).SetCheckDuplicated(True) 
_chip5=_B._vm.createchips("chip5",_B).setvmodel("fruits").setplaceholder("Add fruit...").setcheckduplicated(true);
// [55]  cont.AddComponent(2,1, chip5.tostring) 
_cont.addcomponent(2,1,_chip5.tostring());
// [57]  Dim lbl As VMLabel = vm.createlabel( {41} ).SetText( {42} ).SetParagraph 
_lbl=_B._vm.createlabel("thefruits").settext("{{ fruits }}").setparagraph();
// [58]  cont.AddComponent(2,1, lbl.tostring) 
_cont.addcomponent(2,1,_lbl.tostring());
// [60]  vm.SetStateList( {43} , Array( {44} , {45} , {46} , {47} )) 
_B._vm.setstatelist("cities",["New York","Amsterdam","Tokyo","Rome"]);
// [61]  Dim chip6 As VMChips = vm.CreateChips( {48} ,Me).SetVModel( {49} ).SetLabel( {50} ) 
_chip6=_B._vm.createchips("chip6",_B).setvmodel("cities").setlabel("Cities");
// [62]  chip6.SetHelperText( {51} ) 
_chip6.sethelpertext("Wonderful places");
// [63]  cont.AddComponent(2,1, chip6.tostring) 
_cont.addcomponent(2,1,_chip6.tostring());
// [65]  Dim chip7 As VMChips = vm.CreateChips( {52} ,Me).SetVModel( {53} ).SetStatic(True) 
_chip7=_B._vm.createchips("chip7",_B).setvmodel("cities").setstatic(true);
// [66]  cont.AddComponent(2,1, chip7.tostring) 
_cont.addcomponent(2,1,_chip7.tostring());
// [68]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// End Sub
};

// [71] Sub chipBooks_click(e As BANanoEvent) 
this.chipbooks_click=function(_e) {
if (_B==null) _B=this;
var _chipid;
// [72]  Dim chipID As String = vm.GetIDFromEvent(e) 
_chipid=_B._vm.getidfromevent(_e);
// [73]  vm.showsnackbar(chipID) 
_B._vm.showsnackbar(_chipid);
// End Sub
};

// [76] Sub chip3_click(e As BANanoEvent) 
this.chip3_click=function(_e) {
if (_B==null) _B=this;
var _chipid;
// [77]  Dim chipID As String = vm.GetIDFromEvent(e) 
_chipid=_B._vm.getidfromevent(_e);
// [78]  vm.showsnackbar(chipID) 
_B._vm.showsnackbar(_chipid);
// End Sub
};

// [82] Sub chip5_click(text As String, index As Int) 
this.chip5_click=function(_text,_index) {
if (_B==null) _B=this;
// [83]  vm.showsnackbar(text) 
_B._vm.showsnackbar(_text);
// End Sub
};

// [87] Sub chip2_delete(e As BANanoEvent) 
this.chip2_delete=function(_e) {
if (_B==null) _B=this;
var _sid;
// [88]  Dim sid As String = vm.GetChipIDFromEvent(e) 
_sid=_B._vm.getchipidfromevent(_e);
// [89]  vm.showsnackbar(sid) 
_B._vm.showsnackbar(_sid);
// End Sub
};

// [93] Sub chip5_insert(value As String) 
this.chip5_insert=function(_value) {
if (_B==null) _B=this;
// [94]  vm.showsnackbar(value) 
_B._vm.showsnackbar(_value);
// End Sub
};

// [97] Sub chip5_delete(text As String, index As Int) 
this.chip5_delete=function(_text,_index) {
if (_B==null) _B=this;
// [98]  vm.showsnackbar(text) 
_B._vm.showsnackbar(_text);
// End Sub
};

}
/* =========================== modDatePicker  =========================== */
function banano_bvmdemo_moddatepicker() {
var _B;
this._vm= new banano_bananovuematerial_bananovm();

this._name="datepickercode";

// [8] Sub Code(vmx As BANanoVM) 
this.code=function(_vmx) {
if (_B==null) _B=this;
var _cont;
// [9]  Log( {1} ) 
console.log("modDatePicker.Code");
// [10]  vm = vmx 
_B._vm=_vmx;
// [12]  Dim cont As VMContainer = vm.CreateContainer(name,Me) 
_cont=_B._vm.createcontainer(_B._name,_B);
// [14]  cont.Hide 
_cont.hide();
// [16]  cont.addrows(2).AddColumns12 
_cont.addrows(2).addcolumns12();
// [17]  vm.CreateDatePicker( {2} ,Me).SetLabel( {3} ).SetVModel( {4} ).SetHelperText( {5} ).SetErrorText( {6} ).AddToContainer(cont,1,1) 
_B._vm.createdatepicker("dp1",_B).setlabel("Date Picker").setvmodel("dp1").sethelpertext("Date X").seterrortext("Enter Date").addtocontainer(_cont,1,1);
// [18]  vm.CreateDatePicker( {7} ,Me).SetLabel( {8} ).SetImmediately(True).SetVModel( {9} ).AddToContainer(cont,1,1) 
_B._vm.createdatepicker("dp2",_B).setlabel("Immediately").setimmediately(true).setvmodel("dp2").addtocontainer(_cont,1,1);
// [19]  vm.CreateDatePicker( {10} ,Me).SetLabel( {11} ).SetVModel( {12} ).AddToContainer(cont,1,1) 
_B._vm.createdatepicker("dp3",_B).setlabel("On Open/Close").setvmodel("dp3").addtocontainer(_cont,1,1);
// [21]  vm.CreateLabel( {13} ).SetParagraph.SetText( {14} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("lbl").setparagraph().settext("Selected Date: {{ dp1 }}").addtocontainer(_cont,1,1);
// [22]  vm.CreateLabel( {15} ).SetParagraph.SetText( {16} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("lbl1").setparagraph().settext("Date 2: {{ dp2 }}").addtocontainer(_cont,1,1);
// [23]  vm.CreateLabel( {17} ).SetParagraph.SetText( {18} ).AddToContainer(cont,1,1) 
_B._vm.createlabel("lbl2").setparagraph().settext("Date 3: {{ dp3 }}").addtocontainer(_cont,1,1);
// [24]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [25]  cont.AddComponent(1,1, vm.BR) 
_cont.addcomponent(1,1,_B._vm.br());
// [26]  vm.CreateButton( {19} ,Me).SetText( {20} ).SetRaised(True).AddToContainer(cont, 1, 1) 
_B._vm.createbutton("btn",_B).settext("Get Date").setraised(true).addtocontainer(_cont,1,1);
// [27]  vm.Container.AddComponent(1,1,cont.tostring) 
_B._vm._container.addcomponent(1,1,_cont.tostring());
// [28]  vm.showerror( {21} ) 
_B._vm.showerror("dp1");
// End Sub
};

// [31] Sub d3_opened(e As BANanoEvent) 
this.d3_opened=function(_e) {
if (_B==null) _B=this;
// [32]  vm.ToYYYYMMDD( {22} ) 
_B._vm.toyyyymmdd("dp3");
// End Sub
};

// [35] Sub d3_closed(e As BANanoEvent) 
this.d3_closed=function(_e) {
if (_B==null) _B=this;
// [36]  vm.ToYYYYMMDD( {23} ) 
_B._vm.toyyyymmdd("dp3");
// End Sub
};

// [40] Sub btn_click(e As BANanoEvent) 
this.btn_click=function(_e) {
if (_B==null) _B=this;
// [42]  vm.ToYYYYMMDD( {24} ) 
_B._vm.toyyyymmdd("dp1");
// End Sub
};

}
/* =========================== BVMDemo  =========================== */
function banano_bvmdemo() {
var _B;
this._appname="bvmdemo";

this._dbase="";

this._publish="";

this._bp; /* NOT SUPPORTED */

this._serverip="";

// [61] Sub BANano_Ready 
this.banano_ready=function() {
if (_B==null) _B=this;
// [62]  pgIndex.Init 
_banano_bvmdemo_pgindex.init();
// End Sub
};

}
/* =========================== alasqlresultset  =========================== */
function banano_bananovuematerial_alasqlresultset() {
var _B=this;
_B._response="";

_B._result=[];

_B._command="";

_B._types=[];

_B._args=[];

_B._query="";

_B._json="";

_B._error="";

_B._affectedrows=0;

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== mssqlresultset  =========================== */
function banano_bananovuematerial_mssqlresultset() {
var _B=this;
_B._result=[];

_B._command="";

_B._types=[];

_B._args=[];

_B._query="";

_B._response="";

_B._error="";

_B._affectedrows=0;

_B._json="";

_B._ok=false;

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== oxmlcell  =========================== */
function banano_bananovuematerial_oxmlcell() {
var _B=this;
_B._typeof="";

_B._value="";

_B._formula="";

_B._style={};

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== oxmlrow  =========================== */
function banano_bananovuematerial_oxmlrow() {
var _B=this;
_B._rowindex=0;

_B._columnindex=0;

_B._values=[];

_B._style={};

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== oxmlstyle  =========================== */
function banano_bananovuematerial_oxmlstyle() {
var _B=this;
_B._bold=false;

_B._italic=false;

_B._underline=false;

_B._strike=false;

_B._fontsize="";

_B._fontcolor="";

_B._fontname="";

_B._fontfamily="";

_B._scheme="";

_B._numberfrmat="";

_B._bordercolor="";

_B._borderthickness="";

_B._halignment="";

_B._valignment="";

_B._fillpattern="";

_B._fillforecolor="";

_B._fillbackground="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== sqliteresultset  =========================== */
function banano_bananovuematerial_sqliteresultset() {
var _B=this;
_B._result=[];

_B._command="";

_B._types=[];

_B._args=[];

_B._query="";

_B._response="";

_B._error="";

_B._affectedrows=0;

_B._json="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== fileobject  =========================== */
function banano_bananovuematerial_fileobject() {
var _B=this;
_B._filename="";

_B._filedate="";

_B._filesize=0;

_B._filetype="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== colortypes  =========================== */
function banano_bananovuematerial_colortypes() {
var _B=this;
_B._red="";

_B._pink="";

_B._purple="";

_B._deeppurple="";

_B._indigo="";

_B._blue="";

_B._lightblue="";

_B._cyan="";

_B._teal="";

_B._green="";

_B._lightgreen="";

_B._lime="";

_B._yellow="";

_B._amber="";

_B._orange="";

_B._deeporange="";

_B._brown="";

_B._grey="";

_B._bluegrey="";

_B._black="";

_B._white="";

_B._transparent="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== liststyleobj  =========================== */
function banano_bananovuematerial_liststyleobj() {
var _B=this;
_B._circle="";

_B._square="";

_B._loweralpha="";

_B._upperalpha="";

_B._upperroman="";

_B._lowerroman="";

_B._none="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== grdline  =========================== */
function banano_bananovuematerial_grdline() {
var _B=this;
_B._display=false;

_B._circular=false;

_B._linewidth=0;

_B._drawborder=false;

_B._drawonchartarea=false;

_B._drawticks=false;

_B._tickmarklength=0;

_B._zerolinewidth=0;

_B._offsetgridlines=false;

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== tickstype  =========================== */
function banano_bananovuematerial_tickstype() {
var _B=this;
_B._autoskip=false;

_B._maxrotation=0;

_B._minrotation=0;

_B._minvalue=0;

_B._maxvalue=0;

_B._stepsize=0;

_B._beginatzero=false;

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== xaxestype  =========================== */
function banano_bananovuematerial_xaxestype() {
var _B=this;
_B._display=false;

_B._ticks= new banano_bananovuematerial_tickstype();

_B._gridlines= new banano_bananovuematerial_grdline();

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== titletype  =========================== */
function banano_bananovuematerial_titletype() {
var _B=this;
_B._display=false;

_B._text="";

_B._position="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== eachrow  =========================== */
function banano_bananovuematerial_eachrow() {
var _B=this;
_B._visibility="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssoverflow  =========================== */
function banano_bananovuematerial_cssoverflow() {
var _B=this;
_B._all="";

_B._x="";

_B._y="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== styleobj  =========================== */
function banano_bananovuematerial_styleobj() {
var _B=this;
_B._letterspacing="";

_B._color="";

_B._lineheight="";

_B._direction="";

_B._wordspacing="";

_B._verticalalign="";

_B._display="";

_B._visibility="";

_B._position= new banano_bananovuematerial_csspositions();

_B._zindex="";

_B._clip="";

_B._overflow= new banano_bananovuematerial_cssoverflow();

_B._floatto="";

_B._clear="";

_B._opacity="";

_B._background="";

_B._resize="";

_B._boxsizing="";

_B._boxshadow="";

_B._whitespace="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== csssize  =========================== */
function banano_bananovuematerial_csssize() {
var _B=this;
_B._size="";

_B._maxsize="";

_B._minsize="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssbackground  =========================== */
function banano_bananovuematerial_cssbackground() {
var _B=this;
_B._color="";

_B._image="";

_B._repeat="";

_B._attachment="";

_B._position="";

_B._clip="";

_B._size="";

_B._origin="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== csspositions  =========================== */
function banano_bananovuematerial_csspositions() {
var _B=this;
_B._all="";

_B._top="";

_B._bottom="";

_B._left="";

_B._right="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssradius  =========================== */
function banano_bananovuematerial_cssradius() {
var _B=this;
_B._all="";

_B._topleft="";

_B._topright="";

_B._bottomleft="";

_B._bottomright="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssborder  =========================== */
function banano_bananovuematerial_cssborder() {
var _B=this;
_B._style= new banano_bananovuematerial_csspositions();

_B._size="";

_B._width= new banano_bananovuematerial_csspositions();

_B._color= new banano_bananovuematerial_csspositions();

_B._radius= new banano_bananovuematerial_cssradius();

_B._collapse="";

_B._image= new banano_bananovuematerial_cssborderimage();

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssoutline  =========================== */
function banano_bananovuematerial_cssoutline() {
var _B=this;
_B._all="";

_B._offset="";

_B._color="";

_B._style="";

_B._width="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssfont  =========================== */
function banano_bananovuematerial_cssfont() {
var _B=this;
_B._all="";

_B._fontfamily="";

_B._style="";

_B._size="";

_B._weight="";

_B._variant="";

_B._src="";

_B._stretch="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssborderimage  =========================== */
function banano_bananovuematerial_cssborderimage() {
var _B=this;
_B._image="";

_B._source="";

_B._slice="";

_B._width="";

_B._outset="";

_B._repeat="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssliststyle  =========================== */
function banano_bananovuematerial_cssliststyle() {
var _B=this;
_B._typeof="";

_B._position="";

_B._image="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== csstransform  =========================== */
function banano_bananovuematerial_csstransform() {
var _B=this;
_B._texttransform="";

_B._mstransform="";

_B._origin="";

_B._style="";

_B._perspective="";

_B._perspectiveorigin="";

_B._backfacevisibility="";

_B._webkittransform="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== csstransition  =========================== */
function banano_bananovuematerial_csstransition() {
var _B=this;
_B._webkittransition="";

_B._transition="";

_B._delay="";

_B._duration="";

_B._property="";

_B._timingfunction="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssanimation  =========================== */
function banano_bananovuematerial_cssanimation() {
var _B=this;
_B._animation="";

_B._delay="";

_B._duration="";

_B._direction="";

_B._fillmode="";

_B._iterationcount="";

_B._name="";

_B._playstate="";

_B._timingfunction="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssfilter  =========================== */
function banano_bananovuematerial_cssfilter() {
var _B=this;
_B._filter="";

_B._webkitfilter="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== cssimage  =========================== */
function banano_bananovuematerial_cssimage() {
var _B=this;
_B._objectfit="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== csstext  =========================== */
function banano_bananovuematerial_csstext() {
var _B=this;
_B._align="";

_B._decoration="";

_B._indent="";

_B._textshadow="";

_B._textoverflow="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== viewtype  =========================== */
function banano_bananovuematerial_viewtype() {
var _B=this;
_B._quarterday="";

_B._halfday="";

_B._day="";

_B._week="";

_B._month="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== gmarker  =========================== */
function banano_bananovuematerial_gmarker() {
var _B=this;
_B._id="";

_B._lat=0;

_B._lng=0;

_B._label="";

_B._infotext="";

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== gridrow  =========================== */
function banano_bananovuematerial_gridrow() {
var _B=this;
_B._rows="";

_B._columns=[];

_B._visibility="";

_B._themename="";

_B._classname="";

_B._row="";

_B._margintop={};

_B._marginbottom={};

_B._marginleft={};

_B._marginright={};

_B._paddingtop={};

_B._paddingbottom={};

_B._paddingleft={};

_B._paddingright={};

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== gridcolumn  =========================== */
function banano_bananovuematerial_gridcolumn() {
var _B=this;
_B._columns="";

_B._offsetsmall="";

_B._offsetmedium="";

_B._offsetlarge="";

_B._offsetxlarge="";

_B._sizesmall="";

_B._sizemedium="";

_B._sizelarge="";

_B._sizexlarge="";

_B._themename="";

_B._visibility="";

_B._classname="";

_B._row="";

_B._col="";

_B._margintop={};

_B._marginbottom={};

_B._marginleft={};

_B._marginright={};

_B._paddingtop={};

_B._paddingbottom={};

_B._paddingleft={};

_B._paddingright={};

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
/* =========================== propcontrols  =========================== */
function banano_bananovuematerial_propcontrols() {
var _B=this;
_B._vmodel="";

_B._value="";

_B._text="";

_B._typeof="";

_B._module={};

_B._methodname="";

_B._iconname="";

_B._minvalue=0;

_B._maxvalue=0;

_B._sourcename="";

_B._options={};

_B._sourcefield="";

_B._displayfield="";

_B._optionslist=[];

// [0] public sub initialize
_B.initialize=function() {
// End Sub
};

}
var BANversion=1582014475016;_banano_bvmdemo.banano_ready();