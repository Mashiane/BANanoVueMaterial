const PRECACHE = 'bvmdemo-Data-v1582578951083';const RUNTIME = 'bvmdemo-runtime-v1582578951083';const PRECACHE_URLS = ['./index.html','./manifest.json','./scripts/app1582578951083.js','./styles/app1582578951083.css','./assets/1.png','./assets/fonts.zip','./assets/2.png','./assets/gray.png','./assets/green.png','./assets/happyface.png','./assets/icons.svg','./assets/layers.png','./assets/layers-2x.png','./assets/marker-icon.png','./assets/marker-icon-2x.png','./assets/marker-shadow.png','./assets/neutralface.png','./assets/orange.png','./assets/red.png','./assets/sadface.png','./assets/sponge.png','./assets/upload.php','./assets/config.php','./assets/dbase.txt','./assets/host.txt'];var _B=this;_B.addEventListener('install', function (event) {event.waitUntil(caches.open(PRECACHE).then(function (cache) {return cache.addAll(PRECACHE_URLS);}).then(_B.skipWaiting()));});_B.addEventListener('activate', function (event) {var currentCaches = [PRECACHE, RUNTIME];event.waitUntil(caches.keys().then(function (cacheNames) {return cacheNames.filter(function (cacheName) {return !currentCaches.includes(cacheName);});}).then(function (cachesToDelete) {return Promise.all(cachesToDelete.map(function (cacheToDelete) {return caches.delete(cacheToDelete);}));}).then(function () {return _B.clients.claim();}));});_B.addEventListener('fetch', function (event) {if (event.request.url.indexOf('donotdelete.gif') == -1) {event.respondWith(caches.match(event.request).then(function (cachedResponse) {if (cachedResponse) {return cachedResponse;}return caches.open(RUNTIME).then(function (cache) {return fetch(event.request).then(function (response) {return cache.put(event.request, response.clone()).then(function () {return response;});});});}));}});